------- FILE /tmp/xcbtmp_5FE1DC66.asm LEVEL 1 PASS 3
      1 Ub69b					      PROCESSOR	6502
      2 Ub69d ????
      3 Ub69d ????				      INCDIR	"/home/neils/tmp/Flying-Saucers/."
      4  b4f2 ????				      SEG	UPSTART
      5  0800					      ORG	$800
      6  0800		       00		      HEX	00
      7  0801		       0b 08		      DC.W	next_line
      8  0803		       e2 07		      DC.W	2018
      9  0805		       9e		      HEX	9e
     10  0806					      IF	prg_start
     11  0806		       32 38 38 34	      DC.B	[prg_start]d
     12  080a					      ENDIF
     13  080a		       00		      HEX	00
     14  080b				   next_line
     15  080b		       00 00		      HEX	00 00
     16  080d							;------------	  --------
 Memory information:
     17  080d					      ECHO	"Memory information:"
 ===================
     18  080d					      ECHO	"==================="
 BASIC loader: $800 - $80c
     19  080d					      ECHO	"BASIC loader: $800 -", *-1
     20  080d				   library_start
     21  080d
     22  080d					      PROCESSOR	6502
   2473  0985					      LIST	ON
   2474  0985
   2475  0985
   3004  0985					      LIST	ON
   3005  0985
   3313  0ade					      LIST	ON
   3314  0ade
   3315  0ade					      PROCESSOR	6502
   3316  0ade
   3317  0ade							; Fills memory area
   3318  0ade							;
   3319  0ade							; derived from Practical Memory Move Routines
   3320  0ade							; by Bruce Clark
   3321  0ade							;
   3322  0ade							; R0: destination address
   3323  0ade							; A: fill byte
   3324  0ade							; R2: number of bytes to copy
   3325  0ade
   3326  0ade				   mem_memset SUBROUTINE
   3327  0ade		       00 fb	   .dst       EQU	R0
   3328  0ade		       00 fd	   .siz       EQU	R2
   3329  0ade		       a0 00		      ldy	#0
   3330  0ae0		       a6 fe		      ldx	.siz+1
   3331  0ae2		       f0 0a		      beq	.md2
   3332  0ae4				   .md1
   3333  0ae4		       91 fb		      sta	(.dst),Y
   3334  0ae6		       c8		      iny
   3335  0ae7		       d0 fb		      bne	.md1
   3336  0ae9		       e6 fc		      inc	.dst+1
   3337  0aeb		       ca		      dex
   3338  0aec		       d0 f6		      bne	.md1
   3339  0aee		       a6 fd	   .md2       ldx	.siz
   3340  0af0		       f0 06		      beq	.md4
   3341  0af2				   .md3
   3342  0af2		       91 fb		      sta	(.dst),Y
   3343  0af4		       c8		      iny
   3344  0af5		       ca		      dex
   3345  0af6		       d0 fa		      bne	.md3
   3346  0af8		       60	   .md4       rts
   3347  0af9
   3348  0af9					      MAC	memset
   3349  0af9					      IF	!FPULL
   3350  0af9					      pla
   3351  0af9					      sta	R1
   3352  0af9					      pla
   3353  0af9					      sta	R0
   3354  0af9					      ELSE
   3355  0af9					      sta	R0
   3356  0af9					      sty	R1
   3357  0af9					      ENDIF
   3358  0af9					      pla
   3359  0af9					      sta	R3
   3360  0af9					      pla
   3361  0af9					      sta	R2
   3362  0af9					      pla
   3363  0af9					      jsr	mem_memset
   3364  0af9					      ENDM
   3365  0af9
   3366  0af9							; Copies memory area downwards
   3367  0af9							; from Practical Memory Move Routines
   3368  0af9							; by Bruce Clark
   3369  0af9							;
   3370  0af9							; R0: source address
   3371  0af9							; R2: destination address
   3372  0af9							; R4: number of bytes to copy
   3373  0af9							;
   3374  0af9							; overlapping safe downwards only
   3375  0af9
   3376  0af9				   mem_memcpy SUBROUTINE
   3377  0af9		       00 fb	   .src       EQU	R0
   3378  0af9		       00 fd	   .dst       EQU	R2
   3379  0af9		       00 3f	   .siz       EQU	R4
   3380  0af9		       a0 00		      ldy	#0
   3381  0afb		       a6 40		      ldx	.siz+1
   3382  0afd		       f0 0e		      beq	.md2
   3383  0aff		       b1 fb	   .md1       lda	(.src),Y
   3384  0b01		       91 fd		      sta	(.dst),Y
   3385  0b03		       c8		      iny
   3386  0b04		       d0 f9		      bne	.md1
   3387  0b06		       e6 fc		      inc	.src+1
   3388  0b08		       e6 fe		      inc	.dst+1
   3389  0b0a		       ca		      dex
   3390  0b0b		       d0 f2		      bne	.md1
   3391  0b0d		       a6 3f	   .md2       ldx	.siz
   3392  0b0f		       f0 08		      beq	.md4
   3393  0b11		       b1 fb	   .md3       lda	(.src),Y
   3394  0b13		       91 fd		      sta	(.dst),Y
   3395  0b15		       c8		      iny
   3396  0b16		       ca		      dex
   3397  0b17		       d0 f8		      bne	.md3
   3398  0b19		       60	   .md4       rts
   3399  0b1a
   3400  0b1a					      MAC	memcpy
   3401  0b1a					      IF	!FPULL
   3402  0b1a					      pla
   3403  0b1a					      sta	R1
   3404  0b1a					      pla
   3405  0b1a					      sta	R0
   3406  0b1a					      ELSE
   3407  0b1a					      sta	R0
   3408  0b1a					      sty	R1
   3409  0b1a					      ENDIF
   3410  0b1a					      pla
   3411  0b1a					      sta	R3
   3412  0b1a					      pla
   3413  0b1a					      sta	R2
   3414  0b1a					      pla
   3415  0b1a					      sta	R5
   3416  0b1a					      pla
   3417  0b1a					      sta	R4
   3418  0b1a					      jsr	mem_memcpy
   3419  0b1a					      ENDM
   3420  0b1a
   3421  0b1a							; Copies memory area upwards
   3422  0b1a							;
   3423  0b1a							; from Practical Memory Move Routines
   3424  0b1a							; by Bruce Clark
   3425  0b1a							;
   3426  0b1a							; FROM = source start address
   3427  0b1a							; TO = destination start address
   3428  0b1a							; SIZE = number of bytes to move
   3429  0b1a
   3430  0b1a				   mem_memshift SUBROUTINE
   3431  0b1a		       00 fb	   .FROM      EQU	R0
   3432  0b1a		       00 fd	   .TO	      EQU	R2
   3433  0b1a		       00 3f	   .SIZE      EQU	R4
   3434  0b1a
   3435  0b1a		       a6 40		      ldx	.SIZE+1
   3436  0b1c		       18		      clc		; start at the final pages of FROM and TO
   3437  0b1d		       8a		      txa
   3438  0b1e		       65 fc		      adc	.FROM+1
   3439  0b20		       85 fc		      sta	.FROM+1
   3440  0b22		       18		      clc
   3441  0b23		       8a		      txa
   3442  0b24		       65 fe		      adc	.TO+1
   3443  0b26		       85 fe		      sta	.TO+1
   3444  0b28		       e8		      inx
   3445  0b29		       a4 3f		      ldy	.SIZE
   3446  0b2b		       f0 0e		      beq	.mu3
   3447  0b2d		       88		      dey
   3448  0b2e		       f0 07		      beq	.mu2
   3449  0b30				   .mu1
   3450  0b30		       b1 fb		      lda	(.FROM),y
   3451  0b32		       91 fd		      sta	(.TO),y
   3452  0b34		       88		      dey
   3453  0b35		       d0 f9		      bne	.mu1
   3454  0b37				   .mu2
   3455  0b37		       b1 fb		      lda	(.FROM),y
   3456  0b39		       91 fd		      sta	(.TO),Y
   3457  0b3b				   .mu3
   3458  0b3b		       88		      dey
   3459  0b3c		       c6 fc		      dec	.FROM+1
   3460  0b3e		       c6 fe		      dec	.TO+1
   3461  0b40		       ca		      dex
   3462  0b41		       d0 ed		      bne	.mu1
   3463  0b43		       60		      rts
   3464  0b44
   3465  0b44					      MAC	memshift
   3466  0b44					      IF	!FPULL
   3467  0b44					      pla
   3468  0b44					      sta	R1
   3469  0b44					      pla
   3470  0b44					      sta	R0
   3471  0b44					      ELSE
   3472  0b44					      sta	R0
   3473  0b44					      sty	R1
   3474  0b44					      ENDIF
   3475  0b44					      pla
   3476  0b44					      sta	R3
   3477  0b44					      pla
   3478  0b44					      sta	R2
   3479  0b44					      pla
   3480  0b44					      sta	R5
   3481  0b44					      pla
   3482  0b44					      sta	R4
   3483  0b44					      jsr	mem_memshift
   3484  0b44					      ENDM
   3485  0b44
   3486  0b44
   3487  0b44		       d0 15	   _SPR_ENABLE EQU	$D015
   3488  0b44		       d0 00	   _SPR_X_COORD0 EQU	$D000
   3489  0b44		       d0 01	   _SPR_Y_COORD0 EQU	$D001
   3490  0b44		       d0 02	   _SPR_X_COORD1 EQU	$D002
   3491  0b44		       d0 03	   _SPR_Y_COORD1 EQU	$D003
   3492  0b44		       d0 04	   _SPR_X_COORD2 EQU	$D004
   3493  0b44		       d0 05	   _SPR_Y_COORD2 EQU	$D005
   3494  0b44		       d0 06	   _SPR_X_COORD3 EQU	$D006
   3495  0b44		       d0 07	   _SPR_Y_COORD3 EQU	$D007
   3496  0b44		       d0 08	   _SPR_X_COORD4 EQU	$D008
   3497  0b44		       d0 09	   _SPR_Y_COORD4 EQU	$D009
   3498  0b44		       d0 0a	   _SPR_X_COORD5 EQU	$D00A
   3499  0b44		       d0 0b	   _SPR_Y_COORD5 EQU	$D00B
   3500  0b44		       d0 0c	   _SPR_X_COORD6 EQU	$D00C
   3501  0b44		       d0 0d	   _SPR_Y_COORD6 EQU	$D00D
   3502  0b44		       d0 0e	   _SPR_X_COORD7 EQU	$D00E
   3503  0b44		       d0 0f	   _SPR_Y_COORD7 EQU	$D00F
   3504  0b44		       d0 10	   _SPR_X_COORD_MSB EQU	$D010
   3505  0b44		       d0 1c	   _SPR_MULTICOLOR EQU	$D01C
   3506  0b44		       d0 25	   _SPR_MCOLOR1 EQU	$D025
   3507  0b44		       d0 26	   _SPR_MCOLOR2 EQU	$D026
   3508  0b44		       d0 1d	   _SPR_EXP_X EQU	$D01D
   3509  0b44		       d0 17	   _SPR_EXP_Y EQU	$D017
   3510  0b44		       d0 1b	   _SPR_DATA_PRIO EQU	$D01B
   3511  0b44		       d0 1e	   _SPR_SPR_COLL EQU	$D01E
   3512  0b44		       d0 1f	   _SPR_DATA_COLL EQU	$D01F
   3513  0b44		       d0 27	   _SPR_COLOR0 EQU	$D027
   3514  0b44		       d0 28	   _SPR_COLOR1 EQU	$D028
   3515  0b44		       d0 29	   _SPR_COLOR2 EQU	$D029
   3516  0b44		       d0 2a	   _SPR_COLOR3 EQU	$D02A
   3517  0b44		       d0 2b	   _SPR_COLOR4 EQU	$D02B
   3518  0b44		       d0 2c	   _SPR_COLOR5 EQU	$D02C
   3519  0b44		       d0 2d	   _SPR_COLOR6 EQU	$D02D
   3520  0b44		       d0 2e	   _SPR_COLOR7 EQU	$D02E
   3521  0b44		       07 f8	   _SPR_PTR   EQU	$7F8
   3522  0b44		       dc 00	   _JOY_PORT2 EQU	$DC00
   3523  0b44		       dc 01	   _JOY_PORT1 EQU	$DC01
   3524  0b44		       dc 0d	   _RI_CIA1_ICR EQU	$DC0D
   3525  0b44		       dd 0d	   _RI_CIA2_ICR EQU	$DD0D
   3526  0b44		       d0 11	   _RI_VIC_CTR EQU	$D011
   3527  0b44		       d0 12	   _RI_VIC_RASTER EQU	$D012
   3528  0b44		       d0 19	   _RI_VIC_IRQ_R EQU	$D019
   3529  0b44		       d0 1a	   _RI_VIC_IRQ_EN EQU	$D01A
   3530  0b44		       d4 00	   _SFX_SID   EQU	$D400
   3531  0b44		       d4 00	   _SFX_SIDVOICE1FREQLO EQU	$D400
   3532  0b44		       d4 01	   _SFX_SIDVOICE1FREQHI EQU	$D401
   3533  0b44		       d4 02	   _SFX_SIDVOICE1PULSEWIDTHLO EQU	$D402
   3534  0b44		       d4 03	   _SFX_SIDVOICE1PULSEWIDTHHI EQU	$D403
   3535  0b44		       d4 04	   _SFX_SIDVOICE1CONTROL EQU	$D404
   3536  0b44		       d4 05	   _SFX_SIDVOICE1ATTACKDECAY EQU	$D405
   3537  0b44		       d4 06	   _SFX_SIDVOICE1SUSTAINRELEASE EQU	$D406
   3538  0b44		       d4 07	   _SFX_SIDVOICE2FREQLO EQU	$D407
   3539  0b44		       d4 08	   _SFX_SIDVOICE2FREQHI EQU	$D408
   3540  0b44		       d4 09	   _SFX_SIDVOICE2PULSEWIDTHLO EQU	$D409
   3541  0b44		       d4 0a	   _SFX_SIDVOICE2PULSEWIDTHHI EQU	$D40A
   3542  0b44		       d4 0b	   _SFX_SIDVOICE2CONTROL EQU	$D40B
   3543  0b44		       d4 0c	   _SFX_SIDVOICE2ATTACKDECAY EQU	$D40C
   3544  0b44		       d4 0d	   _SFX_SIDVOICE2SUSTAINRELEASE EQU	$D40D
   3545  0b44		       d4 0e	   _SFX_SIDVOICE3FREQLO EQU	$D40E
   3546  0b44		       d4 0f	   _SFX_SIDVOICE3FREQHI EQU	$D40F
   3547  0b44		       d4 10	   _SFX_SIDVOICE3PULSEWIDTHLO EQU	$D410
   3548  0b44		       d4 11	   _SFX_SIDVOICE3PULSEWIDTHHI EQU	$D411
   3549  0b44		       d4 12	   _SFX_SIDVOICE3CONTROL EQU	$D412
   3550  0b44		       d4 13	   _SFX_SIDVOICE3ATTACKDECAY EQU	$D413
   3551  0b44		       d4 14	   _SFX_SIDVOICE3SUSTAINRELEASE EQU	$D414
   3552  0b44		       d4 15	   _SFX_SIDFILTERCUTOFFFREQLO EQU	$D415
   3553  0b44		       d4 16	   _SFX_SIDFILTERCUTOFFFREQHI EQU	$D416
   3554  0b44		       d4 17	   _SFX_SIDFILTERCONTROL EQU	$D417
   3555  0b44		       d4 18	   _SFX_SIDVOLUMEFILTER EQU	$D418
   3556  0b44		       d4 1b	   _SFX_SIDVOICE3WAVEFORMOUTPUT EQU	$D41B
   3557  0b44		       d4 1c	   _SFX_SIDVOICE3ADSROUTPUT EQU	$D41C
   3558  0b44		       00 0d	   _SFX_VOICEWORKSIZE EQU	$D
   3559  0b44		       00 d0	   _VIC_CTR_DEFAULT EQU	$D0
   3560  0b44		       00 c0	   _VIC_CTR_HIRES EQU	$C0
   3561  0b44		       d0 11	   _VIC_CONTROL1 EQU	$D011
   3562  0b44		       d0 16	   _VIC_CONTROL2 EQU	$D016
   3563  0b44		       d0 12	   _RASTER_POS EQU	$D012
   3564  0b44		       d0 18	   _VIC_MEMSETUP EQU	$D018
   3565  0b44		       d0 20	   _VIC_BORDER EQU	$D020
   3566  0b44		       d0 21	   _VIC_BACKGR EQU	$D021
   3567  0b44		       dd 00	   _CIA2_PRA  EQU	$DD00
   3568  0b44		       d4 18	   _SID_VOLUME EQU	$D418
   3569  0b44		       d4 04	   _SID_CTRL1 EQU	$D404
   3570  0b44		       d4 05	   _SID_AD1   EQU	$D405
   3571  0b44		       d4 06	   _SID_SR1   EQU	$D406
   3572  0b44		       d4 0b	   _SID_CTRL2 EQU	$D40B
   3573  0b44		       d4 0c	   _SID_AD2   EQU	$D40C
   3574  0b44		       d4 0d	   _SID_SR2   EQU	$D40D
   3575  0b44		       d4 07	   _SID_FREQ2 EQU	$D407
   3576  0b44		       d4 12	   _SID_CTRL3 EQU	$D412
   3577  0b44		       d4 13	   _SID_AD3   EQU	$D413
   3578  0b44		       d4 14	   _SID_SR3   EQU	$D414
   3579  0b44		       d4 0e	   _SID_FREQ3 EQU	$D40E
   3580  0b44		       04 00	   _SCREEN    EQU	$400
   3581  0b44		       d8 00	   _COLOR     EQU	$D800
   3582  0b44		       40 00	   _CITY_MAP  EQU	$4000
   3583  0b44		       49 5f	   _CITY_MAP_DEFAULT_PTR_LEFT EQU	$495F
   3584  0b44		       4a 98	   _CITY_MAP_DEFAULT_PTR_RIGHT EQU	$4A98
   3585  0b44		       40 07	   _CITY_MAP_FIRST_PTR_LEFT EQU	$4007
   3586  0b44		       41 38	   _CITY_MAP_FIRST_PTR_RIGHT EQU	$4138
   3587  0b44		       3e c7	   _CITY_MAP_LAST_PTR_LEFT EQU	$3EC7
   3588  0b44		       40 00	   _CITY_MAP_LAST_PTR_RIGHT EQU	$4000
   3589  0b44		       55 30	   _CITY_MAP_PTR_RIGHT_END EQU	$5530
   3590  0b44		       53 ff	   _CITY_MAP_PTR_LEFT_END EQU	$53FF
   3591  0b44		       54 00	   _CITY_MAP_PTR_TP_RIGHT EQU	$5400
   3592  0b44		       3f ff	   _CITY_MAP_PTR_TP_LEFT EQU	$3FFF
   3593  0b44		       3f f8	   _CITY_MAP_RIGHT_TP_LEFT EQU	$3FF8
   3594  0b44		       53 f8	   _CITY_MAP_PTR_TP_LAST_R EQU	$53F8
   3595  0b44		       06 80	   _SCROLL_AREA_TOP EQU	$680
   3596  0b44		       06 81	   _SCROLL_SHIFT_START EQU	$681
   3597  0b44		       07 bf	   _SCROLL_AREA_BOTTOM EQU	$7BF
   3598  0b44		       01 3f	   _SCROLL_AREA_SIZE EQU	$13F
   3599  0b44		       06 a7	   _RIGHT_COLUMN_TOP EQU	$6A7
   3600  0b44		       07 bf	   _RIGHT_COLUMN_BOTTOM EQU	$7BF
   3601  0b44		       07 98	   _LEFT_COLUMN_BOTTOM EQU	$798
   3602  0b44		       00 00	   _AIRCRAFT_MODE_TAXI EQU	$0
   3603  0b44		       00 01	   _AIRCRAFT_MODE_REFUEL EQU	$1
   3604  0b44		       00 02	   _AIRCRAFT_MODE_TAKE_OFF EQU	$2
   3605  0b44		       00 03	   _AIRCRAFT_MODE_LANDING EQU	$3
   3606  0b44		       00 04	   _AIRCRAFT_MODE_NOSEDIVING EQU	$4
   3607  0b44		       00 05	   _AIRCRAFT_MODE_SCROLLING_TO_UFO EQU	$5
   3608  0b44		       00 0a	   _LEVEL_COUNT EQU	$A
   3609  0b44
 Library     : $80d - $b43
   3610  0b44					      ECHO	"Library     :",library_start,"-", *-1
   3611  0b44				   prg_start
   3612  0b44				   FPUSH      SET	0
   3613  0b44				   FPULL      SET	0
      0  0b44					      init_program
      1  0b44		       ba		      tsx
      2  0b45		       8e 85 09 	      stx	RESERVED_STACK_POINTER
      0  0b48					      seed_rnd
      1  0b48		       a5 a1		      lda	$a1
      2  0b4a		       8d dc 0a 	      sta	random
      3  0b4d		       a5 a2		      lda	$a2
      4  0b4f		       8d dd 0a 	      sta	random+1
      0  0b52					      basicout
      1  0b52		       a5 01		      lda	$01
      2  0b54		       29 fe		      and	#%11111110
      3  0b56		       85 01		      sta	$01
   3615  0b56				   FPUSH      SET	1
      0  0b58					      pbyte	#0
      1  0b58		       a9 00		      lda	#0
      2  0b5a				  -	      IF	!FPUSH
      3  0b5a				  -	      pha
      4  0b5a					      ENDIF
   3617  0b5a				   FPULL      SET	1
   3618  0b5a				   FPUSH      SET	0
      0  0b5a					      plb2var	_debug
      1  0b5a				  -	      IF	!FPULL
      2  0b5a				  -	      pla
      3  0b5a					      ENDIF
      4  0b5a		       8d f3 b4 	      sta	_debug
   3620  0b5a				   FPULL      SET	0
   3621  0b5a				   FPUSH      SET	1
      0  0b5d					      peekb_const_addr	#678
      1  0b5d
      2  0b5d
      3  0b5d
      4  0b5d		       02 a6	   .ad	      EQU	#678
      5  0b5d		       ad a6 02 	      lda	.ad
      6  0b60				  -	      IF	!FPUSH
      7  0b60				  -	      pha
      8  0b60					      ENDIF
   3623  0b60				   FPULL      SET	1
   3624  0b60				   FPUSH      SET	0
      0  0b60					      plb2var	_ntsc_pal
      1  0b60				  -	      IF	!FPULL
      2  0b60				  -	      pla
      3  0b60					      ENDIF
      4  0b60		       8d f4 b4 	      sta	_ntsc_pal
      0  0b63					      pbyte_pbyte_cmpbeq_cond	_ntsc_pal, #0, _EI_1, _EL_1
      1  0b63
      2  0b63
      3  0b63		       ad f4 b4 	      lda	_ntsc_pal
      4  0b66		       c9 00		      cmp	#0
      5  0b68		       f0 03		      beq	*+5
      6  0b6a					      IFCONST	_EL_1
      7  0b6a		       4c 84 0b 	      jmp	_EL_1
      8  0b6d				  -	      ELSE
      9  0b6d				  -	      jmp	_EI_1
     10  0b6d					      ENDIF
   3627  0b6d				   FPULL      SET	0
   3628  0b6d				   FPUSH      SET	1
      0  0b6d					      pword	#720
      1  0b6d				  -	      IF	!FPUSH
      2  0b6d				  -	      lda	#<#720
      3  0b6d				  -	      pha
      4  0b6d				  -	      lda	#>#720
      5  0b6d				  -	      pha
      6  0b6d					      ELSE
      7  0b6d		       a9 d0		      lda	#<#720
      8  0b6f		       a0 02		      ldy	#>#720
      9  0b71					      ENDIF
   3630  0b71				   FPULL      SET	1
   3631  0b71				   FPUSH      SET	0
      0  0b71					      plw2var	_frameskip1
      1  0b71				  -	      IF	!FPULL
      2  0b71				  -	      pla
      3  0b71				  -	      sta	_frameskip1+1
      4  0b71				  -	      pla
      5  0b71				  -	      sta	_frameskip1
      6  0b71					      ELSE
      7  0b71		       8d f5 b4 	      sta	_frameskip1
      8  0b74		       8c f6 b4 	      sty	_frameskip1+1
      9  0b77					      ENDIF
   3633  0b77				   FPULL      SET	0
   3634  0b77				   FPUSH      SET	1
      0  0b77					      pword	#636
      1  0b77				  -	      IF	!FPUSH
      2  0b77				  -	      lda	#<#636
      3  0b77				  -	      pha
      4  0b77				  -	      lda	#>#636
      5  0b77				  -	      pha
      6  0b77					      ELSE
      7  0b77		       a9 7c		      lda	#<#636
      8  0b79		       a0 02		      ldy	#>#636
      9  0b7b					      ENDIF
   3636  0b7b				   FPULL      SET	1
   3637  0b7b				   FPUSH      SET	0
      0  0b7b					      plw2var	_frameskip2
      1  0b7b				  -	      IF	!FPULL
      2  0b7b				  -	      pla
      3  0b7b				  -	      sta	_frameskip2+1
      4  0b7b				  -	      pla
      5  0b7b				  -	      sta	_frameskip2
      6  0b7b					      ELSE
      7  0b7b		       8d f7 b4 	      sta	_frameskip2
      8  0b7e		       8c f8 b4 	      sty	_frameskip2+1
      9  0b81					      ENDIF
   3639  0b81		       4c 98 0b 	      jmp	_EI_1
   3640  0b84				   _EL_1
   3641  0b84				   FPULL      SET	0
   3642  0b84				   FPUSH      SET	1
      0  0b84					      pword	#600
      1  0b84				  -	      IF	!FPUSH
      2  0b84				  -	      lda	#<#600
      3  0b84				  -	      pha
      4  0b84				  -	      lda	#>#600
      5  0b84				  -	      pha
      6  0b84					      ELSE
      7  0b84		       a9 58		      lda	#<#600
      8  0b86		       a0 02		      ldy	#>#600
      9  0b88					      ENDIF
   3644  0b88				   FPULL      SET	1
   3645  0b88				   FPUSH      SET	0
      0  0b88					      plw2var	_frameskip1
      1  0b88				  -	      IF	!FPULL
      2  0b88				  -	      pla
      3  0b88				  -	      sta	_frameskip1+1
      4  0b88				  -	      pla
      5  0b88				  -	      sta	_frameskip1
      6  0b88					      ELSE
      7  0b88		       8d f5 b4 	      sta	_frameskip1
      8  0b8b		       8c f6 b4 	      sty	_frameskip1+1
      9  0b8e					      ENDIF
   3647  0b8e				   FPULL      SET	0
   3648  0b8e				   FPUSH      SET	1
      0  0b8e					      pword	#530
      1  0b8e				  -	      IF	!FPUSH
      2  0b8e				  -	      lda	#<#530
      3  0b8e				  -	      pha
      4  0b8e				  -	      lda	#>#530
      5  0b8e				  -	      pha
      6  0b8e					      ELSE
      7  0b8e		       a9 12		      lda	#<#530
      8  0b90		       a0 02		      ldy	#>#530
      9  0b92					      ENDIF
   3650  0b92				   FPULL      SET	1
   3651  0b92				   FPUSH      SET	0
      0  0b92					      plw2var	_frameskip2
      1  0b92				  -	      IF	!FPULL
      2  0b92				  -	      pla
      3  0b92				  -	      sta	_frameskip2+1
      4  0b92				  -	      pla
      5  0b92				  -	      sta	_frameskip2
      6  0b92					      ELSE
      7  0b92		       8d f7 b4 	      sta	_frameskip2
      8  0b95		       8c f8 b4 	      sty	_frameskip2+1
      9  0b98					      ENDIF
   3653  0b98				   _EI_1
   3654  0b98				   FPULL      SET	0
   3655  0b98				   FPUSH      SET	1
      0  0b98					      pbyte	#0
      1  0b98		       a9 00		      lda	#0
      2  0b9a				  -	      IF	!FPUSH
      3  0b9a				  -	      pha
      4  0b9a					      ENDIF
   3657  0b9a				   FPULL      SET	1
   3658  0b9a				   FPUSH      SET	0
      0  0b9a					      plb2var	_ntsc_frames
      1  0b9a				  -	      IF	!FPULL
      2  0b9a				  -	      pla
      3  0b9a					      ENDIF
      4  0b9a		       8d f9 b4 	      sta	_ntsc_frames
   3660  0b9d							; Inline ASM start
   3661  0b9d
   3662  0b9d
   3663  0b9d
   3664  0b9d
   3665  0b9d
   3666  0b9d
   3667  0b9d
   3668  0b9d
   3669  0b9d
   3670  0b9d
   3671  0b9d
   3672  0b9d
   3673  0b9d
   3674  0b9d
   3675  0b9d
   3676  0b9d					      MAC	joy_saveaddr
   3677  0b9d
   3678  0b9d
   3679  0b9d
   3680  0b9d
   3681  0b9d
   3682  0b9d
   3683  0b9d
   3684  0b9d					      pla
   3685  0b9d
   3686  0b9d
   3687  0b9d
   3688  0b9d
   3689  0b9d
   3690  0b9d
   3691  0b9d
   3692  0b9d					      tax
   3693  0b9d
   3694  0b9d
   3695  0b9d
   3696  0b9d
   3697  0b9d
   3698  0b9d
   3699  0b9d
   3700  0b9d					      pla
   3701  0b9d
   3702  0b9d
   3703  0b9d
   3704  0b9d
   3705  0b9d
   3706  0b9d
   3707  0b9d
   3708  0b9d					      tay
   3709  0b9d
   3710  0b9d
   3711  0b9d
   3712  0b9d
   3713  0b9d
   3714  0b9d
   3715  0b9d
   3716  0b9d					      ENDM
   3717  0b9d
   3718  0b9d
   3719  0b9d
   3720  0b9d
   3721  0b9d
   3722  0b9d
   3723  0b9d
   3724  0b9d
   3725  0b9d
   3726  0b9d
   3727  0b9d
   3728  0b9d
   3729  0b9d
   3730  0b9d
   3731  0b9d
   3732  0b9d					      MAC	joy_restoreaddr
   3733  0b9d
   3734  0b9d
   3735  0b9d
   3736  0b9d
   3737  0b9d
   3738  0b9d
   3739  0b9d
   3740  0b9d					      tya
   3741  0b9d
   3742  0b9d
   3743  0b9d
   3744  0b9d
   3745  0b9d
   3746  0b9d
   3747  0b9d
   3748  0b9d					      pha
   3749  0b9d
   3750  0b9d
   3751  0b9d
   3752  0b9d
   3753  0b9d
   3754  0b9d
   3755  0b9d
   3756  0b9d					      txa
   3757  0b9d
   3758  0b9d
   3759  0b9d
   3760  0b9d
   3761  0b9d
   3762  0b9d
   3763  0b9d
   3764  0b9d					      pha
   3765  0b9d
   3766  0b9d
   3767  0b9d
   3768  0b9d
   3769  0b9d
   3770  0b9d
   3771  0b9d
   3772  0b9d					      ENDM
   3773  0b9d
   3774  0b9d
   3775  0b9d
   3776  0b9d
   3777  0b9d
   3778  0b9d
   3779  0b9d
   3780  0b9d
   3781  0b9d
   3782  0b9d
   3783  0b9d
   3784  0b9d
   3785  0b9d
   3786  0b9d
   3787  0b9d
   3788  0b9d							; Inline ASM end
   3789  0b9d				   FPULL      SET	0
   3790  0b9d				   FPUSH      SET	1
      0  0b9d					      pbyte	#0
      1  0b9d		       a9 00		      lda	#0
      2  0b9f				  -	      IF	!FPUSH
      3  0b9f				  -	      pha
      4  0b9f					      ENDIF
   3792  0b9f				   FPULL      SET	1
   3793  0b9f				   FPUSH      SET	0
      0  0b9f					      plb2var	_ri_isr_count
      1  0b9f				  -	      IF	!FPULL
      2  0b9f				  -	      pla
      3  0b9f					      ENDIF
      4  0b9f		       8d 15 b5 	      sta	_ri_isr_count
   3795  0b9f				   FPULL      SET	0
   3796  0b9f				   FPUSH      SET	1
      0  0ba2					      pbyte	#0
      1  0ba2		       a9 00		      lda	#0
      2  0ba4				  -	      IF	!FPUSH
      3  0ba4				  -	      pha
      4  0ba4					      ENDIF
   3798  0ba4				   FPULL      SET	1
   3799  0ba4				   FPUSH      SET	0
      0  0ba4					      plb2var	_ri_current_isr
      1  0ba4				  -	      IF	!FPULL
      2  0ba4				  -	      pla
      3  0ba4					      ENDIF
      4  0ba4		       8d 16 b5 	      sta	_ri_current_isr
   3801  0ba4				   FPULL      SET	0
   3802  0ba4				   FPUSH      SET	1
      0  0ba7					      pword	#59953
      1  0ba7				  -	      IF	!FPUSH
      2  0ba7				  -	      lda	#<#59953
      3  0ba7				  -	      pha
      4  0ba7				  -	      lda	#>#59953
      5  0ba7				  -	      pha
      6  0ba7					      ELSE
      7  0ba7		       a9 31		      lda	#<#59953
      8  0ba9		       a0 ea		      ldy	#>#59953
      9  0bab					      ENDIF
   3804  0bab				   FPULL      SET	1
   3805  0bab				   FPUSH      SET	0
      0  0bab					      plw2var	_ri_syshandler
      1  0bab				  -	      IF	!FPULL
      2  0bab				  -	      pla
      3  0bab				  -	      sta	_ri_syshandler+1
      4  0bab				  -	      pla
      5  0bab				  -	      sta	_ri_syshandler
      6  0bab					      ELSE
      7  0bab		       8d 17 b5 	      sta	_ri_syshandler
      8  0bae		       8c 18 b5 	      sty	_ri_syshandler+1
      9  0bb1					      ENDIF
   3807  0bb1				   FPULL      SET	0
   3808  0bb1				   FPUSH      SET	1
      0  0bb1					      pbyte	#1
      1  0bb1		       a9 01		      lda	#1
      2  0bb3				  -	      IF	!FPUSH
      3  0bb3				  -	      pha
      4  0bb3					      ENDIF
   3810  0bb3				   FPULL      SET	1
   3811  0bb3				   FPUSH      SET	0
      0  0bb3					      plb2var	_first_run
      1  0bb3				  -	      IF	!FPULL
      2  0bb3				  -	      pla
      3  0bb3					      ENDIF
      4  0bb3		       8d 22 b5 	      sta	_first_run
   3813  0bb3				   FPULL      SET	0
   3814  0bb3				   FPUSH      SET	1
      0  0bb6					      pword	#19096
      1  0bb6				  -	      IF	!FPUSH
      2  0bb6				  -	      lda	#<#19096
      3  0bb6				  -	      pha
      4  0bb6				  -	      lda	#>#19096
      5  0bb6				  -	      pha
      6  0bb6					      ELSE
      7  0bb6		       a9 98		      lda	#<#19096
      8  0bb8		       a0 4a		      ldy	#>#19096
      9  0bba					      ENDIF
   3816  0bba				   FPULL      SET	1
   3817  0bba				   FPUSH      SET	0
      0  0bba					      plw2var	_city_map_ptr_right
      1  0bba				  -	      IF	!FPULL
      2  0bba				  -	      pla
      3  0bba				  -	      sta	_city_map_ptr_right+1
      4  0bba				  -	      pla
      5  0bba				  -	      sta	_city_map_ptr_right
      6  0bba					      ELSE
      7  0bba		       85 04		      sta	_city_map_ptr_right
      8  0bbc		       84 05		      sty	_city_map_ptr_right+1
      9  0bbe					      ENDIF
   3819  0bbe				   FPULL      SET	0
   3820  0bbe				   FPUSH      SET	1
      0  0bbe					      pword	#18783
      1  0bbe				  -	      IF	!FPUSH
      2  0bbe				  -	      lda	#<#18783
      3  0bbe				  -	      pha
      4  0bbe				  -	      lda	#>#18783
      5  0bbe				  -	      pha
      6  0bbe					      ELSE
      7  0bbe		       a9 5f		      lda	#<#18783
      8  0bc0		       a0 49		      ldy	#>#18783
      9  0bc2					      ENDIF
   3822  0bc2				   FPULL      SET	1
   3823  0bc2				   FPUSH      SET	0
      0  0bc2					      plw2var	_city_map_ptr_left
      1  0bc2				  -	      IF	!FPULL
      2  0bc2				  -	      pla
      3  0bc2				  -	      sta	_city_map_ptr_left+1
      4  0bc2				  -	      pla
      5  0bc2				  -	      sta	_city_map_ptr_left
      6  0bc2					      ELSE
      7  0bc2		       85 02		      sta	_city_map_ptr_left
      8  0bc4		       84 03		      sty	_city_map_ptr_left+1
      9  0bc6					      ENDIF
   3825  0bc6				   FPULL      SET	0
   3826  0bc6				   FPUSH      SET	1
      0  0bc6					      pbyte	#1
      1  0bc6		       a9 01		      lda	#1
      2  0bc8				  -	      IF	!FPUSH
      3  0bc8				  -	      pha
      4  0bc8					      ENDIF
   3828  0bc8				   FPULL      SET	1
   3829  0bc8				   FPUSH      SET	0
      0  0bc8					      plb2var	_speed
      1  0bc8				  -	      IF	!FPULL
      2  0bc8				  -	      pla
      3  0bc8					      ENDIF
      4  0bc8		       8d 23 b5 	      sta	_speed
   3831  0bc8				   FPULL      SET	0
   3832  0bc8				   FPUSH      SET	1
      0  0bcb					      pbyte	#1
      1  0bcb		       a9 01		      lda	#1
      2  0bcd				  -	      IF	!FPUSH
      3  0bcd				  -	      pha
      4  0bcd					      ENDIF
   3834  0bcd				   FPULL      SET	1
   3835  0bcd				   FPUSH      SET	0
      0  0bcd					      plb2var	_dir
      1  0bcd				  -	      IF	!FPULL
      2  0bcd				  -	      pla
      3  0bcd					      ENDIF
      4  0bcd		       8d 24 b5 	      sta	_dir
   3837  0bcd				   FPULL      SET	0
   3838  0bcd				   FPUSH      SET	1
      0  0bd0					      pbyte	#0
      1  0bd0		       a9 00		      lda	#0
      2  0bd2				  -	      IF	!FPUSH
      3  0bd2				  -	      pha
      4  0bd2					      ENDIF
   3840  0bd2				   FPULL      SET	1
   3841  0bd2				   FPUSH      SET	0
      0  0bd2					      plb2var	_frame_count
      1  0bd2				  -	      IF	!FPULL
      2  0bd2				  -	      pla
      3  0bd2					      ENDIF
      4  0bd2		       8d 25 b5 	      sta	_frame_count
   3843  0bd2				   FPULL      SET	0
   3844  0bd2				   FPUSH      SET	1
      0  0bd5					      pbyte	#0
      1  0bd5		       a9 00		      lda	#0
      2  0bd7				  -	      IF	!FPUSH
      3  0bd7				  -	      pha
      4  0bd7					      ENDIF
   3846  0bd7				   FPULL      SET	1
   3847  0bd7				   FPUSH      SET	0
      0  0bd7					      plb2var	_scroll
      1  0bd7				  -	      IF	!FPULL
      2  0bd7				  -	      pla
      3  0bd7					      ENDIF
      4  0bd7		       8d 26 b5 	      sta	_scroll
   3849  0bd7				   FPULL      SET	0
      0  0bda					      pbyte	#0
      1  0bda		       a9 00		      lda	#0
      2  0bdc					      IF	!FPUSH
      3  0bdc		       48		      pha
      4  0bdd					      ENDIF
      0  0bdd					      btow
      1  0bdd		       a9 00		      lda	#$00
      2  0bdf		       48		      pha
      0  0be0					      plw2var	_score
      1  0be0					      IF	!FPULL
      2  0be0		       68		      pla
      3  0be1		       8d 28 b5 	      sta	_score+1
      4  0be4		       68		      pla
      5  0be5		       8d 27 b5 	      sta	_score
      6  0be8				  -	      ELSE
      7  0be8				  -	      sta	_score
      8  0be8				  -	      sty	_score+1
      9  0be8					      ENDIF
      0  0be8					      pbyte	#0
      1  0be8		       a9 00		      lda	#0
      2  0bea					      IF	!FPUSH
      3  0bea		       48		      pha
      4  0beb					      ENDIF
      0  0beb					      btow
      1  0beb		       a9 00		      lda	#$00
      2  0bed		       48		      pha
      0  0bee					      plw2var	_hiscore
      1  0bee					      IF	!FPULL
      2  0bee		       68		      pla
      3  0bef		       8d 2a b5 	      sta	_hiscore+1
      4  0bf2		       68		      pla
      5  0bf3		       8d 29 b5 	      sta	_hiscore
      6  0bf6				  -	      ELSE
      7  0bf6				  -	      sta	_hiscore
      8  0bf6				  -	      sty	_hiscore+1
      9  0bf6					      ENDIF
   3856  0bf6				   FPUSH      SET	1
      0  0bf6					      pbyte	#0
      1  0bf6		       a9 00		      lda	#0
      2  0bf8				  -	      IF	!FPUSH
      3  0bf8				  -	      pha
      4  0bf8					      ENDIF
   3858  0bf8				   FPULL      SET	1
   3859  0bf8				   FPUSH      SET	0
      0  0bf8					      plb2var	_turning
      1  0bf8				  -	      IF	!FPULL
      2  0bf8				  -	      pla
      3  0bf8					      ENDIF
      4  0bf8		       8d 2b b5 	      sta	_turning
   3861  0bf8				   FPULL      SET	0
   3862  0bf8				   FPUSH      SET	1
      0  0bfb					      pbyte	#0
      1  0bfb		       a9 00		      lda	#0
      2  0bfd				  -	      IF	!FPUSH
      3  0bfd				  -	      pha
      4  0bfd					      ENDIF
   3864  0bfd				   FPULL      SET	1
   3865  0bfd				   FPUSH      SET	0
      0  0bfd					      plb2var	_lifting
      1  0bfd				  -	      IF	!FPULL
      2  0bfd				  -	      pla
      3  0bfd					      ENDIF
      4  0bfd		       8d 2c b5 	      sta	_lifting
   3867  0bfd				   FPULL      SET	0
   3868  0bfd				   FPUSH      SET	1
      0  0c00					      pbyte	#0
      1  0c00		       a9 00		      lda	#0
      2  0c02				  -	      IF	!FPUSH
      3  0c02				  -	      pha
      4  0c02					      ENDIF
   3870  0c02				   FPULL      SET	1
   3871  0c02				   FPUSH      SET	0
      0  0c02					      plb2var	_turn_phase
      1  0c02				  -	      IF	!FPULL
      2  0c02				  -	      pla
      3  0c02					      ENDIF
      4  0c02		       8d 2d b5 	      sta	_turn_phase
   3873  0c02				   FPULL      SET	0
   3874  0c02				   FPUSH      SET	1
      0  0c05					      pbyte	#0
      1  0c05		       a9 00		      lda	#0
      2  0c07				  -	      IF	!FPUSH
      3  0c07				  -	      pha
      4  0c07					      ENDIF
   3876  0c07				   FPULL      SET	1
   3877  0c07				   FPUSH      SET	0
      0  0c07					      plb2var	_turn_phase_count
      1  0c07				  -	      IF	!FPULL
      2  0c07				  -	      pla
      3  0c07					      ENDIF
      4  0c07		       8d 2e b5 	      sta	_turn_phase_count
   3879  0c07				   FPULL      SET	0
   3880  0c07				   FPUSH      SET	1
      0  0c0a					      pword	#848
      1  0c0a				  -	      IF	!FPUSH
      2  0c0a				  -	      lda	#<#848
      3  0c0a				  -	      pha
      4  0c0a				  -	      lda	#>#848
      5  0c0a				  -	      pha
      6  0c0a					      ELSE
      7  0c0a		       a9 50		      lda	#<#848
      8  0c0c		       a0 03		      ldy	#>#848
      9  0c0e					      ENDIF
   3882  0c0e				   FPULL      SET	1
   3883  0c0e				   FPUSH      SET	0
      0  0c0e					      plw2var	_aircraft_altitude
      1  0c0e				  -	      IF	!FPULL
      2  0c0e				  -	      pla
      3  0c0e				  -	      sta	_aircraft_altitude+1
      4  0c0e				  -	      pla
      5  0c0e				  -	      sta	_aircraft_altitude
      6  0c0e					      ELSE
      7  0c0e		       8d 2f b5 	      sta	_aircraft_altitude
      8  0c11		       8c 30 b5 	      sty	_aircraft_altitude+1
      9  0c14					      ENDIF
   3885  0c14				   FPULL      SET	0
   3886  0c14				   FPUSH      SET	1
      0  0c14					      pword	#2560
      1  0c14				  -	      IF	!FPUSH
      2  0c14				  -	      lda	#<#2560
      3  0c14				  -	      pha
      4  0c14				  -	      lda	#>#2560
      5  0c14				  -	      pha
      6  0c14					      ELSE
      7  0c14		       a9 00		      lda	#<#2560
      8  0c16		       a0 0a		      ldy	#>#2560
      9  0c18					      ENDIF
   3888  0c18				   FPULL      SET	1
   3889  0c18				   FPUSH      SET	0
      0  0c18					      plw2var	_aircraft_xpos
      1  0c18				  -	      IF	!FPULL
      2  0c18				  -	      pla
      3  0c18				  -	      sta	_aircraft_xpos+1
      4  0c18				  -	      pla
      5  0c18				  -	      sta	_aircraft_xpos
      6  0c18					      ELSE
      7  0c18		       8d 31 b5 	      sta	_aircraft_xpos
      8  0c1b		       8c 32 b5 	      sty	_aircraft_xpos+1
      9  0c1e					      ENDIF
   3891  0c1e				   FPULL      SET	0
   3892  0c1e				   FPUSH      SET	1
      0  0c1e					      pbyte	#14
      1  0c1e		       a9 0e		      lda	#14
      2  0c20				  -	      IF	!FPUSH
      3  0c20				  -	      pha
      4  0c20					      ENDIF
   3894  0c20				   FPULL      SET	1
   3895  0c20				   FPUSH      SET	0
      0  0c20					      plb2var	_aircraft_zone
      1  0c20				  -	      IF	!FPULL
      2  0c20				  -	      pla
      3  0c20					      ENDIF
      4  0c20		       8d 33 b5 	      sta	_aircraft_zone
   3897  0c20				   FPULL      SET	0
   3898  0c20				   FPUSH      SET	1
      0  0c23					      pbyte	#8
      1  0c23		       a9 08		      lda	#8
      2  0c25				  -	      IF	!FPUSH
      3  0c25				  -	      pha
      4  0c25					      ENDIF
   3900  0c25				   FPULL      SET	1
   3901  0c25				   FPUSH      SET	0
      0  0c25					      plb2var	_wave_countdown
      1  0c25				  -	      IF	!FPULL
      2  0c25				  -	      pla
      3  0c25					      ENDIF
      4  0c25		       8d 14 b6 	      sta	_wave_countdown
   3903  0c25				   FPULL      SET	0
   3904  0c25				   FPUSH      SET	1
      0  0c28					      pbyte	#0
      1  0c28		       a9 00		      lda	#0
      2  0c2a				  -	      IF	!FPUSH
      3  0c2a				  -	      pha
      4  0c2a					      ENDIF
   3906  0c2a				   FPULL      SET	1
   3907  0c2a				   FPUSH      SET	0
      0  0c2a					      plb2var	_bullet_on
      1  0c2a				  -	      IF	!FPULL
      2  0c2a				  -	      pla
      3  0c2a					      ENDIF
      4  0c2a		       8d 29 b6 	      sta	_bullet_on
   3909  0c2a				   FPULL      SET	0
      0  0c2d					      pbyte	#0
      1  0c2d		       a9 00		      lda	#0
      2  0c2f					      IF	!FPUSH
      3  0c2f		       48		      pha
      4  0c30					      ENDIF
      0  0c30					      btow
      1  0c30		       a9 00		      lda	#$00
      2  0c32		       48		      pha
      0  0c33					      plw2var	_bullet_xpos
      1  0c33					      IF	!FPULL
      2  0c33		       68		      pla
      3  0c34		       8d 2b b6 	      sta	_bullet_xpos+1
      4  0c37		       68		      pla
      5  0c38		       8d 2a b6 	      sta	_bullet_xpos
      6  0c3b				  -	      ELSE
      7  0c3b				  -	      sta	_bullet_xpos
      8  0c3b				  -	      sty	_bullet_xpos+1
      9  0c3b					      ENDIF
   3913  0c3b				   FPUSH      SET	1
      0  0c3b					      pbyte	#0
      1  0c3b		       a9 00		      lda	#0
      2  0c3d				  -	      IF	!FPUSH
      3  0c3d				  -	      pha
      4  0c3d					      ENDIF
   3915  0c3d				   FPULL      SET	1
   3916  0c3d				   FPUSH      SET	0
      0  0c3d					      plb2var	_bullet_ypos
      1  0c3d				  -	      IF	!FPULL
      2  0c3d				  -	      pla
      3  0c3d					      ENDIF
      4  0c3d		       8d 2c b6 	      sta	_bullet_ypos
   3918  0c3d				   FPULL      SET	0
   3919  0c3d				   FPUSH      SET	1
      0  0c40					      pbyte	#0
      1  0c40		       a9 00		      lda	#0
      2  0c42				  -	      IF	!FPUSH
      3  0c42				  -	      pha
      4  0c42					      ENDIF
   3921  0c42				   FPULL      SET	1
   3922  0c42				   FPUSH      SET	0
      0  0c42					      plb2var	_bullet_dy
      1  0c42				  -	      IF	!FPULL
      2  0c42				  -	      pla
      3  0c42					      ENDIF
      4  0c42		       8d 2d b6 	      sta	_bullet_dy
   3924  0c42				   FPULL      SET	0
   3925  0c42				   FPUSH      SET	1
      0  0c45					      pbyte	#0
      1  0c45		       a9 00		      lda	#0
      2  0c47				  -	      IF	!FPUSH
      3  0c47				  -	      pha
      4  0c47					      ENDIF
   3927  0c47				   FPULL      SET	1
   3928  0c47				   FPUSH      SET	0
      0  0c47					      plb2var	_bullet_speed
      1  0c47				  -	      IF	!FPULL
      2  0c47				  -	      pla
      3  0c47					      ENDIF
      4  0c47		       8d 2e b6 	      sta	_bullet_speed
   3930  0c47				   FPULL      SET	0
   3931  0c47				   FPUSH      SET	1
      0  0c4a					      pbyte	#1
      1  0c4a		       a9 01		      lda	#1
      2  0c4c				  -	      IF	!FPUSH
      3  0c4c				  -	      pha
      4  0c4c					      ENDIF
   3933  0c4c				   FPULL      SET	1
   3934  0c4c				   FPUSH      SET	0
      0  0c4c					      plb2var	_bullet_dir
      1  0c4c				  -	      IF	!FPULL
      2  0c4c				  -	      pla
      3  0c4c					      ENDIF
      4  0c4c		       8d 34 b6 	      sta	_bullet_dir
   3936  0c4c				   FPULL      SET	0
   3937  0c4c				   FPUSH      SET	1
      0  0c4f					      pbyte	#0
      1  0c4f		       a9 00		      lda	#0
      2  0c51				  -	      IF	!FPUSH
      3  0c51				  -	      pha
      4  0c51					      ENDIF
   3939  0c51				   FPULL      SET	1
   3940  0c51				   FPUSH      SET	0
      0  0c51					      plb2var	_aircraft_mode
      1  0c51				  -	      IF	!FPULL
      2  0c51				  -	      pla
      3  0c51					      ENDIF
      4  0c51		       8d 35 b6 	      sta	_aircraft_mode
   3942  0c51				   FPULL      SET	0
   3943  0c51				   FPUSH      SET	1
      0  0c54					      pbyte	#0
      1  0c54		       a9 00		      lda	#0
      2  0c56				  -	      IF	!FPUSH
      3  0c56				  -	      pha
      4  0c56					      ENDIF
   3945  0c56				   FPULL      SET	1
   3946  0c56				   FPUSH      SET	0
      0  0c56					      plb2var	_fuel
      1  0c56				  -	      IF	!FPULL
      2  0c56				  -	      pla
      3  0c56					      ENDIF
      4  0c56		       8d 36 b6 	      sta	_fuel
   3948  0c59		       20 30 15 	      jsr	_Linstructions
   3949  0c5c		       4c 5f 0c 	      jmp	_Lmain
   3950  0c5f				   _Lmain
   3951  0c5f				   FPULL      SET	0
   3952  0c5f				   FPUSH      SET	1
      0  0c5f					      pbyte	#208
      1  0c5f		       a9 d0		      lda	#208
      2  0c61				  -	      IF	!FPUSH
      3  0c61				  -	      pha
      4  0c61					      ENDIF
   3954  0c61				   FPULL      SET	1
   3955  0c61				   FPUSH      SET	0
      0  0c61					      pokeb_const_addr	#53270
      1  0c61
      2  0c61
      3  0c61
      4  0c61		       d0 16	   .ad	      EQU	#53270
      5  0c61				  -	      IF	!FPULL
      6  0c61				  -	      pla
      7  0c61					      ENDIF
      8  0c61		       8d 16 d0 	      sta	.ad
   3957  0c61				   FPULL      SET	0
   3958  0c61				   FPUSH      SET	1
      0  0c64					      pbyte	#24
      1  0c64		       a9 18		      lda	#24
      2  0c66				  -	      IF	!FPUSH
      3  0c66				  -	      pha
      4  0c66					      ENDIF
   3960  0c66				   FPULL      SET	1
   3961  0c66				   FPUSH      SET	0
      0  0c66					      pokeb_const_addr	#53272
      1  0c66
      2  0c66
      3  0c66
      4  0c66		       d0 18	   .ad	      EQU	#53272
      5  0c66				  -	      IF	!FPULL
      6  0c66				  -	      pla
      7  0c66					      ENDIF
      8  0c66		       8d 18 d0 	      sta	.ad
   3963  0c66				   FPULL      SET	0
   3964  0c66				   FPUSH      SET	1
      0  0c69					      pbyte	#0
      1  0c69		       a9 00		      lda	#0
      2  0c6b				  -	      IF	!FPUSH
      3  0c6b				  -	      pha
      4  0c6b					      ENDIF
   3966  0c6b				   FPULL      SET	1
   3967  0c6b				   FPUSH      SET	0
      0  0c6b					      pokeb_const_addr	#53280
      1  0c6b
      2  0c6b
      3  0c6b
      4  0c6b		       d0 20	   .ad	      EQU	#53280
      5  0c6b				  -	      IF	!FPULL
      6  0c6b				  -	      pla
      7  0c6b					      ENDIF
      8  0c6b		       8d 20 d0 	      sta	.ad
   3969  0c6b				   FPULL      SET	0
   3970  0c6b				   FPUSH      SET	1
      0  0c6e					      pbyte	#0
      1  0c6e		       a9 00		      lda	#0
      2  0c70				  -	      IF	!FPUSH
      3  0c70				  -	      pha
      4  0c70					      ENDIF
   3972  0c70				   FPULL      SET	1
   3973  0c70				   FPUSH      SET	0
      0  0c70					      pokeb_const_addr	#53281
      1  0c70
      2  0c70
      3  0c70
      4  0c70		       d0 21	   .ad	      EQU	#53281
      5  0c70				  -	      IF	!FPULL
      6  0c70				  -	      pla
      7  0c70					      ENDIF
      8  0c70		       8d 21 d0 	      sta	.ad
   3975  0c73		       20 fc 9d 	      jsr	_Pintro
   3976  0c73				   FPULL      SET	0
   3977  0c73				   FPUSH      SET	1
      0  0c76					      pword	#54272
      1  0c76				  -	      IF	!FPUSH
      2  0c76				  -	      lda	#<#54272
      3  0c76				  -	      pha
      4  0c76				  -	      lda	#>#54272
      5  0c76				  -	      pha
      6  0c76					      ELSE
      7  0c76		       a9 00		      lda	#<#54272
      8  0c78		       a0 d4		      ldy	#>#54272
      9  0c7a					      ENDIF
   3979  0c7a				   FPULL      SET	1
   3980  0c7a				   FPUSH      SET	0
      0  0c7a					      plw2var	_addr
      1  0c7a				  -	      IF	!FPULL
      2  0c7a				  -	      pla
      3  0c7a				  -	      sta	_addr+1
      4  0c7a				  -	      pla
      5  0c7a				  -	      sta	_addr
      6  0c7a					      ELSE
      7  0c7a		       8d 8e b6 	      sta	_addr
      8  0c7d		       8c 8f b6 	      sty	_addr+1
      9  0c80					      ENDIF
   3982  0c80				   FPULL      SET	0
   3983  0c80				   FPUSH      SET	1
      0  0c80					      pword	#54296
      1  0c80				  -	      IF	!FPUSH
      2  0c80				  -	      lda	#<#54296
      3  0c80				  -	      pha
      4  0c80				  -	      lda	#>#54296
      5  0c80				  -	      pha
      6  0c80					      ELSE
      7  0c80		       a9 18		      lda	#<#54296
      8  0c82		       a0 d4		      ldy	#>#54296
      9  0c84					      ENDIF
   3985  0c84				   FPULL      SET	1
   3986  0c84				   FPUSH      SET	0
      0  0c84					      plw2var	XFOR_max_17
      1  0c84				  -	      IF	!FPULL
      2  0c84				  -	      pla
      3  0c84				  -	      sta	XFOR_max_17+1
      4  0c84				  -	      pla
      5  0c84				  -	      sta	XFOR_max_17
      6  0c84					      ELSE
      7  0c84		       8d 90 b6 	      sta	XFOR_max_17
      8  0c87		       8c 91 b6 	      sty	XFOR_max_17+1
      9  0c8a					      ENDIF
   3988  0c8a				   _FOR_17
      0  0c8a					      forw	17, _addr
      1  0c8a				  -	      IFCONST	XFOR_step_17
      2  0c8a				  -
      3  0c8a				  -	      lda	XFOR_step_17 + 1
      4  0c8a				  -
      5  0c8a				  -	      bpl	.cmp
      6  0c8a				  -.neg
      7  0c8a				  -
      8  0c8a				  -	      lda	_addr
      9  0c8a				  -	      cmp	XFOR_max_17
     10  0c8a				  -	      lda	_addr+1
     11  0c8a				  -	      sbc	XFOR_max_17+1
     12  0c8a				  -	      bpl	.enter
     13  0c8a				  -	      jmp	_ENDFOR_17
     14  0c8a					      ENDIF
     15  0c8a				   .cmp
     16  0c8a
     17  0c8a		       ad 90 b6 	      lda	XFOR_max_17
     18  0c8d		       cd 8e b6 	      cmp	_addr
     19  0c90		       ad 91 b6 	      lda	XFOR_max_17+1
     20  0c93		       ed 8f b6 	      sbc	_addr+1
     21  0c96		       10 03		      bpl	.enter
     22  0c98		       4c b9 0c 	      jmp	_ENDFOR_17
     23  0c9b				   .enter
   3990  0c9b				   FPULL      SET	0
      0  0c9b					      pbyte	#0
      1  0c9b		       a9 00		      lda	#0
      2  0c9d					      IF	!FPUSH
      3  0c9d		       48		      pha
      4  0c9e					      ENDIF
   3992  0c9e				   FPUSH      SET	1
      0  0c9e					      pwvar	_addr
      1  0c9e				  -	      IF	!FPUSH
      2  0c9e				  -	      lda	_addr
      3  0c9e				  -	      pha
      4  0c9e				  -	      lda	_addr+1
      5  0c9e				  -	      pha
      6  0c9e					      ELSE
      7  0c9e		       ad 8e b6 	      lda	_addr
      8  0ca1		       ac 8f b6 	      ldy	_addr+1
      9  0ca4					      ENDIF
   3994  0ca4				   FPULL      SET	1
   3995  0ca4				   FPUSH      SET	0
      0  0ca4					      pokeb
      1  0ca4				  -	      IF	!FPULL
      2  0ca4				  -	      pla
      3  0ca4				  -	      sta	.selfmod_code+2
      4  0ca4				  -	      pla
      5  0ca4				  -	      sta	.selfmod_code+1
      6  0ca4					      ELSE
      7  0ca4		       8d ac 0c 	      sta	.selfmod_code+1
      8  0ca7		       8c ad 0c 	      sty	.selfmod_code+2
      9  0caa					      ENDIF
     10  0caa		       68		      pla
     11  0cab				   .selfmod_code
     12  0cab		       8d 00 00 	      sta.w	$0000
      0  0cae					      nextw	17, _addr
      1  0cae
      2  0cae				  -	      IFCONST	XFOR_step_17
      3  0cae				  -
      4  0cae				  -	      clc
      5  0cae				  -	      lda	XFOR_step_17
      6  0cae				  -	      adc	_addr
      7  0cae				  -	      sta	_addr
      8  0cae				  -	      lda	XFOR_step_17+1
      9  0cae				  -	      adc	_addr+1
     10  0cae				  -	      sta	_addr+1
     11  0cae					      ELSE
     12  0cae
     13  0cae		       ee 8e b6 	      inc	_addr
     14  0cb1		       d0 03		      bne	.skip
     15  0cb3		       ee 8f b6 	      inc	_addr+1
     16  0cb6					      ENDIF
     17  0cb6				   .skip
     18  0cb6
     19  0cb6		       4c 8a 0c 	      jmp	_FOR_17
   3998  0cb9				   _ENDFOR_17
   3999  0cb9				   FPULL      SET	0
      0  0cb9					      paddr	_Lsounds
      0  0cb9					      pword	_Lsounds
      1  0cb9					      IF	!FPUSH
      2  0cb9		       a9 00		      lda	#<_Lsounds
      3  0cbb		       48		      pha
      4  0cbc		       a9 64		      lda	#>_Lsounds
      5  0cbe		       48		      pha
      6  0cbf				  -	      ELSE
      7  0cbf				  -	      lda	#<_Lsounds
      8  0cbf				  -	      ldy	#>_Lsounds
      9  0cbf					      ENDIF
      0  0cbf					      pbyte	#2
      1  0cbf		       a9 02		      lda	#2
      2  0cc1					      IF	!FPUSH
      3  0cc1		       48		      pha
      4  0cc2					      ENDIF
      0  0cc2					      btow
      1  0cc2		       a9 00		      lda	#$00
      2  0cc4		       48		      pha
      0  0cc5					      addw
      1  0cc5		       ba		      tsx
      2  0cc6		       bd 02 01 	      lda.wx	stack+2
      3  0cc9		       18		      clc
      4  0cca		       7d 04 01 	      adc.wx	stack+4
      5  0ccd		       9d 04 01 	      sta.wx	stack+4
      6  0cd0		       68		      pla
      7  0cd1		       7d 03 01 	      adc.wx	stack+3
      8  0cd4		       9d 03 01 	      sta.wx	stack+3
      9  0cd7		       68		      pla
      0  0cd8					      plw2var	_sfx_init.addr
      1  0cd8					      IF	!FPULL
      2  0cd8		       68		      pla
      3  0cd9		       8d 1f b5 	      sta	_sfx_init.addr+1
      4  0cdc		       68		      pla
      5  0cdd		       8d 1e b5 	      sta	_sfx_init.addr
      6  0ce0				  -	      ELSE
      7  0ce0				  -	      sta	_sfx_init.addr
      8  0ce0				  -	      sty	_sfx_init.addr+1
      9  0ce0					      ENDIF
   4005  0ce0				   FPUSH      SET	1
      0  0ce0					      pbyte	#1
      1  0ce0		       a9 01		      lda	#1
      2  0ce2				  -	      IF	!FPUSH
      3  0ce2				  -	      pha
      4  0ce2					      ENDIF
   4007  0ce2				   FPULL      SET	1
   4008  0ce2				   FPUSH      SET	0
      0  0ce2					      plb2var	_sfx_init.reserve_voice3
      1  0ce2				  -	      IF	!FPULL
      2  0ce2				  -	      pla
      3  0ce2					      ENDIF
      4  0ce2		       8d 20 b5 	      sta	_sfx_init.reserve_voice3
   4010  0ce5		       20 b4 74 	      jsr	_Psfx_init
   4011  0ce5				   FPULL      SET	0
      0  0ce8					      pbyte	#31
      1  0ce8		       a9 1f		      lda	#31
      2  0cea					      IF	!FPUSH
      3  0cea		       48		      pha
      4  0ceb					      ENDIF
   4013  0ceb				   FPUSH      SET	1
      0  0ceb					      pword	#54296
      1  0ceb				  -	      IF	!FPUSH
      2  0ceb				  -	      lda	#<#54296
      3  0ceb				  -	      pha
      4  0ceb				  -	      lda	#>#54296
      5  0ceb				  -	      pha
      6  0ceb					      ELSE
      7  0ceb		       a9 18		      lda	#<#54296
      8  0ced		       a0 d4		      ldy	#>#54296
      9  0cef					      ENDIF
   4015  0cef				   FPULL      SET	1
   4016  0cef				   FPUSH      SET	0
      0  0cef					      pokeb
      1  0cef				  -	      IF	!FPULL
      2  0cef				  -	      pla
      3  0cef				  -	      sta	.selfmod_code+2
      4  0cef				  -	      pla
      5  0cef				  -	      sta	.selfmod_code+1
      6  0cef					      ELSE
      7  0cef		       8d f7 0c 	      sta	.selfmod_code+1
      8  0cf2		       8c f8 0c 	      sty	.selfmod_code+2
      9  0cf5					      ENDIF
     10  0cf5		       68		      pla
     11  0cf6				   .selfmod_code
     12  0cf6		       8d 00 00 	      sta.w	$0000
   4018  0cf6				   FPULL      SET	0
      0  0cf9					      pbyte	#129
      1  0cf9		       a9 81		      lda	#129
      2  0cfb					      IF	!FPUSH
      3  0cfb		       48		      pha
      4  0cfc					      ENDIF
   4020  0cfc				   FPUSH      SET	1
      0  0cfc					      pword	#54290
      1  0cfc				  -	      IF	!FPUSH
      2  0cfc				  -	      lda	#<#54290
      3  0cfc				  -	      pha
      4  0cfc				  -	      lda	#>#54290
      5  0cfc				  -	      pha
      6  0cfc					      ELSE
      7  0cfc		       a9 12		      lda	#<#54290
      8  0cfe		       a0 d4		      ldy	#>#54290
      9  0d00					      ENDIF
   4022  0d00				   FPULL      SET	1
   4023  0d00				   FPUSH      SET	0
      0  0d00					      pokeb
      1  0d00				  -	      IF	!FPULL
      2  0d00				  -	      pla
      3  0d00				  -	      sta	.selfmod_code+2
      4  0d00				  -	      pla
      5  0d00				  -	      sta	.selfmod_code+1
      6  0d00					      ELSE
      7  0d00		       8d 08 0d 	      sta	.selfmod_code+1
      8  0d03		       8c 09 0d 	      sty	.selfmod_code+2
      9  0d06					      ENDIF
     10  0d06		       68		      pla
     11  0d07				   .selfmod_code
     12  0d07		       8d 00 00 	      sta.w	$0000
   4025  0d07				   FPULL      SET	0
      0  0d0a					      pbyte	#32
      1  0d0a		       a9 20		      lda	#32
      2  0d0c					      IF	!FPUSH
      3  0d0c		       48		      pha
      4  0d0d					      ENDIF
   4027  0d0d				   FPUSH      SET	1
      0  0d0d					      pword	#54291
      1  0d0d				  -	      IF	!FPUSH
      2  0d0d				  -	      lda	#<#54291
      3  0d0d				  -	      pha
      4  0d0d				  -	      lda	#>#54291
      5  0d0d				  -	      pha
      6  0d0d					      ELSE
      7  0d0d		       a9 13		      lda	#<#54291
      8  0d0f		       a0 d4		      ldy	#>#54291
      9  0d11					      ENDIF
   4029  0d11				   FPULL      SET	1
   4030  0d11				   FPUSH      SET	0
      0  0d11					      pokeb
      1  0d11				  -	      IF	!FPULL
      2  0d11				  -	      pla
      3  0d11				  -	      sta	.selfmod_code+2
      4  0d11				  -	      pla
      5  0d11				  -	      sta	.selfmod_code+1
      6  0d11					      ELSE
      7  0d11		       8d 19 0d 	      sta	.selfmod_code+1
      8  0d14		       8c 1a 0d 	      sty	.selfmod_code+2
      9  0d17					      ENDIF
     10  0d17		       68		      pla
     11  0d18				   .selfmod_code
     12  0d18		       8d 00 00 	      sta.w	$0000
   4032  0d18				   FPULL      SET	0
      0  0d1b					      pbyte	#240
      1  0d1b		       a9 f0		      lda	#240
      2  0d1d					      IF	!FPUSH
      3  0d1d		       48		      pha
      4  0d1e					      ENDIF
   4034  0d1e				   FPUSH      SET	1
      0  0d1e					      pword	#54292
      1  0d1e				  -	      IF	!FPUSH
      2  0d1e				  -	      lda	#<#54292
      3  0d1e				  -	      pha
      4  0d1e				  -	      lda	#>#54292
      5  0d1e				  -	      pha
      6  0d1e					      ELSE
      7  0d1e		       a9 14		      lda	#<#54292
      8  0d20		       a0 d4		      ldy	#>#54292
      9  0d22					      ENDIF
   4036  0d22				   FPULL      SET	1
   4037  0d22				   FPUSH      SET	0
      0  0d22					      pokeb
      1  0d22				  -	      IF	!FPULL
      2  0d22				  -	      pla
      3  0d22				  -	      sta	.selfmod_code+2
      4  0d22				  -	      pla
      5  0d22				  -	      sta	.selfmod_code+1
      6  0d22					      ELSE
      7  0d22		       8d 2a 0d 	      sta	.selfmod_code+1
      8  0d25		       8c 2b 0d 	      sty	.selfmod_code+2
      9  0d28					      ENDIF
     10  0d28		       68		      pla
     11  0d29				   .selfmod_code
     12  0d29		       8d 00 00 	      sta.w	$0000
   4039  0d29				   FPULL      SET	0
      0  0d2c					      pbyte	#0
      1  0d2c		       a9 00		      lda	#0
      2  0d2e					      IF	!FPUSH
      3  0d2e		       48		      pha
      4  0d2f					      ENDIF
   4041  0d2f				   FPUSH      SET	1
      0  0d2f					      pword	#54293
      1  0d2f				  -	      IF	!FPUSH
      2  0d2f				  -	      lda	#<#54293
      3  0d2f				  -	      pha
      4  0d2f				  -	      lda	#>#54293
      5  0d2f				  -	      pha
      6  0d2f					      ELSE
      7  0d2f		       a9 15		      lda	#<#54293
      8  0d31		       a0 d4		      ldy	#>#54293
      9  0d33					      ENDIF
   4043  0d33				   FPULL      SET	1
   4044  0d33				   FPUSH      SET	0
      0  0d33					      pokeb
      1  0d33				  -	      IF	!FPULL
      2  0d33				  -	      pla
      3  0d33				  -	      sta	.selfmod_code+2
      4  0d33				  -	      pla
      5  0d33				  -	      sta	.selfmod_code+1
      6  0d33					      ELSE
      7  0d33		       8d 3b 0d 	      sta	.selfmod_code+1
      8  0d36		       8c 3c 0d 	      sty	.selfmod_code+2
      9  0d39					      ENDIF
     10  0d39		       68		      pla
     11  0d3a				   .selfmod_code
     12  0d3a		       8d 00 00 	      sta.w	$0000
   4046  0d3a				   FPULL      SET	0
      0  0d3d					      pbyte	#4
      1  0d3d		       a9 04		      lda	#4
      2  0d3f					      IF	!FPUSH
      3  0d3f		       48		      pha
      4  0d40					      ENDIF
   4048  0d40				   FPUSH      SET	1
      0  0d40					      pword	#54294
      1  0d40				  -	      IF	!FPUSH
      2  0d40				  -	      lda	#<#54294
      3  0d40				  -	      pha
      4  0d40				  -	      lda	#>#54294
      5  0d40				  -	      pha
      6  0d40					      ELSE
      7  0d40		       a9 16		      lda	#<#54294
      8  0d42		       a0 d4		      ldy	#>#54294
      9  0d44					      ENDIF
   4050  0d44				   FPULL      SET	1
   4051  0d44				   FPUSH      SET	0
      0  0d44					      pokeb
      1  0d44				  -	      IF	!FPULL
      2  0d44				  -	      pla
      3  0d44				  -	      sta	.selfmod_code+2
      4  0d44				  -	      pla
      5  0d44				  -	      sta	.selfmod_code+1
      6  0d44					      ELSE
      7  0d44		       8d 4c 0d 	      sta	.selfmod_code+1
      8  0d47		       8c 4d 0d 	      sty	.selfmod_code+2
      9  0d4a					      ENDIF
     10  0d4a		       68		      pla
     11  0d4b				   .selfmod_code
     12  0d4b		       8d 00 00 	      sta.w	$0000
   4053  0d4b				   FPULL      SET	0
      0  0d4e					      pbyte	#68
      1  0d4e		       a9 44		      lda	#68
      2  0d50					      IF	!FPUSH
      3  0d50		       48		      pha
      4  0d51					      ENDIF
   4055  0d51				   FPUSH      SET	1
      0  0d51					      pword	#54295
      1  0d51				  -	      IF	!FPUSH
      2  0d51				  -	      lda	#<#54295
      3  0d51				  -	      pha
      4  0d51				  -	      lda	#>#54295
      5  0d51				  -	      pha
      6  0d51					      ELSE
      7  0d51		       a9 17		      lda	#<#54295
      8  0d53		       a0 d4		      ldy	#>#54295
      9  0d55					      ENDIF
   4057  0d55				   FPULL      SET	1
   4058  0d55				   FPUSH      SET	0
      0  0d55					      pokeb
      1  0d55				  -	      IF	!FPULL
      2  0d55				  -	      pla
      3  0d55				  -	      sta	.selfmod_code+2
      4  0d55				  -	      pla
      5  0d55				  -	      sta	.selfmod_code+1
      6  0d55					      ELSE
      7  0d55		       8d 5d 0d 	      sta	.selfmod_code+1
      8  0d58		       8c 5e 0d 	      sty	.selfmod_code+2
      9  0d5b					      ENDIF
     10  0d5b		       68		      pla
     11  0d5c				   .selfmod_code
     12  0d5c		       8d 00 00 	      sta.w	$0000
   4060  0d5c				   FPULL      SET	0
      0  0d5f					      pbyte	#31
      1  0d5f		       a9 1f		      lda	#31
      2  0d61					      IF	!FPUSH
      3  0d61		       48		      pha
      4  0d62					      ENDIF
   4062  0d62				   FPUSH      SET	1
      0  0d62					      pword	#54296
      1  0d62				  -	      IF	!FPUSH
      2  0d62				  -	      lda	#<#54296
      3  0d62				  -	      pha
      4  0d62				  -	      lda	#>#54296
      5  0d62				  -	      pha
      6  0d62					      ELSE
      7  0d62		       a9 18		      lda	#<#54296
      8  0d64		       a0 d4		      ldy	#>#54296
      9  0d66					      ENDIF
   4064  0d66				   FPULL      SET	1
   4065  0d66				   FPUSH      SET	0
      0  0d66					      pokeb
      1  0d66				  -	      IF	!FPULL
      2  0d66				  -	      pla
      3  0d66				  -	      sta	.selfmod_code+2
      4  0d66				  -	      pla
      5  0d66				  -	      sta	.selfmod_code+1
      6  0d66					      ELSE
      7  0d66		       8d 6e 0d 	      sta	.selfmod_code+1
      8  0d69		       8c 6f 0d 	      sty	.selfmod_code+2
      9  0d6c					      ENDIF
     10  0d6c		       68		      pla
     11  0d6d				   .selfmod_code
     12  0d6d		       8d 00 00 	      sta.w	$0000
   4067  0d6d				   FPULL      SET	0
   4068  0d6d				   FPUSH      SET	1
      0  0d70					      pbyte	#4
      1  0d70		       a9 04		      lda	#4
      2  0d72				  -	      IF	!FPUSH
      3  0d72				  -	      pha
      4  0d72					      ENDIF
   4070  0d72				   FPULL      SET	1
   4071  0d72				   FPUSH      SET	0
      0  0d72					      plb2var	_ri_isr_count
      1  0d72				  -	      IF	!FPULL
      2  0d72				  -	      pla
      3  0d72					      ENDIF
      4  0d72		       8d 15 b5 	      sta	_ri_isr_count
   4073  0d72				   FPULL      SET	0
   4074  0d72				   FPUSH      SET	1
      0  0d75					      pbyte	#0
      1  0d75		       a9 00		      lda	#0
      2  0d77				  -	      IF	!FPUSH
      3  0d77				  -	      pha
      4  0d77					      ENDIF
   4076  0d77				   FPULL      SET	1
   4077  0d77				   FPUSH      SET	0
      0  0d77					      plb2var	_ri_set_isr.isr_no
      1  0d77				  -	      IF	!FPULL
      2  0d77				  -	      pla
      3  0d77					      ENDIF
      4  0d77		       8d 19 b5 	      sta	_ri_set_isr.isr_no
   4079  0d77				   FPULL      SET	0
   4080  0d77				   FPUSH      SET	1
      0  0d7a					      paddr	_Pinterrupt1
      0  0d7a					      pword	_Pinterrupt1
      1  0d7a				  -	      IF	!FPUSH
      2  0d7a				  -	      lda	#<_Pinterrupt1
      3  0d7a				  -	      pha
      4  0d7a				  -	      lda	#>_Pinterrupt1
      5  0d7a				  -	      pha
      6  0d7a					      ELSE
      7  0d7a		       a9 cc		      lda	#<_Pinterrupt1
      8  0d7c		       a0 a2		      ldy	#>_Pinterrupt1
      9  0d7e					      ENDIF
   4082  0d7e				   FPULL      SET	1
   4083  0d7e				   FPUSH      SET	0
      0  0d7e					      plw2var	_ri_set_isr.isr_addr
      1  0d7e				  -	      IF	!FPULL
      2  0d7e				  -	      pla
      3  0d7e				  -	      sta	_ri_set_isr.isr_addr+1
      4  0d7e				  -	      pla
      5  0d7e				  -	      sta	_ri_set_isr.isr_addr
      6  0d7e					      ELSE
      7  0d7e		       8d 1a b5 	      sta	_ri_set_isr.isr_addr
      8  0d81		       8c 1b b5 	      sty	_ri_set_isr.isr_addr+1
      9  0d84					      ENDIF
   4085  0d84				   FPULL      SET	0
      0  0d84					      pbyte	#50
      1  0d84		       a9 32		      lda	#50
      2  0d86					      IF	!FPUSH
      3  0d86		       48		      pha
      4  0d87					      ENDIF
      0  0d87					      btow
      1  0d87		       a9 00		      lda	#$00
      2  0d89		       48		      pha
      0  0d8a					      plw2var	_ri_set_isr.raster_line
      1  0d8a					      IF	!FPULL
      2  0d8a		       68		      pla
      3  0d8b		       8d 1d b5 	      sta	_ri_set_isr.raster_line+1
      4  0d8e		       68		      pla
      5  0d8f		       8d 1c b5 	      sta	_ri_set_isr.raster_line
      6  0d92				  -	      ELSE
      7  0d92				  -	      sta	_ri_set_isr.raster_line
      8  0d92				  -	      sty	_ri_set_isr.raster_line+1
      9  0d92					      ENDIF
   4089  0d92		       20 82 74 	      jsr	_Pri_set_isr
   4090  0d92				   FPUSH      SET	1
      0  0d95					      pbyte	#1
      1  0d95		       a9 01		      lda	#1
      2  0d97				  -	      IF	!FPUSH
      3  0d97				  -	      pha
      4  0d97					      ENDIF
   4092  0d97				   FPULL      SET	1
   4093  0d97				   FPUSH      SET	0
      0  0d97					      plb2var	_ri_set_isr.isr_no
      1  0d97				  -	      IF	!FPULL
      2  0d97				  -	      pla
      3  0d97					      ENDIF
      4  0d97		       8d 19 b5 	      sta	_ri_set_isr.isr_no
   4095  0d97				   FPULL      SET	0
   4096  0d97				   FPUSH      SET	1
      0  0d9a					      paddr	_Pinterrupt2
      0  0d9a					      pword	_Pinterrupt2
      1  0d9a				  -	      IF	!FPUSH
      2  0d9a				  -	      lda	#<_Pinterrupt2
      3  0d9a				  -	      pha
      4  0d9a				  -	      lda	#>_Pinterrupt2
      5  0d9a				  -	      pha
      6  0d9a					      ELSE
      7  0d9a		       a9 d2		      lda	#<_Pinterrupt2
      8  0d9c		       a0 a2		      ldy	#>_Pinterrupt2
      9  0d9e					      ENDIF
   4098  0d9e				   FPULL      SET	1
   4099  0d9e				   FPUSH      SET	0
      0  0d9e					      plw2var	_ri_set_isr.isr_addr
      1  0d9e				  -	      IF	!FPULL
      2  0d9e				  -	      pla
      3  0d9e				  -	      sta	_ri_set_isr.isr_addr+1
      4  0d9e				  -	      pla
      5  0d9e				  -	      sta	_ri_set_isr.isr_addr
      6  0d9e					      ELSE
      7  0d9e		       8d 1a b5 	      sta	_ri_set_isr.isr_addr
      8  0da1		       8c 1b b5 	      sty	_ri_set_isr.isr_addr+1
      9  0da4					      ENDIF
   4101  0da4				   FPULL      SET	0
      0  0da4					      pbyte	#90
      1  0da4		       a9 5a		      lda	#90
      2  0da6					      IF	!FPUSH
      3  0da6		       48		      pha
      4  0da7					      ENDIF
      0  0da7					      btow
      1  0da7		       a9 00		      lda	#$00
      2  0da9		       48		      pha
      0  0daa					      plw2var	_ri_set_isr.raster_line
      1  0daa					      IF	!FPULL
      2  0daa		       68		      pla
      3  0dab		       8d 1d b5 	      sta	_ri_set_isr.raster_line+1
      4  0dae		       68		      pla
      5  0daf		       8d 1c b5 	      sta	_ri_set_isr.raster_line
      6  0db2				  -	      ELSE
      7  0db2				  -	      sta	_ri_set_isr.raster_line
      8  0db2				  -	      sty	_ri_set_isr.raster_line+1
      9  0db2					      ENDIF
   4105  0db2		       20 82 74 	      jsr	_Pri_set_isr
   4106  0db2				   FPUSH      SET	1
      0  0db5					      pbyte	#2
      1  0db5		       a9 02		      lda	#2
      2  0db7				  -	      IF	!FPUSH
      3  0db7				  -	      pha
      4  0db7					      ENDIF
   4108  0db7				   FPULL      SET	1
   4109  0db7				   FPUSH      SET	0
      0  0db7					      plb2var	_ri_set_isr.isr_no
      1  0db7				  -	      IF	!FPULL
      2  0db7				  -	      pla
      3  0db7					      ENDIF
      4  0db7		       8d 19 b5 	      sta	_ri_set_isr.isr_no
   4111  0db7				   FPULL      SET	0
   4112  0db7				   FPUSH      SET	1
      0  0dba					      paddr	_Pinterrupt3
      0  0dba					      pword	_Pinterrupt3
      1  0dba				  -	      IF	!FPUSH
      2  0dba				  -	      lda	#<_Pinterrupt3
      3  0dba				  -	      pha
      4  0dba				  -	      lda	#>_Pinterrupt3
      5  0dba				  -	      pha
      6  0dba					      ELSE
      7  0dba		       a9 dd		      lda	#<_Pinterrupt3
      8  0dbc		       a0 a2		      ldy	#>_Pinterrupt3
      9  0dbe					      ENDIF
   4114  0dbe				   FPULL      SET	1
   4115  0dbe				   FPUSH      SET	0
      0  0dbe					      plw2var	_ri_set_isr.isr_addr
      1  0dbe				  -	      IF	!FPULL
      2  0dbe				  -	      pla
      3  0dbe				  -	      sta	_ri_set_isr.isr_addr+1
      4  0dbe				  -	      pla
      5  0dbe				  -	      sta	_ri_set_isr.isr_addr
      6  0dbe					      ELSE
      7  0dbe		       8d 1a b5 	      sta	_ri_set_isr.isr_addr
      8  0dc1		       8c 1b b5 	      sty	_ri_set_isr.isr_addr+1
      9  0dc4					      ENDIF
   4117  0dc4				   FPULL      SET	0
      0  0dc4					      pbyte	#176
      1  0dc4		       a9 b0		      lda	#176
      2  0dc6					      IF	!FPUSH
      3  0dc6		       48		      pha
      4  0dc7					      ENDIF
      0  0dc7					      btow
      1  0dc7		       a9 00		      lda	#$00
      2  0dc9		       48		      pha
      0  0dca					      plw2var	_ri_set_isr.raster_line
      1  0dca					      IF	!FPULL
      2  0dca		       68		      pla
      3  0dcb		       8d 1d b5 	      sta	_ri_set_isr.raster_line+1
      4  0dce		       68		      pla
      5  0dcf		       8d 1c b5 	      sta	_ri_set_isr.raster_line
      6  0dd2				  -	      ELSE
      7  0dd2				  -	      sta	_ri_set_isr.raster_line
      8  0dd2				  -	      sty	_ri_set_isr.raster_line+1
      9  0dd2					      ENDIF
   4121  0dd2		       20 82 74 	      jsr	_Pri_set_isr
   4122  0dd2				   FPUSH      SET	1
      0  0dd5					      pbyte	#3
      1  0dd5		       a9 03		      lda	#3
      2  0dd7				  -	      IF	!FPUSH
      3  0dd7				  -	      pha
      4  0dd7					      ENDIF
   4124  0dd7				   FPULL      SET	1
   4125  0dd7				   FPUSH      SET	0
      0  0dd7					      plb2var	_ri_set_isr.isr_no
      1  0dd7				  -	      IF	!FPULL
      2  0dd7				  -	      pla
      3  0dd7					      ENDIF
      4  0dd7		       8d 19 b5 	      sta	_ri_set_isr.isr_no
   4127  0dd7				   FPULL      SET	0
   4128  0dd7				   FPUSH      SET	1
      0  0dda					      paddr	_Psfx_play
      0  0dda					      pword	_Psfx_play
      1  0dda				  -	      IF	!FPUSH
      2  0dda				  -	      lda	#<_Psfx_play
      3  0dda				  -	      pha
      4  0dda				  -	      lda	#>_Psfx_play
      5  0dda				  -	      pha
      6  0dda					      ELSE
      7  0dda		       a9 e0		      lda	#<_Psfx_play
      8  0ddc		       a0 75		      ldy	#>_Psfx_play
      9  0dde					      ENDIF
   4130  0dde				   FPULL      SET	1
   4131  0dde				   FPUSH      SET	0
      0  0dde					      plw2var	_ri_set_isr.isr_addr
      1  0dde				  -	      IF	!FPULL
      2  0dde				  -	      pla
      3  0dde				  -	      sta	_ri_set_isr.isr_addr+1
      4  0dde				  -	      pla
      5  0dde				  -	      sta	_ri_set_isr.isr_addr
      6  0dde					      ELSE
      7  0dde		       8d 1a b5 	      sta	_ri_set_isr.isr_addr
      8  0de1		       8c 1b b5 	      sty	_ri_set_isr.isr_addr+1
      9  0de4					      ENDIF
   4133  0de4				   FPULL      SET	0
      0  0de4					      pbyte	#0
      1  0de4		       a9 00		      lda	#0
      2  0de6					      IF	!FPUSH
      3  0de6		       48		      pha
      4  0de7					      ENDIF
      0  0de7					      btow
      1  0de7		       a9 00		      lda	#$00
      2  0de9		       48		      pha
      0  0dea					      plw2var	_ri_set_isr.raster_line
      1  0dea					      IF	!FPULL
      2  0dea		       68		      pla
      3  0deb		       8d 1d b5 	      sta	_ri_set_isr.raster_line+1
      4  0dee		       68		      pla
      5  0def		       8d 1c b5 	      sta	_ri_set_isr.raster_line
      6  0df2				  -	      ELSE
      7  0df2				  -	      sta	_ri_set_isr.raster_line
      8  0df2				  -	      sty	_ri_set_isr.raster_line+1
      9  0df2					      ENDIF
   4137  0df2		       20 82 74 	      jsr	_Pri_set_isr
   4138  0df5		       20 a9 74 	      jsr	_Pri_syshandler_off
   4139  0df8		       20 68 74 	      jsr	_Pri_off
   4140  0df8				   FPUSH      SET	1
      0  0dfb					      pword	#53265
      1  0dfb				  -	      IF	!FPUSH
      2  0dfb				  -	      lda	#<#53265
      3  0dfb				  -	      pha
      4  0dfb				  -	      lda	#>#53265
      5  0dfb				  -	      pha
      6  0dfb					      ELSE
      7  0dfb		       a9 11		      lda	#<#53265
      8  0dfd		       a0 d0		      ldy	#>#53265
      9  0dff					      ENDIF
   4142  0dff				   FPULL      SET	1
   4143  0dff				   FPUSH      SET	0
      0  0dff					      peekb
      1  0dff				  -	      IF	!FPULL
      2  0dff				  -	      pla
      3  0dff				  -	      sta	.selfmod_code+2
      4  0dff				  -	      pla
      5  0dff				  -	      sta	.selfmod_code+1
      6  0dff					      ELSE
      7  0dff		       8d 06 0e 	      sta	.selfmod_code+1
      8  0e02		       8c 07 0e 	      sty	.selfmod_code+2
      9  0e05					      ENDIF
     10  0e05				   .selfmod_code
     11  0e05		       ad 00 00 	      lda.w	$0000
     12  0e08					      IF	!FPUSH
     13  0e08		       48		      pha
     14  0e09					      ENDIF
   4145  0e09				   FPULL      SET	0
   4146  0e09				   FPUSH      SET	1
      0  0e09					      pbyte	#239
      1  0e09		       a9 ef		      lda	#239
      2  0e0b				  -	      IF	!FPUSH
      3  0e0b				  -	      pha
      4  0e0b					      ENDIF
   4148  0e0b				   FPULL      SET	1
   4149  0e0b				   FPUSH      SET	0
      0  0e0b					      andb
      1  0e0b				  -	      IF	!FPULL
      2  0e0b				  -	      pla
      3  0e0b					      ENDIF
      4  0e0b		       85 fc		      sta	R1
      5  0e0d		       68		      pla
      6  0e0e		       25 fc		      and	R1
      7  0e10					      IF	!FPUSH
      8  0e10		       48		      pha
      9  0e11					      ENDIF
   4151  0e11				   FPULL      SET	0
   4152  0e11				   FPUSH      SET	1
      0  0e11					      pword	#53265
      1  0e11				  -	      IF	!FPUSH
      2  0e11				  -	      lda	#<#53265
      3  0e11				  -	      pha
      4  0e11				  -	      lda	#>#53265
      5  0e11				  -	      pha
      6  0e11					      ELSE
      7  0e11		       a9 11		      lda	#<#53265
      8  0e13		       a0 d0		      ldy	#>#53265
      9  0e15					      ENDIF
   4154  0e15				   FPULL      SET	1
   4155  0e15				   FPUSH      SET	0
      0  0e15					      pokeb
      1  0e15				  -	      IF	!FPULL
      2  0e15				  -	      pla
      3  0e15				  -	      sta	.selfmod_code+2
      4  0e15				  -	      pla
      5  0e15				  -	      sta	.selfmod_code+1
      6  0e15					      ELSE
      7  0e15		       8d 1d 0e 	      sta	.selfmod_code+1
      8  0e18		       8c 1e 0e 	      sty	.selfmod_code+2
      9  0e1b					      ENDIF
     10  0e1b		       68		      pla
     11  0e1c				   .selfmod_code
     12  0e1c		       8d 00 00 	      sta.w	$0000
   4157  0e1f		       20 b4 76 	      jsr	_Pconfigure_sprites
   4158  0e22		       20 25 74 	      jsr	_Pri_on
   4159  0e22				   FPULL      SET	0
   4160  0e22				   FPUSH      SET	1
      0  0e25					      pword	#53265
      1  0e25				  -	      IF	!FPUSH
      2  0e25				  -	      lda	#<#53265
      3  0e25				  -	      pha
      4  0e25				  -	      lda	#>#53265
      5  0e25				  -	      pha
      6  0e25					      ELSE
      7  0e25		       a9 11		      lda	#<#53265
      8  0e27		       a0 d0		      ldy	#>#53265
      9  0e29					      ENDIF
   4162  0e29				   FPULL      SET	1
   4163  0e29				   FPUSH      SET	0
      0  0e29					      peekb
      1  0e29				  -	      IF	!FPULL
      2  0e29				  -	      pla
      3  0e29				  -	      sta	.selfmod_code+2
      4  0e29				  -	      pla
      5  0e29				  -	      sta	.selfmod_code+1
      6  0e29					      ELSE
      7  0e29		       8d 30 0e 	      sta	.selfmod_code+1
      8  0e2c		       8c 31 0e 	      sty	.selfmod_code+2
      9  0e2f					      ENDIF
     10  0e2f				   .selfmod_code
     11  0e2f		       ad 00 00 	      lda.w	$0000
     12  0e32					      IF	!FPUSH
     13  0e32		       48		      pha
     14  0e33					      ENDIF
   4165  0e33				   FPULL      SET	0
   4166  0e33				   FPUSH      SET	1
      0  0e33					      pbyte	#16
      1  0e33		       a9 10		      lda	#16
      2  0e35				  -	      IF	!FPUSH
      3  0e35				  -	      pha
      4  0e35					      ENDIF
   4168  0e35				   FPULL      SET	1
   4169  0e35				   FPUSH      SET	0
      0  0e35					      orb
      1  0e35				  -	      IF	!FPULL
      2  0e35				  -	      pla
      3  0e35					      ENDIF
      4  0e35		       85 fc		      sta	R1
      5  0e37		       68		      pla
      6  0e38		       05 fc		      ora	R1
      7  0e3a					      IF	!FPUSH
      8  0e3a		       48		      pha
      9  0e3b					      ENDIF
   4171  0e3b				   FPULL      SET	0
   4172  0e3b				   FPUSH      SET	1
      0  0e3b					      pword	#53265
      1  0e3b				  -	      IF	!FPUSH
      2  0e3b				  -	      lda	#<#53265
      3  0e3b				  -	      pha
      4  0e3b				  -	      lda	#>#53265
      5  0e3b				  -	      pha
      6  0e3b					      ELSE
      7  0e3b		       a9 11		      lda	#<#53265
      8  0e3d		       a0 d0		      ldy	#>#53265
      9  0e3f					      ENDIF
   4174  0e3f				   FPULL      SET	1
   4175  0e3f				   FPUSH      SET	0
      0  0e3f					      pokeb
      1  0e3f				  -	      IF	!FPULL
      2  0e3f				  -	      pla
      3  0e3f				  -	      sta	.selfmod_code+2
      4  0e3f				  -	      pla
      5  0e3f				  -	      sta	.selfmod_code+1
      6  0e3f					      ELSE
      7  0e3f		       8d 47 0e 	      sta	.selfmod_code+1
      8  0e42		       8c 48 0e 	      sty	.selfmod_code+2
      9  0e45					      ENDIF
     10  0e45		       68		      pla
     11  0e46				   .selfmod_code
     12  0e46		       8d 00 00 	      sta.w	$0000
   4177  0e46				   FPULL      SET	0
   4178  0e46				   FPUSH      SET	1
      0  0e49					      pbyte	#1
      1  0e49		       a9 01		      lda	#1
      2  0e4b				  -	      IF	!FPUSH
      3  0e4b				  -	      pha
      4  0e4b					      ENDIF
   4180  0e4b				   FPULL      SET	1
   4181  0e4b				   FPUSH      SET	0
      0  0e4b					      plb2var	_level_done
      1  0e4b				  -	      IF	!FPULL
      2  0e4b				  -	      pla
      3  0e4b					      ENDIF
      4  0e4b		       8d 3c b6 	      sta	_level_done
   4183  0e4b				   FPULL      SET	0
   4184  0e4b				   FPUSH      SET	1
      0  0e4e					      pbyte	#1
      1  0e4e		       a9 01		      lda	#1
      2  0e50				  -	      IF	!FPUSH
      3  0e50				  -	      pha
      4  0e50					      ENDIF
   4186  0e50				   FPULL      SET	1
   4187  0e50				   FPUSH      SET	0
      0  0e50					      plb2var	_wave
      1  0e50				  -	      IF	!FPULL
      2  0e50				  -	      pla
      3  0e50					      ENDIF
      4  0e50		       8d 3d b6 	      sta	_wave
   4189  0e50				   FPULL      SET	0
      0  0e53					      pbyte	#0
      1  0e53		       a9 00		      lda	#0
      2  0e55					      IF	!FPUSH
      3  0e55		       48		      pha
      4  0e56					      ENDIF
      0  0e56					      btow
      1  0e56		       a9 00		      lda	#$00
      2  0e58		       48		      pha
      0  0e59					      plw2var	_score
      1  0e59					      IF	!FPULL
      2  0e59		       68		      pla
      3  0e5a		       8d 28 b5 	      sta	_score+1
      4  0e5d		       68		      pla
      5  0e5e		       8d 27 b5 	      sta	_score
      6  0e61				  -	      ELSE
      7  0e61				  -	      sta	_score
      8  0e61				  -	      sty	_score+1
      9  0e61					      ENDIF
   4193  0e61				   FPUSH      SET	1
      0  0e61					      pbyte	#3
      1  0e61		       a9 03		      lda	#3
      2  0e63				  -	      IF	!FPUSH
      3  0e63				  -	      pha
      4  0e63					      ENDIF
   4195  0e63				   FPULL      SET	1
   4196  0e63				   FPUSH      SET	0
      0  0e63					      plb2var	_fleet
      1  0e63				  -	      IF	!FPULL
      2  0e63				  -	      pla
      3  0e63					      ENDIF
      4  0e63		       8d 37 b6 	      sta	_fleet
   4198  0e63				   FPULL      SET	0
   4199  0e63				   FPUSH      SET	1
      0  0e66					      pbyte	#7
      1  0e66		       a9 07		      lda	#7
      2  0e68				  -	      IF	!FPUSH
      3  0e68				  -	      pha
      4  0e68					      ENDIF
   4201  0e68				   FPULL      SET	1
   4202  0e68				   FPUSH      SET	0
      0  0e68					      plb2var	_wave_countdown
      1  0e68				  -	      IF	!FPULL
      2  0e68				  -	      pla
      3  0e68					      ENDIF
      4  0e68		       8d 14 b6 	      sta	_wave_countdown
   4204  0e68				   FPULL      SET	0
      0  0e6b					      pbyte	#0
      1  0e6b		       a9 00		      lda	#0
      2  0e6d					      IF	!FPUSH
      3  0e6d		       48		      pha
      4  0e6e					      ENDIF
      0  0e6e					      btow
      1  0e6e		       a9 00		      lda	#$00
      2  0e70		       48		      pha
      0  0e71					      plw2var	_ufos_killed
      1  0e71					      IF	!FPULL
      2  0e71		       68		      pla
      3  0e72		       8d 3b b6 	      sta	_ufos_killed+1
      4  0e75		       68		      pla
      5  0e76		       8d 3a b6 	      sta	_ufos_killed
      6  0e79				  -	      ELSE
      7  0e79				  -	      sta	_ufos_killed
      8  0e79				  -	      sty	_ufos_killed+1
      9  0e79					      ENDIF
      0  0e79					      pbyte	#0
      1  0e79		       a9 00		      lda	#0
      2  0e7b					      IF	!FPUSH
      3  0e7b		       48		      pha
      4  0e7c					      ENDIF
      0  0e7c					      btow
      1  0e7c		       a9 00		      lda	#$00
      2  0e7e		       48		      pha
      0  0e7f					      plw2var	_attack_wave_index
      1  0e7f					      IF	!FPULL
      2  0e7f		       68		      pla
      3  0e80		       8d 26 b6 	      sta	_attack_wave_index+1
      4  0e83		       68		      pla
      5  0e84		       8d 25 b6 	      sta	_attack_wave_index
      6  0e87				  -	      ELSE
      7  0e87				  -	      sta	_attack_wave_index
      8  0e87				  -	      sty	_attack_wave_index+1
      9  0e87					      ENDIF
   4211  0e87				   FPUSH      SET	1
      0  0e87					      pbyte	#0
      1  0e87		       a9 00		      lda	#0
      2  0e89				  -	      IF	!FPUSH
      3  0e89				  -	      pha
      4  0e89					      ENDIF
   4213  0e89				   FPULL      SET	1
   4214  0e89				   FPUSH      SET	0
      0  0e89					      plb2var	_no_of_ufos_in_this_wave
      1  0e89				  -	      IF	!FPULL
      2  0e89				  -	      pla
      3  0e89					      ENDIF
      4  0e89		       8d 28 b6 	      sta	_no_of_ufos_in_this_wave
   4216  0e8c				   _Lgame_loop
   4217  0e8c				   FPULL      SET	0
   4218  0e8c				   FPUSH      SET	1
      0  0e8c					      pwvar	_attack_wave_index
      1  0e8c				  -	      IF	!FPUSH
      2  0e8c				  -	      lda	_attack_wave_index
      3  0e8c				  -	      pha
      4  0e8c				  -	      lda	_attack_wave_index+1
      5  0e8c				  -	      pha
      6  0e8c					      ELSE
      7  0e8c		       ad 25 b6 	      lda	_attack_wave_index
      8  0e8f		       ac 26 b6 	      ldy	_attack_wave_index+1
      9  0e92					      ENDIF
   4220  0e92				   FPULL      SET	1
      0  0e92					      pbarray	_levels
      1  0e92				  -	      IF	!FPULL
      2  0e92				  -	      pla
      3  0e92				  -	      sta	R1
      4  0e92				  -	      pla
      5  0e92				  -	      sta	R0
      6  0e92					      ELSE
      7  0e92		       85 fb		      sta	R0
      8  0e94		       84 fc		      sty	R1
      9  0e96					      ENDIF
     10  0e96		       a9 70		      lda	#<_levels
     11  0e98		       18		      clc
     12  0e99		       65 fb		      adc	R0
     13  0e9b		       85 fb		      sta	R0
     14  0e9d		       a9 a3		      lda	#>_levels
     15  0e9f		       65 fc		      adc	R1
     16  0ea1		       85 fc		      sta	R1
     17  0ea3		       a0 00		      ldy	#$00
     18  0ea5		       b1 fb		      lda	(R0),y
     19  0ea7				  -	      IF	!FPUSH
     20  0ea7				  -	      pha
     21  0ea7					      ENDIF
   4222  0ea7				   FPUSH      SET	0
      0  0ea7					      plb2var	_no_of_waves
      1  0ea7				  -	      IF	!FPULL
      2  0ea7				  -	      pla
      3  0ea7					      ENDIF
      4  0ea7		       8d 27 b6 	      sta	_no_of_waves
      0  0eaa					      incw	_attack_wave_index
      1  0eaa		       ee 25 b6 	      inc	_attack_wave_index
      2  0ead		       d0 03		      bne	.skip
      3  0eaf		       ee 26 b6 	      inc	_attack_wave_index+1
      4  0eb2				   .skip
   4225  0eb2				   FPULL      SET	0
   4226  0eb2				   FPUSH      SET	1
      0  0eb2					      pwvar	_attack_wave_index
      1  0eb2				  -	      IF	!FPUSH
      2  0eb2				  -	      lda	_attack_wave_index
      3  0eb2				  -	      pha
      4  0eb2				  -	      lda	_attack_wave_index+1
      5  0eb2				  -	      pha
      6  0eb2					      ELSE
      7  0eb2		       ad 25 b6 	      lda	_attack_wave_index
      8  0eb5		       ac 26 b6 	      ldy	_attack_wave_index+1
      9  0eb8					      ENDIF
   4228  0eb8				   FPULL      SET	1
      0  0eb8					      pbarray	_levels
      1  0eb8				  -	      IF	!FPULL
      2  0eb8				  -	      pla
      3  0eb8				  -	      sta	R1
      4  0eb8				  -	      pla
      5  0eb8				  -	      sta	R0
      6  0eb8					      ELSE
      7  0eb8		       85 fb		      sta	R0
      8  0eba		       84 fc		      sty	R1
      9  0ebc					      ENDIF
     10  0ebc		       a9 70		      lda	#<_levels
     11  0ebe		       18		      clc
     12  0ebf		       65 fb		      adc	R0
     13  0ec1		       85 fb		      sta	R0
     14  0ec3		       a9 a3		      lda	#>_levels
     15  0ec5		       65 fc		      adc	R1
     16  0ec7		       85 fc		      sta	R1
     17  0ec9		       a0 00		      ldy	#$00
     18  0ecb		       b1 fb		      lda	(R0),y
     19  0ecd				  -	      IF	!FPUSH
     20  0ecd				  -	      pha
     21  0ecd					      ENDIF
   4230  0ecd				   FPUSH      SET	0
      0  0ecd					      plb2var	_ufo_count
      1  0ecd				  -	      IF	!FPULL
      2  0ecd				  -	      pla
      3  0ecd					      ENDIF
      4  0ecd		       8d 39 b6 	      sta	_ufo_count
      0  0ed0					      incw	_attack_wave_index
      1  0ed0		       ee 25 b6 	      inc	_attack_wave_index
      2  0ed3		       d0 03		      bne	.skip
      3  0ed5		       ee 26 b6 	      inc	_attack_wave_index+1
      4  0ed8				   .skip
   4233  0ed8				   _Llevel_loop
   4234  0ed8				   FPULL      SET	0
   4235  0ed8				   FPUSH      SET	1
      0  0ed8					      pword	#2560
      1  0ed8				  -	      IF	!FPUSH
      2  0ed8				  -	      lda	#<#2560
      3  0ed8				  -	      pha
      4  0ed8				  -	      lda	#>#2560
      5  0ed8				  -	      pha
      6  0ed8					      ELSE
      7  0ed8		       a9 00		      lda	#<#2560
      8  0eda		       a0 0a		      ldy	#>#2560
      9  0edc					      ENDIF
   4237  0edc				   FPULL      SET	1
   4238  0edc				   FPUSH      SET	0
      0  0edc					      plw2var	_aircraft_xpos
      1  0edc				  -	      IF	!FPULL
      2  0edc				  -	      pla
      3  0edc				  -	      sta	_aircraft_xpos+1
      4  0edc				  -	      pla
      5  0edc				  -	      sta	_aircraft_xpos
      6  0edc					      ELSE
      7  0edc		       8d 31 b5 	      sta	_aircraft_xpos
      8  0edf		       8c 32 b5 	      sty	_aircraft_xpos+1
      9  0ee2					      ENDIF
   4240  0ee2				   FPULL      SET	0
   4241  0ee2				   FPUSH      SET	1
      0  0ee2					      pword	#848
      1  0ee2				  -	      IF	!FPUSH
      2  0ee2				  -	      lda	#<#848
      3  0ee2				  -	      pha
      4  0ee2				  -	      lda	#>#848
      5  0ee2				  -	      pha
      6  0ee2					      ELSE
      7  0ee2		       a9 50		      lda	#<#848
      8  0ee4		       a0 03		      ldy	#>#848
      9  0ee6					      ENDIF
   4243  0ee6				   FPULL      SET	1
   4244  0ee6				   FPUSH      SET	0
      0  0ee6					      plw2var	_aircraft_altitude
      1  0ee6				  -	      IF	!FPULL
      2  0ee6				  -	      pla
      3  0ee6				  -	      sta	_aircraft_altitude+1
      4  0ee6				  -	      pla
      5  0ee6				  -	      sta	_aircraft_altitude
      6  0ee6					      ELSE
      7  0ee6		       8d 2f b5 	      sta	_aircraft_altitude
      8  0ee9		       8c 30 b5 	      sty	_aircraft_altitude+1
      9  0eec					      ENDIF
   4246  0eec				   FPULL      SET	0
   4247  0eec				   FPUSH      SET	1
      0  0eec					      pword	#19096
      1  0eec				  -	      IF	!FPUSH
      2  0eec				  -	      lda	#<#19096
      3  0eec				  -	      pha
      4  0eec				  -	      lda	#>#19096
      5  0eec				  -	      pha
      6  0eec					      ELSE
      7  0eec		       a9 98		      lda	#<#19096
      8  0eee		       a0 4a		      ldy	#>#19096
      9  0ef0					      ENDIF
   4249  0ef0				   FPULL      SET	1
   4250  0ef0				   FPUSH      SET	0
      0  0ef0					      plw2var	_city_map_ptr_right
      1  0ef0				  -	      IF	!FPULL
      2  0ef0				  -	      pla
      3  0ef0				  -	      sta	_city_map_ptr_right+1
      4  0ef0				  -	      pla
      5  0ef0				  -	      sta	_city_map_ptr_right
      6  0ef0					      ELSE
      7  0ef0		       85 04		      sta	_city_map_ptr_right
      8  0ef2		       84 05		      sty	_city_map_ptr_right+1
      9  0ef4					      ENDIF
   4252  0ef4				   FPULL      SET	0
   4253  0ef4				   FPUSH      SET	1
      0  0ef4					      pword	#18783
      1  0ef4				  -	      IF	!FPUSH
      2  0ef4				  -	      lda	#<#18783
      3  0ef4				  -	      pha
      4  0ef4				  -	      lda	#>#18783
      5  0ef4				  -	      pha
      6  0ef4					      ELSE
      7  0ef4		       a9 5f		      lda	#<#18783
      8  0ef6		       a0 49		      ldy	#>#18783
      9  0ef8					      ENDIF
   4255  0ef8				   FPULL      SET	1
   4256  0ef8				   FPUSH      SET	0
      0  0ef8					      plw2var	_city_map_ptr_left
      1  0ef8				  -	      IF	!FPULL
      2  0ef8				  -	      pla
      3  0ef8				  -	      sta	_city_map_ptr_left+1
      4  0ef8				  -	      pla
      5  0ef8				  -	      sta	_city_map_ptr_left
      6  0ef8					      ELSE
      7  0ef8		       85 02		      sta	_city_map_ptr_left
      8  0efa		       84 03		      sty	_city_map_ptr_left+1
      9  0efc					      ENDIF
   4258  0efc				   FPULL      SET	0
   4259  0efc				   FPUSH      SET	1
      0  0efc					      pbyte	#0
      1  0efc		       a9 00		      lda	#0
      2  0efe				  -	      IF	!FPUSH
      3  0efe				  -	      pha
      4  0efe					      ENDIF
   4261  0efe				   FPULL      SET	1
   4262  0efe				   FPUSH      SET	0
      0  0efe					      plb2var	_setup_screen.draw_title
      1  0efe				  -	      IF	!FPULL
      2  0efe				  -	      pla
      3  0efe					      ENDIF
      4  0efe		       8d 5a b6 	      sta	_setup_screen.draw_title
   4264  0f01		       20 0e 86 	      jsr	_Psetup_screen
   4265  0f04		       20 de 77 	      jsr	_Pupdate_scoretable
      0  0f07					      pbyte_pbyte_cmpbeq_cond	_level_done, #1, _EI_64, _EL_64
      1  0f07
      2  0f07
      3  0f07		       ad 3c b6 	      lda	_level_done
      4  0f0a		       c9 01		      cmp	#1
      5  0f0c		       f0 03		      beq	*+5
      6  0f0e				  -	      IFCONST	_EL_64
      7  0f0e				  -	      jmp	_EL_64
      8  0f0e					      ELSE
      9  0f0e		       4c 14 10 	      jmp	_EI_64
     10  0f11					      ENDIF
   4267  0f11				   FPULL      SET	0
      0  0f11					      paddr	_S12
      0  0f11					      pword	_S12
      1  0f11					      IF	!FPUSH
      2  0f11		       a9 82		      lda	#<_S12
      3  0f13		       48		      pha
      4  0f14		       a9 ae		      lda	#>_S12
      5  0f16		       48		      pha
      6  0f17				  -	      ELSE
      7  0f17				  -	      lda	#<_S12
      8  0f17				  -	      ldy	#>_S12
      9  0f17					      ENDIF
      0  0f17					      pbyte	#12
      1  0f17		       a9 0c		      lda	#12
      2  0f19					      IF	!FPUSH
      3  0f19		       48		      pha
      4  0f1a					      ENDIF
      0  0f1a					      btow
      1  0f1a		       a9 00		      lda	#$00
      2  0f1c		       48		      pha
   4271  0f1c				   FPUSH      SET	1
      0  0f1d					      pword	#40
      1  0f1d				  -	      IF	!FPUSH
      2  0f1d				  -	      lda	#<#40
      3  0f1d				  -	      pha
      4  0f1d				  -	      lda	#>#40
      5  0f1d				  -	      pha
      6  0f1d					      ELSE
      7  0f1d		       a9 28		      lda	#<#40
      8  0f1f		       a0 00		      ldy	#>#40
      9  0f21					      ENDIF
   4273  0f21				   FPULL      SET	1
   4274  0f21				   FPUSH      SET	0
      0  0f21					      mulw
      1  0f21				  -	      IF	!FPULL
      2  0f21				  -	      pla
      3  0f21				  -	      sta	R1
      4  0f21				  -	      pla
      5  0f21				  -	      sta	R0
      6  0f21					      ELSE
      7  0f21		       85 fb		      sta	R0
      8  0f23		       84 fc		      sty	R1
      9  0f25					      ENDIF
     10  0f25		       68		      pla
     11  0f26		       85 fe		      sta	R3
     12  0f28		       68		      pla
     13  0f29		       85 fd		      sta	R2
     14  0f2b		       20 0d 08 	      jsr	NUCL_SMUL16
     15  0f2e					      IF	!FPUSH
     16  0f2e		       a5 fb		      lda	R0
     17  0f30		       48		      pha
     18  0f31		       a5 fc		      lda	R1
     19  0f33		       48		      pha
     20  0f34				  -	      ELSE
     21  0f34				  -	      lda	R0
     22  0f34				  -	      ldy	R1
     23  0f34					      ENDIF
   4276  0f34				   FPULL      SET	0
      0  0f34					      pbyte	#14
      1  0f34		       a9 0e		      lda	#14
      2  0f36					      IF	!FPUSH
      3  0f36		       48		      pha
      4  0f37					      ENDIF
      0  0f37					      btow
      1  0f37		       a9 00		      lda	#$00
      2  0f39		       48		      pha
      0  0f3a					      addw
      1  0f3a		       ba		      tsx
      2  0f3b		       bd 02 01 	      lda.wx	stack+2
      3  0f3e		       18		      clc
      4  0f3f		       7d 04 01 	      adc.wx	stack+4
      5  0f42		       9d 04 01 	      sta.wx	stack+4
      6  0f45		       68		      pla
      7  0f46		       7d 03 01 	      adc.wx	stack+3
      8  0f49		       9d 03 01 	      sta.wx	stack+3
      9  0f4c		       68		      pla
      0  0f4d					      pword	#1024
      1  0f4d					      IF	!FPUSH
      2  0f4d		       a9 00		      lda	#<#1024
      3  0f4f		       48		      pha
      4  0f50		       a9 04		      lda	#>#1024
      5  0f52		       48		      pha
      6  0f53				  -	      ELSE
      7  0f53				  -	      lda	#<#1024
      8  0f53				  -	      ldy	#>#1024
      9  0f53					      ENDIF
      0  0f53					      addw
      1  0f53		       ba		      tsx
      2  0f54		       bd 02 01 	      lda.wx	stack+2
      3  0f57		       18		      clc
      4  0f58		       7d 04 01 	      adc.wx	stack+4
      5  0f5b		       9d 04 01 	      sta.wx	stack+4
      6  0f5e		       68		      pla
      7  0f5f		       7d 03 01 	      adc.wx	stack+3
      8  0f62		       9d 03 01 	      sta.wx	stack+3
      9  0f65		       68		      pla
      0  0f66					      textat
      1  0f66					      IF	!FPULL
      2  0f66		       68		      pla
      3  0f67		       85 fe		      sta	R3
      4  0f69		       68		      pla
      5  0f6a		       85 fd		      sta	R2
      6  0f6c				  -	      ELSE
      7  0f6c				  -	      sta	R2
      8  0f6c				  -	      sty	R3
      9  0f6c					      ENDIF
     10  0f6c		       68		      pla
     11  0f6d		       85 fc		      sta	R1
     12  0f6f		       68		      pla
     13  0f70		       85 fb		      sta	R0
     14  0f72		       a0 00		      ldy	#$00
     15  0f74				   .loop
     16  0f74		       b1 fb		      lda	(R0),y
     17  0f76		       f0 06		      beq	.end
     18  0f78		       91 fd		      sta	(R2),y
     19  0f7a		       c8		      iny
     20  0f7b		       4c 74 0f 	      jmp	.loop
     21  0f7e				   .end
      0  0f7e					      pbyte	#12
      1  0f7e		       a9 0c		      lda	#12
      2  0f80					      IF	!FPUSH
      3  0f80		       48		      pha
      4  0f81					      ENDIF
      0  0f81					      btow
      1  0f81		       a9 00		      lda	#$00
      2  0f83		       48		      pha
   4285  0f83				   FPUSH      SET	1
      0  0f84					      pword	#40
      1  0f84				  -	      IF	!FPUSH
      2  0f84				  -	      lda	#<#40
      3  0f84				  -	      pha
      4  0f84				  -	      lda	#>#40
      5  0f84				  -	      pha
      6  0f84					      ELSE
      7  0f84		       a9 28		      lda	#<#40
      8  0f86		       a0 00		      ldy	#>#40
      9  0f88					      ENDIF
   4287  0f88				   FPULL      SET	1
   4288  0f88				   FPUSH      SET	0
      0  0f88					      mulw
      1  0f88				  -	      IF	!FPULL
      2  0f88				  -	      pla
      3  0f88				  -	      sta	R1
      4  0f88				  -	      pla
      5  0f88				  -	      sta	R0
      6  0f88					      ELSE
      7  0f88		       85 fb		      sta	R0
      8  0f8a		       84 fc		      sty	R1
      9  0f8c					      ENDIF
     10  0f8c		       68		      pla
     11  0f8d		       85 fe		      sta	R3
     12  0f8f		       68		      pla
     13  0f90		       85 fd		      sta	R2
     14  0f92		       20 0d 08 	      jsr	NUCL_SMUL16
     15  0f95					      IF	!FPUSH
     16  0f95		       a5 fb		      lda	R0
     17  0f97		       48		      pha
     18  0f98		       a5 fc		      lda	R1
     19  0f9a		       48		      pha
     20  0f9b				  -	      ELSE
     21  0f9b				  -	      lda	R0
     22  0f9b				  -	      ldy	R1
     23  0f9b					      ENDIF
   4290  0f9b				   FPULL      SET	0
      0  0f9b					      pbyte	#25
      1  0f9b		       a9 19		      lda	#25
      2  0f9d					      IF	!FPUSH
      3  0f9d		       48		      pha
      4  0f9e					      ENDIF
      0  0f9e					      btow
      1  0f9e		       a9 00		      lda	#$00
      2  0fa0		       48		      pha
      0  0fa1					      addw
      1  0fa1		       ba		      tsx
      2  0fa2		       bd 02 01 	      lda.wx	stack+2
      3  0fa5		       18		      clc
      4  0fa6		       7d 04 01 	      adc.wx	stack+4
      5  0fa9		       9d 04 01 	      sta.wx	stack+4
      6  0fac		       68		      pla
      7  0fad		       7d 03 01 	      adc.wx	stack+3
      8  0fb0		       9d 03 01 	      sta.wx	stack+3
      9  0fb3		       68		      pla
      0  0fb4					      pword	#1024
      1  0fb4					      IF	!FPUSH
      2  0fb4		       a9 00		      lda	#<#1024
      3  0fb6		       48		      pha
      4  0fb7		       a9 04		      lda	#>#1024
      5  0fb9		       48		      pha
      6  0fba				  -	      ELSE
      7  0fba				  -	      lda	#<#1024
      8  0fba				  -	      ldy	#>#1024
      9  0fba					      ENDIF
      0  0fba					      addw
      1  0fba		       ba		      tsx
      2  0fbb		       bd 02 01 	      lda.wx	stack+2
      3  0fbe		       18		      clc
      4  0fbf		       7d 04 01 	      adc.wx	stack+4
      5  0fc2		       9d 04 01 	      sta.wx	stack+4
      6  0fc5		       68		      pla
      7  0fc6		       7d 03 01 	      adc.wx	stack+3
      8  0fc9		       9d 03 01 	      sta.wx	stack+3
      9  0fcc		       68		      pla
   4296  0fcc				   FPUSH      SET	1
      0  0fcd					      pbvar	_wave
      0  0fcd					      pbyte	_wave
      1  0fcd		       ad 3d b6 	      lda	_wave
      2  0fd0				  -	      IF	!FPUSH
      3  0fd0				  -	      pha
      4  0fd0					      ENDIF
   4298  0fd0
   4299  0fd0				   FPULL      SET	1
   4300  0fd0				   FPUSH      SET	0
      0  0fd0					      bat
      1  0fd0				  -	      IF	!FPULL
      2  0fd0				  -	      pla
      3  0fd0					      ENDIF
      4  0fd0		       aa		      tax
      5  0fd1		       68		      pla
      6  0fd2		       85 46		      sta	RB
      7  0fd4		       68		      pla
      8  0fd5		       85 45		      sta	RA
      9  0fd7		       8a		      txa
     10  0fd8		       20 6d 0a 	      jsr	STDLIB_OUTPUT_BYTE
   4302  0fd8				   FPULL      SET	0
   4303  0fd8				   FPUSH      SET	1
      0  0fdb					      pbvar	_fleet
      0  0fdb					      pbyte	_fleet
      1  0fdb		       ad 37 b6 	      lda	_fleet
      2  0fde				  -	      IF	!FPUSH
      3  0fde				  -	      pha
      4  0fde					      ENDIF
   4305  0fde				   FPULL      SET	1
   4306  0fde				   FPUSH      SET	0
      0  0fde					      plb2var	_fleet_at_start
      1  0fde				  -	      IF	!FPULL
      2  0fde				  -	      pla
      3  0fde					      ENDIF
      4  0fde		       8d 38 b6 	      sta	_fleet_at_start
   4308  0fde				   FPULL      SET	0
   4309  0fde				   FPUSH      SET	1
      0  0fe1					      pbyte	#0
      1  0fe1		       a9 00		      lda	#0
      2  0fe3				  -	      IF	!FPUSH
      3  0fe3				  -	      pha
      4  0fe3					      ENDIF
   4311  0fe3				   FPULL      SET	1
   4312  0fe3				   FPUSH      SET	0
      0  0fe3					      plb2var	_j
      1  0fe3				  -	      IF	!FPULL
      2  0fe3				  -	      pla
      3  0fe3					      ENDIF
      4  0fe3		       8d 92 b6 	      sta	_j
   4314  0fe3				   FPULL      SET	0
   4315  0fe3				   FPUSH      SET	1
      0  0fe6					      pbyte	#3
      1  0fe6		       a9 03		      lda	#3
      2  0fe8				  -	      IF	!FPUSH
      3  0fe8				  -	      pha
      4  0fe8					      ENDIF
   4317  0fe8				   FPULL      SET	1
   4318  0fe8				   FPUSH      SET	0
      0  0fe8					      plb2var	XFOR_max_18
      1  0fe8				  -	      IF	!FPULL
      2  0fe8				  -	      pla
      3  0fe8					      ENDIF
      4  0fe8		       8d 93 b6 	      sta	XFOR_max_18
   4320  0feb				   _FOR_18
      0  0feb					      forb	18, _j
      1  0feb
      2  0feb		       ad 93 b6 	      lda	XFOR_max_18
      3  0fee		       cd 92 b6 	      cmp	_j
      4  0ff1		       b0 03		      bcs	.enter
      5  0ff3
      6  0ff3		       4c 14 10 	      jmp	_ENDFOR_18
      7  0ff6				   .enter
   4322  0ff6				   FPULL      SET	0
      0  0ff6					      pbyte	#0
      1  0ff6		       a9 00		      lda	#0
      2  0ff8					      IF	!FPUSH
      3  0ff8		       48		      pha
      4  0ff9					      ENDIF
   4324  0ff9				   FPUSH      SET	1
      0  0ff9					      pbvar	_j
      0  0ff9					      pbyte	_j
      1  0ff9		       ad 92 b6 	      lda	_j
      2  0ffc				  -	      IF	!FPUSH
      3  0ffc				  -	      pha
      4  0ffc					      ENDIF
   4326  0ffc				   FPULL      SET	1
   4327  0ffc				   FPUSH      SET	0
      0  0ffc					      plbarray_fast	_ufo_on
      1  0ffc				  -	      IF	!FPULL
      2  0ffc				  -	      pla
      3  0ffc					      ENDIF
      4  0ffc		       aa		      tax
      5  0ffd		       68		      pla
      6  0ffe		       9d 48 b5 	      sta	_ufo_on,x
   4329  0ffe				   FPULL      SET	0
      0  1001					      pbyte	#0
      1  1001		       a9 00		      lda	#0
      2  1003					      IF	!FPUSH
      3  1003		       48		      pha
      4  1004					      ENDIF
   4331  1004				   FPUSH      SET	1
      0  1004					      pbvar	_j
      0  1004					      pbyte	_j
      1  1004		       ad 92 b6 	      lda	_j
      2  1007				  -	      IF	!FPUSH
      3  1007				  -	      pha
      4  1007					      ENDIF
   4333  1007				   FPULL      SET	1
   4334  1007				   FPUSH      SET	0
      0  1007					      plbarray_fast	_ufo_hit
      1  1007				  -	      IF	!FPULL
      2  1007				  -	      pla
      3  1007					      ENDIF
      4  1007		       aa		      tax
      5  1008		       68		      pla
      6  1009		       9d 4c b5 	      sta	_ufo_hit,x
      0  100c					      nextb	18, _j
      1  100c
      2  100c				  -	      IFCONST	XFOR_step_18
      3  100c				  -
      4  100c				  -	      clc
      5  100c				  -	      lda	XFOR_step_18
      6  100c				  -	      adc	_j
      7  100c				  -	      sta	_j
      8  100c				  -
      9  100c				  -	      bcs	_ENDFOR_18
     10  100c					      ELSE
     11  100c
     12  100c		       ee 92 b6 	      inc	_j
     13  100f
     14  100f		       f0 03		      beq	_ENDFOR_18
     15  1011					      ENDIF
     16  1011		       4c eb 0f 	      jmp	_FOR_18
   4337  1014				   _ENDFOR_18
   4338  1014
   4339  1014
   4340  1014
   4341  1014
   4342  1014
   4343  1014
   4344  1014
   4345  1014				   _EI_64
   4346  1014				   FPULL      SET	0
   4347  1014				   FPUSH      SET	1
      0  1014					      pbyte	#0
      1  1014		       a9 00		      lda	#0
      2  1016				  -	      IF	!FPUSH
      3  1016				  -	      pha
      4  1016					      ENDIF
   4349  1016				   FPULL      SET	1
   4350  1016				   FPUSH      SET	0
      0  1016					      plb2var	_level_done
      1  1016				  -	      IF	!FPULL
      2  1016				  -	      pla
      3  1016					      ENDIF
      4  1016		       8d 3c b6 	      sta	_level_done
   4352  1016				   FPULL      SET	0
   4353  1016				   FPUSH      SET	1
      0  1019					      pbyte	#0
      1  1019		       a9 00		      lda	#0
      2  101b				  -	      IF	!FPUSH
      3  101b				  -	      pha
      4  101b					      ENDIF
   4355  101b				   FPULL      SET	1
   4356  101b				   FPUSH      SET	0
      0  101b					      plb2var	_fuel
      1  101b				  -	      IF	!FPULL
      2  101b				  -	      pla
      3  101b					      ENDIF
      4  101b		       8d 36 b6 	      sta	_fuel
   4358  101b				   FPULL      SET	0
   4359  101b				   FPUSH      SET	1
      0  101e					      pbyte	#1
      1  101e		       a9 01		      lda	#1
      2  1020				  -	      IF	!FPUSH
      3  1020				  -	      pha
      4  1020					      ENDIF
   4361  1020				   FPULL      SET	1
   4362  1020				   FPUSH      SET	0
      0  1020					      plb2var	_aircraft_mode
      1  1020				  -	      IF	!FPULL
      2  1020				  -	      pla
      3  1020					      ENDIF
      4  1020		       8d 35 b6 	      sta	_aircraft_mode
   4364  1020				   FPULL      SET	0
   4365  1020				   FPUSH      SET	1
      0  1023					      pbyte	#0
      1  1023		       a9 00		      lda	#0
      2  1025				  -	      IF	!FPUSH
      3  1025				  -	      pha
      4  1025					      ENDIF
   4367  1025				   FPULL      SET	1
   4368  1025				   FPUSH      SET	0
      0  1025					      plb2var	_speed
      1  1025				  -	      IF	!FPULL
      2  1025				  -	      pla
      3  1025					      ENDIF
      4  1025		       8d 23 b5 	      sta	_speed
   4370  1025				   FPULL      SET	0
   4371  1025				   FPUSH      SET	1
      0  1028					      pbyte	#1
      1  1028		       a9 01		      lda	#1
      2  102a				  -	      IF	!FPUSH
      3  102a				  -	      pha
      4  102a					      ENDIF
   4373  102a				   FPULL      SET	1
   4374  102a				   FPUSH      SET	0
      0  102a					      plb2var	_dir
      1  102a				  -	      IF	!FPULL
      2  102a				  -	      pla
      3  102a					      ENDIF
      4  102a		       8d 24 b5 	      sta	_dir
   4376  102a				   FPULL      SET	0
   4377  102a				   FPUSH      SET	1
      0  102d					      pbyte	#0
      1  102d		       a9 00		      lda	#0
      2  102f				  -	      IF	!FPUSH
      3  102f				  -	      pha
      4  102f					      ENDIF
   4379  102f				   FPULL      SET	1
   4380  102f				   FPUSH      SET	0
      0  102f					      plb2var	_lifting
      1  102f				  -	      IF	!FPULL
      2  102f				  -	      pla
      3  102f					      ENDIF
      4  102f		       8d 2c b5 	      sta	_lifting
   4382  102f				   FPULL      SET	0
   4383  102f				   FPUSH      SET	1
      0  1032					      pbyte	#0
      1  1032		       a9 00		      lda	#0
      2  1034				  -	      IF	!FPUSH
      3  1034				  -	      pha
      4  1034					      ENDIF
   4385  1034				   FPULL      SET	1
   4386  1034				   FPUSH      SET	0
      0  1034					      plb2var	_frame_count
      1  1034				  -	      IF	!FPULL
      2  1034				  -	      pla
      3  1034					      ENDIF
      4  1034		       8d 25 b5 	      sta	_frame_count
   4388  1034				   FPULL      SET	0
   4389  1034				   FPUSH      SET	1
      0  1037					      pbyte	#0
      1  1037		       a9 00		      lda	#0
      2  1039				  -	      IF	!FPUSH
      3  1039				  -	      pha
      4  1039					      ENDIF
   4391  1039				   FPULL      SET	1
   4392  1039				   FPUSH      SET	0
      0  1039					      plb2var	_scroll
      1  1039				  -	      IF	!FPULL
      2  1039				  -	      pla
      3  1039					      ENDIF
      4  1039		       8d 26 b5 	      sta	_scroll
   4394  1039				   FPULL      SET	0
   4395  1039				   FPUSH      SET	1
      0  103c					      pbyte	#0
      1  103c		       a9 00		      lda	#0
      2  103e				  -	      IF	!FPUSH
      3  103e				  -	      pha
      4  103e					      ENDIF
   4397  103e				   FPULL      SET	1
   4398  103e				   FPUSH      SET	0
      0  103e					      plb2var	_turning
      1  103e				  -	      IF	!FPULL
      2  103e				  -	      pla
      3  103e					      ENDIF
      4  103e		       8d 2b b5 	      sta	_turning
   4400  103e				   FPULL      SET	0
   4401  103e				   FPUSH      SET	1
      0  1041					      pbyte	#0
      1  1041		       a9 00		      lda	#0
      2  1043				  -	      IF	!FPUSH
      3  1043				  -	      pha
      4  1043					      ENDIF
   4403  1043				   FPULL      SET	1
   4404  1043				   FPUSH      SET	0
      0  1043					      plb2var	_turn_phase
      1  1043				  -	      IF	!FPULL
      2  1043				  -	      pla
      3  1043					      ENDIF
      4  1043		       8d 2d b5 	      sta	_turn_phase
   4406  1043				   FPULL      SET	0
   4407  1043				   FPUSH      SET	1
      0  1046					      pbyte	#0
      1  1046		       a9 00		      lda	#0
      2  1048				  -	      IF	!FPUSH
      3  1048				  -	      pha
      4  1048					      ENDIF
   4409  1048				   FPULL      SET	1
   4410  1048				   FPUSH      SET	0
      0  1048					      plb2var	_turn_phase_count
      1  1048				  -	      IF	!FPULL
      2  1048				  -	      pla
      3  1048					      ENDIF
      4  1048		       8d 2e b5 	      sta	_turn_phase_count
   4412  1048				   FPULL      SET	0
   4413  1048				   FPUSH      SET	1
      0  104b					      pbyte	#129
      1  104b		       a9 81		      lda	#129
      2  104d				  -	      IF	!FPUSH
      3  104d				  -	      pha
      4  104d					      ENDIF
   4415  104d				   FPULL      SET	1
   4416  104d				   FPUSH      SET	0
      0  104d					      pokeb_const_addr	#54290
      1  104d
      2  104d
      3  104d
      4  104d		       d4 12	   .ad	      EQU	#54290
      5  104d				  -	      IF	!FPULL
      6  104d				  -	      pla
      7  104d					      ENDIF
      8  104d		       8d 12 d4 	      sta	.ad
   4418  104d				   FPULL      SET	0
   4419  104d				   FPUSH      SET	1
      0  1050					      pbyte	#1
      1  1050		       a9 01		      lda	#1
      2  1052				  -	      IF	!FPUSH
      3  1052				  -	      pha
      4  1052					      ENDIF
   4421  1052				   FPULL      SET	1
   4422  1052				   FPUSH      SET	0
      0  1052					      plb2var	_sfx_start.effect_no
      1  1052				  -	      IF	!FPULL
      2  1052				  -	      pla
      3  1052					      ENDIF
      4  1052		       8d 21 b5 	      sta	_sfx_start.effect_no
   4424  1055		       20 48 75 	      jsr	_Psfx_start
   4425  1055				   FPULL      SET	0
   4426  1055				   FPUSH      SET	1
      0  1058					      pbyte	#0
      1  1058		       a9 00		      lda	#0
      2  105a				  -	      IF	!FPUSH
      3  105a				  -	      pha
      4  105a					      ENDIF
   4428  105a				   FPULL      SET	1
   4429  105a				   FPUSH      SET	0
      0  105a					      plb2var	_ntsc_frames
      1  105a				  -	      IF	!FPULL
      2  105a				  -	      pla
      3  105a					      ENDIF
      4  105a		       8d f9 b4 	      sta	_ntsc_frames
   4431  105d				   _Lmain_loop
   4432  105d				   FPULL      SET	0
   4433  105d				   FPUSH      SET	1
      0  105d					      pbyte	#230
      1  105d		       a9 e6		      lda	#230
      2  105f				  -	      IF	!FPUSH
      3  105f				  -	      pha
      4  105f					      ENDIF
   4435  105f				   FPULL      SET	1
   4436  105f				   FPUSH      SET	0
      0  105f					      watchc	53266
      1  105f				  -	      IF	!FPULL
      2  105f				  -	      pla
      3  105f					      ENDIF
      4  105f				   .again
      5  105f		       cd 12 d0 	      cmp	53266
      6  1062		       d0 fb		      bne	.again
      0  1064					      pbyte_pbyte_cmpbeq_cond	_ntsc_pal, #0, _EI_65, _EL_65
      1  1064
      2  1064
      3  1064		       ad f4 b4 	      lda	_ntsc_pal
      4  1067		       c9 00		      cmp	#0
      5  1069		       f0 03		      beq	*+5
      6  106b				  -	      IFCONST	_EL_65
      7  106b				  -	      jmp	_EL_65
      8  106b					      ELSE
      9  106b		       4c 8a 10 	      jmp	_EI_65
     10  106e					      ENDIF
      0  106e					      incb	_ntsc_frames
      1  106e		       ee f9 b4 	      inc	_ntsc_frames
      0  1071					      pbyte_pbyte_cmpbeq_cond	_ntsc_frames, #6, _EI_65573, _EL_65573
      1  1071
      2  1071
      3  1071		       ad f9 b4 	      lda	_ntsc_frames
      4  1074		       c9 06		      cmp	#6
      5  1076		       f0 03		      beq	*+5
      6  1078				  -	      IFCONST	_EL_65573
      7  1078				  -	      jmp	_EL_65573
      8  1078					      ELSE
      9  1078		       4c 8a 10 	      jmp	_EI_65573
     10  107b					      ENDIF
   4441  107b				   FPULL      SET	0
   4442  107b				   FPUSH      SET	1
      0  107b					      pbyte	#0
      1  107b		       a9 00		      lda	#0
      2  107d				  -	      IF	!FPUSH
      3  107d				  -	      pha
      4  107d					      ENDIF
   4444  107d				   FPULL      SET	1
   4445  107d				   FPUSH      SET	0
      0  107d					      plb2var	_ntsc_frames
      1  107d				  -	      IF	!FPULL
      2  107d				  -	      pla
      3  107d					      ENDIF
      4  107d		       8d f9 b4 	      sta	_ntsc_frames
   4447  107d				   FPULL      SET	0
   4448  107d				   FPUSH      SET	1
      0  1080					      pbyte	#220
      1  1080		       a9 dc		      lda	#220
      2  1082				  -	      IF	!FPUSH
      3  1082				  -	      pha
      4  1082					      ENDIF
   4450  1082				   FPULL      SET	1
   4451  1082				   FPUSH      SET	0
      0  1082					      watchc	53266
      1  1082				  -	      IF	!FPULL
      2  1082				  -	      pla
      3  1082					      ENDIF
      4  1082				   .again
      5  1082		       cd 12 d0 	      cmp	53266
      6  1085		       d0 fb		      bne	.again
   4453  1087		       4c 5d 10 	      jmp	_Lmain_loop
   4454  108a				   _EI_65573
   4455  108a
   4456  108a
   4457  108a
   4458  108a
   4459  108a
   4460  108a
   4461  108a
   4462  108a				   _EI_65
   4463  108a		       20 9f 81 	      jsr	_Pquery_joystick
   4464  108d		       20 6e 8a 	      jsr	_Pupdate_radar
   4465  108d				   FPULL      SET	0
   4466  108d				   FPUSH      SET	1
      0  1090					      pbvar	_speed
      0  1090					      pbyte	_speed
      1  1090		       ad 23 b5 	      lda	_speed
      2  1093				  -	      IF	!FPUSH
      3  1093				  -	      pha
      4  1093					      ENDIF
   4468  1093				   FPULL      SET	1
      0  1093					      rshiftbc	4
      1  1093				  -	      IF	!FPULL
      2  1093				  -	      pla
      3  1093					      ENDIF
      4  1093					      REPEAT	4
      5  1093		       4a		      lsr
      4  1093					      REPEND
      5  1094		       4a		      lsr
      4  1094					      REPEND
      5  1095		       4a		      lsr
      4  1095					      REPEND
      5  1096		       4a		      lsr
      6  1097					      REPEND
      7  1097				  -	      IF	!FPUSH
      8  1097				  -	      pha
      9  1097					      ENDIF
   4470  1097				   FPUSH      SET	0
      0  1097					      plb2var	_microspeed
      1  1097				  -	      IF	!FPULL
      2  1097				  -	      pla
      3  1097					      ENDIF
      4  1097		       8d 3e b6 	      sta	_microspeed
      0  109a					      pbyte_pbyte_cmpbeq_cond	_dir, #0, _EI_66, _EL_66
      1  109a
      2  109a
      3  109a		       ad 24 b5 	      lda	_dir
      4  109d		       c9 00		      cmp	#0
      5  109f		       f0 03		      beq	*+5
      6  10a1					      IFCONST	_EL_66
      7  10a1		       4c 59 11 	      jmp	_EL_66
      8  10a4				  -	      ELSE
      9  10a4				  -	      jmp	_EI_66
     10  10a4					      ENDIF
   4473  10a4				   FPULL      SET	0
   4474  10a4				   FPUSH      SET	1
      0  10a4					      opt_pbyte_pbyte_add	_scroll, _microspeed
      1  10a4
      2  10a4
      3  10a4
      4  10a4
      5  10a4
      6  10a4		       ad 26 b5 	      lda	_scroll
      7  10a7		       18		      clc
      8  10a8		       6d 3e b6 	      adc	_microspeed
      9  10ab				  -	      IF	!FPUSH
     10  10ab				  -	      pha
     11  10ab					      ENDIF
   4476  10ab				   FPULL      SET	1
   4477  10ab				   FPUSH      SET	0
      0  10ab					      plb2var	_scroll
      1  10ab				  -	      IF	!FPULL
      2  10ab				  -	      pla
      3  10ab					      ENDIF
      4  10ab		       8d 26 b5 	      sta	_scroll
   4479  10ab				   FPULL      SET	0
      0  10ae					      pwvar	_aircraft_xpos
      1  10ae					      IF	!FPUSH
      2  10ae		       ad 31 b5 	      lda	_aircraft_xpos
      3  10b1		       48		      pha
      4  10b2		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  10b5		       48		      pha
      6  10b6				  -	      ELSE
      7  10b6				  -	      lda	_aircraft_xpos
      8  10b6				  -	      ldy	_aircraft_xpos+1
      9  10b6					      ENDIF
      0  10b6					      pbvar	_microspeed
      0  10b6					      pbyte	_microspeed
      1  10b6		       ad 3e b6 	      lda	_microspeed
      2  10b9					      IF	!FPUSH
      3  10b9		       48		      pha
      4  10ba					      ENDIF
      0  10ba					      btow
      1  10ba		       a9 00		      lda	#$00
      2  10bc		       48		      pha
      0  10bd					      subw
      1  10bd		       ba		      tsx
      2  10be		       bd 04 01 	      lda.wx	stack+4
      3  10c1		       38		      sec
      4  10c2		       fd 02 01 	      sbc.wx	stack+2
      5  10c5		       9d 04 01 	      sta.wx	stack+4
      6  10c8		       bd 03 01 	      lda.wx	stack+3
      7  10cb		       fd 01 01 	      sbc.wx	stack+1
      8  10ce		       9d 03 01 	      sta.wx	stack+3
      9  10d1		       e8		      inx
     10  10d2		       e8		      inx
     11  10d3		       9a		      txs
      0  10d4					      plw2var	_aircraft_xpos
      1  10d4					      IF	!FPULL
      2  10d4		       68		      pla
      3  10d5		       8d 32 b5 	      sta	_aircraft_xpos+1
      4  10d8		       68		      pla
      5  10d9		       8d 31 b5 	      sta	_aircraft_xpos
      6  10dc				  -	      ELSE
      7  10dc				  -	      sta	_aircraft_xpos
      8  10dc				  -	      sty	_aircraft_xpos+1
      9  10dc					      ENDIF
      0  10dc					      pwvar	_aircraft_xpos
      1  10dc					      IF	!FPUSH
      2  10dc		       ad 31 b5 	      lda	_aircraft_xpos
      3  10df		       48		      pha
      4  10e0		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  10e3		       48		      pha
      6  10e4				  -	      ELSE
      7  10e4				  -	      lda	_aircraft_xpos
      8  10e4				  -	      ldy	_aircraft_xpos+1
      9  10e4					      ENDIF
      0  10e4					      pbyte	#0
      1  10e4		       a9 00		      lda	#0
      2  10e6					      IF	!FPUSH
      3  10e6		       48		      pha
      4  10e7					      ENDIF
      0  10e7					      btow
      1  10e7		       a9 00		      lda	#$00
      2  10e9		       48		      pha
   4488  10e9				   FPUSH      SET	1
      0  10ea					      cmpwlt
      1  10ea		       ba		      tsx
      2  10eb		       bd 04 01 	      lda.wx	stack+4
      3  10ee		       dd 02 01 	      cmp.wx	stack+2
      4  10f1		       bd 03 01 	      lda.wx	stack+3
      5  10f4		       fd 01 01 	      sbc.wx	stack+1
      6  10f7		       10 0a		      bpl	.phf
      7  10f9		       e8		      inx
      8  10fa		       e8		      inx
      9  10fb		       e8		      inx
     10  10fc		       e8		      inx
     11  10fd		       9a		      txs
      0  10fe					      pone
      1  10fe		       a9 01		      lda	#$01
      2  1100				  -	      IF	!FPUSH
      3  1100				  -	      pha
      4  1100					      ENDIF
     13  1100				  -	      IF	!FPUSH
     14  1100				  -	      jmp	*+11
     15  1100					      ELSE
     16  1100		       4c 0a 11 	      jmp	*+10
     17  1103					      ENDIF
     18  1103		       e8	   .phf       inx
     19  1104		       e8		      inx
     20  1105		       e8		      inx
     21  1106		       e8		      inx
     22  1107		       9a		      txs
      0  1108					      pzero
      1  1108		       a9 00		      lda	#$00
      2  110a				  -	      IF	!FPUSH
      3  110a				  -	      pha
      4  110a					      ENDIF
   4490  110a				   FPULL      SET	1
   4491  110a				   FPUSH      SET	0
      0  110a					      cond_stmt	_EI_65574, _EL_65574
      1  110a				  -	      IF	!FPULL
      2  110a				  -	      pla
      3  110a					      ENDIF
      4  110a		       d0 03		      bne	*+5
      5  110c				  -	      IFCONST	_EL_65574
      6  110c				  -	      jmp	_EL_65574
      7  110c					      ELSE
      8  110c		       4c 38 11 	      jmp	_EI_65574
      9  110f					      ENDIF
   4493  110f				   FPULL      SET	0
      0  110f					      pwvar	_aircraft_xpos
      1  110f					      IF	!FPUSH
      2  110f		       ad 31 b5 	      lda	_aircraft_xpos
      3  1112		       48		      pha
      4  1113		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  1116		       48		      pha
      6  1117				  -	      ELSE
      7  1117				  -	      lda	_aircraft_xpos
      8  1117				  -	      ldy	_aircraft_xpos+1
      9  1117					      ENDIF
      0  1117					      pword	#5120
      1  1117					      IF	!FPUSH
      2  1117		       a9 00		      lda	#<#5120
      3  1119		       48		      pha
      4  111a		       a9 14		      lda	#>#5120
      5  111c		       48		      pha
      6  111d				  -	      ELSE
      7  111d				  -	      lda	#<#5120
      8  111d				  -	      ldy	#>#5120
      9  111d					      ENDIF
      0  111d					      addw
      1  111d		       ba		      tsx
      2  111e		       bd 02 01 	      lda.wx	stack+2
      3  1121		       18		      clc
      4  1122		       7d 04 01 	      adc.wx	stack+4
      5  1125		       9d 04 01 	      sta.wx	stack+4
      6  1128		       68		      pla
      7  1129		       7d 03 01 	      adc.wx	stack+3
      8  112c		       9d 03 01 	      sta.wx	stack+3
      9  112f		       68		      pla
      0  1130					      plw2var	_aircraft_xpos
      1  1130					      IF	!FPULL
      2  1130		       68		      pla
      3  1131		       8d 32 b5 	      sta	_aircraft_xpos+1
      4  1134		       68		      pla
      5  1135		       8d 31 b5 	      sta	_aircraft_xpos
      6  1138				  -	      ELSE
      7  1138				  -	      sta	_aircraft_xpos
      8  1138				  -	      sty	_aircraft_xpos+1
      9  1138					      ENDIF
   4498  1138				   _EI_65574
      0  1138					      pbyte_pbyte_cmpbgt_cond	_scroll, #7, _EI_67, _EL_67
      1  1138
      2  1138
      3  1138		       a9 07		      lda	#7
      4  113a		       cd 26 b5 	      cmp	_scroll
      5  113d		       90 03		      bcc	*+5
      6  113f					      IFCONST	_EL_67
      7  113f		       4c 50 11 	      jmp	_EL_67
      8  1142				  -	      ELSE
      9  1142				  -	      jmp	_EI_67
     10  1142					      ENDIF
   4500  1142				   FPUSH      SET	1
      0  1142					      opt_pbyte_pbyte_and	_scroll, #7
      1  1142
      2  1142
      3  1142
      4  1142
      5  1142
      6  1142		       ad 26 b5 	      lda	_scroll
      7  1145		       29 07		      and	#7
      8  1147				  -	      IF	!FPUSH
      9  1147				  -	      pha
     10  1147					      ENDIF
   4502  1147				   FPULL      SET	1
   4503  1147				   FPUSH      SET	0
      0  1147					      plb2var	_scroll
      1  1147				  -	      IF	!FPULL
      2  1147				  -	      pla
      3  1147					      ENDIF
      4  1147		       8d 26 b5 	      sta	_scroll
   4505  114a		       20 b0 80 	      jsr	_Pshift_right
   4506  114d		       4c 56 11 	      jmp	_EI_67
   4507  1150
   4508  1150
   4509  1150
   4510  1150
   4511  1150
   4512  1150
   4513  1150
   4514  1150				   _EL_67
   4515  1150		       20 2e 84 	      jsr	_Ppoll_collisions
   4516  1153		       20 de 77 	      jsr	_Pupdate_scoretable
   4517  1156
   4518  1156
   4519  1156
   4520  1156
   4521  1156
   4522  1156
   4523  1156
   4524  1156				   _EI_67
   4525  1156		       4c f2 11 	      jmp	_EI_66
   4526  1159
   4527  1159
   4528  1159
   4529  1159
   4530  1159
   4531  1159
   4532  1159
   4533  1159				   _EL_66
   4534  1159				   FPULL      SET	0
   4535  1159				   FPUSH      SET	1
      0  1159					      opt_pbyte_pbyte_sub	_scroll, _microspeed
      1  1159
      2  1159
      3  1159
      4  1159
      5  1159
      6  1159		       ad 26 b5 	      lda	_scroll
      7  115c		       38		      sec
      8  115d		       ed 3e b6 	      sbc	_microspeed
      9  1160				  -	      IF	!FPUSH
     10  1160				  -	      pha
     11  1160					      ENDIF
   4537  1160				   FPULL      SET	1
   4538  1160				   FPUSH      SET	0
      0  1160					      plb2var	_scroll
      1  1160				  -	      IF	!FPULL
      2  1160				  -	      pla
      3  1160					      ENDIF
      4  1160		       8d 26 b5 	      sta	_scroll
   4540  1160				   FPULL      SET	0
      0  1163					      pwvar	_aircraft_xpos
      1  1163					      IF	!FPUSH
      2  1163		       ad 31 b5 	      lda	_aircraft_xpos
      3  1166		       48		      pha
      4  1167		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  116a		       48		      pha
      6  116b				  -	      ELSE
      7  116b				  -	      lda	_aircraft_xpos
      8  116b				  -	      ldy	_aircraft_xpos+1
      9  116b					      ENDIF
      0  116b					      pbvar	_microspeed
      0  116b					      pbyte	_microspeed
      1  116b		       ad 3e b6 	      lda	_microspeed
      2  116e					      IF	!FPUSH
      3  116e		       48		      pha
      4  116f					      ENDIF
      0  116f					      btow
      1  116f		       a9 00		      lda	#$00
      2  1171		       48		      pha
      0  1172					      addw
      1  1172		       ba		      tsx
      2  1173		       bd 02 01 	      lda.wx	stack+2
      3  1176		       18		      clc
      4  1177		       7d 04 01 	      adc.wx	stack+4
      5  117a		       9d 04 01 	      sta.wx	stack+4
      6  117d		       68		      pla
      7  117e		       7d 03 01 	      adc.wx	stack+3
      8  1181		       9d 03 01 	      sta.wx	stack+3
      9  1184		       68		      pla
      0  1185					      plw2var	_aircraft_xpos
      1  1185					      IF	!FPULL
      2  1185		       68		      pla
      3  1186		       8d 32 b5 	      sta	_aircraft_xpos+1
      4  1189		       68		      pla
      5  118a		       8d 31 b5 	      sta	_aircraft_xpos
      6  118d				  -	      ELSE
      7  118d				  -	      sta	_aircraft_xpos
      8  118d				  -	      sty	_aircraft_xpos+1
      9  118d					      ENDIF
      0  118d					      pwvar	_aircraft_xpos
      1  118d					      IF	!FPUSH
      2  118d		       ad 31 b5 	      lda	_aircraft_xpos
      3  1190		       48		      pha
      4  1191		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  1194		       48		      pha
      6  1195				  -	      ELSE
      7  1195				  -	      lda	_aircraft_xpos
      8  1195				  -	      ldy	_aircraft_xpos+1
      9  1195					      ENDIF
      0  1195					      pword	#5119
      1  1195					      IF	!FPUSH
      2  1195		       a9 ff		      lda	#<#5119
      3  1197		       48		      pha
      4  1198		       a9 13		      lda	#>#5119
      5  119a		       48		      pha
      6  119b				  -	      ELSE
      7  119b				  -	      lda	#<#5119
      8  119b				  -	      ldy	#>#5119
      9  119b					      ENDIF
   4548  119b				   FPUSH      SET	1
      0  119b					      cmpwgt
      1  119b		       ba		      tsx
      2  119c		       bd 02 01 	      lda.wx	stack+2
      3  119f		       dd 04 01 	      cmp.wx	stack+4
      4  11a2		       bd 01 01 	      lda.wx	stack+1
      5  11a5		       fd 03 01 	      sbc.wx	stack+3
      6  11a8		       30 0a		      bmi	.pht
      7  11aa		       e8		      inx
      8  11ab		       e8		      inx
      9  11ac		       e8		      inx
     10  11ad		       e8		      inx
     11  11ae		       9a		      txs
      0  11af					      pzero
      1  11af		       a9 00		      lda	#$00
      2  11b1				  -	      IF	!FPUSH
      3  11b1				  -	      pha
      4  11b1					      ENDIF
     13  11b1				  -	      IF	!FPUSH
     14  11b1				  -	      jmp	*+11
     15  11b1					      ELSE
     16  11b1		       4c bb 11 	      jmp	*+10
     17  11b4					      ENDIF
     18  11b4		       e8	   .pht       inx
     19  11b5		       e8		      inx
     20  11b6		       e8		      inx
     21  11b7		       e8		      inx
     22  11b8		       9a		      txs
      0  11b9					      pone
      1  11b9		       a9 01		      lda	#$01
      2  11bb				  -	      IF	!FPUSH
      3  11bb				  -	      pha
      4  11bb					      ENDIF
   4550  11bb				   FPULL      SET	1
   4551  11bb				   FPUSH      SET	0
      0  11bb					      cond_stmt	_EI_65575, _EL_65575
      1  11bb				  -	      IF	!FPULL
      2  11bb				  -	      pla
      3  11bb					      ENDIF
      4  11bb		       d0 03		      bne	*+5
      5  11bd				  -	      IFCONST	_EL_65575
      6  11bd				  -	      jmp	_EL_65575
      7  11bd					      ELSE
      8  11bd		       4c d4 11 	      jmp	_EI_65575
      9  11c0					      ENDIF
   4553  11c0				   FPULL      SET	0
   4554  11c0				   FPUSH      SET	1
      0  11c0					      opt_pwvar_pword_sub	_aircraft_xpos, #5120
      1  11c0
      2  11c0
      3  11c0
      4  11c0		       ad 31 b5 	      lda	_aircraft_xpos
      5  11c3		       38		      sec
      6  11c4		       e9 00		      sbc	<#5120
      7  11c6				  -	      IF	!FPUSH
      8  11c6				  -	      pha
      9  11c6					      ELSE
     10  11c6		       aa		      tax
     11  11c7					      ENDIF
     12  11c7		       ad 32 b5 	      lda	_aircraft_xpos+1
     13  11ca		       e9 14		      sbc	>#5120
     14  11cc				  -	      IF	!FPUSH
     15  11cc				  -	      pha
     16  11cc					      ELSE
     17  11cc		       a8		      tay
     18  11cd		       8a		      txa
     19  11ce					      ENDIF
   4556  11ce				   FPULL      SET	1
   4557  11ce				   FPUSH      SET	0
      0  11ce					      plw2var	_aircraft_xpos
      1  11ce				  -	      IF	!FPULL
      2  11ce				  -	      pla
      3  11ce				  -	      sta	_aircraft_xpos+1
      4  11ce				  -	      pla
      5  11ce				  -	      sta	_aircraft_xpos
      6  11ce					      ELSE
      7  11ce		       8d 31 b5 	      sta	_aircraft_xpos
      8  11d1		       8c 32 b5 	      sty	_aircraft_xpos+1
      9  11d4					      ENDIF
   4559  11d4
   4560  11d4
   4561  11d4
   4562  11d4
   4563  11d4				   _EI_65575
      0  11d4					      pbyte_pbyte_cmpbgt_cond	_scroll, #249, _EI_68, _EL_68
      1  11d4
      2  11d4
      3  11d4		       a9 f9		      lda	#249
      4  11d6		       cd 26 b5 	      cmp	_scroll
      5  11d9		       90 03		      bcc	*+5
      6  11db					      IFCONST	_EL_68
      7  11db		       4c ec 11 	      jmp	_EL_68
      8  11de				  -	      ELSE
      9  11de				  -	      jmp	_EI_68
     10  11de					      ENDIF
   4565  11de				   FPULL      SET	0
   4566  11de				   FPUSH      SET	1
      0  11de					      opt_pbyte_pbyte_and	_scroll, #7
      1  11de
      2  11de
      3  11de
      4  11de
      5  11de
      6  11de		       ad 26 b5 	      lda	_scroll
      7  11e1		       29 07		      and	#7
      8  11e3				  -	      IF	!FPUSH
      9  11e3				  -	      pha
     10  11e3					      ENDIF
   4568  11e3				   FPULL      SET	1
   4569  11e3				   FPUSH      SET	0
      0  11e3					      plb2var	_scroll
      1  11e3				  -	      IF	!FPULL
      2  11e3				  -	      pla
      3  11e3					      ENDIF
      4  11e3		       8d 26 b5 	      sta	_scroll
   4571  11e6		       20 c9 7f 	      jsr	_Pshift_left
   4572  11e9		       4c f2 11 	      jmp	_EI_68
   4573  11ec
   4574  11ec
   4575  11ec
   4576  11ec
   4577  11ec
   4578  11ec
   4579  11ec
   4580  11ec				   _EL_68
   4581  11ec		       20 2e 84 	      jsr	_Ppoll_collisions
   4582  11ef		       20 de 77 	      jsr	_Pupdate_scoretable
   4583  11f2
   4584  11f2
   4585  11f2
   4586  11f2
   4587  11f2
   4588  11f2
   4589  11f2
   4590  11f2				   _EI_68
   4591  11f2
   4592  11f2
   4593  11f2
   4594  11f2
   4595  11f2
   4596  11f2
   4597  11f2
   4598  11f2				   _EI_66
      0  11f2					      decb	_frame_count
      1  11f2		       ce 25 b5 	      dec	_frame_count
      0  11f5					      decb	_sound_counter
      1  11f5		       ce 33 b6 	      dec	_sound_counter
   4601  11f8		       20 3a 8c 	      jsr	_Pactions
   4602  11fb		       20 5c 94 	      jsr	_Pmove_ufos
   4603  11fe		       20 7c 7a 	      jsr	_Pupdate_sprites
   4604  11fe				   FPULL      SET	0
   4605  11fe				   FPUSH      SET	1
      0  1201					      pbvar	_level_done
      0  1201					      pbyte	_level_done
      1  1201		       ad 3c b6 	      lda	_level_done
      2  1204				  -	      IF	!FPUSH
      3  1204				  -	      pha
      4  1204					      ENDIF
   4607  1204				   FPULL      SET	1
   4608  1204				   FPUSH      SET	0
      0  1204					      ongoto	_On_LB3, _On_HB3
      1  1204				  -	      IF	!FPULL
      2  1204				  -	      pla
      3  1204					      ENDIF
      4  1204		       aa		      tax
      5  1205		       bd 8e ae 	      lda.wx	_On_LB3
      6  1208		       8d 12 12 	      sta	.selfmod_code+1
      7  120b		       bd 92 ae 	      lda.wx	_On_HB3
      8  120e		       8d 13 12 	      sta	.selfmod_code+2
      9  1211				   .selfmod_code
     10  1211		       4c 00 00 	      jmp	$0000
   4610  1214				   _Llevel_done
      0  1214					      pbyte_pbyte_cmpbeq_cond	_wave, #10, _EI_65576, _EL_65576
      1  1214
      2  1214
      3  1214		       ad 3d b6 	      lda	_wave
      4  1217		       c9 0a		      cmp	#10
      5  1219		       f0 03		      beq	*+5
      6  121b				  -	      IFCONST	_EL_65576
      7  121b				  -	      jmp	_EL_65576
      8  121b					      ELSE
      9  121b		       4c 21 12 	      jmp	_EI_65576
     10  121e					      ENDIF
   4612  121e		       4c 22 15 	      jmp	_Lgame_completed
   4613  1221
   4614  1221
   4615  1221
   4616  1221
   4617  1221
   4618  1221
   4619  1221
   4620  1221				   _EI_65576
      0  1221					      incb	_wave
      1  1221		       ee 3d b6 	      inc	_wave
      0  1224					      incb	_fleet
      1  1224		       ee 37 b6 	      inc	_fleet
   4623  1224				   FPULL      SET	0
   4624  1224				   FPUSH      SET	1
      0  1227					      pbyte	#128
      1  1227		       a9 80		      lda	#128
      2  1229				  -	      IF	!FPUSH
      3  1229				  -	      pha
      4  1229					      ENDIF
   4626  1229				   FPULL      SET	1
   4627  1229				   FPUSH      SET	0
      0  1229					      pokeb_const_addr	#54290
      1  1229
      2  1229
      3  1229
      4  1229		       d4 12	   .ad	      EQU	#54290
      5  1229				  -	      IF	!FPULL
      6  1229				  -	      pla
      7  1229					      ENDIF
      8  1229		       8d 12 d4 	      sta	.ad
   4629  1229				   FPULL      SET	0
   4630  1229				   FPUSH      SET	1
      0  122c					      pbyte	#9
      1  122c		       a9 09		      lda	#9
      2  122e				  -	      IF	!FPUSH
      3  122e				  -	      pha
      4  122e					      ENDIF
   4632  122e				   FPULL      SET	1
   4633  122e				   FPUSH      SET	0
      0  122e					      plb2var	_sfx_start.effect_no
      1  122e				  -	      IF	!FPULL
      2  122e				  -	      pla
      3  122e					      ENDIF
      4  122e		       8d 21 b5 	      sta	_sfx_start.effect_no
   4635  1231		       20 48 75 	      jsr	_Psfx_start
   4636  1231				   FPULL      SET	0
      0  1234					      pbyte	#0
      1  1234		       a9 00		      lda	#0
      2  1236					      IF	!FPUSH
      3  1236		       48		      pha
      4  1237					      ENDIF
      0  1237					      btow
      1  1237		       a9 00		      lda	#$00
      2  1239		       48		      pha
      0  123a					      plw2var	_ii
      1  123a					      IF	!FPULL
      2  123a		       68		      pla
      3  123b		       8d 95 b6 	      sta	_ii+1
      4  123e		       68		      pla
      5  123f		       8d 94 b6 	      sta	_ii
      6  1242				  -	      ELSE
      7  1242				  -	      sta	_ii
      8  1242				  -	      sty	_ii+1
      9  1242					      ENDIF
   4640  1242				   FPUSH      SET	1
      0  1242					      pword	#400
      1  1242				  -	      IF	!FPUSH
      2  1242				  -	      lda	#<#400
      3  1242				  -	      pha
      4  1242				  -	      lda	#>#400
      5  1242				  -	      pha
      6  1242					      ELSE
      7  1242		       a9 90		      lda	#<#400
      8  1244		       a0 01		      ldy	#>#400
      9  1246					      ENDIF
   4642  1246				   FPULL      SET	1
   4643  1246				   FPUSH      SET	0
      0  1246					      plw2var	XFOR_max_19
      1  1246				  -	      IF	!FPULL
      2  1246				  -	      pla
      3  1246				  -	      sta	XFOR_max_19+1
      4  1246				  -	      pla
      5  1246				  -	      sta	XFOR_max_19
      6  1246					      ELSE
      7  1246		       8d 96 b6 	      sta	XFOR_max_19
      8  1249		       8c 97 b6 	      sty	XFOR_max_19+1
      9  124c					      ENDIF
   4645  124c				   _FOR_19
      0  124c					      forw	19, _ii
      1  124c				  -	      IFCONST	XFOR_step_19
      2  124c				  -
      3  124c				  -	      lda	XFOR_step_19 + 1
      4  124c				  -
      5  124c				  -	      bpl	.cmp
      6  124c				  -.neg
      7  124c				  -
      8  124c				  -	      lda	_ii
      9  124c				  -	      cmp	XFOR_max_19
     10  124c				  -	      lda	_ii+1
     11  124c				  -	      sbc	XFOR_max_19+1
     12  124c				  -	      bpl	.enter
     13  124c				  -	      jmp	_ENDFOR_19
     14  124c					      ENDIF
     15  124c				   .cmp
     16  124c
     17  124c		       ad 96 b6 	      lda	XFOR_max_19
     18  124f		       cd 94 b6 	      cmp	_ii
     19  1252		       ad 97 b6 	      lda	XFOR_max_19+1
     20  1255		       ed 95 b6 	      sbc	_ii+1
     21  1258		       10 03		      bpl	.enter
     22  125a		       4c 6f 12 	      jmp	_ENDFOR_19
     23  125d				   .enter
   4647  125d				   FPULL      SET	0
   4648  125d				   FPUSH      SET	1
      0  125d					      pbyte	#0
      1  125d		       a9 00		      lda	#0
      2  125f				  -	      IF	!FPUSH
      3  125f				  -	      pha
      4  125f					      ENDIF
   4650  125f				   FPULL      SET	1
   4651  125f				   FPUSH      SET	0
      0  125f					      watchc	53266
      1  125f				  -	      IF	!FPULL
      2  125f				  -	      pla
      3  125f					      ENDIF
      4  125f				   .again
      5  125f		       cd 12 d0 	      cmp	53266
      6  1262		       d0 fb		      bne	.again
      0  1264					      nextw	19, _ii
      1  1264
      2  1264				  -	      IFCONST	XFOR_step_19
      3  1264				  -
      4  1264				  -	      clc
      5  1264				  -	      lda	XFOR_step_19
      6  1264				  -	      adc	_ii
      7  1264				  -	      sta	_ii
      8  1264				  -	      lda	XFOR_step_19+1
      9  1264				  -	      adc	_ii+1
     10  1264				  -	      sta	_ii+1
     11  1264					      ELSE
     12  1264
     13  1264		       ee 94 b6 	      inc	_ii
     14  1267		       d0 03		      bne	.skip
     15  1269		       ee 95 b6 	      inc	_ii+1
     16  126c					      ENDIF
     17  126c				   .skip
     18  126c
     19  126c		       4c 4c 12 	      jmp	_FOR_19
   4654  126f				   _ENDFOR_19
   4655  126f		       4c 8c 0e 	      jmp	_Lgame_loop
   4656  1272
   4657  1272
   4658  1272
   4659  1272
   4660  1272
   4661  1272
   4662  1272
   4663  1272				   _Llife_lost
      0  1272					      decb	_fleet
      1  1272		       ce 37 b6 	      dec	_fleet
   4665  1272				   FPULL      SET	0
   4666  1272				   FPUSH      SET	1
      0  1275					      pbyte	#0
      1  1275		       a9 00		      lda	#0
      2  1277				  -	      IF	!FPUSH
      3  1277				  -	      pha
      4  1277					      ENDIF
   4668  1277				   FPULL      SET	1
   4669  1277				   FPUSH      SET	0
      0  1277					      plb2var	_fuel
      1  1277				  -	      IF	!FPULL
      2  1277				  -	      pla
      3  1277					      ENDIF
      4  1277		       8d 36 b6 	      sta	_fuel
   4671  1277				   FPULL      SET	0
   4672  1277				   FPUSH      SET	1
      0  127a					      pword	#848
      1  127a				  -	      IF	!FPUSH
      2  127a				  -	      lda	#<#848
      3  127a				  -	      pha
      4  127a				  -	      lda	#>#848
      5  127a				  -	      pha
      6  127a					      ELSE
      7  127a		       a9 50		      lda	#<#848
      8  127c		       a0 03		      ldy	#>#848
      9  127e					      ENDIF
   4674  127e				   FPULL      SET	1
   4675  127e				   FPUSH      SET	0
      0  127e					      plw2var	_aircraft_altitude
      1  127e				  -	      IF	!FPULL
      2  127e				  -	      pla
      3  127e				  -	      sta	_aircraft_altitude+1
      4  127e				  -	      pla
      5  127e				  -	      sta	_aircraft_altitude
      6  127e					      ELSE
      7  127e		       8d 2f b5 	      sta	_aircraft_altitude
      8  1281		       8c 30 b5 	      sty	_aircraft_altitude+1
      9  1284					      ENDIF
   4677  1284				   FPULL      SET	0
   4678  1284				   FPUSH      SET	1
      0  1284					      pword	#2560
      1  1284				  -	      IF	!FPUSH
      2  1284				  -	      lda	#<#2560
      3  1284				  -	      pha
      4  1284				  -	      lda	#>#2560
      5  1284				  -	      pha
      6  1284					      ELSE
      7  1284		       a9 00		      lda	#<#2560
      8  1286		       a0 0a		      ldy	#>#2560
      9  1288					      ENDIF
   4680  1288				   FPULL      SET	1
   4681  1288				   FPUSH      SET	0
      0  1288					      plw2var	_aircraft_xpos
      1  1288				  -	      IF	!FPULL
      2  1288				  -	      pla
      3  1288				  -	      sta	_aircraft_xpos+1
      4  1288				  -	      pla
      5  1288				  -	      sta	_aircraft_xpos
      6  1288					      ELSE
      7  1288		       8d 31 b5 	      sta	_aircraft_xpos
      8  128b		       8c 32 b5 	      sty	_aircraft_xpos+1
      9  128e					      ENDIF
      0  128e					      pbyte_pbyte_cmpbeq_cond	_ufo_count, #0, _EI_65577, _EL_65577
      1  128e
      2  128e
      3  128e		       ad 39 b6 	      lda	_ufo_count
      4  1291		       c9 00		      cmp	#0
      5  1293		       f0 03		      beq	*+5
      6  1295				  -	      IFCONST	_EL_65577
      7  1295				  -	      jmp	_EL_65577
      8  1295					      ELSE
      9  1295		       4c a0 12 	      jmp	_EI_65577
     10  1298					      ENDIF
   4684  1298				   FPULL      SET	0
   4685  1298				   FPUSH      SET	1
      0  1298					      pbyte	#1
      1  1298		       a9 01		      lda	#1
      2  129a				  -	      IF	!FPUSH
      3  129a				  -	      pha
      4  129a					      ENDIF
   4687  129a				   FPULL      SET	1
   4688  129a				   FPUSH      SET	0
      0  129a					      plb2var	_level_done
      1  129a				  -	      IF	!FPULL
      2  129a				  -	      pla
      3  129a					      ENDIF
      4  129a		       8d 3c b6 	      sta	_level_done
   4690  129d		       4c 14 12 	      jmp	_Llevel_done
   4691  12a0				   _EI_65577
   4692  12a0				   FPULL      SET	0
   4693  12a0				   FPUSH      SET	1
      0  12a0					      pbyte	#0
      1  12a0		       a9 00		      lda	#0
      2  12a2				  -	      IF	!FPUSH
      3  12a2				  -	      pha
      4  12a2					      ENDIF
   4695  12a2				   FPULL      SET	1
   4696  12a2				   FPUSH      SET	0
      0  12a2					      plb2var	_j
      1  12a2				  -	      IF	!FPULL
      2  12a2				  -	      pla
      3  12a2					      ENDIF
      4  12a2		       8d 92 b6 	      sta	_j
   4698  12a2				   FPULL      SET	0
   4699  12a2				   FPUSH      SET	1
      0  12a5					      pbyte	#3
      1  12a5		       a9 03		      lda	#3
      2  12a7				  -	      IF	!FPUSH
      3  12a7				  -	      pha
      4  12a7					      ENDIF
   4701  12a7				   FPULL      SET	1
   4702  12a7				   FPUSH      SET	0
      0  12a7					      plb2var	XFOR_max_20
      1  12a7				  -	      IF	!FPULL
      2  12a7				  -	      pla
      3  12a7					      ENDIF
      4  12a7		       8d 98 b6 	      sta	XFOR_max_20
   4704  12aa				   _FOR_20
      0  12aa					      forb	20, _j
      1  12aa
      2  12aa		       ad 98 b6 	      lda	XFOR_max_20
      3  12ad		       cd 92 b6 	      cmp	_j
      4  12b0		       b0 03		      bcs	.enter
      5  12b2
      6  12b2		       4c 38 13 	      jmp	_ENDFOR_20
      7  12b5				   .enter
   4706  12b5				   FPULL      SET	0
      0  12b5					      opt_pbyte_pbarray_fast	_j, _ufo_on
      1  12b5
      2  12b5
      3  12b5
      4  12b5		       ae 92 b6 	      ldx	_j
      5  12b8		       bd 48 b5 	      lda	_ufo_on,x
      6  12bb					      IF	!FPUSH
      7  12bb		       48		      pha
      8  12bc					      ENDIF
   4708  12bc				   FPUSH      SET	1
      0  12bc					      pbyte	#1
      1  12bc		       a9 01		      lda	#1
      2  12be				  -	      IF	!FPUSH
      3  12be				  -	      pha
      4  12be					      ENDIF
   4710  12be				   FPULL      SET	1
      0  12be					      cmpbeq
      1  12be				  -	      IF	!FPULL
      2  12be				  -	      pla
      3  12be					      ENDIF
      4  12be		       85 fc		      sta	R1
      5  12c0		       68		      pla
      6  12c1		       c5 fc		      cmp	R1
      7  12c3		       f0 05		      beq	.pht
      0  12c5					      pzero
      1  12c5		       a9 00		      lda	#$00
      2  12c7				  -	      IF	!FPUSH
      3  12c7				  -	      pha
      4  12c7					      ENDIF
      9  12c7				  -	      IF	!FPUSH
     10  12c7				  -	      jmp	*+6
     11  12c7					      ELSE
     12  12c7		       4c cc 12 	      jmp	*+5
     13  12ca					      ENDIF
      0  12ca				   .pht       pone
      1  12ca		       a9 01		      lda	#$01
      2  12cc				  -	      IF	!FPUSH
      3  12cc				  -	      pha
      4  12cc					      ENDIF
   4712  12cc				   FPUSH      SET	0
      0  12cc					      cond_stmt	_EI_69, _EL_69
      1  12cc				  -	      IF	!FPULL
      2  12cc				  -	      pla
      3  12cc					      ENDIF
      4  12cc		       d0 03		      bne	*+5
      5  12ce				  -	      IFCONST	_EL_69
      6  12ce				  -	      jmp	_EL_69
      7  12ce					      ELSE
      8  12ce		       4c 30 13 	      jmp	_EI_69
      9  12d1					      ENDIF
   4714  12d1				   FPULL      SET	0
      0  12d1					      pbvar	_j
      0  12d1					      pbyte	_j
      1  12d1		       ad 92 b6 	      lda	_j
      2  12d4					      IF	!FPUSH
      3  12d4		       48		      pha
      4  12d5					      ENDIF
      0  12d5					      btow
      1  12d5		       a9 00		      lda	#$00
      2  12d7		       48		      pha
      0  12d8					      dblw
      1  12d8		       ba		      tsx
      2  12d9		       1e 02 01 	      asl.wx	stack+2
      3  12dc		       3e 01 01 	      rol.wx	stack+1
      0  12df					      pwarray	_ufo_initial_xpos
      1  12df					      IF	!FPULL
      2  12df		       68		      pla
      3  12e0		       85 fc		      sta	R1
      4  12e2		       68		      pla
      5  12e3		       85 fb		      sta	R0
      6  12e5				  -	      ELSE
      7  12e5				  -	      sta	R0
      8  12e5				  -	      sty	R1
      9  12e5					      ENDIF
     10  12e5		       a9 40		      lda	#<_ufo_initial_xpos
     11  12e7		       18		      clc
     12  12e8		       65 fb		      adc	R0
     13  12ea		       85 fb		      sta	R0
     14  12ec		       a9 b5		      lda	#>_ufo_initial_xpos
     15  12ee		       65 fc		      adc	R1
     16  12f0		       85 fc		      sta	R1
     17  12f2					      IF	!FPUSH
     18  12f2		       a0 00		      ldy	#$00
     19  12f4		       b1 fb		      lda	(R0),y
     20  12f6		       48		      pha
     21  12f7		       c8		      iny
     22  12f8		       b1 fb		      lda	(R0),y
     23  12fa		       48		      pha
     24  12fb				  -	      ELSE
     25  12fb				  -	      ldy	#$00
     26  12fb				  -	      lda	(R0),y
     27  12fb				  -	      tax
     28  12fb				  -	      iny
     29  12fb				  -	      lda	(R0),y
     30  12fb				  -	      tay
     31  12fb				  -	      txa
     32  12fb					      ENDIF
      0  12fb					      pbvar	_j
      0  12fb					      pbyte	_j
      1  12fb		       ad 92 b6 	      lda	_j
      2  12fe					      IF	!FPUSH
      3  12fe		       48		      pha
      4  12ff					      ENDIF
      0  12ff					      btow
      1  12ff		       a9 00		      lda	#$00
      2  1301		       48		      pha
      0  1302					      dblw
      1  1302		       ba		      tsx
      2  1303		       1e 02 01 	      asl.wx	stack+2
      3  1306		       3e 01 01 	      rol.wx	stack+1
      0  1309					      plwarray	_ufo_initial_xpos
      1  1309					      IF	!FPULL
      2  1309		       68		      pla
      3  130a		       85 fc		      sta	R1
      4  130c		       68		      pla
      5  130d		       85 fb		      sta	R0
      6  130f				  -	      ELSE
      7  130f				  -	      sta	R0
      8  130f				  -	      sty	R1
      9  130f					      ENDIF
     10  130f		       a9 40		      lda	#<_ufo_initial_xpos
     11  1311		       18		      clc
     12  1312		       65 fb		      adc	R0
     13  1314		       85 fb		      sta	R0
     14  1316		       a9 b5		      lda	#>_ufo_initial_xpos
     15  1318		       65 fc		      adc	R1
     16  131a		       85 fc		      sta	R1
     17  131c		       a0 01		      ldy	#$01
     18  131e		       68		      pla
     19  131f		       91 fb		      sta	(R0),y
     20  1321		       88		      dey
     21  1322		       68		      pla
     22  1323		       91 fb		      sta	(R0),y
      0  1325					      pbyte	#81
      1  1325		       a9 51		      lda	#81
      2  1327					      IF	!FPUSH
      3  1327		       48		      pha
      4  1328					      ENDIF
   4724  1328				   FPUSH      SET	1
      0  1328					      pbvar	_j
      0  1328					      pbyte	_j
      1  1328		       ad 92 b6 	      lda	_j
      2  132b				  -	      IF	!FPUSH
      3  132b				  -	      pha
      4  132b					      ENDIF
   4726  132b				   FPULL      SET	1
   4727  132b				   FPUSH      SET	0
      0  132b					      plbarray_fast	_ufo_altitude
      1  132b				  -	      IF	!FPULL
      2  132b				  -	      pla
      3  132b					      ENDIF
      4  132b		       aa		      tax
      5  132c		       68		      pla
      6  132d		       9d 34 b5 	      sta	_ufo_altitude,x
   4729  1330				   _EI_69
      0  1330					      nextb	20, _j
      1  1330
      2  1330				  -	      IFCONST	XFOR_step_20
      3  1330				  -
      4  1330				  -	      clc
      5  1330				  -	      lda	XFOR_step_20
      6  1330				  -	      adc	_j
      7  1330				  -	      sta	_j
      8  1330				  -
      9  1330				  -	      bcs	_ENDFOR_20
     10  1330					      ELSE
     11  1330
     12  1330		       ee 92 b6 	      inc	_j
     13  1333
     14  1333		       f0 03		      beq	_ENDFOR_20
     15  1335					      ENDIF
     16  1335		       4c aa 12 	      jmp	_FOR_20
   4731  1338
   4732  1338
   4733  1338
   4734  1338
   4735  1338
   4736  1338
   4737  1338
   4738  1338				   _ENDFOR_20
   4739  1338				   FPULL      SET	0
   4740  1338				   FPUSH      SET	1
      0  1338					      pbyte	#7
      1  1338		       a9 07		      lda	#7
      2  133a				  -	      IF	!FPUSH
      3  133a				  -	      pha
      4  133a					      ENDIF
   4742  133a				   FPULL      SET	1
   4743  133a				   FPUSH      SET	0
      0  133a					      plb2var	_wave_countdown
      1  133a				  -	      IF	!FPULL
      2  133a				  -	      pla
      3  133a					      ENDIF
      4  133a		       8d 14 b6 	      sta	_wave_countdown
   4745  133a				   FPULL      SET	0
      0  133d					      pbyte	#0
      1  133d		       a9 00		      lda	#0
      2  133f					      IF	!FPUSH
      3  133f		       48		      pha
      4  1340					      ENDIF
      0  1340					      btow
      1  1340		       a9 00		      lda	#$00
      2  1342		       48		      pha
      0  1343					      plw2var	_ii
      1  1343					      IF	!FPULL
      2  1343		       68		      pla
      3  1344		       8d 95 b6 	      sta	_ii+1
      4  1347		       68		      pla
      5  1348		       8d 94 b6 	      sta	_ii
      6  134b				  -	      ELSE
      7  134b				  -	      sta	_ii
      8  134b				  -	      sty	_ii+1
      9  134b					      ENDIF
   4749  134b				   FPUSH      SET	1
      0  134b					      pword	#400
      1  134b				  -	      IF	!FPUSH
      2  134b				  -	      lda	#<#400
      3  134b				  -	      pha
      4  134b				  -	      lda	#>#400
      5  134b				  -	      pha
      6  134b					      ELSE
      7  134b		       a9 90		      lda	#<#400
      8  134d		       a0 01		      ldy	#>#400
      9  134f					      ENDIF
   4751  134f				   FPULL      SET	1
   4752  134f				   FPUSH      SET	0
      0  134f					      plw2var	XFOR_max_21
      1  134f				  -	      IF	!FPULL
      2  134f				  -	      pla
      3  134f				  -	      sta	XFOR_max_21+1
      4  134f				  -	      pla
      5  134f				  -	      sta	XFOR_max_21
      6  134f					      ELSE
      7  134f		       8d 99 b6 	      sta	XFOR_max_21
      8  1352		       8c 9a b6 	      sty	XFOR_max_21+1
      9  1355					      ENDIF
   4754  1355				   _FOR_21
      0  1355					      forw	21, _ii
      1  1355				  -	      IFCONST	XFOR_step_21
      2  1355				  -
      3  1355				  -	      lda	XFOR_step_21 + 1
      4  1355				  -
      5  1355				  -	      bpl	.cmp
      6  1355				  -.neg
      7  1355				  -
      8  1355				  -	      lda	_ii
      9  1355				  -	      cmp	XFOR_max_21
     10  1355				  -	      lda	_ii+1
     11  1355				  -	      sbc	XFOR_max_21+1
     12  1355				  -	      bpl	.enter
     13  1355				  -	      jmp	_ENDFOR_21
     14  1355					      ENDIF
     15  1355				   .cmp
     16  1355
     17  1355		       ad 99 b6 	      lda	XFOR_max_21
     18  1358		       cd 94 b6 	      cmp	_ii
     19  135b		       ad 9a b6 	      lda	XFOR_max_21+1
     20  135e		       ed 95 b6 	      sbc	_ii+1
     21  1361		       10 03		      bpl	.enter
     22  1363		       4c 78 13 	      jmp	_ENDFOR_21
     23  1366				   .enter
   4756  1366				   FPULL      SET	0
   4757  1366				   FPUSH      SET	1
      0  1366					      pbyte	#0
      1  1366		       a9 00		      lda	#0
      2  1368				  -	      IF	!FPUSH
      3  1368				  -	      pha
      4  1368					      ENDIF
   4759  1368				   FPULL      SET	1
   4760  1368				   FPUSH      SET	0
      0  1368					      watchc	53266
      1  1368				  -	      IF	!FPULL
      2  1368				  -	      pla
      3  1368					      ENDIF
      4  1368				   .again
      5  1368		       cd 12 d0 	      cmp	53266
      6  136b		       d0 fb		      bne	.again
      0  136d					      nextw	21, _ii
      1  136d
      2  136d				  -	      IFCONST	XFOR_step_21
      3  136d				  -
      4  136d				  -	      clc
      5  136d				  -	      lda	XFOR_step_21
      6  136d				  -	      adc	_ii
      7  136d				  -	      sta	_ii
      8  136d				  -	      lda	XFOR_step_21+1
      9  136d				  -	      adc	_ii+1
     10  136d				  -	      sta	_ii+1
     11  136d					      ELSE
     12  136d
     13  136d		       ee 94 b6 	      inc	_ii
     14  1370		       d0 03		      bne	.skip
     15  1372		       ee 95 b6 	      inc	_ii+1
     16  1375					      ENDIF
     17  1375				   .skip
     18  1375
     19  1375		       4c 55 13 	      jmp	_FOR_21
   4763  1378				   _ENDFOR_21
      0  1378					      pbyte_pbyte_cmpbgt_cond	_fleet, #0, _EI_65578, _EL_65578
      1  1378
      2  1378
      3  1378		       a9 00		      lda	#0
      4  137a		       cd 37 b6 	      cmp	_fleet
      5  137d		       90 03		      bcc	*+5
      6  137f				  -	      IFCONST	_EL_65578
      7  137f				  -	      jmp	_EL_65578
      8  137f					      ELSE
      9  137f		       4c 85 13 	      jmp	_EI_65578
     10  1382					      ENDIF
   4765  1382		       4c d8 0e 	      jmp	_Llevel_loop
   4766  1385
   4767  1385
   4768  1385
   4769  1385
   4770  1385
   4771  1385
   4772  1385
   4773  1385				   _EI_65578
   4774  1385
   4775  1385
   4776  1385
   4777  1385
   4778  1385
   4779  1385
   4780  1385
   4781  1385				   _Lgame_over
   4782  1385				   FPULL      SET	0
   4783  1385				   FPUSH      SET	1
      0  1385					      pbyte	#7
      1  1385		       a9 07		      lda	#7
      2  1387				  -	      IF	!FPUSH
      3  1387				  -	      pha
      4  1387					      ENDIF
   4785  1387				   FPULL      SET	1
   4786  1387				   FPUSH      SET	0
      0  1387					      plb2var	_sfx_start.effect_no
      1  1387				  -	      IF	!FPULL
      2  1387				  -	      pla
      3  1387					      ENDIF
      4  1387		       8d 21 b5 	      sta	_sfx_start.effect_no
   4788  138a		       20 48 75 	      jsr	_Psfx_start
   4789  138a				   FPULL      SET	0
      0  138d					      paddr	_S13
      0  138d					      pword	_S13
      1  138d					      IF	!FPUSH
      2  138d		       a9 96		      lda	#<_S13
      3  138f		       48		      pha
      4  1390		       a9 ae		      lda	#>_S13
      5  1392		       48		      pha
      6  1393				  -	      ELSE
      7  1393				  -	      lda	#<_S13
      8  1393				  -	      ldy	#>_S13
      9  1393					      ENDIF
      0  1393					      pbyte	#12
      1  1393		       a9 0c		      lda	#12
      2  1395					      IF	!FPUSH
      3  1395		       48		      pha
      4  1396					      ENDIF
      0  1396					      btow
      1  1396		       a9 00		      lda	#$00
      2  1398		       48		      pha
   4793  1398				   FPUSH      SET	1
      0  1399					      pword	#40
      1  1399				  -	      IF	!FPUSH
      2  1399				  -	      lda	#<#40
      3  1399				  -	      pha
      4  1399				  -	      lda	#>#40
      5  1399				  -	      pha
      6  1399					      ELSE
      7  1399		       a9 28		      lda	#<#40
      8  139b		       a0 00		      ldy	#>#40
      9  139d					      ENDIF
   4795  139d				   FPULL      SET	1
   4796  139d				   FPUSH      SET	0
      0  139d					      mulw
      1  139d				  -	      IF	!FPULL
      2  139d				  -	      pla
      3  139d				  -	      sta	R1
      4  139d				  -	      pla
      5  139d				  -	      sta	R0
      6  139d					      ELSE
      7  139d		       85 fb		      sta	R0
      8  139f		       84 fc		      sty	R1
      9  13a1					      ENDIF
     10  13a1		       68		      pla
     11  13a2		       85 fe		      sta	R3
     12  13a4		       68		      pla
     13  13a5		       85 fd		      sta	R2
     14  13a7		       20 0d 08 	      jsr	NUCL_SMUL16
     15  13aa					      IF	!FPUSH
     16  13aa		       a5 fb		      lda	R0
     17  13ac		       48		      pha
     18  13ad		       a5 fc		      lda	R1
     19  13af		       48		      pha
     20  13b0				  -	      ELSE
     21  13b0				  -	      lda	R0
     22  13b0				  -	      ldy	R1
     23  13b0					      ENDIF
   4798  13b0				   FPULL      SET	0
      0  13b0					      pbyte	#12
      1  13b0		       a9 0c		      lda	#12
      2  13b2					      IF	!FPUSH
      3  13b2		       48		      pha
      4  13b3					      ENDIF
      0  13b3					      btow
      1  13b3		       a9 00		      lda	#$00
      2  13b5		       48		      pha
      0  13b6					      addw
      1  13b6		       ba		      tsx
      2  13b7		       bd 02 01 	      lda.wx	stack+2
      3  13ba		       18		      clc
      4  13bb		       7d 04 01 	      adc.wx	stack+4
      5  13be		       9d 04 01 	      sta.wx	stack+4
      6  13c1		       68		      pla
      7  13c2		       7d 03 01 	      adc.wx	stack+3
      8  13c5		       9d 03 01 	      sta.wx	stack+3
      9  13c8		       68		      pla
      0  13c9					      pword	#1024
      1  13c9					      IF	!FPUSH
      2  13c9		       a9 00		      lda	#<#1024
      3  13cb		       48		      pha
      4  13cc		       a9 04		      lda	#>#1024
      5  13ce		       48		      pha
      6  13cf				  -	      ELSE
      7  13cf				  -	      lda	#<#1024
      8  13cf				  -	      ldy	#>#1024
      9  13cf					      ENDIF
      0  13cf					      addw
      1  13cf		       ba		      tsx
      2  13d0		       bd 02 01 	      lda.wx	stack+2
      3  13d3		       18		      clc
      4  13d4		       7d 04 01 	      adc.wx	stack+4
      5  13d7		       9d 04 01 	      sta.wx	stack+4
      6  13da		       68		      pla
      7  13db		       7d 03 01 	      adc.wx	stack+3
      8  13de		       9d 03 01 	      sta.wx	stack+3
      9  13e1		       68		      pla
      0  13e2					      textat
      1  13e2					      IF	!FPULL
      2  13e2		       68		      pla
      3  13e3		       85 fe		      sta	R3
      4  13e5		       68		      pla
      5  13e6		       85 fd		      sta	R2
      6  13e8				  -	      ELSE
      7  13e8				  -	      sta	R2
      8  13e8				  -	      sty	R3
      9  13e8					      ENDIF
     10  13e8		       68		      pla
     11  13e9		       85 fc		      sta	R1
     12  13eb		       68		      pla
     13  13ec		       85 fb		      sta	R0
     14  13ee		       a0 00		      ldy	#$00
     15  13f0				   .loop
     16  13f0		       b1 fb		      lda	(R0),y
     17  13f2		       f0 06		      beq	.end
     18  13f4		       91 fd		      sta	(R2),y
     19  13f6		       c8		      iny
     20  13f7		       4c f0 13 	      jmp	.loop
     21  13fa				   .end
      0  13fa					      pwvar	_score
      1  13fa					      IF	!FPUSH
      2  13fa		       ad 27 b5 	      lda	_score
      3  13fd		       48		      pha
      4  13fe		       ad 28 b5 	      lda	_score+1
      5  1401		       48		      pha
      6  1402				  -	      ELSE
      7  1402				  -	      lda	_score
      8  1402				  -	      ldy	_score+1
      9  1402					      ENDIF
      0  1402					      pbyte	#0
      1  1402		       a9 00		      lda	#0
      2  1404					      IF	!FPUSH
      3  1404		       48		      pha
      4  1405					      ENDIF
      0  1405					      btow
      1  1405		       a9 00		      lda	#$00
      2  1407		       48		      pha
      0  1408					      cmpwgt
      1  1408		       ba		      tsx
      2  1409		       bd 02 01 	      lda.wx	stack+2
      3  140c		       dd 04 01 	      cmp.wx	stack+4
      4  140f		       bd 01 01 	      lda.wx	stack+1
      5  1412		       fd 03 01 	      sbc.wx	stack+3
      6  1415		       30 0b		      bmi	.pht
      7  1417		       e8		      inx
      8  1418		       e8		      inx
      9  1419		       e8		      inx
     10  141a		       e8		      inx
     11  141b		       9a		      txs
      0  141c					      pzero
      1  141c		       a9 00		      lda	#$00
      2  141e					      IF	!FPUSH
      3  141e		       48		      pha
      4  141f					      ENDIF
     13  141f					      IF	!FPUSH
     14  141f		       4c 2a 14 	      jmp	*+11
     15  1422				  -	      ELSE
     16  1422				  -	      jmp	*+10
     17  1422					      ENDIF
     18  1422		       e8	   .pht       inx
     19  1423		       e8		      inx
     20  1424		       e8		      inx
     21  1425		       e8		      inx
     22  1426		       9a		      txs
      0  1427					      pone
      1  1427		       a9 01		      lda	#$01
      2  1429					      IF	!FPUSH
      3  1429		       48		      pha
      4  142a					      ENDIF
      0  142a					      pwvar	_score
      1  142a					      IF	!FPUSH
      2  142a		       ad 27 b5 	      lda	_score
      3  142d		       48		      pha
      4  142e		       ad 28 b5 	      lda	_score+1
      5  1431		       48		      pha
      6  1432				  -	      ELSE
      7  1432				  -	      lda	_score
      8  1432				  -	      ldy	_score+1
      9  1432					      ENDIF
   4810  1432				   FPUSH      SET	1
      0  1432					      pwvar	_hiscore
      1  1432				  -	      IF	!FPUSH
      2  1432				  -	      lda	_hiscore
      3  1432				  -	      pha
      4  1432				  -	      lda	_hiscore+1
      5  1432				  -	      pha
      6  1432					      ELSE
      7  1432		       ad 29 b5 	      lda	_hiscore
      8  1435		       ac 2a b5 	      ldy	_hiscore+1
      9  1438					      ENDIF
   4812  1438				   FPULL      SET	1
      0  1438					      cmpweq
      1  1438				  -	      IF	!FPULL
      2  1438				  -	      pla
      3  1438				  -	      sta	R2
      4  1438				  -	      pla
      5  1438				  -	      sta	R1
      6  1438					      ELSE
      7  1438		       85 fc		      sta	R1
      8  143a		       84 fd		      sty	R2
      9  143c					      ENDIF
     10  143c		       68		      pla
     11  143d		       c5 fd		      cmp	R2
     12  143f		       d0 0a		      bne	.phf
     13  1441		       68		      pla
     14  1442		       c5 fc		      cmp	R1
     15  1444		       d0 06		      bne	.phf+1
      0  1446					      pone
      1  1446		       a9 01		      lda	#$01
      2  1448				  -	      IF	!FPUSH
      3  1448				  -	      pha
      4  1448					      ENDIF
     17  1448				  -	      IF	!FPUSH
     18  1448				  -	      jmp	*+7
     19  1448					      ELSE
     20  1448		       4c 4e 14 	      jmp	*+6
     21  144b					      ENDIF
     22  144b				   .phf
     23  144b		       68		      pla
      0  144c					      pzero
      1  144c		       a9 00		      lda	#$00
      2  144e				  -	      IF	!FPUSH
      3  144e				  -	      pha
      4  144e					      ENDIF
      0  144e					      andb
      1  144e				  -	      IF	!FPULL
      2  144e				  -	      pla
      3  144e					      ENDIF
      4  144e		       85 fc		      sta	R1
      5  1450		       68		      pla
      6  1451		       25 fc		      and	R1
      7  1453				  -	      IF	!FPUSH
      8  1453				  -	      pha
      9  1453					      ENDIF
   4815  1453				   FPUSH      SET	0
      0  1453					      cond_stmt	_EI_70, _EL_70
      1  1453				  -	      IF	!FPULL
      2  1453				  -	      pla
      3  1453					      ENDIF
      4  1453		       d0 03		      bne	*+5
      5  1455				  -	      IFCONST	_EL_70
      6  1455				  -	      jmp	_EL_70
      7  1455					      ELSE
      8  1455		       4c e4 14 	      jmp	_EI_70
      9  1458					      ENDIF
   4817  1458				   FPULL      SET	0
      0  1458					      paddr	_S14
      0  1458					      pword	_S14
      1  1458					      IF	!FPUSH
      2  1458		       a9 a6		      lda	#<_S14
      3  145a		       48		      pha
      4  145b		       a9 ae		      lda	#>_S14
      5  145d		       48		      pha
      6  145e				  -	      ELSE
      7  145e				  -	      lda	#<_S14
      8  145e				  -	      ldy	#>_S14
      9  145e					      ENDIF
      0  145e					      pbyte	#13
      1  145e		       a9 0d		      lda	#13
      2  1460					      IF	!FPUSH
      3  1460		       48		      pha
      4  1461					      ENDIF
      0  1461					      btow
      1  1461		       a9 00		      lda	#$00
      2  1463		       48		      pha
   4821  1463				   FPUSH      SET	1
      0  1464					      pword	#40
      1  1464				  -	      IF	!FPUSH
      2  1464				  -	      lda	#<#40
      3  1464				  -	      pha
      4  1464				  -	      lda	#>#40
      5  1464				  -	      pha
      6  1464					      ELSE
      7  1464		       a9 28		      lda	#<#40
      8  1466		       a0 00		      ldy	#>#40
      9  1468					      ENDIF
   4823  1468				   FPULL      SET	1
   4824  1468				   FPUSH      SET	0
      0  1468					      mulw
      1  1468				  -	      IF	!FPULL
      2  1468				  -	      pla
      3  1468				  -	      sta	R1
      4  1468				  -	      pla
      5  1468				  -	      sta	R0
      6  1468					      ELSE
      7  1468		       85 fb		      sta	R0
      8  146a		       84 fc		      sty	R1
      9  146c					      ENDIF
     10  146c		       68		      pla
     11  146d		       85 fe		      sta	R3
     12  146f		       68		      pla
     13  1470		       85 fd		      sta	R2
     14  1472		       20 0d 08 	      jsr	NUCL_SMUL16
     15  1475					      IF	!FPUSH
     16  1475		       a5 fb		      lda	R0
     17  1477		       48		      pha
     18  1478		       a5 fc		      lda	R1
     19  147a		       48		      pha
     20  147b				  -	      ELSE
     21  147b				  -	      lda	R0
     22  147b				  -	      ldy	R1
     23  147b					      ENDIF
   4826  147b				   FPULL      SET	0
      0  147b					      pbyte	#14
      1  147b		       a9 0e		      lda	#14
      2  147d					      IF	!FPUSH
      3  147d		       48		      pha
      4  147e					      ENDIF
      0  147e					      btow
      1  147e		       a9 00		      lda	#$00
      2  1480		       48		      pha
      0  1481					      addw
      1  1481		       ba		      tsx
      2  1482		       bd 02 01 	      lda.wx	stack+2
      3  1485		       18		      clc
      4  1486		       7d 04 01 	      adc.wx	stack+4
      5  1489		       9d 04 01 	      sta.wx	stack+4
      6  148c		       68		      pla
      7  148d		       7d 03 01 	      adc.wx	stack+3
      8  1490		       9d 03 01 	      sta.wx	stack+3
      9  1493		       68		      pla
      0  1494					      pword	#1024
      1  1494					      IF	!FPUSH
      2  1494		       a9 00		      lda	#<#1024
      3  1496		       48		      pha
      4  1497		       a9 04		      lda	#>#1024
      5  1499		       48		      pha
      6  149a				  -	      ELSE
      7  149a				  -	      lda	#<#1024
      8  149a				  -	      ldy	#>#1024
      9  149a					      ENDIF
      0  149a					      addw
      1  149a		       ba		      tsx
      2  149b		       bd 02 01 	      lda.wx	stack+2
      3  149e		       18		      clc
      4  149f		       7d 04 01 	      adc.wx	stack+4
      5  14a2		       9d 04 01 	      sta.wx	stack+4
      6  14a5		       68		      pla
      7  14a6		       7d 03 01 	      adc.wx	stack+3
      8  14a9		       9d 03 01 	      sta.wx	stack+3
      9  14ac		       68		      pla
      0  14ad					      textat
      1  14ad					      IF	!FPULL
      2  14ad		       68		      pla
      3  14ae		       85 fe		      sta	R3
      4  14b0		       68		      pla
      5  14b1		       85 fd		      sta	R2
      6  14b3				  -	      ELSE
      7  14b3				  -	      sta	R2
      8  14b3				  -	      sty	R3
      9  14b3					      ENDIF
     10  14b3		       68		      pla
     11  14b4		       85 fc		      sta	R1
     12  14b6		       68		      pla
     13  14b7		       85 fb		      sta	R0
     14  14b9		       a0 00		      ldy	#$00
     15  14bb				   .loop
     16  14bb		       b1 fb		      lda	(R0),y
     17  14bd		       f0 06		      beq	.end
     18  14bf		       91 fd		      sta	(R2),y
     19  14c1		       c8		      iny
     20  14c2		       4c bb 14 	      jmp	.loop
     21  14c5				   .end
      0  14c5					      pbyte	#2
      1  14c5		       a9 02		      lda	#2
      2  14c7					      IF	!FPUSH
      3  14c7		       48		      pha
      4  14c8					      ENDIF
      0  14c8					      pbyte	#11
      1  14c8		       a9 0b		      lda	#11
      2  14ca					      IF	!FPUSH
      3  14ca		       48		      pha
      4  14cb					      ENDIF
      0  14cb					      btow
      1  14cb		       a9 00		      lda	#$00
      2  14cd		       48		      pha
      0  14ce					      pword	#55830
      1  14ce					      IF	!FPUSH
      2  14ce		       a9 16		      lda	#<#55830
      3  14d0		       48		      pha
      4  14d1		       a9 da		      lda	#>#55830
      5  14d3		       48		      pha
      6  14d4				  -	      ELSE
      7  14d4				  -	      lda	#<#55830
      8  14d4				  -	      ldy	#>#55830
      9  14d4					      ENDIF
      0  14d4					      memset
      1  14d4					      IF	!FPULL
      2  14d4		       68		      pla
      3  14d5		       85 fc		      sta	R1
      4  14d7		       68		      pla
      5  14d8		       85 fb		      sta	R0
      6  14da				  -	      ELSE
      7  14da				  -	      sta	R0
      8  14da				  -	      sty	R1
      9  14da					      ENDIF
     10  14da		       68		      pla
     11  14db		       85 fe		      sta	R3
     12  14dd		       68		      pla
     13  14de		       85 fd		      sta	R2
     14  14e0		       68		      pla
     15  14e1		       20 de 0a 	      jsr	mem_memset
   4838  14e4				   _EI_70
      0  14e4					      pbyte	#0
      1  14e4		       a9 00		      lda	#0
      2  14e6					      IF	!FPUSH
      3  14e6		       48		      pha
      4  14e7					      ENDIF
      0  14e7					      btow
      1  14e7		       a9 00		      lda	#$00
      2  14e9		       48		      pha
      0  14ea					      plw2var	_ii
      1  14ea					      IF	!FPULL
      2  14ea		       68		      pla
      3  14eb		       8d 95 b6 	      sta	_ii+1
      4  14ee		       68		      pla
      5  14ef		       8d 94 b6 	      sta	_ii
      6  14f2				  -	      ELSE
      7  14f2				  -	      sta	_ii
      8  14f2				  -	      sty	_ii+1
      9  14f2					      ENDIF
   4842  14f2				   FPUSH      SET	1
      0  14f2					      pword	#400
      1  14f2				  -	      IF	!FPUSH
      2  14f2				  -	      lda	#<#400
      3  14f2				  -	      pha
      4  14f2				  -	      lda	#>#400
      5  14f2				  -	      pha
      6  14f2					      ELSE
      7  14f2		       a9 90		      lda	#<#400
      8  14f4		       a0 01		      ldy	#>#400
      9  14f6					      ENDIF
   4844  14f6				   FPULL      SET	1
   4845  14f6				   FPUSH      SET	0
      0  14f6					      plw2var	XFOR_max_22
      1  14f6				  -	      IF	!FPULL
      2  14f6				  -	      pla
      3  14f6				  -	      sta	XFOR_max_22+1
      4  14f6				  -	      pla
      5  14f6				  -	      sta	XFOR_max_22
      6  14f6					      ELSE
      7  14f6		       8d 9b b6 	      sta	XFOR_max_22
      8  14f9		       8c 9c b6 	      sty	XFOR_max_22+1
      9  14fc					      ENDIF
   4847  14fc				   _FOR_22
      0  14fc					      forw	22, _ii
      1  14fc				  -	      IFCONST	XFOR_step_22
      2  14fc				  -
      3  14fc				  -	      lda	XFOR_step_22 + 1
      4  14fc				  -
      5  14fc				  -	      bpl	.cmp
      6  14fc				  -.neg
      7  14fc				  -
      8  14fc				  -	      lda	_ii
      9  14fc				  -	      cmp	XFOR_max_22
     10  14fc				  -	      lda	_ii+1
     11  14fc				  -	      sbc	XFOR_max_22+1
     12  14fc				  -	      bpl	.enter
     13  14fc				  -	      jmp	_ENDFOR_22
     14  14fc					      ENDIF
     15  14fc				   .cmp
     16  14fc
     17  14fc		       ad 9b b6 	      lda	XFOR_max_22
     18  14ff		       cd 94 b6 	      cmp	_ii
     19  1502		       ad 9c b6 	      lda	XFOR_max_22+1
     20  1505		       ed 95 b6 	      sbc	_ii+1
     21  1508		       10 03		      bpl	.enter
     22  150a		       4c 1f 15 	      jmp	_ENDFOR_22
     23  150d				   .enter
   4849  150d				   FPULL      SET	0
   4850  150d				   FPUSH      SET	1
      0  150d					      pbyte	#0
      1  150d		       a9 00		      lda	#0
      2  150f				  -	      IF	!FPUSH
      3  150f				  -	      pha
      4  150f					      ENDIF
   4852  150f				   FPULL      SET	1
   4853  150f				   FPUSH      SET	0
      0  150f					      watchc	53266
      1  150f				  -	      IF	!FPULL
      2  150f				  -	      pla
      3  150f					      ENDIF
      4  150f				   .again
      5  150f		       cd 12 d0 	      cmp	53266
      6  1512		       d0 fb		      bne	.again
      0  1514					      nextw	22, _ii
      1  1514
      2  1514				  -	      IFCONST	XFOR_step_22
      3  1514				  -
      4  1514				  -	      clc
      5  1514				  -	      lda	XFOR_step_22
      6  1514				  -	      adc	_ii
      7  1514				  -	      sta	_ii
      8  1514				  -	      lda	XFOR_step_22+1
      9  1514				  -	      adc	_ii+1
     10  1514				  -	      sta	_ii+1
     11  1514					      ELSE
     12  1514
     13  1514		       ee 94 b6 	      inc	_ii
     14  1517		       d0 03		      bne	.skip
     15  1519		       ee 95 b6 	      inc	_ii+1
     16  151c					      ENDIF
     17  151c				   .skip
     18  151c
     19  151c		       4c fc 14 	      jmp	_FOR_22
   4856  151f				   _ENDFOR_22
   4857  151f		       4c 5f 0c 	      jmp	_Lmain
   4858  1522
   4859  1522
   4860  1522
   4861  1522
   4862  1522
   4863  1522
   4864  1522
   4865  1522				   _Lgame_completed
   4866  1522		       20 68 74 	      jsr	_Pri_off
   4867  1522				   FPULL      SET	0
   4868  1522				   FPUSH      SET	1
      0  1525					      pbyte	#2
      1  1525		       a9 02		      lda	#2
      2  1527				  -	      IF	!FPUSH
      3  1527				  -	      pha
      4  1527					      ENDIF
   4870  1527				   FPULL      SET	1
   4871  1527				   FPUSH      SET	0
      0  1527					      plb2var	_setup_screen.draw_title
      1  1527				  -	      IF	!FPULL
      2  1527				  -	      pla
      3  1527					      ENDIF
      4  1527		       8d 5a b6 	      sta	_setup_screen.draw_title
   4873  152a		       20 0e 86 	      jsr	_Psetup_screen
   4874  152d				   _Lloop4ever
   4875  152d		       4c 2d 15 	      jmp	_Lloop4ever
   4876  1530
   4877  1530
   4878  1530
   4879  1530
   4880  1530
   4881  1530
   4882  1530
   4883  1530				   _Linstructions
   4884  1530				   FPULL      SET	0
   4885  1530				   FPUSH      SET	1
      0  1530					      pbyte	#200
      1  1530		       a9 c8		      lda	#200
      2  1532				  -	      IF	!FPUSH
      3  1532				  -	      pha
      4  1532					      ENDIF
   4887  1532				   FPULL      SET	1
   4888  1532				   FPUSH      SET	0
      0  1532					      pokeb_const_addr	#53270
      1  1532
      2  1532
      3  1532
      4  1532		       d0 16	   .ad	      EQU	#53270
      5  1532				  -	      IF	!FPULL
      6  1532				  -	      pla
      7  1532					      ENDIF
      8  1532		       8d 16 d0 	      sta	.ad
   4890  1532				   FPULL      SET	0
      0  1535					      paddr	_S15
      0  1535					      pword	_S15
      1  1535					      IF	!FPUSH
      2  1535		       a9 b2		      lda	#<_S15
      3  1537		       48		      pha
      4  1538		       a9 ae		      lda	#>_S15
      5  153a		       48		      pha
      6  153b				  -	      ELSE
      7  153b				  -	      lda	#<_S15
      8  153b				  -	      ldy	#>_S15
      9  153b					      ENDIF
      0  153b					      stdlib_putstr
      1  153b		       68		      pla
      2  153c		       a8		      tay
      3  153d		       68		      pla
      4  153e		       20 8c 09 	      jsr	STDLIB_PRINT
   4893  1541		       a9 0d		      lda	#13
   4894  1543		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1546					      paddr	_S16
      0  1546					      pword	_S16
      1  1546					      IF	!FPUSH
      2  1546		       a9 b6		      lda	#<_S16
      3  1548		       48		      pha
      4  1549		       a9 ae		      lda	#>_S16
      5  154b		       48		      pha
      6  154c				  -	      ELSE
      7  154c				  -	      lda	#<_S16
      8  154c				  -	      ldy	#>_S16
      9  154c					      ENDIF
      0  154c					      stdlib_putstr
      1  154c		       68		      pla
      2  154d		       a8		      tay
      3  154e		       68		      pla
      4  154f		       20 8c 09 	      jsr	STDLIB_PRINT
   4897  1552		       a9 0d		      lda	#13
   4898  1554		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1557					      paddr	_S17
      0  1557					      pword	_S17
      1  1557					      IF	!FPUSH
      2  1557		       a9 d2		      lda	#<_S17
      3  1559		       48		      pha
      4  155a		       a9 ae		      lda	#>_S17
      5  155c		       48		      pha
      6  155d				  -	      ELSE
      7  155d				  -	      lda	#<_S17
      8  155d				  -	      ldy	#>_S17
      9  155d					      ENDIF
      0  155d					      stdlib_putstr
      1  155d		       68		      pla
      2  155e		       a8		      tay
      3  155f		       68		      pla
      4  1560		       20 8c 09 	      jsr	STDLIB_PRINT
   4901  1563		       a9 0d		      lda	#13
   4902  1565		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1568					      paddr	_S18
      0  1568					      pword	_S18
      1  1568					      IF	!FPUSH
      2  1568		       a9 ef		      lda	#<_S18
      3  156a		       48		      pha
      4  156b		       a9 ae		      lda	#>_S18
      5  156d		       48		      pha
      6  156e				  -	      ELSE
      7  156e				  -	      lda	#<_S18
      8  156e				  -	      ldy	#>_S18
      9  156e					      ENDIF
      0  156e					      stdlib_putstr
      1  156e		       68		      pla
      2  156f		       a8		      tay
      3  1570		       68		      pla
      4  1571		       20 8c 09 	      jsr	STDLIB_PRINT
   4905  1574		       a9 0d		      lda	#13
   4906  1576		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1579					      paddr	_S19
      0  1579					      pword	_S19
      1  1579					      IF	!FPUSH
      2  1579		       a9 16		      lda	#<_S19
      3  157b		       48		      pha
      4  157c		       a9 af		      lda	#>_S19
      5  157e		       48		      pha
      6  157f				  -	      ELSE
      7  157f				  -	      lda	#<_S19
      8  157f				  -	      ldy	#>_S19
      9  157f					      ENDIF
      0  157f					      stdlib_putstr
      1  157f		       68		      pla
      2  1580		       a8		      tay
      3  1581		       68		      pla
      4  1582		       20 8c 09 	      jsr	STDLIB_PRINT
   4909  1585		       a9 0d		      lda	#13
   4910  1587		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  158a					      paddr	_S20
      0  158a					      pword	_S20
      1  158a					      IF	!FPUSH
      2  158a		       a9 3c		      lda	#<_S20
      3  158c		       48		      pha
      4  158d		       a9 af		      lda	#>_S20
      5  158f		       48		      pha
      6  1590				  -	      ELSE
      7  1590				  -	      lda	#<_S20
      8  1590				  -	      ldy	#>_S20
      9  1590					      ENDIF
      0  1590					      stdlib_putstr
      1  1590		       68		      pla
      2  1591		       a8		      tay
      3  1592		       68		      pla
      4  1593		       20 8c 09 	      jsr	STDLIB_PRINT
   4913  1596		       a9 0d		      lda	#13
   4914  1598		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  159b					      paddr	_S21
      0  159b					      pword	_S21
      1  159b					      IF	!FPUSH
      2  159b		       a9 62		      lda	#<_S21
      3  159d		       48		      pha
      4  159e		       a9 af		      lda	#>_S21
      5  15a0		       48		      pha
      6  15a1				  -	      ELSE
      7  15a1				  -	      lda	#<_S21
      8  15a1				  -	      ldy	#>_S21
      9  15a1					      ENDIF
      0  15a1					      stdlib_putstr
      1  15a1		       68		      pla
      2  15a2		       a8		      tay
      3  15a3		       68		      pla
      4  15a4		       20 8c 09 	      jsr	STDLIB_PRINT
   4917  15a7		       a9 0d		      lda	#13
   4918  15a9		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  15ac					      paddr	_S22
      0  15ac					      pword	_S22
      1  15ac					      IF	!FPUSH
      2  15ac		       a9 77		      lda	#<_S22
      3  15ae		       48		      pha
      4  15af		       a9 af		      lda	#>_S22
      5  15b1		       48		      pha
      6  15b2				  -	      ELSE
      7  15b2				  -	      lda	#<_S22
      8  15b2				  -	      ldy	#>_S22
      9  15b2					      ENDIF
      0  15b2					      stdlib_putstr
      1  15b2		       68		      pla
      2  15b3		       a8		      tay
      3  15b4		       68		      pla
      4  15b5		       20 8c 09 	      jsr	STDLIB_PRINT
   4921  15b8		       a9 0d		      lda	#13
   4922  15ba		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  15bd					      paddr	_S23
      0  15bd					      pword	_S23
      1  15bd					      IF	!FPUSH
      2  15bd		       a9 9f		      lda	#<_S23
      3  15bf		       48		      pha
      4  15c0		       a9 af		      lda	#>_S23
      5  15c2		       48		      pha
      6  15c3				  -	      ELSE
      7  15c3				  -	      lda	#<_S23
      8  15c3				  -	      ldy	#>_S23
      9  15c3					      ENDIF
      0  15c3					      stdlib_putstr
      1  15c3		       68		      pla
      2  15c4		       a8		      tay
      3  15c5		       68		      pla
      4  15c6		       20 8c 09 	      jsr	STDLIB_PRINT
   4925  15c9		       a9 0d		      lda	#13
   4926  15cb		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  15ce					      paddr	_S24
      0  15ce					      pword	_S24
      1  15ce					      IF	!FPUSH
      2  15ce		       a9 a9		      lda	#<_S24
      3  15d0		       48		      pha
      4  15d1		       a9 af		      lda	#>_S24
      5  15d3		       48		      pha
      6  15d4				  -	      ELSE
      7  15d4				  -	      lda	#<_S24
      8  15d4				  -	      ldy	#>_S24
      9  15d4					      ENDIF
      0  15d4					      stdlib_putstr
      1  15d4		       68		      pla
      2  15d5		       a8		      tay
      3  15d6		       68		      pla
      4  15d7		       20 8c 09 	      jsr	STDLIB_PRINT
   4929  15da		       a9 0d		      lda	#13
   4930  15dc		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  15df					      paddr	_S25
      0  15df					      pword	_S25
      1  15df					      IF	!FPUSH
      2  15df		       a9 b4		      lda	#<_S25
      3  15e1		       48		      pha
      4  15e2		       a9 af		      lda	#>_S25
      5  15e4		       48		      pha
      6  15e5				  -	      ELSE
      7  15e5				  -	      lda	#<_S25
      8  15e5				  -	      ldy	#>_S25
      9  15e5					      ENDIF
      0  15e5					      stdlib_putstr
      1  15e5		       68		      pla
      2  15e6		       a8		      tay
      3  15e7		       68		      pla
      4  15e8		       20 8c 09 	      jsr	STDLIB_PRINT
   4933  15eb		       a9 0d		      lda	#13
   4934  15ed		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  15f0					      paddr	_S26
      0  15f0					      pword	_S26
      1  15f0					      IF	!FPUSH
      2  15f0		       a9 dc		      lda	#<_S26
      3  15f2		       48		      pha
      4  15f3		       a9 af		      lda	#>_S26
      5  15f5		       48		      pha
      6  15f6				  -	      ELSE
      7  15f6				  -	      lda	#<_S26
      8  15f6				  -	      ldy	#>_S26
      9  15f6					      ENDIF
      0  15f6					      stdlib_putstr
      1  15f6		       68		      pla
      2  15f7		       a8		      tay
      3  15f8		       68		      pla
      4  15f9		       20 8c 09 	      jsr	STDLIB_PRINT
   4937  15fc		       a9 0d		      lda	#13
   4938  15fe		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1601					      paddr	_S27
      0  1601					      pword	_S27
      1  1601					      IF	!FPUSH
      2  1601		       a9 02		      lda	#<_S27
      3  1603		       48		      pha
      4  1604		       a9 b0		      lda	#>_S27
      5  1606		       48		      pha
      6  1607				  -	      ELSE
      7  1607				  -	      lda	#<_S27
      8  1607				  -	      ldy	#>_S27
      9  1607					      ENDIF
      0  1607					      stdlib_putstr
      1  1607		       68		      pla
      2  1608		       a8		      tay
      3  1609		       68		      pla
      4  160a		       20 8c 09 	      jsr	STDLIB_PRINT
   4941  160d		       a9 0d		      lda	#13
   4942  160f		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1612					      paddr	_S28
      0  1612					      pword	_S28
      1  1612					      IF	!FPUSH
      2  1612		       a9 28		      lda	#<_S28
      3  1614		       48		      pha
      4  1615		       a9 b0		      lda	#>_S28
      5  1617		       48		      pha
      6  1618				  -	      ELSE
      7  1618				  -	      lda	#<_S28
      8  1618				  -	      ldy	#>_S28
      9  1618					      ENDIF
      0  1618					      stdlib_putstr
      1  1618		       68		      pla
      2  1619		       a8		      tay
      3  161a		       68		      pla
      4  161b		       20 8c 09 	      jsr	STDLIB_PRINT
   4945  161e		       a9 0d		      lda	#13
   4946  1620		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1623					      paddr	_S29
      0  1623					      pword	_S29
      1  1623					      IF	!FPUSH
      2  1623		       a9 4f		      lda	#<_S29
      3  1625		       48		      pha
      4  1626		       a9 b0		      lda	#>_S29
      5  1628		       48		      pha
      6  1629				  -	      ELSE
      7  1629				  -	      lda	#<_S29
      8  1629				  -	      ldy	#>_S29
      9  1629					      ENDIF
      0  1629					      stdlib_putstr
      1  1629		       68		      pla
      2  162a		       a8		      tay
      3  162b		       68		      pla
      4  162c		       20 8c 09 	      jsr	STDLIB_PRINT
   4949  162f		       a9 0d		      lda	#13
   4950  1631		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1634					      paddr	_S30
      0  1634					      pword	_S30
      1  1634					      IF	!FPUSH
      2  1634		       a9 75		      lda	#<_S30
      3  1636		       48		      pha
      4  1637		       a9 b0		      lda	#>_S30
      5  1639		       48		      pha
      6  163a				  -	      ELSE
      7  163a				  -	      lda	#<_S30
      8  163a				  -	      ldy	#>_S30
      9  163a					      ENDIF
      0  163a					      stdlib_putstr
      1  163a		       68		      pla
      2  163b		       a8		      tay
      3  163c		       68		      pla
      4  163d		       20 8c 09 	      jsr	STDLIB_PRINT
   4953  1640		       a9 0d		      lda	#13
   4954  1642		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1645					      paddr	_S31
      0  1645					      pword	_S31
      1  1645					      IF	!FPUSH
      2  1645		       a9 9d		      lda	#<_S31
      3  1647		       48		      pha
      4  1648		       a9 b0		      lda	#>_S31
      5  164a		       48		      pha
      6  164b				  -	      ELSE
      7  164b				  -	      lda	#<_S31
      8  164b				  -	      ldy	#>_S31
      9  164b					      ENDIF
      0  164b					      stdlib_putstr
      1  164b		       68		      pla
      2  164c		       a8		      tay
      3  164d		       68		      pla
      4  164e		       20 8c 09 	      jsr	STDLIB_PRINT
   4957  1651		       a9 0d		      lda	#13
   4958  1653		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1656					      paddr	_S32
      0  1656					      pword	_S32
      1  1656					      IF	!FPUSH
      2  1656		       a9 c2		      lda	#<_S32
      3  1658		       48		      pha
      4  1659		       a9 b0		      lda	#>_S32
      5  165b		       48		      pha
      6  165c				  -	      ELSE
      7  165c				  -	      lda	#<_S32
      8  165c				  -	      ldy	#>_S32
      9  165c					      ENDIF
      0  165c					      stdlib_putstr
      1  165c		       68		      pla
      2  165d		       a8		      tay
      3  165e		       68		      pla
      4  165f		       20 8c 09 	      jsr	STDLIB_PRINT
   4961  1662		       a9 0d		      lda	#13
   4962  1664		       20 16 e7 	      jsr	KERNAL_PRINTCHR
   4963  1667		       20 c4 18 	      jsr	_Lwait_key
      0  166a					      paddr	_S33
      0  166a					      pword	_S33
      1  166a					      IF	!FPUSH
      2  166a		       a9 de		      lda	#<_S33
      3  166c		       48		      pha
      4  166d		       a9 b0		      lda	#>_S33
      5  166f		       48		      pha
      6  1670				  -	      ELSE
      7  1670				  -	      lda	#<_S33
      8  1670				  -	      ldy	#>_S33
      9  1670					      ENDIF
      0  1670					      stdlib_putstr
      1  1670		       68		      pla
      2  1671		       a8		      tay
      3  1672		       68		      pla
      4  1673		       20 8c 09 	      jsr	STDLIB_PRINT
   4966  1676		       a9 0d		      lda	#13
   4967  1678		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  167b					      paddr	_S34
      0  167b					      pword	_S34
      1  167b					      IF	!FPUSH
      2  167b		       a9 ea		      lda	#<_S34
      3  167d		       48		      pha
      4  167e		       a9 b0		      lda	#>_S34
      5  1680		       48		      pha
      6  1681				  -	      ELSE
      7  1681				  -	      lda	#<_S34
      8  1681				  -	      ldy	#>_S34
      9  1681					      ENDIF
      0  1681					      stdlib_putstr
      1  1681		       68		      pla
      2  1682		       a8		      tay
      3  1683		       68		      pla
      4  1684		       20 8c 09 	      jsr	STDLIB_PRINT
   4970  1687		       a9 0d		      lda	#13
   4971  1689		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  168c					      paddr	_S35
      0  168c					      pword	_S35
      1  168c					      IF	!FPUSH
      2  168c		       a9 f5		      lda	#<_S35
      3  168e		       48		      pha
      4  168f		       a9 b0		      lda	#>_S35
      5  1691		       48		      pha
      6  1692				  -	      ELSE
      7  1692				  -	      lda	#<_S35
      8  1692				  -	      ldy	#>_S35
      9  1692					      ENDIF
      0  1692					      stdlib_putstr
      1  1692		       68		      pla
      2  1693		       a8		      tay
      3  1694		       68		      pla
      4  1695		       20 8c 09 	      jsr	STDLIB_PRINT
   4974  1698		       a9 0d		      lda	#13
   4975  169a		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  169d					      paddr	_S36
      0  169d					      pword	_S36
      1  169d					      IF	!FPUSH
      2  169d		       a9 1b		      lda	#<_S36
      3  169f		       48		      pha
      4  16a0		       a9 b1		      lda	#>_S36
      5  16a2		       48		      pha
      6  16a3				  -	      ELSE
      7  16a3				  -	      lda	#<_S36
      8  16a3				  -	      ldy	#>_S36
      9  16a3					      ENDIF
      0  16a3					      stdlib_putstr
      1  16a3		       68		      pla
      2  16a4		       a8		      tay
      3  16a5		       68		      pla
      4  16a6		       20 8c 09 	      jsr	STDLIB_PRINT
   4978  16a9		       a9 0d		      lda	#13
   4979  16ab		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  16ae					      paddr	_S37
      0  16ae					      pword	_S37
      1  16ae					      IF	!FPUSH
      2  16ae		       a9 43		      lda	#<_S37
      3  16b0		       48		      pha
      4  16b1		       a9 b1		      lda	#>_S37
      5  16b3		       48		      pha
      6  16b4				  -	      ELSE
      7  16b4				  -	      lda	#<_S37
      8  16b4				  -	      ldy	#>_S37
      9  16b4					      ENDIF
      0  16b4					      stdlib_putstr
      1  16b4		       68		      pla
      2  16b5		       a8		      tay
      3  16b6		       68		      pla
      4  16b7		       20 8c 09 	      jsr	STDLIB_PRINT
   4982  16ba		       a9 0d		      lda	#13
   4983  16bc		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  16bf					      paddr	_S38
      0  16bf					      pword	_S38
      1  16bf					      IF	!FPUSH
      2  16bf		       a9 6a		      lda	#<_S38
      3  16c1		       48		      pha
      4  16c2		       a9 b1		      lda	#>_S38
      5  16c4		       48		      pha
      6  16c5				  -	      ELSE
      7  16c5				  -	      lda	#<_S38
      8  16c5				  -	      ldy	#>_S38
      9  16c5					      ENDIF
      0  16c5					      stdlib_putstr
      1  16c5		       68		      pla
      2  16c6		       a8		      tay
      3  16c7		       68		      pla
      4  16c8		       20 8c 09 	      jsr	STDLIB_PRINT
   4986  16cb		       a9 0d		      lda	#13
   4987  16cd		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  16d0					      paddr	_S39
      0  16d0					      pword	_S39
      1  16d0					      IF	!FPUSH
      2  16d0		       a9 91		      lda	#<_S39
      3  16d2		       48		      pha
      4  16d3		       a9 b1		      lda	#>_S39
      5  16d5		       48		      pha
      6  16d6				  -	      ELSE
      7  16d6				  -	      lda	#<_S39
      8  16d6				  -	      ldy	#>_S39
      9  16d6					      ENDIF
      0  16d6					      stdlib_putstr
      1  16d6		       68		      pla
      2  16d7		       a8		      tay
      3  16d8		       68		      pla
      4  16d9		       20 8c 09 	      jsr	STDLIB_PRINT
   4990  16dc		       a9 0d		      lda	#13
   4991  16de		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  16e1					      paddr	_S40
      0  16e1					      pword	_S40
      1  16e1					      IF	!FPUSH
      2  16e1		       a9 b9		      lda	#<_S40
      3  16e3		       48		      pha
      4  16e4		       a9 b1		      lda	#>_S40
      5  16e6		       48		      pha
      6  16e7				  -	      ELSE
      7  16e7				  -	      lda	#<_S40
      8  16e7				  -	      ldy	#>_S40
      9  16e7					      ENDIF
      0  16e7					      stdlib_putstr
      1  16e7		       68		      pla
      2  16e8		       a8		      tay
      3  16e9		       68		      pla
      4  16ea		       20 8c 09 	      jsr	STDLIB_PRINT
   4994  16ed		       a9 0d		      lda	#13
   4995  16ef		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  16f2					      paddr	_S41
      0  16f2					      pword	_S41
      1  16f2					      IF	!FPUSH
      2  16f2		       a9 e1		      lda	#<_S41
      3  16f4		       48		      pha
      4  16f5		       a9 b1		      lda	#>_S41
      5  16f7		       48		      pha
      6  16f8				  -	      ELSE
      7  16f8				  -	      lda	#<_S41
      8  16f8				  -	      ldy	#>_S41
      9  16f8					      ENDIF
      0  16f8					      stdlib_putstr
      1  16f8		       68		      pla
      2  16f9		       a8		      tay
      3  16fa		       68		      pla
      4  16fb		       20 8c 09 	      jsr	STDLIB_PRINT
   4998  16fe		       a9 0d		      lda	#13
   4999  1700		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1703					      paddr	_S42
      0  1703					      pword	_S42
      1  1703					      IF	!FPUSH
      2  1703		       a9 06		      lda	#<_S42
      3  1705		       48		      pha
      4  1706		       a9 b2		      lda	#>_S42
      5  1708		       48		      pha
      6  1709				  -	      ELSE
      7  1709				  -	      lda	#<_S42
      8  1709				  -	      ldy	#>_S42
      9  1709					      ENDIF
      0  1709					      stdlib_putstr
      1  1709		       68		      pla
      2  170a		       a8		      tay
      3  170b		       68		      pla
      4  170c		       20 8c 09 	      jsr	STDLIB_PRINT
   5002  170f		       a9 0d		      lda	#13
   5003  1711		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1714					      paddr	_S43
      0  1714					      pword	_S43
      1  1714					      IF	!FPUSH
      2  1714		       a9 25		      lda	#<_S43
      3  1716		       48		      pha
      4  1717		       a9 b2		      lda	#>_S43
      5  1719		       48		      pha
      6  171a				  -	      ELSE
      7  171a				  -	      lda	#<_S43
      8  171a				  -	      ldy	#>_S43
      9  171a					      ENDIF
      0  171a					      stdlib_putstr
      1  171a		       68		      pla
      2  171b		       a8		      tay
      3  171c		       68		      pla
      4  171d		       20 8c 09 	      jsr	STDLIB_PRINT
   5006  1720		       a9 0d		      lda	#13
   5007  1722		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1725					      paddr	_S44
      0  1725					      pword	_S44
      1  1725					      IF	!FPUSH
      2  1725		       a9 47		      lda	#<_S44
      3  1727		       48		      pha
      4  1728		       a9 b2		      lda	#>_S44
      5  172a		       48		      pha
      6  172b				  -	      ELSE
      7  172b				  -	      lda	#<_S44
      8  172b				  -	      ldy	#>_S44
      9  172b					      ENDIF
      0  172b					      stdlib_putstr
      1  172b		       68		      pla
      2  172c		       a8		      tay
      3  172d		       68		      pla
      4  172e		       20 8c 09 	      jsr	STDLIB_PRINT
   5010  1731		       a9 0d		      lda	#13
   5011  1733		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1736					      paddr	_S45
      0  1736					      pword	_S45
      1  1736					      IF	!FPUSH
      2  1736		       a9 6c		      lda	#<_S45
      3  1738		       48		      pha
      4  1739		       a9 b2		      lda	#>_S45
      5  173b		       48		      pha
      6  173c				  -	      ELSE
      7  173c				  -	      lda	#<_S45
      8  173c				  -	      ldy	#>_S45
      9  173c					      ENDIF
      0  173c					      stdlib_putstr
      1  173c		       68		      pla
      2  173d		       a8		      tay
      3  173e		       68		      pla
      4  173f		       20 8c 09 	      jsr	STDLIB_PRINT
   5014  1742		       a9 0d		      lda	#13
   5015  1744		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1747					      paddr	_S46
      0  1747					      pword	_S46
      1  1747					      IF	!FPUSH
      2  1747		       a9 7d		      lda	#<_S46
      3  1749		       48		      pha
      4  174a		       a9 b2		      lda	#>_S46
      5  174c		       48		      pha
      6  174d				  -	      ELSE
      7  174d				  -	      lda	#<_S46
      8  174d				  -	      ldy	#>_S46
      9  174d					      ENDIF
      0  174d					      stdlib_putstr
      1  174d		       68		      pla
      2  174e		       a8		      tay
      3  174f		       68		      pla
      4  1750		       20 8c 09 	      jsr	STDLIB_PRINT
   5018  1753		       a9 0d		      lda	#13
   5019  1755		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1758					      paddr	_S47
      0  1758					      pword	_S47
      1  1758					      IF	!FPUSH
      2  1758		       a9 95		      lda	#<_S47
      3  175a		       48		      pha
      4  175b		       a9 b2		      lda	#>_S47
      5  175d		       48		      pha
      6  175e				  -	      ELSE
      7  175e				  -	      lda	#<_S47
      8  175e				  -	      ldy	#>_S47
      9  175e					      ENDIF
      0  175e					      stdlib_putstr
      1  175e		       68		      pla
      2  175f		       a8		      tay
      3  1760		       68		      pla
      4  1761		       20 8c 09 	      jsr	STDLIB_PRINT
   5022  1764		       a9 0d		      lda	#13
   5023  1766		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1769					      paddr	_S48
      0  1769					      pword	_S48
      1  1769					      IF	!FPUSH
      2  1769		       a9 bc		      lda	#<_S48
      3  176b		       48		      pha
      4  176c		       a9 b2		      lda	#>_S48
      5  176e		       48		      pha
      6  176f				  -	      ELSE
      7  176f				  -	      lda	#<_S48
      8  176f				  -	      ldy	#>_S48
      9  176f					      ENDIF
      0  176f					      stdlib_putstr
      1  176f		       68		      pla
      2  1770		       a8		      tay
      3  1771		       68		      pla
      4  1772		       20 8c 09 	      jsr	STDLIB_PRINT
   5026  1775		       a9 0d		      lda	#13
   5027  1777		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  177a					      paddr	_S49
      0  177a					      pword	_S49
      1  177a					      IF	!FPUSH
      2  177a		       a9 d8		      lda	#<_S49
      3  177c		       48		      pha
      4  177d		       a9 b2		      lda	#>_S49
      5  177f		       48		      pha
      6  1780				  -	      ELSE
      7  1780				  -	      lda	#<_S49
      8  1780				  -	      ldy	#>_S49
      9  1780					      ENDIF
      0  1780					      stdlib_putstr
      1  1780		       68		      pla
      2  1781		       a8		      tay
      3  1782		       68		      pla
      4  1783		       20 8c 09 	      jsr	STDLIB_PRINT
   5030  1786		       a9 0d		      lda	#13
   5031  1788		       20 16 e7 	      jsr	KERNAL_PRINTCHR
   5032  178b		       20 c4 18 	      jsr	_Lwait_key
      0  178e					      paddr	_S50
      0  178e					      pword	_S50
      1  178e					      IF	!FPUSH
      2  178e		       a9 f4		      lda	#<_S50
      3  1790		       48		      pha
      4  1791		       a9 b2		      lda	#>_S50
      5  1793		       48		      pha
      6  1794				  -	      ELSE
      7  1794				  -	      lda	#<_S50
      8  1794				  -	      ldy	#>_S50
      9  1794					      ENDIF
      0  1794					      stdlib_putstr
      1  1794		       68		      pla
      2  1795		       a8		      tay
      3  1796		       68		      pla
      4  1797		       20 8c 09 	      jsr	STDLIB_PRINT
   5035  179a		       a9 0d		      lda	#13
   5036  179c		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  179f					      paddr	_S51
      0  179f					      pword	_S51
      1  179f					      IF	!FPUSH
      2  179f		       a9 ff		      lda	#<_S51
      3  17a1		       48		      pha
      4  17a2		       a9 b2		      lda	#>_S51
      5  17a4		       48		      pha
      6  17a5				  -	      ELSE
      7  17a5				  -	      lda	#<_S51
      8  17a5				  -	      ldy	#>_S51
      9  17a5					      ENDIF
      0  17a5					      stdlib_putstr
      1  17a5		       68		      pla
      2  17a6		       a8		      tay
      3  17a7		       68		      pla
      4  17a8		       20 8c 09 	      jsr	STDLIB_PRINT
   5039  17ab		       a9 0d		      lda	#13
   5040  17ad		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  17b0					      paddr	_S52
      0  17b0					      pword	_S52
      1  17b0					      IF	!FPUSH
      2  17b0		       a9 09		      lda	#<_S52
      3  17b2		       48		      pha
      4  17b3		       a9 b3		      lda	#>_S52
      5  17b5		       48		      pha
      6  17b6				  -	      ELSE
      7  17b6				  -	      lda	#<_S52
      8  17b6				  -	      ldy	#>_S52
      9  17b6					      ENDIF
      0  17b6					      stdlib_putstr
      1  17b6		       68		      pla
      2  17b7		       a8		      tay
      3  17b8		       68		      pla
      4  17b9		       20 8c 09 	      jsr	STDLIB_PRINT
   5043  17bc		       a9 0d		      lda	#13
   5044  17be		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  17c1					      paddr	_S53
      0  17c1					      pword	_S53
      1  17c1					      IF	!FPUSH
      2  17c1		       a9 31		      lda	#<_S53
      3  17c3		       48		      pha
      4  17c4		       a9 b3		      lda	#>_S53
      5  17c6		       48		      pha
      6  17c7				  -	      ELSE
      7  17c7				  -	      lda	#<_S53
      8  17c7				  -	      ldy	#>_S53
      9  17c7					      ENDIF
      0  17c7					      stdlib_putstr
      1  17c7		       68		      pla
      2  17c8		       a8		      tay
      3  17c9		       68		      pla
      4  17ca		       20 8c 09 	      jsr	STDLIB_PRINT
   5047  17cd		       a9 0d		      lda	#13
   5048  17cf		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  17d2					      paddr	_S54
      0  17d2					      pword	_S54
      1  17d2					      IF	!FPUSH
      2  17d2		       a9 58		      lda	#<_S54
      3  17d4		       48		      pha
      4  17d5		       a9 b3		      lda	#>_S54
      5  17d7		       48		      pha
      6  17d8				  -	      ELSE
      7  17d8				  -	      lda	#<_S54
      8  17d8				  -	      ldy	#>_S54
      9  17d8					      ENDIF
      0  17d8					      stdlib_putstr
      1  17d8		       68		      pla
      2  17d9		       a8		      tay
      3  17da		       68		      pla
      4  17db		       20 8c 09 	      jsr	STDLIB_PRINT
   5051  17de		       a9 0d		      lda	#13
   5052  17e0		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  17e3					      paddr	_S55
      0  17e3					      pword	_S55
      1  17e3					      IF	!FPUSH
      2  17e3		       a9 7e		      lda	#<_S55
      3  17e5		       48		      pha
      4  17e6		       a9 b3		      lda	#>_S55
      5  17e8		       48		      pha
      6  17e9				  -	      ELSE
      7  17e9				  -	      lda	#<_S55
      8  17e9				  -	      ldy	#>_S55
      9  17e9					      ENDIF
      0  17e9					      stdlib_putstr
      1  17e9		       68		      pla
      2  17ea		       a8		      tay
      3  17eb		       68		      pla
      4  17ec		       20 8c 09 	      jsr	STDLIB_PRINT
   5055  17ef		       a9 0d		      lda	#13
   5056  17f1		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  17f4					      paddr	_S56
      0  17f4					      pword	_S56
      1  17f4					      IF	!FPUSH
      2  17f4		       a9 a6		      lda	#<_S56
      3  17f6		       48		      pha
      4  17f7		       a9 b3		      lda	#>_S56
      5  17f9		       48		      pha
      6  17fa				  -	      ELSE
      7  17fa				  -	      lda	#<_S56
      8  17fa				  -	      ldy	#>_S56
      9  17fa					      ENDIF
      0  17fa					      stdlib_putstr
      1  17fa		       68		      pla
      2  17fb		       a8		      tay
      3  17fc		       68		      pla
      4  17fd		       20 8c 09 	      jsr	STDLIB_PRINT
   5059  1800		       a9 0d		      lda	#13
   5060  1802		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1805					      paddr	_S57
      0  1805					      pword	_S57
      1  1805					      IF	!FPUSH
      2  1805		       a9 cb		      lda	#<_S57
      3  1807		       48		      pha
      4  1808		       a9 b3		      lda	#>_S57
      5  180a		       48		      pha
      6  180b				  -	      ELSE
      7  180b				  -	      lda	#<_S57
      8  180b				  -	      ldy	#>_S57
      9  180b					      ENDIF
      0  180b					      stdlib_putstr
      1  180b		       68		      pla
      2  180c		       a8		      tay
      3  180d		       68		      pla
      4  180e		       20 8c 09 	      jsr	STDLIB_PRINT
   5063  1811		       a9 0d		      lda	#13
   5064  1813		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1816					      paddr	_S58
      0  1816					      pword	_S58
      1  1816					      IF	!FPUSH
      2  1816		       a9 d4		      lda	#<_S58
      3  1818		       48		      pha
      4  1819		       a9 b3		      lda	#>_S58
      5  181b		       48		      pha
      6  181c				  -	      ELSE
      7  181c				  -	      lda	#<_S58
      8  181c				  -	      ldy	#>_S58
      9  181c					      ENDIF
      0  181c					      stdlib_putstr
      1  181c		       68		      pla
      2  181d		       a8		      tay
      3  181e		       68		      pla
      4  181f		       20 8c 09 	      jsr	STDLIB_PRINT
   5067  1822		       a9 0d		      lda	#13
   5068  1824		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1827					      paddr	_S59
      0  1827					      pword	_S59
      1  1827					      IF	!FPUSH
      2  1827		       a9 de		      lda	#<_S59
      3  1829		       48		      pha
      4  182a		       a9 b3		      lda	#>_S59
      5  182c		       48		      pha
      6  182d				  -	      ELSE
      7  182d				  -	      lda	#<_S59
      8  182d				  -	      ldy	#>_S59
      9  182d					      ENDIF
      0  182d					      stdlib_putstr
      1  182d		       68		      pla
      2  182e		       a8		      tay
      3  182f		       68		      pla
      4  1830		       20 8c 09 	      jsr	STDLIB_PRINT
   5071  1833		       a9 0d		      lda	#13
   5072  1835		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1838					      paddr	_S60
      0  1838					      pword	_S60
      1  1838					      IF	!FPUSH
      2  1838		       a9 03		      lda	#<_S60
      3  183a		       48		      pha
      4  183b		       a9 b4		      lda	#>_S60
      5  183d		       48		      pha
      6  183e				  -	      ELSE
      7  183e				  -	      lda	#<_S60
      8  183e				  -	      ldy	#>_S60
      9  183e					      ENDIF
      0  183e					      stdlib_putstr
      1  183e		       68		      pla
      2  183f		       a8		      tay
      3  1840		       68		      pla
      4  1841		       20 8c 09 	      jsr	STDLIB_PRINT
   5075  1844		       a9 0d		      lda	#13
   5076  1846		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  1849					      paddr	_S61
      0  1849					      pword	_S61
      1  1849					      IF	!FPUSH
      2  1849		       a9 27		      lda	#<_S61
      3  184b		       48		      pha
      4  184c		       a9 b4		      lda	#>_S61
      5  184e		       48		      pha
      6  184f				  -	      ELSE
      7  184f				  -	      lda	#<_S61
      8  184f				  -	      ldy	#>_S61
      9  184f					      ENDIF
      0  184f					      stdlib_putstr
      1  184f		       68		      pla
      2  1850		       a8		      tay
      3  1851		       68		      pla
      4  1852		       20 8c 09 	      jsr	STDLIB_PRINT
   5079  1855		       a9 0d		      lda	#13
   5080  1857		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  185a					      paddr	_S62
      0  185a					      pword	_S62
      1  185a					      IF	!FPUSH
      2  185a		       a9 48		      lda	#<_S62
      3  185c		       48		      pha
      4  185d		       a9 b4		      lda	#>_S62
      5  185f		       48		      pha
      6  1860				  -	      ELSE
      7  1860				  -	      lda	#<_S62
      8  1860				  -	      ldy	#>_S62
      9  1860					      ENDIF
      0  1860					      stdlib_putstr
      1  1860		       68		      pla
      2  1861		       a8		      tay
      3  1862		       68		      pla
      4  1863		       20 8c 09 	      jsr	STDLIB_PRINT
   5083  1866		       a9 0d		      lda	#13
   5084  1868		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  186b					      paddr	_S63
      0  186b					      pword	_S63
      1  186b					      IF	!FPUSH
      2  186b		       a9 71		      lda	#<_S63
      3  186d		       48		      pha
      4  186e		       a9 b4		      lda	#>_S63
      5  1870		       48		      pha
      6  1871				  -	      ELSE
      7  1871				  -	      lda	#<_S63
      8  1871				  -	      ldy	#>_S63
      9  1871					      ENDIF
      0  1871					      stdlib_putstr
      1  1871		       68		      pla
      2  1872		       a8		      tay
      3  1873		       68		      pla
      4  1874		       20 8c 09 	      jsr	STDLIB_PRINT
   5087  1877		       a9 0d		      lda	#13
   5088  1879		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  187c					      paddr	_S64
      0  187c					      pword	_S64
      1  187c					      IF	!FPUSH
      2  187c		       a9 7e		      lda	#<_S64
      3  187e		       48		      pha
      4  187f		       a9 b4		      lda	#>_S64
      5  1881		       48		      pha
      6  1882				  -	      ELSE
      7  1882				  -	      lda	#<_S64
      8  1882				  -	      ldy	#>_S64
      9  1882					      ENDIF
      0  1882					      stdlib_putstr
      1  1882		       68		      pla
      2  1883		       a8		      tay
      3  1884		       68		      pla
      4  1885		       20 8c 09 	      jsr	STDLIB_PRINT
   5091  1888		       a9 0d		      lda	#13
   5092  188a		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  188d					      paddr	_S65
      0  188d					      pword	_S65
      1  188d					      IF	!FPUSH
      2  188d		       a9 8a		      lda	#<_S65
      3  188f		       48		      pha
      4  1890		       a9 b4		      lda	#>_S65
      5  1892		       48		      pha
      6  1893				  -	      ELSE
      7  1893				  -	      lda	#<_S65
      8  1893				  -	      ldy	#>_S65
      9  1893					      ENDIF
      0  1893					      stdlib_putstr
      1  1893		       68		      pla
      2  1894		       a8		      tay
      3  1895		       68		      pla
      4  1896		       20 8c 09 	      jsr	STDLIB_PRINT
   5095  1899		       a9 0d		      lda	#13
   5096  189b		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  189e					      paddr	_S66
      0  189e					      pword	_S66
      1  189e					      IF	!FPUSH
      2  189e		       a9 ae		      lda	#<_S66
      3  18a0		       48		      pha
      4  18a1		       a9 b4		      lda	#>_S66
      5  18a3		       48		      pha
      6  18a4				  -	      ELSE
      7  18a4				  -	      lda	#<_S66
      8  18a4				  -	      ldy	#>_S66
      9  18a4					      ENDIF
      0  18a4					      stdlib_putstr
      1  18a4		       68		      pla
      2  18a5		       a8		      tay
      3  18a6		       68		      pla
      4  18a7		       20 8c 09 	      jsr	STDLIB_PRINT
   5099  18aa		       a9 0d		      lda	#13
   5100  18ac		       20 16 e7 	      jsr	KERNAL_PRINTCHR
      0  18af					      paddr	_S67
      0  18af					      pword	_S67
      1  18af					      IF	!FPUSH
      2  18af		       a9 d1		      lda	#<_S67
      3  18b1		       48		      pha
      4  18b2		       a9 b4		      lda	#>_S67
      5  18b4		       48		      pha
      6  18b5				  -	      ELSE
      7  18b5				  -	      lda	#<_S67
      8  18b5				  -	      ldy	#>_S67
      9  18b5					      ENDIF
      0  18b5					      stdlib_putstr
      1  18b5		       68		      pla
      2  18b6		       a8		      tay
      3  18b7		       68		      pla
      4  18b8		       20 8c 09 	      jsr	STDLIB_PRINT
   5103  18bb		       a9 0d		      lda	#13
   5104  18bd		       20 16 e7 	      jsr	KERNAL_PRINTCHR
   5105  18c0		       20 c4 18 	      jsr	_Lwait_key
   5106  18c3		       60		      rts
   5107  18c4				   _Lwait_key
      0  18c4					      inkeyb
      1  18c4		       20 e4 ff 	      jsr	KERNAL_GETIN
      2  18c7					      IF	!FPUSH
      3  18c7		       48		      pha
      4  18c8					      ENDIF
   5109  18c8				   FPUSH      SET	1
      0  18c8					      pbyte	#0
      1  18c8		       a9 00		      lda	#0
      2  18ca				  -	      IF	!FPUSH
      3  18ca				  -	      pha
      4  18ca					      ENDIF
   5111  18ca				   FPULL      SET	1
      0  18ca					      cmpbeq
      1  18ca				  -	      IF	!FPULL
      2  18ca				  -	      pla
      3  18ca					      ENDIF
      4  18ca		       85 fc		      sta	R1
      5  18cc		       68		      pla
      6  18cd		       c5 fc		      cmp	R1
      7  18cf		       f0 05		      beq	.pht
      0  18d1					      pzero
      1  18d1		       a9 00		      lda	#$00
      2  18d3				  -	      IF	!FPUSH
      3  18d3				  -	      pha
      4  18d3					      ENDIF
      9  18d3				  -	      IF	!FPUSH
     10  18d3				  -	      jmp	*+6
     11  18d3					      ELSE
     12  18d3		       4c d8 18 	      jmp	*+5
     13  18d6					      ENDIF
      0  18d6				   .pht       pone
      1  18d6		       a9 01		      lda	#$01
      2  18d8				  -	      IF	!FPUSH
      3  18d8				  -	      pha
      4  18d8					      ENDIF
   5113  18d8				   FPUSH      SET	0
      0  18d8					      cond_stmt	_EI_65579, _EL_65579
      1  18d8				  -	      IF	!FPULL
      2  18d8				  -	      pla
      3  18d8					      ENDIF
      4  18d8		       d0 03		      bne	*+5
      5  18da				  -	      IFCONST	_EL_65579
      6  18da				  -	      jmp	_EL_65579
      7  18da					      ELSE
      8  18da		       4c e0 18 	      jmp	_EI_65579
      9  18dd					      ENDIF
   5115  18dd		       4c c4 18 	      jmp	_Lwait_key
   5116  18e0				   _EI_65579
   5117  18e0		       60		      rts
   5118  18e1
   5119  18e1
   5120  18e1
   5121  18e1
   5122  18e1
   5123  18e1
   5124  18e1
   5125  18e1							; Inline ASM start
   5126  18e1
   5127  18e1
   5128  18e1
   5129  18e1
   5130  18e1
   5131  18e1
   5132  18e1
   5133  18e1
   5134  18e1
   5135  18e1
   5136  18e1
   5137  18e1
   5138  18e1
   5139  18e1
   5140  18e1
 $18e1
   5141  18e1					      ECHO	*
   5142  18e1
   5143  18e1
   5144  18e1
   5145  18e1
   5146  18e1
   5147  18e1
   5148  18e1
   5149  18e1
   5150  18e1
   5151  18e1
   5152  18e1
   5153  18e1
   5154  18e1
   5155  18e1
   5156  18e1
   5157  18e1							; Inline ASM end
   5158  1e00					      org	$1e00
   5159  1e00
   5160  1e00
   5161  1e00
   5162  1e00
   5163  1e00
   5164  1e00
   5165  1e00
   5166  1e00				   _IJS1      INCBIN	"resources/logo.bin"
   5167  1fc0
   5168  1fc0
   5169  1fc0
   5170  1fc0
   5171  1fc0
   5172  1fc0
   5173  1fc0
   5174  1fc0				   _IJ1
   5175  1fc0
   5176  1fc0
   5177  1fc0
   5178  1fc0
   5179  1fc0
   5180  1fc0
   5181  1fc0
 Included file (resources/logo.bin): $1e00 - $1fc0
   5182  1fc0					      ECHO	"Included file (resources/logo.bin):",_IJS1,"-", _IJ1
   5183  1ffe					      org	$1ffe
   5184  1ffe
   5185  1ffe
   5186  1ffe
   5187  1ffe
   5188  1ffe
   5189  1ffe
   5190  1ffe
   5191  1ffe				   _IJS2      INCBIN	"resources/charset.64c"
   5192  2800
   5193  2800
   5194  2800
   5195  2800
   5196  2800
   5197  2800
   5198  2800
   5199  2800				   _IJ2
   5200  2800
   5201  2800
   5202  2800
   5203  2800
   5204  2800
   5205  2800
   5206  2800
 Included file (resources/charset.64c): $1ffe - $2800
   5207  2800					      ECHO	"Included file (resources/charset.64c):",_IJS2,"-", _IJ2
   5208  2800
   5209  2800
   5210  2800
   5211  2800
   5212  2800
   5213  2800
   5214  2800
   5215  2800				   _IJS3      INCBIN	"resources/sprites.bin"
   5216  4000
   5217  4000
   5218  4000
   5219  4000
   5220  4000
   5221  4000
   5222  4000
   5223  4000				   _IJ3
   5224  4000
   5225  4000
   5226  4000
   5227  4000
   5228  4000
   5229  4000
   5230  4000
 Included file (resources/sprites.bin): $2800 - $4000
   5231  4000					      ECHO	"Included file (resources/sprites.bin):",_IJS3,"-", _IJ3
   5232  4000					      org	$4000
   5233  4000
   5234  4000
   5235  4000
   5236  4000
   5237  4000
   5238  4000
   5239  4000
   5240  4000				   _IJS4      INCBIN	"resources/graphics.bin"
   5241  5400
   5242  5400
   5243  5400
   5244  5400
   5245  5400
   5246  5400
   5247  5400
   5248  5400				   _IJ4
   5249  5400
   5250  5400
   5251  5400
   5252  5400
   5253  5400
   5254  5400
   5255  5400
 Included file (resources/graphics.bin): $4000 - $5400
   5256  5400					      ECHO	"Included file (resources/graphics.bin):",_IJS4,"-", _IJ4
   5257  5440					      org	$5440
   5258  5440
   5259  5440
   5260  5440
   5261  5440
   5262  5440
   5263  5440
   5264  5440
   5265  5440				   _IJS5      INCBIN	"resources/Black_Hawk5400_cut_headless.sid"
   5266  6400
   5267  6400
   5268  6400
   5269  6400
   5270  6400
   5271  6400
   5272  6400
   5273  6400				   _IJ5
   5274  6400
   5275  6400
   5276  6400
   5277  6400
   5278  6400
   5279  6400
   5280  6400
 Included file (resources/Black_Hawk5400_cut_headless.sid): $5440 - $6400
   5281  6400					      ECHO	"Included file (resources/Black_Hawk5400_cut_headless.sid):",_IJS5,"-", _IJ5
   5282  6400
   5283  6400
   5284  6400
   5285  6400
   5286  6400
   5287  6400
   5288  6400
   5289  6400				   _Lsounds
   5290  6400
   5291  6400
   5292  6400
   5293  6400
   5294  6400
   5295  6400
   5296  6400
   5297  6400				   _IJS6      INCBIN	"resources/sfx.bin"
   5298  64f2
   5299  64f2
   5300  64f2
   5301  64f2
   5302  64f2
   5303  64f2
   5304  64f2
   5305  64f2				   _IJ6
   5306  64f2
   5307  64f2
   5308  64f2
   5309  64f2
   5310  64f2
   5311  64f2
   5312  64f2
 Included file (resources/sfx.bin): $6400 - $64f2
   5313  64f2					      ECHO	"Included file (resources/sfx.bin):",_IJS6,"-", _IJ6
   5314  6700					      org	$6700
   5315  6700
   5316  6700
   5317  6700
   5318  6700
   5319  6700
   5320  6700
   5321  6700
   5322  6700				   _Lend_music
   5323  6700
   5324  6700
   5325  6700
   5326  6700
   5327  6700
   5328  6700
   5329  6700
   5330  6700				   _IJS7      INCBIN	"resources/Noice_Anthem.sid"
   5331  7138
   5332  7138
   5333  7138
   5334  7138
   5335  7138
   5336  7138
   5337  7138
   5338  7138				   _IJ7
   5339  7138
   5340  7138
   5341  7138
   5342  7138
   5343  7138
   5344  7138
   5345  7138
 Included file (resources/Noice_Anthem.sid): $6700 - $7138
   5346  7138					      ECHO	"Included file (resources/Noice_Anthem.sid):",_IJS7,"-", _IJ7
   5347  7138
   5348  7138
   5349  7138
   5350  7138
   5351  7138
   5352  7138
   5353  7138
   5354  7138				   prg_end
      0  7138					      halt
      0  7138					      basicin
      1  7138		       a5 01		      lda	$01
      2  713a		       09 01		      ora	#%00000001
      3  713c		       85 01		      sta	$01
      2  713e		       ae 85 09 	      ldx	RESERVED_STACK_POINTER
      3  7141		       9a		      txs
      4  7142		       60		      rts
   5356  7143
   5357  7143
   5358  7143
   5359  7143
   5360  7143
   5361  7143
   5362  7143
   5363  7143				   _Pmusic_player SUBROUTINE
      0  7143					      pbyte_pbyte_cmpbeq_cond	_ntsc_pal, #0, _EI_2, _EL_2
      1  7143
      2  7143
      3  7143		       ad f4 b4 	      lda	_ntsc_pal
      4  7146		       c9 00		      cmp	#0
      5  7148		       f0 03		      beq	*+5
      6  714a				  -	      IFCONST	_EL_2
      7  714a				  -	      jmp	_EL_2
      8  714a					      ELSE
      9  714a		       4c 60 71 	      jmp	_EI_2
     10  714d					      ENDIF
      0  714d					      incb	_ntsc_frames
      1  714d		       ee f9 b4 	      inc	_ntsc_frames
      0  7150					      pbyte_pbyte_cmpbeq_cond	_ntsc_frames, #6, _EI_65536, _EL_65536
      1  7150
      2  7150
      3  7150		       ad f9 b4 	      lda	_ntsc_frames
      4  7153		       c9 06		      cmp	#6
      5  7155		       f0 03		      beq	*+5
      6  7157				  -	      IFCONST	_EL_65536
      7  7157				  -	      jmp	_EL_65536
      8  7157					      ELSE
      9  7157		       4c 60 71 	      jmp	_EI_65536
     10  715a					      ENDIF
   5367  715a				   FPULL      SET	0
   5368  715a				   FPUSH      SET	1
      0  715a					      pbyte	#0
      1  715a		       a9 00		      lda	#0
      2  715c				  -	      IF	!FPUSH
      3  715c				  -	      pha
      4  715c					      ENDIF
   5370  715c				   FPULL      SET	1
   5371  715c				   FPUSH      SET	0
      0  715c					      plb2var	_ntsc_frames
      1  715c				  -	      IF	!FPULL
      2  715c				  -	      pla
      3  715c					      ENDIF
      4  715c		       8d f9 b4 	      sta	_ntsc_frames
   5373  715f		       60		      rts
   5374  7160				   _EI_65536
   5375  7160
   5376  7160
   5377  7160
   5378  7160
   5379  7160
   5380  7160
   5381  7160
   5382  7160				   _EI_2
   5383  7160				   FPULL      SET	0
   5384  7160				   FPUSH      SET	1
      0  7160					      pword	#21568
      1  7160				  -	      IF	!FPUSH
      2  7160				  -	      lda	#<#21568
      3  7160				  -	      pha
      4  7160				  -	      lda	#>#21568
      5  7160				  -	      pha
      6  7160					      ELSE
      7  7160		       a9 40		      lda	#<#21568
      8  7162		       a0 54		      ldy	#>#21568
      9  7164					      ENDIF
   5386  7164				   FPULL      SET	1
   5387  7164				   FPUSH      SET	0
      0  7164					      sys
      1  7164				  -	      IF	!FPULL
      2  7164				  -	      pla
      3  7164				  -	      sta	.selfmod+2
      4  7164				  -	      pla
      5  7164				  -	      sta	.selfmod+1
      6  7164					      ELSE
      7  7164		       8d 6b 71 	      sta	.selfmod+1
      8  7167		       8c 6c 71 	      sty	.selfmod+2
      9  716a					      ENDIF
     10  716a				   .selfmod
     11  716a		       20 00 00 	      jsr	$0000
   5389  716d		       60		      rts
   5390  716e				   _Pmusic_player_end
   5391  716e
   5392  716e
   5393  716e
   5394  716e
   5395  716e
   5396  716e
   5397  716e
   5398  716e				   _Pspr_enable SUBROUTINE
   5399  716e
   5400  716e
   5401  716e
   5402  716e
   5403  716e
   5404  716e
   5405  716e
   5406  716e							; Inline ASM start
   5407  716e
   5408  716e
   5409  716e
   5410  716e
   5411  716e
   5412  716e
   5413  716e
   5414  716e
   5415  716e
   5416  716e
   5417  716e
   5418  716e
   5419  716e
   5420  716e
   5421  716e
   5422  716e		       ae fa b4 	      ldx	_spr_enable.spr_no
   5423  7171
   5424  7171
   5425  7171
   5426  7171
   5427  7171
   5428  7171
   5429  7171
   5430  7171		       ad 15 d0 	      lda	_SPR_ENABLE
   5431  7174
   5432  7174
   5433  7174
   5434  7174
   5435  7174
   5436  7174
   5437  7174
   5438  7174		       1d f0 a2 	      ora.wx	_spr_enable_bits
   5439  7177
   5440  7177
   5441  7177
   5442  7177
   5443  7177
   5444  7177
   5445  7177
   5446  7177		       8d 15 d0 	      sta	_SPR_ENABLE
   5447  717a
   5448  717a
   5449  717a
   5450  717a
   5451  717a
   5452  717a
   5453  717a
   5454  717a
   5455  717a
   5456  717a
   5457  717a
   5458  717a
   5459  717a
   5460  717a
   5461  717a
   5462  717a							; Inline ASM end
   5463  717a		       60		      rts
   5464  717b
   5465  717b
   5466  717b
   5467  717b
   5468  717b
   5469  717b
   5470  717b
   5471  717b				   _Pspr_enable_end
   5472  717b
   5473  717b
   5474  717b
   5475  717b
   5476  717b
   5477  717b
   5478  717b
   5479  717b				   _Pspr_disable SUBROUTINE
   5480  717b
   5481  717b
   5482  717b
   5483  717b
   5484  717b
   5485  717b
   5486  717b
   5487  717b							; Inline ASM start
   5488  717b
   5489  717b
   5490  717b
   5491  717b
   5492  717b
   5493  717b
   5494  717b
   5495  717b
   5496  717b
   5497  717b
   5498  717b
   5499  717b
   5500  717b
   5501  717b
   5502  717b
   5503  717b		       ae fb b4 	      ldx	_spr_disable.spr_no
   5504  717e
   5505  717e
   5506  717e
   5507  717e
   5508  717e
   5509  717e
   5510  717e
   5511  717e		       ad 15 d0 	      lda	_SPR_ENABLE
   5512  7181
   5513  7181
   5514  7181
   5515  7181
   5516  7181
   5517  7181
   5518  7181
   5519  7181		       3d f8 a2 	      and.wx	_spr_disable_bits
   5520  7184
   5521  7184
   5522  7184
   5523  7184
   5524  7184
   5525  7184
   5526  7184
   5527  7184		       8d 15 d0 	      sta	_SPR_ENABLE
   5528  7187
   5529  7187
   5530  7187
   5531  7187
   5532  7187
   5533  7187
   5534  7187
   5535  7187
   5536  7187
   5537  7187
   5538  7187
   5539  7187
   5540  7187
   5541  7187
   5542  7187
   5543  7187							; Inline ASM end
   5544  7187		       60		      rts
   5545  7188
   5546  7188
   5547  7188
   5548  7188
   5549  7188
   5550  7188
   5551  7188
   5552  7188				   _Pspr_disable_end
   5553  7188
   5554  7188
   5555  7188
   5556  7188
   5557  7188
   5558  7188
   5559  7188
   5560  7188				   _Pspr_setposy SUBROUTINE
   5561  7188
   5562  7188
   5563  7188
   5564  7188
   5565  7188
   5566  7188
   5567  7188
   5568  7188							; Inline ASM start
   5569  7188
   5570  7188
   5571  7188
   5572  7188
   5573  7188
   5574  7188
   5575  7188
   5576  7188
   5577  7188
   5578  7188
   5579  7188
   5580  7188
   5581  7188
   5582  7188
   5583  7188
   5584  7188		       0e fc b4 	      asl	_spr_setposy.spr_no
   5585  718b
   5586  718b
   5587  718b
   5588  718b
   5589  718b
   5590  718b
   5591  718b
   5592  718b		       ae fc b4 	      ldx	_spr_setposy.spr_no
   5593  718e
   5594  718e
   5595  718e
   5596  718e
   5597  718e
   5598  718e
   5599  718e
   5600  718e		       ad fd b4 	      lda	_spr_setposy.y
   5601  7191
   5602  7191
   5603  7191
   5604  7191
   5605  7191
   5606  7191
   5607  7191
   5608  7191		       9d 01 d0 	      sta.wx	_SPR_Y_COORD0
   5609  7194
   5610  7194
   5611  7194
   5612  7194
   5613  7194
   5614  7194
   5615  7194
   5616  7194
   5617  7194
   5618  7194
   5619  7194
   5620  7194
   5621  7194
   5622  7194
   5623  7194
   5624  7194							; Inline ASM end
   5625  7194		       60		      rts
   5626  7195
   5627  7195
   5628  7195
   5629  7195
   5630  7195
   5631  7195
   5632  7195
   5633  7195				   _Pspr_setposy_end
   5634  7195
   5635  7195
   5636  7195
   5637  7195
   5638  7195
   5639  7195
   5640  7195
   5641  7195				   _Pspr_setposx SUBROUTINE
   5642  7195
   5643  7195
   5644  7195
   5645  7195
   5646  7195
   5647  7195
   5648  7195
   5649  7195							; Inline ASM start
   5650  7195
   5651  7195
   5652  7195
   5653  7195
   5654  7195
   5655  7195
   5656  7195
   5657  7195
   5658  7195
   5659  7195
   5660  7195
   5661  7195
   5662  7195
   5663  7195
   5664  7195
   5665  7195		       ad fe b4 	      lda	_spr_setposx.spr_no
   5666  7198
   5667  7198
   5668  7198
   5669  7198
   5670  7198
   5671  7198
   5672  7198
   5673  7198		       0a		      asl
   5674  7199
   5675  7199
   5676  7199
   5677  7199
   5678  7199
   5679  7199
   5680  7199
   5681  7199		       aa		      tax
   5682  719a
   5683  719a
   5684  719a
   5685  719a
   5686  719a
   5687  719a
   5688  719a
   5689  719a		       ad ff b4 	      lda	_spr_setposx.x
   5690  719d
   5691  719d
   5692  719d
   5693  719d
   5694  719d
   5695  719d
   5696  719d
   5697  719d		       9d 00 d0 	      sta.wx	_SPR_X_COORD0
   5698  71a0
   5699  71a0
   5700  71a0
   5701  71a0
   5702  71a0
   5703  71a0
   5704  71a0
   5705  71a0		       8a		      txa
   5706  71a1
   5707  71a1
   5708  71a1
   5709  71a1
   5710  71a1
   5711  71a1
   5712  71a1
   5713  71a1		       4a		      lsr
   5714  71a2
   5715  71a2
   5716  71a2
   5717  71a2
   5718  71a2
   5719  71a2
   5720  71a2
   5721  71a2		       aa		      tax
   5722  71a3
   5723  71a3
   5724  71a3
   5725  71a3
   5726  71a3
   5727  71a3
   5728  71a3
   5729  71a3		       ad 00 b5 	      lda	_spr_setposx.x + 1
   5730  71a6
   5731  71a6
   5732  71a6
   5733  71a6
   5734  71a6
   5735  71a6
   5736  71a6
   5737  71a6		       f0 09		      beq	.off
   5738  71a8
   5739  71a8
   5740  71a8
   5741  71a8
   5742  71a8
   5743  71a8
   5744  71a8
   5745  71a8				   .on
   5746  71a8
   5747  71a8
   5748  71a8
   5749  71a8
   5750  71a8
   5751  71a8
   5752  71a8
   5753  71a8		       ad 10 d0 	      lda	_SPR_X_COORD_MSB
   5754  71ab
   5755  71ab
   5756  71ab
   5757  71ab
   5758  71ab
   5759  71ab
   5760  71ab
   5761  71ab		       1d f0 a2 	      ora.wx	_spr_enable_bits
   5762  71ae
   5763  71ae
   5764  71ae
   5765  71ae
   5766  71ae
   5767  71ae
   5768  71ae
   5769  71ae		       4c b7 71 	      jmp	.quit
   5770  71b1
   5771  71b1
   5772  71b1
   5773  71b1
   5774  71b1
   5775  71b1
   5776  71b1
   5777  71b1				   .off
   5778  71b1
   5779  71b1
   5780  71b1
   5781  71b1
   5782  71b1
   5783  71b1
   5784  71b1
   5785  71b1		       ad 10 d0 	      lda	_SPR_X_COORD_MSB
   5786  71b4
   5787  71b4
   5788  71b4
   5789  71b4
   5790  71b4
   5791  71b4
   5792  71b4
   5793  71b4		       3d f8 a2 	      and.wx	_spr_disable_bits
   5794  71b7
   5795  71b7
   5796  71b7
   5797  71b7
   5798  71b7
   5799  71b7
   5800  71b7
   5801  71b7				   .quit
   5802  71b7
   5803  71b7
   5804  71b7
   5805  71b7
   5806  71b7
   5807  71b7
   5808  71b7
   5809  71b7		       8d 10 d0 	      sta	_SPR_X_COORD_MSB
   5810  71ba
   5811  71ba
   5812  71ba
   5813  71ba
   5814  71ba
   5815  71ba
   5816  71ba
   5817  71ba
   5818  71ba
   5819  71ba
   5820  71ba
   5821  71ba
   5822  71ba
   5823  71ba
   5824  71ba
   5825  71ba							; Inline ASM end
   5826  71ba		       60		      rts
   5827  71bb
   5828  71bb
   5829  71bb
   5830  71bb
   5831  71bb
   5832  71bb
   5833  71bb
   5834  71bb				   _Pspr_setposx_end
   5835  71bb
   5836  71bb
   5837  71bb
   5838  71bb
   5839  71bb
   5840  71bb
   5841  71bb
   5842  71bb				   _Pspr_setpos SUBROUTINE
   5843  71bb				   FPULL      SET	0
   5844  71bb				   FPUSH      SET	1
      0  71bb					      pbvar	_spr_setpos.spr_no
      0  71bb					      pbyte	_spr_setpos.spr_no
      1  71bb		       ad 01 b5 	      lda	_spr_setpos.spr_no
      2  71be				  -	      IF	!FPUSH
      3  71be				  -	      pha
      4  71be					      ENDIF
   5846  71be				   FPULL      SET	1
   5847  71be				   FPUSH      SET	0
      0  71be					      plb2var	_spr_setposx.spr_no
      1  71be				  -	      IF	!FPULL
      2  71be				  -	      pla
      3  71be					      ENDIF
      4  71be		       8d fe b4 	      sta	_spr_setposx.spr_no
   5849  71be				   FPULL      SET	0
   5850  71be				   FPUSH      SET	1
      0  71c1					      pwvar	_spr_setpos.x
      1  71c1				  -	      IF	!FPUSH
      2  71c1				  -	      lda	_spr_setpos.x
      3  71c1				  -	      pha
      4  71c1				  -	      lda	_spr_setpos.x+1
      5  71c1				  -	      pha
      6  71c1					      ELSE
      7  71c1		       ad 02 b5 	      lda	_spr_setpos.x
      8  71c4		       ac 03 b5 	      ldy	_spr_setpos.x+1
      9  71c7					      ENDIF
   5852  71c7				   FPULL      SET	1
   5853  71c7				   FPUSH      SET	0
      0  71c7					      plw2var	_spr_setposx.x
      1  71c7				  -	      IF	!FPULL
      2  71c7				  -	      pla
      3  71c7				  -	      sta	_spr_setposx.x+1
      4  71c7				  -	      pla
      5  71c7				  -	      sta	_spr_setposx.x
      6  71c7					      ELSE
      7  71c7		       8d ff b4 	      sta	_spr_setposx.x
      8  71ca		       8c 00 b5 	      sty	_spr_setposx.x+1
      9  71cd					      ENDIF
   5855  71cd		       20 95 71 	      jsr	_Pspr_setposx
   5856  71cd				   FPULL      SET	0
   5857  71cd				   FPUSH      SET	1
      0  71d0					      pbvar	_spr_setpos.spr_no
      0  71d0					      pbyte	_spr_setpos.spr_no
      1  71d0		       ad 01 b5 	      lda	_spr_setpos.spr_no
      2  71d3				  -	      IF	!FPUSH
      3  71d3				  -	      pha
      4  71d3					      ENDIF
   5859  71d3				   FPULL      SET	1
   5860  71d3				   FPUSH      SET	0
      0  71d3					      plb2var	_spr_setposy.spr_no
      1  71d3				  -	      IF	!FPULL
      2  71d3				  -	      pla
      3  71d3					      ENDIF
      4  71d3		       8d fc b4 	      sta	_spr_setposy.spr_no
   5862  71d3				   FPULL      SET	0
   5863  71d3				   FPUSH      SET	1
      0  71d6					      pbvar	_spr_setpos.y
      0  71d6					      pbyte	_spr_setpos.y
      1  71d6		       ad 04 b5 	      lda	_spr_setpos.y
      2  71d9				  -	      IF	!FPUSH
      3  71d9				  -	      pha
      4  71d9					      ENDIF
   5865  71d9				   FPULL      SET	1
   5866  71d9				   FPUSH      SET	0
      0  71d9					      plb2var	_spr_setposy.y
      1  71d9				  -	      IF	!FPULL
      2  71d9				  -	      pla
      3  71d9					      ENDIF
      4  71d9		       8d fd b4 	      sta	_spr_setposy.y
   5868  71dc		       20 88 71 	      jsr	_Pspr_setposy
   5869  71df		       60		      rts
   5870  71e0				   _Pspr_setpos_end
   5871  71e0
   5872  71e0
   5873  71e0
   5874  71e0
   5875  71e0
   5876  71e0
   5877  71e0
   5878  71e0				   _Pspr_setshape SUBROUTINE
   5879  71e0
   5880  71e0
   5881  71e0
   5882  71e0
   5883  71e0
   5884  71e0
   5885  71e0
   5886  71e0							; Inline ASM start
   5887  71e0
   5888  71e0
   5889  71e0
   5890  71e0
   5891  71e0
   5892  71e0
   5893  71e0
   5894  71e0
   5895  71e0
   5896  71e0
   5897  71e0
   5898  71e0
   5899  71e0
   5900  71e0
   5901  71e0
   5902  71e0		       ad 06 b5 	      lda	_spr_setshape.shape
   5903  71e3
   5904  71e3
   5905  71e3
   5906  71e3
   5907  71e3
   5908  71e3
   5909  71e3
   5910  71e3		       ae 05 b5 	      ldx	_spr_setshape.spr_no
   5911  71e6
   5912  71e6
   5913  71e6
   5914  71e6
   5915  71e6
   5916  71e6
   5917  71e6
   5918  71e6		       9d f8 07 	      sta.wx	_SPR_PTR
   5919  71e9
   5920  71e9
   5921  71e9
   5922  71e9
   5923  71e9
   5924  71e9
   5925  71e9
   5926  71e9
   5927  71e9
   5928  71e9
   5929  71e9
   5930  71e9
   5931  71e9
   5932  71e9
   5933  71e9
   5934  71e9							; Inline ASM end
   5935  71e9		       60		      rts
   5936  71ea
   5937  71ea
   5938  71ea
   5939  71ea
   5940  71ea
   5941  71ea
   5942  71ea
   5943  71ea				   _Pspr_setshape_end
   5944  71ea
   5945  71ea
   5946  71ea
   5947  71ea
   5948  71ea
   5949  71ea
   5950  71ea
   5951  71ea				   _Pspr_setmulti SUBROUTINE
   5952  71ea
   5953  71ea
   5954  71ea
   5955  71ea
   5956  71ea
   5957  71ea
   5958  71ea
   5959  71ea							; Inline ASM start
   5960  71ea
   5961  71ea
   5962  71ea
   5963  71ea
   5964  71ea
   5965  71ea
   5966  71ea
   5967  71ea
   5968  71ea
   5969  71ea
   5970  71ea
   5971  71ea
   5972  71ea
   5973  71ea
   5974  71ea
   5975  71ea		       ae 07 b5 	      ldx	_spr_setmulti.spr_no
   5976  71ed
   5977  71ed
   5978  71ed
   5979  71ed
   5980  71ed
   5981  71ed
   5982  71ed
   5983  71ed		       ad 1c d0 	      lda	_SPR_MULTICOLOR
   5984  71f0
   5985  71f0
   5986  71f0
   5987  71f0
   5988  71f0
   5989  71f0
   5990  71f0
   5991  71f0		       1d f0 a2 	      ora.wx	_spr_enable_bits
   5992  71f3
   5993  71f3
   5994  71f3
   5995  71f3
   5996  71f3
   5997  71f3
   5998  71f3
   5999  71f3		       8d 1c d0 	      sta	_SPR_MULTICOLOR
   6000  71f6
   6001  71f6
   6002  71f6
   6003  71f6
   6004  71f6
   6005  71f6
   6006  71f6
   6007  71f6
   6008  71f6
   6009  71f6
   6010  71f6
   6011  71f6
   6012  71f6
   6013  71f6
   6014  71f6
   6015  71f6							; Inline ASM end
   6016  71f6		       60		      rts
   6017  71f7
   6018  71f7
   6019  71f7
   6020  71f7
   6021  71f7
   6022  71f7
   6023  71f7
   6024  71f7				   _Pspr_setmulti_end
   6025  71f7
   6026  71f7
   6027  71f7
   6028  71f7
   6029  71f7
   6030  71f7
   6031  71f7
   6032  71f7				   _Pspr_sethires SUBROUTINE
   6033  71f7
   6034  71f7
   6035  71f7
   6036  71f7
   6037  71f7
   6038  71f7
   6039  71f7
   6040  71f7							; Inline ASM start
   6041  71f7
   6042  71f7
   6043  71f7
   6044  71f7
   6045  71f7
   6046  71f7
   6047  71f7
   6048  71f7
   6049  71f7
   6050  71f7
   6051  71f7
   6052  71f7
   6053  71f7
   6054  71f7
   6055  71f7
   6056  71f7		       ae 08 b5 	      ldx	_spr_sethires.spr_no
   6057  71fa
   6058  71fa
   6059  71fa
   6060  71fa
   6061  71fa
   6062  71fa
   6063  71fa
   6064  71fa		       ad 1c d0 	      lda	_SPR_MULTICOLOR
   6065  71fd
   6066  71fd
   6067  71fd
   6068  71fd
   6069  71fd
   6070  71fd
   6071  71fd
   6072  71fd		       3d f8 a2 	      and.wx	_spr_disable_bits
   6073  7200
   6074  7200
   6075  7200
   6076  7200
   6077  7200
   6078  7200
   6079  7200
   6080  7200		       8d 1c d0 	      sta	_SPR_MULTICOLOR
   6081  7203
   6082  7203
   6083  7203
   6084  7203
   6085  7203
   6086  7203
   6087  7203
   6088  7203
   6089  7203
   6090  7203
   6091  7203
   6092  7203
   6093  7203
   6094  7203
   6095  7203
   6096  7203							; Inline ASM end
   6097  7203		       60		      rts
   6098  7204
   6099  7204
   6100  7204
   6101  7204
   6102  7204
   6103  7204
   6104  7204
   6105  7204				   _Pspr_sethires_end
   6106  7204
   6107  7204
   6108  7204
   6109  7204
   6110  7204
   6111  7204
   6112  7204
   6113  7204				   _Pspr_setcolor SUBROUTINE
   6114  7204
   6115  7204
   6116  7204
   6117  7204
   6118  7204
   6119  7204
   6120  7204
   6121  7204							; Inline ASM start
   6122  7204
   6123  7204
   6124  7204
   6125  7204
   6126  7204
   6127  7204
   6128  7204
   6129  7204
   6130  7204
   6131  7204
   6132  7204
   6133  7204
   6134  7204
   6135  7204
   6136  7204
   6137  7204		       ad 0a b5 	      lda	_spr_setcolor.color
   6138  7207
   6139  7207
   6140  7207
   6141  7207
   6142  7207
   6143  7207
   6144  7207
   6145  7207		       ae 09 b5 	      ldx	_spr_setcolor.spr_no
   6146  720a
   6147  720a
   6148  720a
   6149  720a
   6150  720a
   6151  720a
   6152  720a
   6153  720a		       9d 27 d0 	      sta.wx	_SPR_COLOR0
   6154  720d
   6155  720d
   6156  720d
   6157  720d
   6158  720d
   6159  720d
   6160  720d
   6161  720d
   6162  720d
   6163  720d
   6164  720d
   6165  720d
   6166  720d
   6167  720d
   6168  720d
   6169  720d							; Inline ASM end
   6170  720d		       60		      rts
   6171  720e
   6172  720e
   6173  720e
   6174  720e
   6175  720e
   6176  720e
   6177  720e
   6178  720e				   _Pspr_setcolor_end
   6179  720e
   6180  720e
   6181  720e
   6182  720e
   6183  720e
   6184  720e
   6185  720e
   6186  720e				   _Pspr_setdblwidth SUBROUTINE
   6187  720e
   6188  720e
   6189  720e
   6190  720e
   6191  720e
   6192  720e
   6193  720e
   6194  720e							; Inline ASM start
   6195  720e
   6196  720e
   6197  720e
   6198  720e
   6199  720e
   6200  720e
   6201  720e
   6202  720e
   6203  720e
   6204  720e
   6205  720e
   6206  720e
   6207  720e
   6208  720e
   6209  720e
   6210  720e		       ae 0b b5 	      ldx	_spr_setdblwidth.spr_no
   6211  7211
   6212  7211
   6213  7211
   6214  7211
   6215  7211
   6216  7211
   6217  7211
   6218  7211		       ad 1d d0 	      lda	_SPR_EXP_X
   6219  7214
   6220  7214
   6221  7214
   6222  7214
   6223  7214
   6224  7214
   6225  7214
   6226  7214		       1d f0 a2 	      ora.wx	_spr_enable_bits
   6227  7217
   6228  7217
   6229  7217
   6230  7217
   6231  7217
   6232  7217
   6233  7217
   6234  7217		       8d 1d d0 	      sta	_SPR_EXP_X
   6235  721a
   6236  721a
   6237  721a
   6238  721a
   6239  721a
   6240  721a
   6241  721a
   6242  721a
   6243  721a
   6244  721a
   6245  721a
   6246  721a
   6247  721a
   6248  721a
   6249  721a
   6250  721a							; Inline ASM end
   6251  721a		       60		      rts
   6252  721b
   6253  721b
   6254  721b
   6255  721b
   6256  721b
   6257  721b
   6258  721b
   6259  721b				   _Pspr_setdblwidth_end
   6260  721b
   6261  721b
   6262  721b
   6263  721b
   6264  721b
   6265  721b
   6266  721b
   6267  721b				   _Pspr_cleardblwidth SUBROUTINE
   6268  721b
   6269  721b
   6270  721b
   6271  721b
   6272  721b
   6273  721b
   6274  721b
   6275  721b							; Inline ASM start
   6276  721b
   6277  721b
   6278  721b
   6279  721b
   6280  721b
   6281  721b
   6282  721b
   6283  721b
   6284  721b
   6285  721b
   6286  721b
   6287  721b
   6288  721b
   6289  721b
   6290  721b
   6291  721b		       ae 0c b5 	      ldx	_spr_cleardblwidth.spr_no
   6292  721e
   6293  721e
   6294  721e
   6295  721e
   6296  721e
   6297  721e
   6298  721e
   6299  721e		       ad 1d d0 	      lda	_SPR_EXP_X
   6300  7221
   6301  7221
   6302  7221
   6303  7221
   6304  7221
   6305  7221
   6306  7221
   6307  7221		       3d f8 a2 	      and.wx	_spr_disable_bits
   6308  7224
   6309  7224
   6310  7224
   6311  7224
   6312  7224
   6313  7224
   6314  7224
   6315  7224		       8d 1d d0 	      sta	_SPR_EXP_X
   6316  7227
   6317  7227
   6318  7227
   6319  7227
   6320  7227
   6321  7227
   6322  7227
   6323  7227
   6324  7227
   6325  7227
   6326  7227
   6327  7227
   6328  7227
   6329  7227
   6330  7227
   6331  7227							; Inline ASM end
   6332  7227		       60		      rts
   6333  7228
   6334  7228
   6335  7228
   6336  7228
   6337  7228
   6338  7228
   6339  7228
   6340  7228				   _Pspr_cleardblwidth_end
   6341  7228
   6342  7228
   6343  7228
   6344  7228
   6345  7228
   6346  7228
   6347  7228
   6348  7228				   _Pspr_setdblheight SUBROUTINE
   6349  7228
   6350  7228
   6351  7228
   6352  7228
   6353  7228
   6354  7228
   6355  7228
   6356  7228							; Inline ASM start
   6357  7228
   6358  7228
   6359  7228
   6360  7228
   6361  7228
   6362  7228
   6363  7228
   6364  7228
   6365  7228
   6366  7228
   6367  7228
   6368  7228
   6369  7228
   6370  7228
   6371  7228
   6372  7228		       ae 0d b5 	      ldx	_spr_setdblheight.spr_no
   6373  722b
   6374  722b
   6375  722b
   6376  722b
   6377  722b
   6378  722b
   6379  722b
   6380  722b		       ad 17 d0 	      lda	_SPR_EXP_Y
   6381  722e
   6382  722e
   6383  722e
   6384  722e
   6385  722e
   6386  722e
   6387  722e
   6388  722e		       1d f0 a2 	      ora.wx	_spr_enable_bits
   6389  7231
   6390  7231
   6391  7231
   6392  7231
   6393  7231
   6394  7231
   6395  7231
   6396  7231		       8d 17 d0 	      sta	_SPR_EXP_Y
   6397  7234
   6398  7234
   6399  7234
   6400  7234
   6401  7234
   6402  7234
   6403  7234
   6404  7234
   6405  7234
   6406  7234
   6407  7234
   6408  7234
   6409  7234
   6410  7234
   6411  7234
   6412  7234							; Inline ASM end
   6413  7234		       60		      rts
   6414  7235
   6415  7235
   6416  7235
   6417  7235
   6418  7235
   6419  7235
   6420  7235
   6421  7235				   _Pspr_setdblheight_end
   6422  7235
   6423  7235
   6424  7235
   6425  7235
   6426  7235
   6427  7235
   6428  7235
   6429  7235				   _Pspr_cleardblheight SUBROUTINE
   6430  7235
   6431  7235
   6432  7235
   6433  7235
   6434  7235
   6435  7235
   6436  7235
   6437  7235							; Inline ASM start
   6438  7235
   6439  7235
   6440  7235
   6441  7235
   6442  7235
   6443  7235
   6444  7235
   6445  7235
   6446  7235
   6447  7235
   6448  7235
   6449  7235
   6450  7235
   6451  7235
   6452  7235
   6453  7235		       ae 0e b5 	      ldx	_spr_cleardblheight.spr_no
   6454  7238
   6455  7238
   6456  7238
   6457  7238
   6458  7238
   6459  7238
   6460  7238
   6461  7238		       ad 17 d0 	      lda	_SPR_EXP_Y
   6462  723b
   6463  723b
   6464  723b
   6465  723b
   6466  723b
   6467  723b
   6468  723b
   6469  723b		       3d f8 a2 	      and.wx	_spr_disable_bits
   6470  723e
   6471  723e
   6472  723e
   6473  723e
   6474  723e
   6475  723e
   6476  723e
   6477  723e		       8d 17 d0 	      sta	_SPR_EXP_Y
   6478  7241
   6479  7241
   6480  7241
   6481  7241
   6482  7241
   6483  7241
   6484  7241
   6485  7241
   6486  7241
   6487  7241
   6488  7241
   6489  7241
   6490  7241
   6491  7241
   6492  7241
   6493  7241							; Inline ASM end
   6494  7241		       60		      rts
   6495  7242
   6496  7242
   6497  7242
   6498  7242
   6499  7242
   6500  7242
   6501  7242
   6502  7242				   _Pspr_cleardblheight_end
   6503  7242
   6504  7242
   6505  7242
   6506  7242
   6507  7242
   6508  7242
   6509  7242
   6510  7242				   _Pspr_behindbg SUBROUTINE
   6511  7242
   6512  7242
   6513  7242
   6514  7242
   6515  7242
   6516  7242
   6517  7242
   6518  7242							; Inline ASM start
   6519  7242
   6520  7242
   6521  7242
   6522  7242
   6523  7242
   6524  7242
   6525  7242
   6526  7242
   6527  7242
   6528  7242
   6529  7242
   6530  7242
   6531  7242
   6532  7242
   6533  7242
   6534  7242		       ae 0f b5 	      ldx	_spr_behindbg.spr_no
   6535  7245
   6536  7245
   6537  7245
   6538  7245
   6539  7245
   6540  7245
   6541  7245
   6542  7245		       ad 1b d0 	      lda	_SPR_DATA_PRIO
   6543  7248
   6544  7248
   6545  7248
   6546  7248
   6547  7248
   6548  7248
   6549  7248
   6550  7248		       1d f0 a2 	      ora.wx	_spr_enable_bits
   6551  724b
   6552  724b
   6553  724b
   6554  724b
   6555  724b
   6556  724b
   6557  724b
   6558  724b		       8d 1b d0 	      sta	_SPR_DATA_PRIO
   6559  724e
   6560  724e
   6561  724e
   6562  724e
   6563  724e
   6564  724e
   6565  724e
   6566  724e
   6567  724e
   6568  724e
   6569  724e
   6570  724e
   6571  724e
   6572  724e
   6573  724e
   6574  724e							; Inline ASM end
   6575  724e		       60		      rts
   6576  724f
   6577  724f
   6578  724f
   6579  724f
   6580  724f
   6581  724f
   6582  724f
   6583  724f				   _Pspr_behindbg_end
   6584  724f
   6585  724f
   6586  724f
   6587  724f
   6588  724f
   6589  724f
   6590  724f
   6591  724f				   _Pspr_overbg SUBROUTINE
   6592  724f
   6593  724f
   6594  724f
   6595  724f
   6596  724f
   6597  724f
   6598  724f
   6599  724f							; Inline ASM start
   6600  724f
   6601  724f
   6602  724f
   6603  724f
   6604  724f
   6605  724f
   6606  724f
   6607  724f
   6608  724f
   6609  724f
   6610  724f
   6611  724f
   6612  724f
   6613  724f
   6614  724f
   6615  724f		       ae 10 b5 	      ldx	_spr_overbg.spr_no
   6616  7252
   6617  7252
   6618  7252
   6619  7252
   6620  7252
   6621  7252
   6622  7252
   6623  7252		       ad 1b d0 	      lda	_SPR_DATA_PRIO
   6624  7255
   6625  7255
   6626  7255
   6627  7255
   6628  7255
   6629  7255
   6630  7255
   6631  7255		       3d f8 a2 	      and.wx	_spr_disable_bits
   6632  7258
   6633  7258
   6634  7258
   6635  7258
   6636  7258
   6637  7258
   6638  7258
   6639  7258		       8d 1b d0 	      sta	_SPR_DATA_PRIO
   6640  725b
   6641  725b
   6642  725b
   6643  725b
   6644  725b
   6645  725b
   6646  725b
   6647  725b
   6648  725b
   6649  725b
   6650  725b
   6651  725b
   6652  725b
   6653  725b
   6654  725b
   6655  725b							; Inline ASM end
   6656  725b		       60		      rts
   6657  725c
   6658  725c
   6659  725c
   6660  725c
   6661  725c
   6662  725c
   6663  725c
   6664  725c				   _Pspr_overbg_end
   6665  725c
   6666  725c
   6667  725c
   6668  725c
   6669  725c
   6670  725c
   6671  725c
   6672  725c				   _Fbspr_spr_collision SUBROUTINE
   6673  725c				   FPULL      SET	0
   6674  725c				   FPUSH      SET	1
      0  725c					      pbyte	#0
      1  725c		       a9 00		      lda	#0
      2  725e				  -	      IF	!FPUSH
      3  725e				  -	      pha
      4  725e					      ENDIF
   6676  725e				   FPULL      SET	1
   6677  725e				   FPUSH      SET	0
      0  725e					      plb2var	_spr_spr_collision.result
      1  725e				  -	      IF	!FPULL
      2  725e				  -	      pla
      3  725e					      ENDIF
      4  725e		       8d 12 b5 	      sta	_spr_spr_collision.result
   6679  7261							; Inline ASM start
   6680  7261
   6681  7261
   6682  7261
   6683  7261
   6684  7261
   6685  7261
   6686  7261
   6687  7261
   6688  7261
   6689  7261
   6690  7261
   6691  7261
   6692  7261
   6693  7261
   6694  7261
   6695  7261		       ad 1e d0 	      lda	_SPR_SPR_COLL
   6696  7264
   6697  7264
   6698  7264
   6699  7264
   6700  7264
   6701  7264
   6702  7264
   6703  7264		       ae 11 b5 	      ldx	_spr_spr_collision.spr_no
   6704  7267
   6705  7267
   6706  7267
   6707  7267
   6708  7267
   6709  7267
   6710  7267
   6711  7267		       3d f0 a2 	      and.wx	_spr_enable_bits
   6712  726a
   6713  726a
   6714  726a
   6715  726a
   6716  726a
   6717  726a
   6718  726a
   6719  726a		       f0 05		      beq	.1
   6720  726c
   6721  726c
   6722  726c
   6723  726c
   6724  726c
   6725  726c
   6726  726c
   6727  726c		       a9 01		      lda	#$01
   6728  726e
   6729  726e
   6730  726e
   6731  726e
   6732  726e
   6733  726e
   6734  726e
   6735  726e		       8d 12 b5 	      sta	_spr_spr_collision.result
   6736  7271
   6737  7271
   6738  7271
   6739  7271
   6740  7271
   6741  7271
   6742  7271
   6743  7271				   .1
   6744  7271
   6745  7271
   6746  7271
   6747  7271
   6748  7271
   6749  7271
   6750  7271
   6751  7271
   6752  7271
   6753  7271
   6754  7271
   6755  7271
   6756  7271
   6757  7271
   6758  7271
   6759  7271							; Inline ASM end
   6760  7271				   FPULL      SET	0
      0  7271					      pbvar	_spr_spr_collision.result
      0  7271					      pbyte	_spr_spr_collision.result
      1  7271		       ad 12 b5 	      lda	_spr_spr_collision.result
      2  7274					      IF	!FPUSH
      3  7274		       48		      pha
      4  7275					      ENDIF
      0  7275					      swapb
      1  7275		       ba		      tsx
      2  7276		       bd 01 01 	      lda.wx	stack+1
      3  7279		       a8		      tay
      4  727a		       bd 02 01 	      lda.wx	stack+2
      5  727d		       9d 01 01 	      sta.wx	stack+1
      6  7280		       bd 03 01 	      lda.wx	stack+3
      7  7283		       9d 02 01 	      sta.wx	stack+2
      8  7286		       98		      tya
      9  7287		       9d 03 01 	      sta.wx	stack+3
   6763  728a		       60		      rts
   6764  728b		       00		      brk
   6765  728c		       00 00	   _Fbspr_spr_collision_tmp_retaddr DC.W	0
   6766  728e
   6767  728e
   6768  728e
   6769  728e
   6770  728e
   6771  728e
   6772  728e
   6773  728e				   _Fbspr_spr_collision_end
   6774  728e
   6775  728e
   6776  728e
   6777  728e
   6778  728e
   6779  728e
   6780  728e
   6781  728e				   _Fbspr_data_collision SUBROUTINE
   6782  728e				   FPUSH      SET	1
      0  728e					      pbyte	#0
      1  728e		       a9 00		      lda	#0
      2  7290				  -	      IF	!FPUSH
      3  7290				  -	      pha
      4  7290					      ENDIF
   6784  7290				   FPULL      SET	1
   6785  7290				   FPUSH      SET	0
      0  7290					      plb2var	_spr_data_collision.result
      1  7290				  -	      IF	!FPULL
      2  7290				  -	      pla
      3  7290					      ENDIF
      4  7290		       8d 14 b5 	      sta	_spr_data_collision.result
   6787  7293							; Inline ASM start
   6788  7293
   6789  7293
   6790  7293
   6791  7293
   6792  7293
   6793  7293
   6794  7293
   6795  7293
   6796  7293
   6797  7293
   6798  7293
   6799  7293
   6800  7293
   6801  7293
   6802  7293
   6803  7293		       ad 1f d0 	      lda	_SPR_DATA_COLL
   6804  7296
   6805  7296
   6806  7296
   6807  7296
   6808  7296
   6809  7296
   6810  7296
   6811  7296		       ae 13 b5 	      ldx	_spr_data_collision.spr_no
   6812  7299
   6813  7299
   6814  7299
   6815  7299
   6816  7299
   6817  7299
   6818  7299
   6819  7299		       3d f0 a2 	      and.wx	_spr_enable_bits
   6820  729c
   6821  729c
   6822  729c
   6823  729c
   6824  729c
   6825  729c
   6826  729c
   6827  729c		       f0 05		      beq	.1
   6828  729e
   6829  729e
   6830  729e
   6831  729e
   6832  729e
   6833  729e
   6834  729e
   6835  729e		       a9 01		      lda	#$01
   6836  72a0
   6837  72a0
   6838  72a0
   6839  72a0
   6840  72a0
   6841  72a0
   6842  72a0
   6843  72a0		       8d 14 b5 	      sta	_spr_data_collision.result
   6844  72a3
   6845  72a3
   6846  72a3
   6847  72a3
   6848  72a3
   6849  72a3
   6850  72a3
   6851  72a3				   .1
   6852  72a3
   6853  72a3
   6854  72a3
   6855  72a3
   6856  72a3
   6857  72a3
   6858  72a3
   6859  72a3
   6860  72a3
   6861  72a3
   6862  72a3
   6863  72a3
   6864  72a3
   6865  72a3
   6866  72a3
   6867  72a3							; Inline ASM end
   6868  72a3				   FPULL      SET	0
      0  72a3					      pbvar	_spr_data_collision.result
      0  72a3					      pbyte	_spr_data_collision.result
      1  72a3		       ad 14 b5 	      lda	_spr_data_collision.result
      2  72a6					      IF	!FPUSH
      3  72a6		       48		      pha
      4  72a7					      ENDIF
      0  72a7					      swapb
      1  72a7		       ba		      tsx
      2  72a8		       bd 01 01 	      lda.wx	stack+1
      3  72ab		       a8		      tay
      4  72ac		       bd 02 01 	      lda.wx	stack+2
      5  72af		       9d 01 01 	      sta.wx	stack+1
      6  72b2		       bd 03 01 	      lda.wx	stack+3
      7  72b5		       9d 02 01 	      sta.wx	stack+2
      8  72b8		       98		      tya
      9  72b9		       9d 03 01 	      sta.wx	stack+3
   6871  72bc		       60		      rts
   6872  72bd		       00		      brk
   6873  72be		       00 00	   _Fbspr_data_collision_tmp_retaddr DC.W	0
   6874  72c0
   6875  72c0
   6876  72c0
   6877  72c0
   6878  72c0
   6879  72c0
   6880  72c0
   6881  72c0				   _Fbspr_data_collision_end
   6882  72c0
   6883  72c0
   6884  72c0
   6885  72c0
   6886  72c0
   6887  72c0
   6888  72c0
   6889  72c0				   _Fbjoy_1_up SUBROUTINE
   6890  72c0
   6891  72c0
   6892  72c0
   6893  72c0
   6894  72c0
   6895  72c0
   6896  72c0
   6897  72c0							; Inline ASM start
   6898  72c0
   6899  72c0
   6900  72c0
   6901  72c0
   6902  72c0
   6903  72c0
   6904  72c0
   6905  72c0
   6906  72c0
   6907  72c0
   6908  72c0
   6909  72c0
   6910  72c0
   6911  72c0
   6912  72c0
      0  72c0					      joy_saveaddr
      1  72c0
      2  72c0
      3  72c0
      4  72c0
      5  72c0
      6  72c0
      7  72c0
      8  72c0		       68		      pla
      9  72c1
     10  72c1
     11  72c1
     12  72c1
     13  72c1
     14  72c1
     15  72c1
     16  72c1		       aa		      tax
     17  72c2
     18  72c2
     19  72c2
     20  72c2
     21  72c2
     22  72c2
     23  72c2
     24  72c2		       68		      pla
     25  72c3
     26  72c3
     27  72c3
     28  72c3
     29  72c3
     30  72c3
     31  72c3
     32  72c3		       a8		      tay
     33  72c4
     34  72c4
     35  72c4
     36  72c4
     37  72c4
     38  72c4
     39  72c4
   6914  72c4
   6915  72c4
   6916  72c4
   6917  72c4
   6918  72c4
   6919  72c4
   6920  72c4
   6921  72c4		       a9 01		      lda	#%00000001
   6922  72c6
   6923  72c6
   6924  72c6
   6925  72c6
   6926  72c6
   6927  72c6
   6928  72c6
   6929  72c6		       2c 01 dc 	      bit	_JOY_PORT1
   6930  72c9
   6931  72c9
   6932  72c9
   6933  72c9
   6934  72c9
   6935  72c9
   6936  72c9
   6937  72c9		       d0 06		      bne	.false
   6938  72cb
   6939  72cb
   6940  72cb
   6941  72cb
   6942  72cb
   6943  72cb
   6944  72cb
      0  72cb					      pone
      1  72cb		       a9 01		      lda	#$01
      2  72cd					      IF	!FPUSH
      3  72cd		       48		      pha
      4  72ce					      ENDIF
   6946  72ce
   6947  72ce
   6948  72ce
   6949  72ce
   6950  72ce
   6951  72ce
   6952  72ce
   6953  72ce		       4c d4 72 	      jmp	.ret
   6954  72d1
   6955  72d1
   6956  72d1
   6957  72d1
   6958  72d1
   6959  72d1
   6960  72d1
   6961  72d1				   .false
   6962  72d1
   6963  72d1
   6964  72d1
   6965  72d1
   6966  72d1
   6967  72d1
   6968  72d1
      0  72d1					      pzero
      1  72d1		       a9 00		      lda	#$00
      2  72d3					      IF	!FPUSH
      3  72d3		       48		      pha
      4  72d4					      ENDIF
   6970  72d4
   6971  72d4
   6972  72d4
   6973  72d4
   6974  72d4
   6975  72d4
   6976  72d4
   6977  72d4				   .ret
   6978  72d4
   6979  72d4
   6980  72d4
   6981  72d4
   6982  72d4
   6983  72d4
   6984  72d4
      0  72d4					      joy_restoreaddr
      1  72d4
      2  72d4
      3  72d4
      4  72d4
      5  72d4
      6  72d4
      7  72d4
      8  72d4		       98		      tya
      9  72d5
     10  72d5
     11  72d5
     12  72d5
     13  72d5
     14  72d5
     15  72d5
     16  72d5		       48		      pha
     17  72d6
     18  72d6
     19  72d6
     20  72d6
     21  72d6
     22  72d6
     23  72d6
     24  72d6		       8a		      txa
     25  72d7
     26  72d7
     27  72d7
     28  72d7
     29  72d7
     30  72d7
     31  72d7
     32  72d7		       48		      pha
     33  72d8
     34  72d8
     35  72d8
     36  72d8
     37  72d8
     38  72d8
     39  72d8
   6986  72d8
   6987  72d8
   6988  72d8
   6989  72d8
   6990  72d8
   6991  72d8
   6992  72d8
   6993  72d8		       60		      rts
   6994  72d9
   6995  72d9
   6996  72d9
   6997  72d9
   6998  72d9
   6999  72d9
   7000  72d9
   7001  72d9
   7002  72d9
   7003  72d9
   7004  72d9
   7005  72d9
   7006  72d9
   7007  72d9
   7008  72d9
   7009  72d9							; Inline ASM end
   7010  72d9		       00		      brk
   7011  72da
   7012  72da
   7013  72da
   7014  72da
   7015  72da
   7016  72da
   7017  72da
   7018  72da		       00 00	   _Fbjoy_1_up_tmp_retaddr DC.W	0
   7019  72dc
   7020  72dc
   7021  72dc
   7022  72dc
   7023  72dc
   7024  72dc
   7025  72dc
   7026  72dc				   _Fbjoy_1_up_end
   7027  72dc
   7028  72dc
   7029  72dc
   7030  72dc
   7031  72dc
   7032  72dc
   7033  72dc
   7034  72dc				   _Fbjoy_1_down SUBROUTINE
   7035  72dc
   7036  72dc
   7037  72dc
   7038  72dc
   7039  72dc
   7040  72dc
   7041  72dc
   7042  72dc							; Inline ASM start
   7043  72dc
   7044  72dc
   7045  72dc
   7046  72dc
   7047  72dc
   7048  72dc
   7049  72dc
   7050  72dc
   7051  72dc
   7052  72dc
   7053  72dc
   7054  72dc
   7055  72dc
   7056  72dc
   7057  72dc
      0  72dc					      joy_saveaddr
      1  72dc
      2  72dc
      3  72dc
      4  72dc
      5  72dc
      6  72dc
      7  72dc
      8  72dc		       68		      pla
      9  72dd
     10  72dd
     11  72dd
     12  72dd
     13  72dd
     14  72dd
     15  72dd
     16  72dd		       aa		      tax
     17  72de
     18  72de
     19  72de
     20  72de
     21  72de
     22  72de
     23  72de
     24  72de		       68		      pla
     25  72df
     26  72df
     27  72df
     28  72df
     29  72df
     30  72df
     31  72df
     32  72df		       a8		      tay
     33  72e0
     34  72e0
     35  72e0
     36  72e0
     37  72e0
     38  72e0
     39  72e0
   7059  72e0
   7060  72e0
   7061  72e0
   7062  72e0
   7063  72e0
   7064  72e0
   7065  72e0
   7066  72e0		       a9 02		      lda	#%00000010
   7067  72e2
   7068  72e2
   7069  72e2
   7070  72e2
   7071  72e2
   7072  72e2
   7073  72e2
   7074  72e2		       2c 01 dc 	      bit	_JOY_PORT1
   7075  72e5
   7076  72e5
   7077  72e5
   7078  72e5
   7079  72e5
   7080  72e5
   7081  72e5
   7082  72e5		       d0 06		      bne	.false
   7083  72e7
   7084  72e7
   7085  72e7
   7086  72e7
   7087  72e7
   7088  72e7
   7089  72e7
      0  72e7					      pone
      1  72e7		       a9 01		      lda	#$01
      2  72e9					      IF	!FPUSH
      3  72e9		       48		      pha
      4  72ea					      ENDIF
   7091  72ea
   7092  72ea
   7093  72ea
   7094  72ea
   7095  72ea
   7096  72ea
   7097  72ea
   7098  72ea		       4c f0 72 	      jmp	.ret
   7099  72ed
   7100  72ed
   7101  72ed
   7102  72ed
   7103  72ed
   7104  72ed
   7105  72ed
   7106  72ed				   .false
   7107  72ed
   7108  72ed
   7109  72ed
   7110  72ed
   7111  72ed
   7112  72ed
   7113  72ed
      0  72ed					      pzero
      1  72ed		       a9 00		      lda	#$00
      2  72ef					      IF	!FPUSH
      3  72ef		       48		      pha
      4  72f0					      ENDIF
   7115  72f0
   7116  72f0
   7117  72f0
   7118  72f0
   7119  72f0
   7120  72f0
   7121  72f0
   7122  72f0				   .ret
   7123  72f0
   7124  72f0
   7125  72f0
   7126  72f0
   7127  72f0
   7128  72f0
   7129  72f0
      0  72f0					      joy_restoreaddr
      1  72f0
      2  72f0
      3  72f0
      4  72f0
      5  72f0
      6  72f0
      7  72f0
      8  72f0		       98		      tya
      9  72f1
     10  72f1
     11  72f1
     12  72f1
     13  72f1
     14  72f1
     15  72f1
     16  72f1		       48		      pha
     17  72f2
     18  72f2
     19  72f2
     20  72f2
     21  72f2
     22  72f2
     23  72f2
     24  72f2		       8a		      txa
     25  72f3
     26  72f3
     27  72f3
     28  72f3
     29  72f3
     30  72f3
     31  72f3
     32  72f3		       48		      pha
     33  72f4
     34  72f4
     35  72f4
     36  72f4
     37  72f4
     38  72f4
     39  72f4
   7131  72f4
   7132  72f4
   7133  72f4
   7134  72f4
   7135  72f4
   7136  72f4
   7137  72f4
   7138  72f4		       60		      rts
   7139  72f5
   7140  72f5
   7141  72f5
   7142  72f5
   7143  72f5
   7144  72f5
   7145  72f5
   7146  72f5
   7147  72f5
   7148  72f5
   7149  72f5
   7150  72f5
   7151  72f5
   7152  72f5
   7153  72f5
   7154  72f5							; Inline ASM end
   7155  72f5		       00		      brk
   7156  72f6
   7157  72f6
   7158  72f6
   7159  72f6
   7160  72f6
   7161  72f6
   7162  72f6
   7163  72f6		       00 00	   _Fbjoy_1_down_tmp_retaddr DC.W	0
   7164  72f8
   7165  72f8
   7166  72f8
   7167  72f8
   7168  72f8
   7169  72f8
   7170  72f8
   7171  72f8				   _Fbjoy_1_down_end
   7172  72f8
   7173  72f8
   7174  72f8
   7175  72f8
   7176  72f8
   7177  72f8
   7178  72f8
   7179  72f8				   _Fbjoy_1_left SUBROUTINE
   7180  72f8
   7181  72f8
   7182  72f8
   7183  72f8
   7184  72f8
   7185  72f8
   7186  72f8
   7187  72f8							; Inline ASM start
   7188  72f8
   7189  72f8
   7190  72f8
   7191  72f8
   7192  72f8
   7193  72f8
   7194  72f8
   7195  72f8
   7196  72f8
   7197  72f8
   7198  72f8
   7199  72f8
   7200  72f8
   7201  72f8
   7202  72f8
      0  72f8					      joy_saveaddr
      1  72f8
      2  72f8
      3  72f8
      4  72f8
      5  72f8
      6  72f8
      7  72f8
      8  72f8		       68		      pla
      9  72f9
     10  72f9
     11  72f9
     12  72f9
     13  72f9
     14  72f9
     15  72f9
     16  72f9		       aa		      tax
     17  72fa
     18  72fa
     19  72fa
     20  72fa
     21  72fa
     22  72fa
     23  72fa
     24  72fa		       68		      pla
     25  72fb
     26  72fb
     27  72fb
     28  72fb
     29  72fb
     30  72fb
     31  72fb
     32  72fb		       a8		      tay
     33  72fc
     34  72fc
     35  72fc
     36  72fc
     37  72fc
     38  72fc
     39  72fc
   7204  72fc
   7205  72fc
   7206  72fc
   7207  72fc
   7208  72fc
   7209  72fc
   7210  72fc
   7211  72fc		       a9 04		      lda	#%00000100
   7212  72fe
   7213  72fe
   7214  72fe
   7215  72fe
   7216  72fe
   7217  72fe
   7218  72fe
   7219  72fe		       2c 01 dc 	      bit	_JOY_PORT1
   7220  7301
   7221  7301
   7222  7301
   7223  7301
   7224  7301
   7225  7301
   7226  7301
   7227  7301		       d0 06		      bne	.false
   7228  7303
   7229  7303
   7230  7303
   7231  7303
   7232  7303
   7233  7303
   7234  7303
      0  7303					      pone
      1  7303		       a9 01		      lda	#$01
      2  7305					      IF	!FPUSH
      3  7305		       48		      pha
      4  7306					      ENDIF
   7236  7306
   7237  7306
   7238  7306
   7239  7306
   7240  7306
   7241  7306
   7242  7306
   7243  7306		       4c 0c 73 	      jmp	.ret
   7244  7309
   7245  7309
   7246  7309
   7247  7309
   7248  7309
   7249  7309
   7250  7309
   7251  7309				   .false
   7252  7309
   7253  7309
   7254  7309
   7255  7309
   7256  7309
   7257  7309
   7258  7309
      0  7309					      pzero
      1  7309		       a9 00		      lda	#$00
      2  730b					      IF	!FPUSH
      3  730b		       48		      pha
      4  730c					      ENDIF
   7260  730c
   7261  730c
   7262  730c
   7263  730c
   7264  730c
   7265  730c
   7266  730c
   7267  730c				   .ret
   7268  730c
   7269  730c
   7270  730c
   7271  730c
   7272  730c
   7273  730c
   7274  730c
      0  730c					      joy_restoreaddr
      1  730c
      2  730c
      3  730c
      4  730c
      5  730c
      6  730c
      7  730c
      8  730c		       98		      tya
      9  730d
     10  730d
     11  730d
     12  730d
     13  730d
     14  730d
     15  730d
     16  730d		       48		      pha
     17  730e
     18  730e
     19  730e
     20  730e
     21  730e
     22  730e
     23  730e
     24  730e		       8a		      txa
     25  730f
     26  730f
     27  730f
     28  730f
     29  730f
     30  730f
     31  730f
     32  730f		       48		      pha
     33  7310
     34  7310
     35  7310
     36  7310
     37  7310
     38  7310
     39  7310
   7276  7310
   7277  7310
   7278  7310
   7279  7310
   7280  7310
   7281  7310
   7282  7310
   7283  7310		       60		      rts
   7284  7311
   7285  7311
   7286  7311
   7287  7311
   7288  7311
   7289  7311
   7290  7311
   7291  7311
   7292  7311
   7293  7311
   7294  7311
   7295  7311
   7296  7311
   7297  7311
   7298  7311
   7299  7311							; Inline ASM end
   7300  7311		       00		      brk
   7301  7312
   7302  7312
   7303  7312
   7304  7312
   7305  7312
   7306  7312
   7307  7312
   7308  7312		       00 00	   _Fbjoy_1_left_tmp_retaddr DC.W	0
   7309  7314
   7310  7314
   7311  7314
   7312  7314
   7313  7314
   7314  7314
   7315  7314
   7316  7314				   _Fbjoy_1_left_end
   7317  7314
   7318  7314
   7319  7314
   7320  7314
   7321  7314
   7322  7314
   7323  7314
   7324  7314				   _Fbjoy_1_right SUBROUTINE
   7325  7314
   7326  7314
   7327  7314
   7328  7314
   7329  7314
   7330  7314
   7331  7314
   7332  7314							; Inline ASM start
   7333  7314
   7334  7314
   7335  7314
   7336  7314
   7337  7314
   7338  7314
   7339  7314
   7340  7314
   7341  7314
   7342  7314
   7343  7314
   7344  7314
   7345  7314
   7346  7314
   7347  7314
      0  7314					      joy_saveaddr
      1  7314
      2  7314
      3  7314
      4  7314
      5  7314
      6  7314
      7  7314
      8  7314		       68		      pla
      9  7315
     10  7315
     11  7315
     12  7315
     13  7315
     14  7315
     15  7315
     16  7315		       aa		      tax
     17  7316
     18  7316
     19  7316
     20  7316
     21  7316
     22  7316
     23  7316
     24  7316		       68		      pla
     25  7317
     26  7317
     27  7317
     28  7317
     29  7317
     30  7317
     31  7317
     32  7317		       a8		      tay
     33  7318
     34  7318
     35  7318
     36  7318
     37  7318
     38  7318
     39  7318
   7349  7318
   7350  7318
   7351  7318
   7352  7318
   7353  7318
   7354  7318
   7355  7318
   7356  7318		       a9 08		      lda	#%00001000
   7357  731a
   7358  731a
   7359  731a
   7360  731a
   7361  731a
   7362  731a
   7363  731a
   7364  731a		       2c 01 dc 	      bit	_JOY_PORT1
   7365  731d
   7366  731d
   7367  731d
   7368  731d
   7369  731d
   7370  731d
   7371  731d
   7372  731d		       d0 06		      bne	.false
   7373  731f
   7374  731f
   7375  731f
   7376  731f
   7377  731f
   7378  731f
   7379  731f
      0  731f					      pone
      1  731f		       a9 01		      lda	#$01
      2  7321					      IF	!FPUSH
      3  7321		       48		      pha
      4  7322					      ENDIF
   7381  7322
   7382  7322
   7383  7322
   7384  7322
   7385  7322
   7386  7322
   7387  7322
   7388  7322		       4c 28 73 	      jmp	.ret
   7389  7325
   7390  7325
   7391  7325
   7392  7325
   7393  7325
   7394  7325
   7395  7325
   7396  7325				   .false
   7397  7325
   7398  7325
   7399  7325
   7400  7325
   7401  7325
   7402  7325
   7403  7325
      0  7325					      pzero
      1  7325		       a9 00		      lda	#$00
      2  7327					      IF	!FPUSH
      3  7327		       48		      pha
      4  7328					      ENDIF
   7405  7328
   7406  7328
   7407  7328
   7408  7328
   7409  7328
   7410  7328
   7411  7328
   7412  7328				   .ret
   7413  7328
   7414  7328
   7415  7328
   7416  7328
   7417  7328
   7418  7328
   7419  7328
      0  7328					      joy_restoreaddr
      1  7328
      2  7328
      3  7328
      4  7328
      5  7328
      6  7328
      7  7328
      8  7328		       98		      tya
      9  7329
     10  7329
     11  7329
     12  7329
     13  7329
     14  7329
     15  7329
     16  7329		       48		      pha
     17  732a
     18  732a
     19  732a
     20  732a
     21  732a
     22  732a
     23  732a
     24  732a		       8a		      txa
     25  732b
     26  732b
     27  732b
     28  732b
     29  732b
     30  732b
     31  732b
     32  732b		       48		      pha
     33  732c
     34  732c
     35  732c
     36  732c
     37  732c
     38  732c
     39  732c
   7421  732c
   7422  732c
   7423  732c
   7424  732c
   7425  732c
   7426  732c
   7427  732c
   7428  732c		       60		      rts
   7429  732d
   7430  732d
   7431  732d
   7432  732d
   7433  732d
   7434  732d
   7435  732d
   7436  732d
   7437  732d
   7438  732d
   7439  732d
   7440  732d
   7441  732d
   7442  732d
   7443  732d
   7444  732d							; Inline ASM end
   7445  732d		       00		      brk
   7446  732e
   7447  732e
   7448  732e
   7449  732e
   7450  732e
   7451  732e
   7452  732e
   7453  732e		       00 00	   _Fbjoy_1_right_tmp_retaddr DC.W	0
   7454  7330
   7455  7330
   7456  7330
   7457  7330
   7458  7330
   7459  7330
   7460  7330
   7461  7330				   _Fbjoy_1_right_end
   7462  7330
   7463  7330
   7464  7330
   7465  7330
   7466  7330
   7467  7330
   7468  7330
   7469  7330				   _Fbjoy_1_fire SUBROUTINE
   7470  7330
   7471  7330
   7472  7330
   7473  7330
   7474  7330
   7475  7330
   7476  7330
   7477  7330							; Inline ASM start
   7478  7330
   7479  7330
   7480  7330
   7481  7330
   7482  7330
   7483  7330
   7484  7330
   7485  7330
   7486  7330
   7487  7330
   7488  7330
   7489  7330
   7490  7330
   7491  7330
   7492  7330
      0  7330					      joy_saveaddr
      1  7330
      2  7330
      3  7330
      4  7330
      5  7330
      6  7330
      7  7330
      8  7330		       68		      pla
      9  7331
     10  7331
     11  7331
     12  7331
     13  7331
     14  7331
     15  7331
     16  7331		       aa		      tax
     17  7332
     18  7332
     19  7332
     20  7332
     21  7332
     22  7332
     23  7332
     24  7332		       68		      pla
     25  7333
     26  7333
     27  7333
     28  7333
     29  7333
     30  7333
     31  7333
     32  7333		       a8		      tay
     33  7334
     34  7334
     35  7334
     36  7334
     37  7334
     38  7334
     39  7334
   7494  7334
   7495  7334
   7496  7334
   7497  7334
   7498  7334
   7499  7334
   7500  7334
   7501  7334		       a9 10		      lda	#%00010000
   7502  7336
   7503  7336
   7504  7336
   7505  7336
   7506  7336
   7507  7336
   7508  7336
   7509  7336		       2c 01 dc 	      bit	_JOY_PORT1
   7510  7339
   7511  7339
   7512  7339
   7513  7339
   7514  7339
   7515  7339
   7516  7339
   7517  7339		       d0 06		      bne	.false
   7518  733b
   7519  733b
   7520  733b
   7521  733b
   7522  733b
   7523  733b
   7524  733b
      0  733b					      pone
      1  733b		       a9 01		      lda	#$01
      2  733d					      IF	!FPUSH
      3  733d		       48		      pha
      4  733e					      ENDIF
   7526  733e
   7527  733e
   7528  733e
   7529  733e
   7530  733e
   7531  733e
   7532  733e
   7533  733e		       4c 44 73 	      jmp	.ret
   7534  7341
   7535  7341
   7536  7341
   7537  7341
   7538  7341
   7539  7341
   7540  7341
   7541  7341				   .false
   7542  7341
   7543  7341
   7544  7341
   7545  7341
   7546  7341
   7547  7341
   7548  7341
      0  7341					      pzero
      1  7341		       a9 00		      lda	#$00
      2  7343					      IF	!FPUSH
      3  7343		       48		      pha
      4  7344					      ENDIF
   7550  7344
   7551  7344
   7552  7344
   7553  7344
   7554  7344
   7555  7344
   7556  7344
   7557  7344				   .ret
   7558  7344
   7559  7344
   7560  7344
   7561  7344
   7562  7344
   7563  7344
   7564  7344
      0  7344					      joy_restoreaddr
      1  7344
      2  7344
      3  7344
      4  7344
      5  7344
      6  7344
      7  7344
      8  7344		       98		      tya
      9  7345
     10  7345
     11  7345
     12  7345
     13  7345
     14  7345
     15  7345
     16  7345		       48		      pha
     17  7346
     18  7346
     19  7346
     20  7346
     21  7346
     22  7346
     23  7346
     24  7346		       8a		      txa
     25  7347
     26  7347
     27  7347
     28  7347
     29  7347
     30  7347
     31  7347
     32  7347		       48		      pha
     33  7348
     34  7348
     35  7348
     36  7348
     37  7348
     38  7348
     39  7348
   7566  7348
   7567  7348
   7568  7348
   7569  7348
   7570  7348
   7571  7348
   7572  7348
   7573  7348		       60		      rts
   7574  7349
   7575  7349
   7576  7349
   7577  7349
   7578  7349
   7579  7349
   7580  7349
   7581  7349
   7582  7349
   7583  7349
   7584  7349
   7585  7349
   7586  7349
   7587  7349
   7588  7349
   7589  7349							; Inline ASM end
   7590  7349		       00		      brk
   7591  734a
   7592  734a
   7593  734a
   7594  734a
   7595  734a
   7596  734a
   7597  734a
   7598  734a		       00 00	   _Fbjoy_1_fire_tmp_retaddr DC.W	0
   7599  734c
   7600  734c
   7601  734c
   7602  734c
   7603  734c
   7604  734c
   7605  734c
   7606  734c				   _Fbjoy_1_fire_end
   7607  734c
   7608  734c
   7609  734c
   7610  734c
   7611  734c
   7612  734c
   7613  734c
   7614  734c				   _Fbjoy_2_up SUBROUTINE
   7615  734c
   7616  734c
   7617  734c
   7618  734c
   7619  734c
   7620  734c
   7621  734c
   7622  734c							; Inline ASM start
   7623  734c
   7624  734c
   7625  734c
   7626  734c
   7627  734c
   7628  734c
   7629  734c
   7630  734c
   7631  734c
   7632  734c
   7633  734c
   7634  734c
   7635  734c
   7636  734c
   7637  734c
      0  734c					      joy_saveaddr
      1  734c
      2  734c
      3  734c
      4  734c
      5  734c
      6  734c
      7  734c
      8  734c		       68		      pla
      9  734d
     10  734d
     11  734d
     12  734d
     13  734d
     14  734d
     15  734d
     16  734d		       aa		      tax
     17  734e
     18  734e
     19  734e
     20  734e
     21  734e
     22  734e
     23  734e
     24  734e		       68		      pla
     25  734f
     26  734f
     27  734f
     28  734f
     29  734f
     30  734f
     31  734f
     32  734f		       a8		      tay
     33  7350
     34  7350
     35  7350
     36  7350
     37  7350
     38  7350
     39  7350
   7639  7350
   7640  7350
   7641  7350
   7642  7350
   7643  7350
   7644  7350
   7645  7350
   7646  7350		       a9 01		      lda	#%00000001
   7647  7352
   7648  7352
   7649  7352
   7650  7352
   7651  7352
   7652  7352
   7653  7352
   7654  7352		       2c 00 dc 	      bit	_JOY_PORT2
   7655  7355
   7656  7355
   7657  7355
   7658  7355
   7659  7355
   7660  7355
   7661  7355
   7662  7355		       d0 06		      bne	.false
   7663  7357
   7664  7357
   7665  7357
   7666  7357
   7667  7357
   7668  7357
   7669  7357
      0  7357					      pone
      1  7357		       a9 01		      lda	#$01
      2  7359					      IF	!FPUSH
      3  7359		       48		      pha
      4  735a					      ENDIF
   7671  735a
   7672  735a
   7673  735a
   7674  735a
   7675  735a
   7676  735a
   7677  735a
   7678  735a		       4c 60 73 	      jmp	.ret
   7679  735d
   7680  735d
   7681  735d
   7682  735d
   7683  735d
   7684  735d
   7685  735d
   7686  735d				   .false
   7687  735d
   7688  735d
   7689  735d
   7690  735d
   7691  735d
   7692  735d
   7693  735d
      0  735d					      pzero
      1  735d		       a9 00		      lda	#$00
      2  735f					      IF	!FPUSH
      3  735f		       48		      pha
      4  7360					      ENDIF
   7695  7360
   7696  7360
   7697  7360
   7698  7360
   7699  7360
   7700  7360
   7701  7360
   7702  7360				   .ret
   7703  7360
   7704  7360
   7705  7360
   7706  7360
   7707  7360
   7708  7360
   7709  7360
      0  7360					      joy_restoreaddr
      1  7360
      2  7360
      3  7360
      4  7360
      5  7360
      6  7360
      7  7360
      8  7360		       98		      tya
      9  7361
     10  7361
     11  7361
     12  7361
     13  7361
     14  7361
     15  7361
     16  7361		       48		      pha
     17  7362
     18  7362
     19  7362
     20  7362
     21  7362
     22  7362
     23  7362
     24  7362		       8a		      txa
     25  7363
     26  7363
     27  7363
     28  7363
     29  7363
     30  7363
     31  7363
     32  7363		       48		      pha
     33  7364
     34  7364
     35  7364
     36  7364
     37  7364
     38  7364
     39  7364
   7711  7364
   7712  7364
   7713  7364
   7714  7364
   7715  7364
   7716  7364
   7717  7364
   7718  7364		       60		      rts
   7719  7365
   7720  7365
   7721  7365
   7722  7365
   7723  7365
   7724  7365
   7725  7365
   7726  7365
   7727  7365
   7728  7365
   7729  7365
   7730  7365
   7731  7365
   7732  7365
   7733  7365
   7734  7365							; Inline ASM end
   7735  7365		       00		      brk
   7736  7366
   7737  7366
   7738  7366
   7739  7366
   7740  7366
   7741  7366
   7742  7366
   7743  7366		       00 00	   _Fbjoy_2_up_tmp_retaddr DC.W	0
   7744  7368
   7745  7368
   7746  7368
   7747  7368
   7748  7368
   7749  7368
   7750  7368
   7751  7368				   _Fbjoy_2_up_end
   7752  7368
   7753  7368
   7754  7368
   7755  7368
   7756  7368
   7757  7368
   7758  7368
   7759  7368				   _Fbjoy_2_down SUBROUTINE
   7760  7368
   7761  7368
   7762  7368
   7763  7368
   7764  7368
   7765  7368
   7766  7368
   7767  7368							; Inline ASM start
   7768  7368
   7769  7368
   7770  7368
   7771  7368
   7772  7368
   7773  7368
   7774  7368
   7775  7368
   7776  7368
   7777  7368
   7778  7368
   7779  7368
   7780  7368
   7781  7368
   7782  7368
      0  7368					      joy_saveaddr
      1  7368
      2  7368
      3  7368
      4  7368
      5  7368
      6  7368
      7  7368
      8  7368		       68		      pla
      9  7369
     10  7369
     11  7369
     12  7369
     13  7369
     14  7369
     15  7369
     16  7369		       aa		      tax
     17  736a
     18  736a
     19  736a
     20  736a
     21  736a
     22  736a
     23  736a
     24  736a		       68		      pla
     25  736b
     26  736b
     27  736b
     28  736b
     29  736b
     30  736b
     31  736b
     32  736b		       a8		      tay
     33  736c
     34  736c
     35  736c
     36  736c
     37  736c
     38  736c
     39  736c
   7784  736c
   7785  736c
   7786  736c
   7787  736c
   7788  736c
   7789  736c
   7790  736c
   7791  736c		       a9 02		      lda	#%00000010
   7792  736e
   7793  736e
   7794  736e
   7795  736e
   7796  736e
   7797  736e
   7798  736e
   7799  736e		       2c 00 dc 	      bit	_JOY_PORT2
   7800  7371
   7801  7371
   7802  7371
   7803  7371
   7804  7371
   7805  7371
   7806  7371
   7807  7371		       d0 06		      bne	.false
   7808  7373
   7809  7373
   7810  7373
   7811  7373
   7812  7373
   7813  7373
   7814  7373
      0  7373					      pone
      1  7373		       a9 01		      lda	#$01
      2  7375					      IF	!FPUSH
      3  7375		       48		      pha
      4  7376					      ENDIF
   7816  7376
   7817  7376
   7818  7376
   7819  7376
   7820  7376
   7821  7376
   7822  7376
   7823  7376		       4c 7c 73 	      jmp	.ret
   7824  7379
   7825  7379
   7826  7379
   7827  7379
   7828  7379
   7829  7379
   7830  7379
   7831  7379				   .false
   7832  7379
   7833  7379
   7834  7379
   7835  7379
   7836  7379
   7837  7379
   7838  7379
      0  7379					      pzero
      1  7379		       a9 00		      lda	#$00
      2  737b					      IF	!FPUSH
      3  737b		       48		      pha
      4  737c					      ENDIF
   7840  737c
   7841  737c
   7842  737c
   7843  737c
   7844  737c
   7845  737c
   7846  737c
   7847  737c				   .ret
   7848  737c
   7849  737c
   7850  737c
   7851  737c
   7852  737c
   7853  737c
   7854  737c
      0  737c					      joy_restoreaddr
      1  737c
      2  737c
      3  737c
      4  737c
      5  737c
      6  737c
      7  737c
      8  737c		       98		      tya
      9  737d
     10  737d
     11  737d
     12  737d
     13  737d
     14  737d
     15  737d
     16  737d		       48		      pha
     17  737e
     18  737e
     19  737e
     20  737e
     21  737e
     22  737e
     23  737e
     24  737e		       8a		      txa
     25  737f
     26  737f
     27  737f
     28  737f
     29  737f
     30  737f
     31  737f
     32  737f		       48		      pha
     33  7380
     34  7380
     35  7380
     36  7380
     37  7380
     38  7380
     39  7380
   7856  7380
   7857  7380
   7858  7380
   7859  7380
   7860  7380
   7861  7380
   7862  7380
   7863  7380		       60		      rts
   7864  7381
   7865  7381
   7866  7381
   7867  7381
   7868  7381
   7869  7381
   7870  7381
   7871  7381
   7872  7381
   7873  7381
   7874  7381
   7875  7381
   7876  7381
   7877  7381
   7878  7381
   7879  7381							; Inline ASM end
   7880  7381		       00		      brk
   7881  7382
   7882  7382
   7883  7382
   7884  7382
   7885  7382
   7886  7382
   7887  7382
   7888  7382		       00 00	   _Fbjoy_2_down_tmp_retaddr DC.W	0
   7889  7384
   7890  7384
   7891  7384
   7892  7384
   7893  7384
   7894  7384
   7895  7384
   7896  7384				   _Fbjoy_2_down_end
   7897  7384
   7898  7384
   7899  7384
   7900  7384
   7901  7384
   7902  7384
   7903  7384
   7904  7384				   _Fbjoy_2_left SUBROUTINE
   7905  7384
   7906  7384
   7907  7384
   7908  7384
   7909  7384
   7910  7384
   7911  7384
   7912  7384							; Inline ASM start
   7913  7384
   7914  7384
   7915  7384
   7916  7384
   7917  7384
   7918  7384
   7919  7384
   7920  7384
   7921  7384
   7922  7384
   7923  7384
   7924  7384
   7925  7384
   7926  7384
   7927  7384
      0  7384					      joy_saveaddr
      1  7384
      2  7384
      3  7384
      4  7384
      5  7384
      6  7384
      7  7384
      8  7384		       68		      pla
      9  7385
     10  7385
     11  7385
     12  7385
     13  7385
     14  7385
     15  7385
     16  7385		       aa		      tax
     17  7386
     18  7386
     19  7386
     20  7386
     21  7386
     22  7386
     23  7386
     24  7386		       68		      pla
     25  7387
     26  7387
     27  7387
     28  7387
     29  7387
     30  7387
     31  7387
     32  7387		       a8		      tay
     33  7388
     34  7388
     35  7388
     36  7388
     37  7388
     38  7388
     39  7388
   7929  7388
   7930  7388
   7931  7388
   7932  7388
   7933  7388
   7934  7388
   7935  7388
   7936  7388		       a9 04		      lda	#%00000100
   7937  738a
   7938  738a
   7939  738a
   7940  738a
   7941  738a
   7942  738a
   7943  738a
   7944  738a		       2c 00 dc 	      bit	_JOY_PORT2
   7945  738d
   7946  738d
   7947  738d
   7948  738d
   7949  738d
   7950  738d
   7951  738d
   7952  738d		       d0 06		      bne	.false
   7953  738f
   7954  738f
   7955  738f
   7956  738f
   7957  738f
   7958  738f
   7959  738f
      0  738f					      pone
      1  738f		       a9 01		      lda	#$01
      2  7391					      IF	!FPUSH
      3  7391		       48		      pha
      4  7392					      ENDIF
   7961  7392
   7962  7392
   7963  7392
   7964  7392
   7965  7392
   7966  7392
   7967  7392
   7968  7392		       4c 98 73 	      jmp	.ret
   7969  7395
   7970  7395
   7971  7395
   7972  7395
   7973  7395
   7974  7395
   7975  7395
   7976  7395				   .false
   7977  7395
   7978  7395
   7979  7395
   7980  7395
   7981  7395
   7982  7395
   7983  7395
      0  7395					      pzero
      1  7395		       a9 00		      lda	#$00
      2  7397					      IF	!FPUSH
      3  7397		       48		      pha
      4  7398					      ENDIF
   7985  7398
   7986  7398
   7987  7398
   7988  7398
   7989  7398
   7990  7398
   7991  7398
   7992  7398				   .ret
   7993  7398
   7994  7398
   7995  7398
   7996  7398
   7997  7398
   7998  7398
   7999  7398
      0  7398					      joy_restoreaddr
      1  7398
      2  7398
      3  7398
      4  7398
      5  7398
      6  7398
      7  7398
      8  7398		       98		      tya
      9  7399
     10  7399
     11  7399
     12  7399
     13  7399
     14  7399
     15  7399
     16  7399		       48		      pha
     17  739a
     18  739a
     19  739a
     20  739a
     21  739a
     22  739a
     23  739a
     24  739a		       8a		      txa
     25  739b
     26  739b
     27  739b
     28  739b
     29  739b
     30  739b
     31  739b
     32  739b		       48		      pha
     33  739c
     34  739c
     35  739c
     36  739c
     37  739c
     38  739c
     39  739c
   8001  739c
   8002  739c
   8003  739c
   8004  739c
   8005  739c
   8006  739c
   8007  739c
   8008  739c		       60		      rts
   8009  739d
   8010  739d
   8011  739d
   8012  739d
   8013  739d
   8014  739d
   8015  739d
   8016  739d
   8017  739d
   8018  739d
   8019  739d
   8020  739d
   8021  739d
   8022  739d
   8023  739d
   8024  739d							; Inline ASM end
   8025  739d		       00		      brk
   8026  739e
   8027  739e
   8028  739e
   8029  739e
   8030  739e
   8031  739e
   8032  739e
   8033  739e		       00 00	   _Fbjoy_2_left_tmp_retaddr DC.W	0
   8034  73a0
   8035  73a0
   8036  73a0
   8037  73a0
   8038  73a0
   8039  73a0
   8040  73a0
   8041  73a0				   _Fbjoy_2_left_end
   8042  73a0
   8043  73a0
   8044  73a0
   8045  73a0
   8046  73a0
   8047  73a0
   8048  73a0
   8049  73a0				   _Fbjoy_2_right SUBROUTINE
   8050  73a0
   8051  73a0
   8052  73a0
   8053  73a0
   8054  73a0
   8055  73a0
   8056  73a0
   8057  73a0							; Inline ASM start
   8058  73a0
   8059  73a0
   8060  73a0
   8061  73a0
   8062  73a0
   8063  73a0
   8064  73a0
   8065  73a0
   8066  73a0
   8067  73a0
   8068  73a0
   8069  73a0
   8070  73a0
   8071  73a0
   8072  73a0
      0  73a0					      joy_saveaddr
      1  73a0
      2  73a0
      3  73a0
      4  73a0
      5  73a0
      6  73a0
      7  73a0
      8  73a0		       68		      pla
      9  73a1
     10  73a1
     11  73a1
     12  73a1
     13  73a1
     14  73a1
     15  73a1
     16  73a1		       aa		      tax
     17  73a2
     18  73a2
     19  73a2
     20  73a2
     21  73a2
     22  73a2
     23  73a2
     24  73a2		       68		      pla
     25  73a3
     26  73a3
     27  73a3
     28  73a3
     29  73a3
     30  73a3
     31  73a3
     32  73a3		       a8		      tay
     33  73a4
     34  73a4
     35  73a4
     36  73a4
     37  73a4
     38  73a4
     39  73a4
   8074  73a4
   8075  73a4
   8076  73a4
   8077  73a4
   8078  73a4
   8079  73a4
   8080  73a4
   8081  73a4		       a9 08		      lda	#%00001000
   8082  73a6
   8083  73a6
   8084  73a6
   8085  73a6
   8086  73a6
   8087  73a6
   8088  73a6
   8089  73a6		       2c 00 dc 	      bit	_JOY_PORT2
   8090  73a9
   8091  73a9
   8092  73a9
   8093  73a9
   8094  73a9
   8095  73a9
   8096  73a9
   8097  73a9		       d0 06		      bne	.false
   8098  73ab
   8099  73ab
   8100  73ab
   8101  73ab
   8102  73ab
   8103  73ab
   8104  73ab
      0  73ab					      pone
      1  73ab		       a9 01		      lda	#$01
      2  73ad					      IF	!FPUSH
      3  73ad		       48		      pha
      4  73ae					      ENDIF
   8106  73ae
   8107  73ae
   8108  73ae
   8109  73ae
   8110  73ae
   8111  73ae
   8112  73ae
   8113  73ae		       4c b4 73 	      jmp	.ret
   8114  73b1
   8115  73b1
   8116  73b1
   8117  73b1
   8118  73b1
   8119  73b1
   8120  73b1
   8121  73b1				   .false
   8122  73b1
   8123  73b1
   8124  73b1
   8125  73b1
   8126  73b1
   8127  73b1
   8128  73b1
      0  73b1					      pzero
      1  73b1		       a9 00		      lda	#$00
      2  73b3					      IF	!FPUSH
      3  73b3		       48		      pha
      4  73b4					      ENDIF
   8130  73b4
   8131  73b4
   8132  73b4
   8133  73b4
   8134  73b4
   8135  73b4
   8136  73b4
   8137  73b4				   .ret
   8138  73b4
   8139  73b4
   8140  73b4
   8141  73b4
   8142  73b4
   8143  73b4
   8144  73b4
      0  73b4					      joy_restoreaddr
      1  73b4
      2  73b4
      3  73b4
      4  73b4
      5  73b4
      6  73b4
      7  73b4
      8  73b4		       98		      tya
      9  73b5
     10  73b5
     11  73b5
     12  73b5
     13  73b5
     14  73b5
     15  73b5
     16  73b5		       48		      pha
     17  73b6
     18  73b6
     19  73b6
     20  73b6
     21  73b6
     22  73b6
     23  73b6
     24  73b6		       8a		      txa
     25  73b7
     26  73b7
     27  73b7
     28  73b7
     29  73b7
     30  73b7
     31  73b7
     32  73b7		       48		      pha
     33  73b8
     34  73b8
     35  73b8
     36  73b8
     37  73b8
     38  73b8
     39  73b8
   8146  73b8
   8147  73b8
   8148  73b8
   8149  73b8
   8150  73b8
   8151  73b8
   8152  73b8
   8153  73b8		       60		      rts
   8154  73b9
   8155  73b9
   8156  73b9
   8157  73b9
   8158  73b9
   8159  73b9
   8160  73b9
   8161  73b9
   8162  73b9
   8163  73b9
   8164  73b9
   8165  73b9
   8166  73b9
   8167  73b9
   8168  73b9
   8169  73b9							; Inline ASM end
   8170  73b9		       00		      brk
   8171  73ba
   8172  73ba
   8173  73ba
   8174  73ba
   8175  73ba
   8176  73ba
   8177  73ba
   8178  73ba		       00 00	   _Fbjoy_2_right_tmp_retaddr DC.W	0
   8179  73bc
   8180  73bc
   8181  73bc
   8182  73bc
   8183  73bc
   8184  73bc
   8185  73bc
   8186  73bc				   _Fbjoy_2_right_end
   8187  73bc
   8188  73bc
   8189  73bc
   8190  73bc
   8191  73bc
   8192  73bc
   8193  73bc
   8194  73bc				   _Fbjoy_2_fire SUBROUTINE
   8195  73bc
   8196  73bc
   8197  73bc
   8198  73bc
   8199  73bc
   8200  73bc
   8201  73bc
   8202  73bc							; Inline ASM start
   8203  73bc
   8204  73bc
   8205  73bc
   8206  73bc
   8207  73bc
   8208  73bc
   8209  73bc
   8210  73bc
   8211  73bc
   8212  73bc
   8213  73bc
   8214  73bc
   8215  73bc
   8216  73bc
   8217  73bc
      0  73bc					      joy_saveaddr
      1  73bc
      2  73bc
      3  73bc
      4  73bc
      5  73bc
      6  73bc
      7  73bc
      8  73bc		       68		      pla
      9  73bd
     10  73bd
     11  73bd
     12  73bd
     13  73bd
     14  73bd
     15  73bd
     16  73bd		       aa		      tax
     17  73be
     18  73be
     19  73be
     20  73be
     21  73be
     22  73be
     23  73be
     24  73be		       68		      pla
     25  73bf
     26  73bf
     27  73bf
     28  73bf
     29  73bf
     30  73bf
     31  73bf
     32  73bf		       a8		      tay
     33  73c0
     34  73c0
     35  73c0
     36  73c0
     37  73c0
     38  73c0
     39  73c0
   8219  73c0
   8220  73c0
   8221  73c0
   8222  73c0
   8223  73c0
   8224  73c0
   8225  73c0
   8226  73c0		       a9 10		      lda	#%00010000
   8227  73c2
   8228  73c2
   8229  73c2
   8230  73c2
   8231  73c2
   8232  73c2
   8233  73c2
   8234  73c2		       2c 00 dc 	      bit	_JOY_PORT2
   8235  73c5
   8236  73c5
   8237  73c5
   8238  73c5
   8239  73c5
   8240  73c5
   8241  73c5
   8242  73c5		       d0 06		      bne	.false
   8243  73c7
   8244  73c7
   8245  73c7
   8246  73c7
   8247  73c7
   8248  73c7
   8249  73c7
      0  73c7					      pone
      1  73c7		       a9 01		      lda	#$01
      2  73c9					      IF	!FPUSH
      3  73c9		       48		      pha
      4  73ca					      ENDIF
   8251  73ca
   8252  73ca
   8253  73ca
   8254  73ca
   8255  73ca
   8256  73ca
   8257  73ca
   8258  73ca		       4c d0 73 	      jmp	.ret
   8259  73cd
   8260  73cd
   8261  73cd
   8262  73cd
   8263  73cd
   8264  73cd
   8265  73cd
   8266  73cd				   .false
   8267  73cd
   8268  73cd
   8269  73cd
   8270  73cd
   8271  73cd
   8272  73cd
   8273  73cd
      0  73cd					      pzero
      1  73cd		       a9 00		      lda	#$00
      2  73cf					      IF	!FPUSH
      3  73cf		       48		      pha
      4  73d0					      ENDIF
   8275  73d0
   8276  73d0
   8277  73d0
   8278  73d0
   8279  73d0
   8280  73d0
   8281  73d0
   8282  73d0				   .ret
   8283  73d0
   8284  73d0
   8285  73d0
   8286  73d0
   8287  73d0
   8288  73d0
   8289  73d0
      0  73d0					      joy_restoreaddr
      1  73d0
      2  73d0
      3  73d0
      4  73d0
      5  73d0
      6  73d0
      7  73d0
      8  73d0		       98		      tya
      9  73d1
     10  73d1
     11  73d1
     12  73d1
     13  73d1
     14  73d1
     15  73d1
     16  73d1		       48		      pha
     17  73d2
     18  73d2
     19  73d2
     20  73d2
     21  73d2
     22  73d2
     23  73d2
     24  73d2		       8a		      txa
     25  73d3
     26  73d3
     27  73d3
     28  73d3
     29  73d3
     30  73d3
     31  73d3
     32  73d3		       48		      pha
     33  73d4
     34  73d4
     35  73d4
     36  73d4
     37  73d4
     38  73d4
     39  73d4
   8291  73d4
   8292  73d4
   8293  73d4
   8294  73d4
   8295  73d4
   8296  73d4
   8297  73d4
   8298  73d4		       60		      rts
   8299  73d5
   8300  73d5
   8301  73d5
   8302  73d5
   8303  73d5
   8304  73d5
   8305  73d5
   8306  73d5
   8307  73d5
   8308  73d5
   8309  73d5
   8310  73d5
   8311  73d5
   8312  73d5
   8313  73d5
   8314  73d5							; Inline ASM end
   8315  73d5		       00		      brk
   8316  73d6
   8317  73d6
   8318  73d6
   8319  73d6
   8320  73d6
   8321  73d6
   8322  73d6
   8323  73d6		       00 00	   _Fbjoy_2_fire_tmp_retaddr DC.W	0
   8324  73d8
   8325  73d8
   8326  73d8
   8327  73d8
   8328  73d8
   8329  73d8
   8330  73d8
   8331  73d8				   _Fbjoy_2_fire_end
   8332  73d8
   8333  73d8
   8334  73d8
   8335  73d8
   8336  73d8
   8337  73d8
   8338  73d8
   8339  73d8				   _Pri_isr_launcher SUBROUTINE
   8340  73d8
   8341  73d8
   8342  73d8
   8343  73d8
   8344  73d8
   8345  73d8
   8346  73d8
   8347  73d8							; Inline ASM start
   8348  73d8
   8349  73d8
   8350  73d8
   8351  73d8
   8352  73d8
   8353  73d8
   8354  73d8
   8355  73d8
   8356  73d8
   8357  73d8
   8358  73d8
   8359  73d8
   8360  73d8
   8361  73d8
   8362  73d8
   8363  73d8		       ae 16 b5 	      ldx	_ri_current_isr
   8364  73db
   8365  73db
   8366  73db
   8367  73db
   8368  73db
   8369  73db
   8370  73db
   8371  73db		       bd 00 a3 	      lda.wx	_ri_isr_addr_lo
   8372  73de
   8373  73de
   8374  73de
   8375  73de
   8376  73de
   8377  73de
   8378  73de
   8379  73de		       8d e8 73 	      sta	.ri_isr_addr + 1
   8380  73e1
   8381  73e1
   8382  73e1
   8383  73e1
   8384  73e1
   8385  73e1
   8386  73e1
   8387  73e1		       bd 08 a3 	      lda.wx	_ri_isr_addr_hi
   8388  73e4
   8389  73e4
   8390  73e4
   8391  73e4
   8392  73e4
   8393  73e4
   8394  73e4
   8395  73e4		       8d e9 73 	      sta	.ri_isr_addr + 2
   8396  73e7
   8397  73e7
   8398  73e7
   8399  73e7
   8400  73e7
   8401  73e7
   8402  73e7
   8403  73e7
   8404  73e7
   8405  73e7
   8406  73e7
   8407  73e7
   8408  73e7
   8409  73e7
   8410  73e7
   8411  73e7				   .ri_isr_addr
   8412  73e7
   8413  73e7
   8414  73e7
   8415  73e7
   8416  73e7
   8417  73e7
   8418  73e7
   8419  73e7		       20 00 00 	      jsr	$0000
   8420  73ea
   8421  73ea
   8422  73ea
   8423  73ea
   8424  73ea
   8425  73ea
   8426  73ea
   8427  73ea
   8428  73ea
   8429  73ea
   8430  73ea
   8431  73ea
   8432  73ea
   8433  73ea
   8434  73ea
   8435  73ea		       ae 16 b5 	      ldx	_ri_current_isr
   8436  73ed
   8437  73ed
   8438  73ed
   8439  73ed
   8440  73ed
   8441  73ed
   8442  73ed
   8443  73ed		       e8		      inx
   8444  73ee
   8445  73ee
   8446  73ee
   8447  73ee
   8448  73ee
   8449  73ee
   8450  73ee
   8451  73ee		       ec 15 b5 	      cpx	_ri_isr_count
   8452  73f1
   8453  73f1
   8454  73f1
   8455  73f1
   8456  73f1
   8457  73f1
   8458  73f1
   8459  73f1		       d0 02		      bne	.set_line
   8460  73f3
   8461  73f3
   8462  73f3
   8463  73f3
   8464  73f3
   8465  73f3
   8466  73f3
   8467  73f3		       a2 00		      ldx	#$00
   8468  73f5
   8469  73f5
   8470  73f5
   8471  73f5
   8472  73f5
   8473  73f5
   8474  73f5
   8475  73f5
   8476  73f5
   8477  73f5
   8478  73f5
   8479  73f5
   8480  73f5
   8481  73f5
   8482  73f5
   8483  73f5				   .set_line
   8484  73f5
   8485  73f5
   8486  73f5
   8487  73f5
   8488  73f5
   8489  73f5
   8490  73f5
   8491  73f5		       8e 16 b5 	      stx	_ri_current_isr
   8492  73f8
   8493  73f8
   8494  73f8
   8495  73f8
   8496  73f8
   8497  73f8
   8498  73f8
   8499  73f8							; Set next interrupt line
   8500  73f8
   8501  73f8
   8502  73f8
   8503  73f8
   8504  73f8
   8505  73f8
   8506  73f8
   8507  73f8
   8508  73f8
   8509  73f8
   8510  73f8
   8511  73f8
   8512  73f8
   8513  73f8
   8514  73f8
   8515  73f8		       bd 10 a3 	      lda.wx	_ri_ras_lo
   8516  73fb
   8517  73fb
   8518  73fb
   8519  73fb
   8520  73fb
   8521  73fb
   8522  73fb
   8523  73fb		       8d 12 d0 	      sta	_RI_VIC_RASTER
   8524  73fe
   8525  73fe
   8526  73fe
   8527  73fe
   8528  73fe
   8529  73fe
   8530  73fe
   8531  73fe		       bd 18 a3 	      lda.wx	_ri_ras_hi
   8532  7401
   8533  7401
   8534  7401
   8535  7401
   8536  7401
   8537  7401
   8538  7401
   8539  7401		       f0 0b		      beq	.clear
   8540  7403
   8541  7403
   8542  7403
   8543  7403
   8544  7403
   8545  7403
   8546  7403
   8547  7403		       ad 11 d0 	      lda	_RI_VIC_CTR
   8548  7406
   8549  7406
   8550  7406
   8551  7406
   8552  7406
   8553  7406
   8554  7406
   8555  7406		       09 80		      ora	#%10000000
   8556  7408
   8557  7408
   8558  7408
   8559  7408
   8560  7408
   8561  7408
   8562  7408
   8563  7408		       8d 11 d0 	      sta	_RI_VIC_CTR
   8564  740b
   8565  740b
   8566  740b
   8567  740b
   8568  740b
   8569  740b
   8570  740b
   8571  740b		       4c 16 74 	      jmp	.ack
   8572  740e
   8573  740e
   8574  740e
   8575  740e
   8576  740e
   8577  740e
   8578  740e
   8579  740e				   .clear
   8580  740e
   8581  740e
   8582  740e
   8583  740e
   8584  740e
   8585  740e
   8586  740e
   8587  740e		       ad 11 d0 	      lda	_RI_VIC_CTR
   8588  7411
   8589  7411
   8590  7411
   8591  7411
   8592  7411
   8593  7411
   8594  7411
   8595  7411		       29 7f		      and	#%01111111
   8596  7413
   8597  7413
   8598  7413
   8599  7413
   8600  7413
   8601  7413
   8602  7413
   8603  7413		       8d 11 d0 	      sta	_RI_VIC_CTR
   8604  7416
   8605  7416
   8606  7416
   8607  7416
   8608  7416
   8609  7416
   8610  7416
   8611  7416
   8612  7416
   8613  7416
   8614  7416
   8615  7416
   8616  7416
   8617  7416
   8618  7416
   8619  7416				   .ack
   8620  7416
   8621  7416
   8622  7416
   8623  7416
   8624  7416
   8625  7416
   8626  7416
   8627  7416							; Acknowledge and let sys handler finish
   8628  7416
   8629  7416
   8630  7416
   8631  7416
   8632  7416
   8633  7416
   8634  7416
   8635  7416		       0e 19 d0 	      asl	_RI_VIC_IRQ_R
   8636  7419
   8637  7419
   8638  7419
   8639  7419
   8640  7419
   8641  7419
   8642  7419
   8643  7419		       ad 16 b5 	      lda	_ri_current_isr
   8644  741c
   8645  741c
   8646  741c
   8647  741c
   8648  741c
   8649  741c
   8650  741c
   8651  741c		       f0 03		      beq	.syshandler
   8652  741e
   8653  741e
   8654  741e
   8655  741e
   8656  741e
   8657  741e
   8658  741e
   8659  741e		       4c 81 ea 	      jmp	$ea81
   8660  7421
   8661  7421
   8662  7421
   8663  7421
   8664  7421
   8665  7421
   8666  7421
   8667  7421				   .syshandler
   8668  7421
   8669  7421
   8670  7421
   8671  7421
   8672  7421
   8673  7421
   8674  7421
   8675  7421		       6c 17 b5 	      jmp	(_ri_syshandler)
   8676  7424
   8677  7424
   8678  7424
   8679  7424
   8680  7424
   8681  7424
   8682  7424
   8683  7424
   8684  7424
   8685  7424
   8686  7424
   8687  7424
   8688  7424
   8689  7424
   8690  7424
   8691  7424							; Inline ASM end
   8692  7424		       60		      rts
   8693  7425
   8694  7425
   8695  7425
   8696  7425
   8697  7425
   8698  7425
   8699  7425
   8700  7425				   _Pri_isr_launcher_end
   8701  7425
   8702  7425
   8703  7425
   8704  7425
   8705  7425
   8706  7425
   8707  7425
   8708  7425				   _Pri_on    SUBROUTINE
   8709  7425				   FPUSH      SET	1
      0  7425					      pbyte	#0
      1  7425		       a9 00		      lda	#0
      2  7427				  -	      IF	!FPUSH
      3  7427				  -	      pha
      4  7427					      ENDIF
   8711  7427				   FPULL      SET	1
   8712  7427				   FPUSH      SET	0
      0  7427					      plb2var	_ri_current_isr
      1  7427				  -	      IF	!FPULL
      2  7427				  -	      pla
      3  7427					      ENDIF
      4  7427		       8d 16 b5 	      sta	_ri_current_isr
   8714  742a							; Inline ASM start
   8715  742a
   8716  742a
   8717  742a
   8718  742a
   8719  742a
   8720  742a
   8721  742a
   8722  742a
   8723  742a
   8724  742a
   8725  742a
   8726  742a
   8727  742a
   8728  742a
   8729  742a
   8730  742a		       78		      sei
   8731  742b
   8732  742b
   8733  742b
   8734  742b
   8735  742b
   8736  742b
   8737  742b
   8738  742b							; disable CIA irqs
   8739  742b
   8740  742b
   8741  742b
   8742  742b
   8743  742b
   8744  742b
   8745  742b
   8746  742b		       a9 7f		      lda	#$7f
   8747  742d
   8748  742d
   8749  742d
   8750  742d
   8751  742d
   8752  742d
   8753  742d
   8754  742d		       8d 0d dc 	      sta	_RI_CIA1_ICR
   8755  7430
   8756  7430
   8757  7430
   8758  7430
   8759  7430
   8760  7430
   8761  7430
   8762  7430		       8d 0d dd 	      sta	_RI_CIA2_ICR
   8763  7433
   8764  7433
   8765  7433
   8766  7433
   8767  7433
   8768  7433
   8769  7433
   8770  7433		       ad 0d dc 	      lda	_RI_CIA1_ICR
   8771  7436
   8772  7436
   8773  7436
   8774  7436
   8775  7436
   8776  7436
   8777  7436
   8778  7436		       ad 0d dd 	      lda	_RI_CIA2_ICR
   8779  7439
   8780  7439
   8781  7439
   8782  7439
   8783  7439
   8784  7439
   8785  7439
   8786  7439
   8787  7439
   8788  7439
   8789  7439
   8790  7439
   8791  7439
   8792  7439
   8793  7439
   8794  7439							; Set initial raster line
   8795  7439
   8796  7439
   8797  7439
   8798  7439
   8799  7439
   8800  7439
   8801  7439
   8802  7439		       ad 10 a3 	      lda	_ri_ras_lo
   8803  743c
   8804  743c
   8805  743c
   8806  743c
   8807  743c
   8808  743c
   8809  743c
   8810  743c		       8d 12 d0 	      sta	_RI_VIC_RASTER
   8811  743f
   8812  743f
   8813  743f
   8814  743f
   8815  743f
   8816  743f
   8817  743f
   8818  743f		       ad 18 a3 	      lda	_ri_ras_hi
   8819  7442
   8820  7442
   8821  7442
   8822  7442
   8823  7442
   8824  7442
   8825  7442
   8826  7442		       f0 0b		      beq	.clear
   8827  7444
   8828  7444
   8829  7444
   8830  7444
   8831  7444
   8832  7444
   8833  7444
   8834  7444		       ad 11 d0 	      lda	_RI_VIC_CTR
   8835  7447
   8836  7447
   8837  7447
   8838  7447
   8839  7447
   8840  7447
   8841  7447
   8842  7447		       09 80		      ora	#%10000000
   8843  7449
   8844  7449
   8845  7449
   8846  7449
   8847  7449
   8848  7449
   8849  7449
   8850  7449		       8d 11 d0 	      sta	_RI_VIC_CTR
   8851  744c
   8852  744c
   8853  744c
   8854  744c
   8855  744c
   8856  744c
   8857  744c
   8858  744c		       4c 57 74 	      jmp	.skip
   8859  744f
   8860  744f
   8861  744f
   8862  744f
   8863  744f
   8864  744f
   8865  744f
   8866  744f				   .clear
   8867  744f
   8868  744f
   8869  744f
   8870  744f
   8871  744f
   8872  744f
   8873  744f
   8874  744f		       ad 11 d0 	      lda	_RI_VIC_CTR
   8875  7452
   8876  7452
   8877  7452
   8878  7452
   8879  7452
   8880  7452
   8881  7452
   8882  7452		       29 7f		      and	#%01111111
   8883  7454
   8884  7454
   8885  7454
   8886  7454
   8887  7454
   8888  7454
   8889  7454
   8890  7454		       8d 11 d0 	      sta	_RI_VIC_CTR
   8891  7457
   8892  7457
   8893  7457
   8894  7457
   8895  7457
   8896  7457
   8897  7457
   8898  7457				   .skip
   8899  7457
   8900  7457
   8901  7457
   8902  7457
   8903  7457
   8904  7457
   8905  7457
   8906  7457		       a9 d8		      lda	#<_Pri_isr_launcher
   8907  7459
   8908  7459
   8909  7459
   8910  7459
   8911  7459
   8912  7459
   8913  7459
   8914  7459		       8d 14 03 	      sta	$0314
   8915  745c
   8916  745c
   8917  745c
   8918  745c
   8919  745c
   8920  745c
   8921  745c
   8922  745c		       a9 73		      lda	#>_Pri_isr_launcher
   8923  745e
   8924  745e
   8925  745e
   8926  745e
   8927  745e
   8928  745e
   8929  745e
   8930  745e		       8d 15 03 	      sta	$0315
   8931  7461
   8932  7461
   8933  7461
   8934  7461
   8935  7461
   8936  7461
   8937  7461
   8938  7461
   8939  7461
   8940  7461
   8941  7461
   8942  7461
   8943  7461
   8944  7461
   8945  7461
   8946  7461							; enable VIC raster interrupts
   8947  7461
   8948  7461
   8949  7461
   8950  7461
   8951  7461
   8952  7461
   8953  7461
   8954  7461		       a9 01		      lda	#$01
   8955  7463
   8956  7463
   8957  7463
   8958  7463
   8959  7463
   8960  7463
   8961  7463
   8962  7463		       8d 1a d0 	      sta	_RI_VIC_IRQ_EN
   8963  7466
   8964  7466
   8965  7466
   8966  7466
   8967  7466
   8968  7466
   8969  7466
   8970  7466
   8971  7466
   8972  7466
   8973  7466
   8974  7466
   8975  7466
   8976  7466
   8977  7466
   8978  7466		       58		      cli
   8979  7467
   8980  7467
   8981  7467
   8982  7467
   8983  7467
   8984  7467
   8985  7467
   8986  7467
   8987  7467
   8988  7467
   8989  7467
   8990  7467
   8991  7467
   8992  7467
   8993  7467
   8994  7467							; Inline ASM end
   8995  7467		       60		      rts
   8996  7468
   8997  7468
   8998  7468
   8999  7468
   9000  7468
   9001  7468
   9002  7468
   9003  7468				   _Pri_on_end
   9004  7468
   9005  7468
   9006  7468
   9007  7468
   9008  7468
   9009  7468
   9010  7468
   9011  7468				   _Pri_off   SUBROUTINE
   9012  7468
   9013  7468
   9014  7468
   9015  7468
   9016  7468
   9017  7468
   9018  7468
   9019  7468							; Inline ASM start
   9020  7468
   9021  7468
   9022  7468
   9023  7468
   9024  7468
   9025  7468
   9026  7468
   9027  7468
   9028  7468
   9029  7468
   9030  7468
   9031  7468
   9032  7468
   9033  7468
   9034  7468
   9035  7468		       78		      sei
   9036  7469
   9037  7469
   9038  7469
   9039  7469
   9040  7469
   9041  7469
   9042  7469
   9043  7469
   9044  7469
   9045  7469
   9046  7469
   9047  7469
   9048  7469
   9049  7469
   9050  7469
   9051  7469							; disable VIC raster interrupts
   9052  7469
   9053  7469
   9054  7469
   9055  7469
   9056  7469
   9057  7469
   9058  7469
   9059  7469		       a9 00		      lda	#$00
   9060  746b
   9061  746b
   9062  746b
   9063  746b
   9064  746b
   9065  746b
   9066  746b
   9067  746b		       8d 1a d0 	      sta	_RI_VIC_IRQ_EN
   9068  746e
   9069  746e
   9070  746e
   9071  746e
   9072  746e
   9073  746e
   9074  746e
   9075  746e
   9076  746e
   9077  746e
   9078  746e
   9079  746e
   9080  746e
   9081  746e
   9082  746e
   9083  746e							; enable CIA irqs
   9084  746e
   9085  746e
   9086  746e
   9087  746e
   9088  746e
   9089  746e
   9090  746e
   9091  746e		       a9 ff		      lda	#$ff
   9092  7470
   9093  7470
   9094  7470
   9095  7470
   9096  7470
   9097  7470
   9098  7470
   9099  7470		       8d 0d dc 	      sta	_RI_CIA1_ICR
   9100  7473
   9101  7473
   9102  7473
   9103  7473
   9104  7473
   9105  7473
   9106  7473
   9107  7473		       8d 0d dd 	      sta	_RI_CIA2_ICR
   9108  7476
   9109  7476
   9110  7476
   9111  7476
   9112  7476
   9113  7476
   9114  7476
   9115  7476
   9116  7476
   9117  7476
   9118  7476
   9119  7476
   9120  7476
   9121  7476
   9122  7476
   9123  7476							; reset handler ptr
   9124  7476
   9125  7476
   9126  7476
   9127  7476
   9128  7476
   9129  7476
   9130  7476
   9131  7476		       a9 31		      lda	#$31
   9132  7478
   9133  7478
   9134  7478
   9135  7478
   9136  7478
   9137  7478
   9138  7478
   9139  7478		       8d 14 03 	      sta	$0314
   9140  747b
   9141  747b
   9142  747b
   9143  747b
   9144  747b
   9145  747b
   9146  747b
   9147  747b		       a9 ea		      lda	#$ea
   9148  747d
   9149  747d
   9150  747d
   9151  747d
   9152  747d
   9153  747d
   9154  747d
   9155  747d		       8d 15 03 	      sta	$0315
   9156  7480
   9157  7480
   9158  7480
   9159  7480
   9160  7480
   9161  7480
   9162  7480
   9163  7480
   9164  7480
   9165  7480
   9166  7480
   9167  7480
   9168  7480
   9169  7480
   9170  7480
   9171  7480		       58		      cli
   9172  7481
   9173  7481
   9174  7481
   9175  7481
   9176  7481
   9177  7481
   9178  7481
   9179  7481
   9180  7481
   9181  7481
   9182  7481
   9183  7481
   9184  7481
   9185  7481
   9186  7481
   9187  7481							; Inline ASM end
   9188  7481		       60		      rts
   9189  7482
   9190  7482
   9191  7482
   9192  7482
   9193  7482
   9194  7482
   9195  7482
   9196  7482				   _Pri_off_end
   9197  7482
   9198  7482
   9199  7482
   9200  7482
   9201  7482
   9202  7482
   9203  7482
   9204  7482				   _Pri_set_isr SUBROUTINE
   9205  7482
   9206  7482
   9207  7482
   9208  7482
   9209  7482
   9210  7482
   9211  7482
   9212  7482							; Inline ASM start
   9213  7482
   9214  7482
   9215  7482
   9216  7482
   9217  7482
   9218  7482
   9219  7482
   9220  7482
   9221  7482
   9222  7482
   9223  7482
   9224  7482
   9225  7482
   9226  7482
   9227  7482
   9228  7482		       ae 19 b5 	      ldx	_ri_set_isr.isr_no
   9229  7485
   9230  7485
   9231  7485
   9232  7485
   9233  7485
   9234  7485
   9235  7485
   9236  7485		       ad 1a b5 	      lda	_ri_set_isr.isr_addr
   9237  7488
   9238  7488
   9239  7488
   9240  7488
   9241  7488
   9242  7488
   9243  7488
   9244  7488		       9d 00 a3 	      sta.wx	_ri_isr_addr_lo
   9245  748b
   9246  748b
   9247  748b
   9248  748b
   9249  748b
   9250  748b
   9251  748b
   9252  748b		       ad 1b b5 	      lda	_ri_set_isr.isr_addr + 1
   9253  748e
   9254  748e
   9255  748e
   9256  748e
   9257  748e
   9258  748e
   9259  748e
   9260  748e		       9d 08 a3 	      sta.wx	_ri_isr_addr_hi
   9261  7491
   9262  7491
   9263  7491
   9264  7491
   9265  7491
   9266  7491
   9267  7491
   9268  7491		       ad 1c b5 	      lda	_ri_set_isr.raster_line
   9269  7494
   9270  7494
   9271  7494
   9272  7494
   9273  7494
   9274  7494
   9275  7494
   9276  7494		       9d 10 a3 	      sta.wx	_ri_ras_lo
   9277  7497
   9278  7497
   9279  7497
   9280  7497
   9281  7497
   9282  7497
   9283  7497
   9284  7497		       ad 1d b5 	      lda	_ri_set_isr.raster_line + 1
   9285  749a
   9286  749a
   9287  749a
   9288  749a
   9289  749a
   9290  749a
   9291  749a
   9292  749a		       9d 18 a3 	      sta.wx	_ri_ras_hi
   9293  749d
   9294  749d
   9295  749d
   9296  749d
   9297  749d
   9298  749d
   9299  749d
   9300  749d
   9301  749d
   9302  749d
   9303  749d
   9304  749d
   9305  749d
   9306  749d
   9307  749d
   9308  749d							; Inline ASM end
   9309  749d		       60		      rts
   9310  749e
   9311  749e
   9312  749e
   9313  749e
   9314  749e
   9315  749e
   9316  749e
   9317  749e				   _Pri_set_isr_end
   9318  749e
   9319  749e
   9320  749e
   9321  749e
   9322  749e
   9323  749e
   9324  749e
   9325  749e				   _Pri_syshandler_on SUBROUTINE
   9326  749e				   FPULL      SET	0
   9327  749e				   FPUSH      SET	1
      0  749e					      pword	#59953
      1  749e				  -	      IF	!FPUSH
      2  749e				  -	      lda	#<#59953
      3  749e				  -	      pha
      4  749e				  -	      lda	#>#59953
      5  749e				  -	      pha
      6  749e					      ELSE
      7  749e		       a9 31		      lda	#<#59953
      8  74a0		       a0 ea		      ldy	#>#59953
      9  74a2					      ENDIF
   9329  74a2				   FPULL      SET	1
   9330  74a2				   FPUSH      SET	0
      0  74a2					      plw2var	_ri_syshandler
      1  74a2				  -	      IF	!FPULL
      2  74a2				  -	      pla
      3  74a2				  -	      sta	_ri_syshandler+1
      4  74a2				  -	      pla
      5  74a2				  -	      sta	_ri_syshandler
      6  74a2					      ELSE
      7  74a2		       8d 17 b5 	      sta	_ri_syshandler
      8  74a5		       8c 18 b5 	      sty	_ri_syshandler+1
      9  74a8					      ENDIF
   9332  74a8		       60		      rts
   9333  74a9				   _Pri_syshandler_on_end
   9334  74a9
   9335  74a9
   9336  74a9
   9337  74a9
   9338  74a9
   9339  74a9
   9340  74a9
   9341  74a9				   _Pri_syshandler_off SUBROUTINE
   9342  74a9				   FPULL      SET	0
   9343  74a9				   FPUSH      SET	1
      0  74a9					      pword	#60033
      1  74a9				  -	      IF	!FPUSH
      2  74a9				  -	      lda	#<#60033
      3  74a9				  -	      pha
      4  74a9				  -	      lda	#>#60033
      5  74a9				  -	      pha
      6  74a9					      ELSE
      7  74a9		       a9 81		      lda	#<#60033
      8  74ab		       a0 ea		      ldy	#>#60033
      9  74ad					      ENDIF
   9345  74ad				   FPULL      SET	1
   9346  74ad				   FPUSH      SET	0
      0  74ad					      plw2var	_ri_syshandler
      1  74ad				  -	      IF	!FPULL
      2  74ad				  -	      pla
      3  74ad				  -	      sta	_ri_syshandler+1
      4  74ad				  -	      pla
      5  74ad				  -	      sta	_ri_syshandler
      6  74ad					      ELSE
      7  74ad		       8d 17 b5 	      sta	_ri_syshandler
      8  74b0		       8c 18 b5 	      sty	_ri_syshandler+1
      9  74b3					      ENDIF
   9348  74b3		       60		      rts
   9349  74b4				   _Pri_syshandler_off_end
   9350  74b4
   9351  74b4
   9352  74b4
   9353  74b4
   9354  74b4
   9355  74b4
   9356  74b4
   9357  74b4				   _Psfx_init SUBROUTINE
   9358  74b4
   9359  74b4
   9360  74b4
   9361  74b4
   9362  74b4
   9363  74b4
   9364  74b4
   9365  74b4							; Inline ASM start
   9366  74b4
   9367  74b4
   9368  74b4
   9369  74b4
   9370  74b4
   9371  74b4
   9372  74b4
   9373  74b4
   9374  74b4
   9375  74b4
   9376  74b4
   9377  74b4
   9378  74b4
   9379  74b4
   9380  74b4
   9381  74b4		       ad 1e b5 	      lda	_sfx_init.addr
   9382  74b7
   9383  74b7
   9384  74b7
   9385  74b7
   9386  74b7
   9387  74b7
   9388  74b7
   9389  74b7		       8d 9b 75 	      sta	sfx_table_inst + 1
   9390  74ba
   9391  74ba
   9392  74ba
   9393  74ba
   9394  74ba
   9395  74ba
   9396  74ba
   9397  74ba		       ad 1f b5 	      lda	_sfx_init.addr + 1
   9398  74bd
   9399  74bd
   9400  74bd
   9401  74bd
   9402  74bd
   9403  74bd
   9404  74bd
   9405  74bd		       8d 9c 75 	      sta	sfx_table_inst + 2
   9406  74c0
   9407  74c0
   9408  74c0
   9409  74c0
   9410  74c0
   9411  74c0
   9412  74c0
   9413  74c0		       ad 20 b5 	      lda	_sfx_init.reserve_voice3
   9414  74c3
   9415  74c3
   9416  74c3
   9417  74c3
   9418  74c3
   9419  74c3
   9420  74c3
   9421  74c3		       8d 10 75 	      sta	SFX_LimitVoice3
   9422  74c6
   9423  74c6
   9424  74c6
   9425  74c6
   9426  74c6
   9427  74c6
   9428  74c6
   9429  74c6
   9430  74c6
   9431  74c6
   9432  74c6
   9433  74c6
   9434  74c6
   9435  74c6
   9436  74c6
   9437  74c6		       4c 11 75 	      jmp	.init
   9438  74c9
   9439  74c9
   9440  74c9
   9441  74c9
   9442  74c9
   9443  74c9
   9444  74c9
   9445  74c9							; Variables
   9446  74c9
   9447  74c9
   9448  74c9
   9449  74c9
   9450  74c9
   9451  74c9
   9452  74c9
   9453  74c9
   9454  74c9
   9455  74c9
   9456  74c9
   9457  74c9
   9458  74c9
   9459  74c9
   9460  74c9
   9461  74c9		       00	   SFX_CurrentVoice DC.B	0
   9462  74ca
   9463  74ca
   9464  74ca
   9465  74ca
   9466  74ca
   9467  74ca
   9468  74ca
   9469  74ca							; Define the first voice
   9470  74ca
   9471  74ca
   9472  74ca
   9473  74ca
   9474  74ca
   9475  74ca
   9476  74ca
   9477  74ca		       00	   SFX_VoiceControl DC.B	0
   9478  74cb
   9479  74cb
   9480  74cb
   9481  74cb
   9482  74cb
   9483  74cb
   9484  74cb
   9485  74cb		       00	   SFX_VoiceAttackDecay DC.B	0
   9486  74cc
   9487  74cc
   9488  74cc
   9489  74cc
   9490  74cc
   9491  74cc
   9492  74cc
   9493  74cc		       00	   SFX_VoiceFreqLo DC.B	0
   9494  74cd
   9495  74cd
   9496  74cd
   9497  74cd
   9498  74cd
   9499  74cd
   9500  74cd
   9501  74cd		       00	   SFX_VoiceFreqHi DC.B	0
   9502  74ce
   9503  74ce
   9504  74ce
   9505  74ce
   9506  74ce
   9507  74ce
   9508  74ce
   9509  74ce		       00	   SFX_VoiceFreqLoSpeed DC.B	0
   9510  74cf
   9511  74cf
   9512  74cf
   9513  74cf
   9514  74cf
   9515  74cf
   9516  74cf
   9517  74cf		       00	   SFX_VoiceFreqHiSpeed2 DC.B	0
   9518  74d0
   9519  74d0
   9520  74d0
   9521  74d0
   9522  74d0
   9523  74d0
   9524  74d0
   9525  74d0		       00	   SFX_VoiceFreqDecay DC.B	0
   9526  74d1
   9527  74d1
   9528  74d1
   9529  74d1
   9530  74d1
   9531  74d1
   9532  74d1
   9533  74d1		       00	   SFX_VoiceFreqLoSpeed2 DC.B	0
   9534  74d2
   9535  74d2
   9536  74d2
   9537  74d2
   9538  74d2
   9539  74d2
   9540  74d2
   9541  74d2		       00	   SFX_VoiceFreqHiSpeed DC.B	0
   9542  74d3
   9543  74d3
   9544  74d3
   9545  74d3
   9546  74d3
   9547  74d3
   9548  74d3
   9549  74d3		       00	   SFX_VoiceFreqHiCountInit DC.B	0
   9550  74d4
   9551  74d4
   9552  74d4
   9553  74d4
   9554  74d4
   9555  74d4
   9556  74d4
   9557  74d4		       00	   SFX_VoiceFreqDirection DC.B	0
   9558  74d5
   9559  74d5
   9560  74d5
   9561  74d5
   9562  74d5
   9563  74d5
   9564  74d5
   9565  74d5		       00	   SFX_VoiceFreqHiCount DC.B	0
   9566  74d6
   9567  74d6
   9568  74d6
   9569  74d6
   9570  74d6
   9571  74d6
   9572  74d6
   9573  74d6		       00	   SFX_VoiceTotalCount DC.B	0
   9574  74d7
   9575  74d7
   9576  74d7
   9577  74d7
   9578  74d7
   9579  74d7
   9580  74d7
   9581  74d7							; Use filled space for the other two voices
   9582  74d7
   9583  74d7
   9584  74d7
   9585  74d7
   9586  74d7
   9587  74d7
   9588  74d7
   9589  74d7		       00 00 00 00*SFX_Voice23 DS.B	26
   9590  74f1
   9591  74f1
   9592  74f1
   9593  74f1
   9594  74f1
   9595  74f1
   9596  74f1
   9597  74f1		       00	   SFX_TempVar DC.B	0
   9598  74f2
   9599  74f2
   9600  74f2
   9601  74f2
   9602  74f2
   9603  74f2
   9604  74f2
   9605  74f2		       00 07 0e    SFX_MulBy7Tab HEX	00 07 0E
   9606  74f5
   9607  74f5
   9608  74f5
   9609  74f5
   9610  74f5
   9611  74f5
   9612  74f5
   9613  74f5				   SFX_tmp    SET	0
   9614  74f5
   9615  74f5
   9616  74f5
   9617  74f5
   9618  74f5
   9619  74f5
   9620  74f5
   9621  74f5				   SFX_MulBy10Tab REPEAT	24
   9622  74f5
   9623  74f5
   9624  74f5
   9625  74f5
   9626  74f5
   9627  74f5
   9628  74f5
   9629  74f5		       00		      DC.B	SFX_tmp
   9630  74f6
   9631  74f6
   9632  74f6
   9633  74f6
   9634  74f6
   9635  74f6
   9636  74f6
   9637  74f6				   SFX_tmp    SET	SFX_tmp + 10
   9638  74f6
   9639  74f6
   9640  74f6
   9641  74f6
   9642  74f6
   9643  74f6
   9644  74f6
   9621  74f6					      REPEND
   9622  74f6
   9623  74f6
   9624  74f6
   9625  74f6
   9626  74f6
   9627  74f6
   9628  74f6
   9629  74f6		       0a		      DC.B	SFX_tmp
   9630  74f7
   9631  74f7
   9632  74f7
   9633  74f7
   9634  74f7
   9635  74f7
   9636  74f7
   9637  74f7				   SFX_tmp    SET	SFX_tmp + 10
   9638  74f7
   9639  74f7
   9640  74f7
   9641  74f7
   9642  74f7
   9643  74f7
   9644  74f7
   9621  74f7					      REPEND
   9622  74f7
   9623  74f7
   9624  74f7
   9625  74f7
   9626  74f7
   9627  74f7
   9628  74f7
   9629  74f7		       14		      DC.B	SFX_tmp
   9630  74f8
   9631  74f8
   9632  74f8
   9633  74f8
   9634  74f8
   9635  74f8
   9636  74f8
   9637  74f8				   SFX_tmp    SET	SFX_tmp + 10
   9638  74f8
   9639  74f8
   9640  74f8
   9641  74f8
   9642  74f8
   9643  74f8
   9644  74f8
   9621  74f8					      REPEND
   9622  74f8
   9623  74f8
   9624  74f8
   9625  74f8
   9626  74f8
   9627  74f8
   9628  74f8
   9629  74f8		       1e		      DC.B	SFX_tmp
   9630  74f9
   9631  74f9
   9632  74f9
   9633  74f9
   9634  74f9
   9635  74f9
   9636  74f9
   9637  74f9				   SFX_tmp    SET	SFX_tmp + 10
   9638  74f9
   9639  74f9
   9640  74f9
   9641  74f9
   9642  74f9
   9643  74f9
   9644  74f9
   9621  74f9					      REPEND
   9622  74f9
   9623  74f9
   9624  74f9
   9625  74f9
   9626  74f9
   9627  74f9
   9628  74f9
   9629  74f9		       28		      DC.B	SFX_tmp
   9630  74fa
   9631  74fa
   9632  74fa
   9633  74fa
   9634  74fa
   9635  74fa
   9636  74fa
   9637  74fa				   SFX_tmp    SET	SFX_tmp + 10
   9638  74fa
   9639  74fa
   9640  74fa
   9641  74fa
   9642  74fa
   9643  74fa
   9644  74fa
   9621  74fa					      REPEND
   9622  74fa
   9623  74fa
   9624  74fa
   9625  74fa
   9626  74fa
   9627  74fa
   9628  74fa
   9629  74fa		       32		      DC.B	SFX_tmp
   9630  74fb
   9631  74fb
   9632  74fb
   9633  74fb
   9634  74fb
   9635  74fb
   9636  74fb
   9637  74fb				   SFX_tmp    SET	SFX_tmp + 10
   9638  74fb
   9639  74fb
   9640  74fb
   9641  74fb
   9642  74fb
   9643  74fb
   9644  74fb
   9621  74fb					      REPEND
   9622  74fb
   9623  74fb
   9624  74fb
   9625  74fb
   9626  74fb
   9627  74fb
   9628  74fb
   9629  74fb		       3c		      DC.B	SFX_tmp
   9630  74fc
   9631  74fc
   9632  74fc
   9633  74fc
   9634  74fc
   9635  74fc
   9636  74fc
   9637  74fc				   SFX_tmp    SET	SFX_tmp + 10
   9638  74fc
   9639  74fc
   9640  74fc
   9641  74fc
   9642  74fc
   9643  74fc
   9644  74fc
   9621  74fc					      REPEND
   9622  74fc
   9623  74fc
   9624  74fc
   9625  74fc
   9626  74fc
   9627  74fc
   9628  74fc
   9629  74fc		       46		      DC.B	SFX_tmp
   9630  74fd
   9631  74fd
   9632  74fd
   9633  74fd
   9634  74fd
   9635  74fd
   9636  74fd
   9637  74fd				   SFX_tmp    SET	SFX_tmp + 10
   9638  74fd
   9639  74fd
   9640  74fd
   9641  74fd
   9642  74fd
   9643  74fd
   9644  74fd
   9621  74fd					      REPEND
   9622  74fd
   9623  74fd
   9624  74fd
   9625  74fd
   9626  74fd
   9627  74fd
   9628  74fd
   9629  74fd		       50		      DC.B	SFX_tmp
   9630  74fe
   9631  74fe
   9632  74fe
   9633  74fe
   9634  74fe
   9635  74fe
   9636  74fe
   9637  74fe				   SFX_tmp    SET	SFX_tmp + 10
   9638  74fe
   9639  74fe
   9640  74fe
   9641  74fe
   9642  74fe
   9643  74fe
   9644  74fe
   9621  74fe					      REPEND
   9622  74fe
   9623  74fe
   9624  74fe
   9625  74fe
   9626  74fe
   9627  74fe
   9628  74fe
   9629  74fe		       5a		      DC.B	SFX_tmp
   9630  74ff
   9631  74ff
   9632  74ff
   9633  74ff
   9634  74ff
   9635  74ff
   9636  74ff
   9637  74ff				   SFX_tmp    SET	SFX_tmp + 10
   9638  74ff
   9639  74ff
   9640  74ff
   9641  74ff
   9642  74ff
   9643  74ff
   9644  74ff
   9621  74ff					      REPEND
   9622  74ff
   9623  74ff
   9624  74ff
   9625  74ff
   9626  74ff
   9627  74ff
   9628  74ff
   9629  74ff		       64		      DC.B	SFX_tmp
   9630  7500
   9631  7500
   9632  7500
   9633  7500
   9634  7500
   9635  7500
   9636  7500
   9637  7500				   SFX_tmp    SET	SFX_tmp + 10
   9638  7500
   9639  7500
   9640  7500
   9641  7500
   9642  7500
   9643  7500
   9644  7500
   9621  7500					      REPEND
   9622  7500
   9623  7500
   9624  7500
   9625  7500
   9626  7500
   9627  7500
   9628  7500
   9629  7500		       6e		      DC.B	SFX_tmp
   9630  7501
   9631  7501
   9632  7501
   9633  7501
   9634  7501
   9635  7501
   9636  7501
   9637  7501				   SFX_tmp    SET	SFX_tmp + 10
   9638  7501
   9639  7501
   9640  7501
   9641  7501
   9642  7501
   9643  7501
   9644  7501
   9621  7501					      REPEND
   9622  7501
   9623  7501
   9624  7501
   9625  7501
   9626  7501
   9627  7501
   9628  7501
   9629  7501		       78		      DC.B	SFX_tmp
   9630  7502
   9631  7502
   9632  7502
   9633  7502
   9634  7502
   9635  7502
   9636  7502
   9637  7502				   SFX_tmp    SET	SFX_tmp + 10
   9638  7502
   9639  7502
   9640  7502
   9641  7502
   9642  7502
   9643  7502
   9644  7502
   9621  7502					      REPEND
   9622  7502
   9623  7502
   9624  7502
   9625  7502
   9626  7502
   9627  7502
   9628  7502
   9629  7502		       82		      DC.B	SFX_tmp
   9630  7503
   9631  7503
   9632  7503
   9633  7503
   9634  7503
   9635  7503
   9636  7503
   9637  7503				   SFX_tmp    SET	SFX_tmp + 10
   9638  7503
   9639  7503
   9640  7503
   9641  7503
   9642  7503
   9643  7503
   9644  7503
   9621  7503					      REPEND
   9622  7503
   9623  7503
   9624  7503
   9625  7503
   9626  7503
   9627  7503
   9628  7503
   9629  7503		       8c		      DC.B	SFX_tmp
   9630  7504
   9631  7504
   9632  7504
   9633  7504
   9634  7504
   9635  7504
   9636  7504
   9637  7504				   SFX_tmp    SET	SFX_tmp + 10
   9638  7504
   9639  7504
   9640  7504
   9641  7504
   9642  7504
   9643  7504
   9644  7504
   9621  7504					      REPEND
   9622  7504
   9623  7504
   9624  7504
   9625  7504
   9626  7504
   9627  7504
   9628  7504
   9629  7504		       96		      DC.B	SFX_tmp
   9630  7505
   9631  7505
   9632  7505
   9633  7505
   9634  7505
   9635  7505
   9636  7505
   9637  7505				   SFX_tmp    SET	SFX_tmp + 10
   9638  7505
   9639  7505
   9640  7505
   9641  7505
   9642  7505
   9643  7505
   9644  7505
   9621  7505					      REPEND
   9622  7505
   9623  7505
   9624  7505
   9625  7505
   9626  7505
   9627  7505
   9628  7505
   9629  7505		       a0		      DC.B	SFX_tmp
   9630  7506
   9631  7506
   9632  7506
   9633  7506
   9634  7506
   9635  7506
   9636  7506
   9637  7506				   SFX_tmp    SET	SFX_tmp + 10
   9638  7506
   9639  7506
   9640  7506
   9641  7506
   9642  7506
   9643  7506
   9644  7506
   9621  7506					      REPEND
   9622  7506
   9623  7506
   9624  7506
   9625  7506
   9626  7506
   9627  7506
   9628  7506
   9629  7506		       aa		      DC.B	SFX_tmp
   9630  7507
   9631  7507
   9632  7507
   9633  7507
   9634  7507
   9635  7507
   9636  7507
   9637  7507				   SFX_tmp    SET	SFX_tmp + 10
   9638  7507
   9639  7507
   9640  7507
   9641  7507
   9642  7507
   9643  7507
   9644  7507
   9621  7507					      REPEND
   9622  7507
   9623  7507
   9624  7507
   9625  7507
   9626  7507
   9627  7507
   9628  7507
   9629  7507		       b4		      DC.B	SFX_tmp
   9630  7508
   9631  7508
   9632  7508
   9633  7508
   9634  7508
   9635  7508
   9636  7508
   9637  7508				   SFX_tmp    SET	SFX_tmp + 10
   9638  7508
   9639  7508
   9640  7508
   9641  7508
   9642  7508
   9643  7508
   9644  7508
   9621  7508					      REPEND
   9622  7508
   9623  7508
   9624  7508
   9625  7508
   9626  7508
   9627  7508
   9628  7508
   9629  7508		       be		      DC.B	SFX_tmp
   9630  7509
   9631  7509
   9632  7509
   9633  7509
   9634  7509
   9635  7509
   9636  7509
   9637  7509				   SFX_tmp    SET	SFX_tmp + 10
   9638  7509
   9639  7509
   9640  7509
   9641  7509
   9642  7509
   9643  7509
   9644  7509
   9621  7509					      REPEND
   9622  7509
   9623  7509
   9624  7509
   9625  7509
   9626  7509
   9627  7509
   9628  7509
   9629  7509		       c8		      DC.B	SFX_tmp
   9630  750a
   9631  750a
   9632  750a
   9633  750a
   9634  750a
   9635  750a
   9636  750a
   9637  750a				   SFX_tmp    SET	SFX_tmp + 10
   9638  750a
   9639  750a
   9640  750a
   9641  750a
   9642  750a
   9643  750a
   9644  750a
   9621  750a					      REPEND
   9622  750a
   9623  750a
   9624  750a
   9625  750a
   9626  750a
   9627  750a
   9628  750a
   9629  750a		       d2		      DC.B	SFX_tmp
   9630  750b
   9631  750b
   9632  750b
   9633  750b
   9634  750b
   9635  750b
   9636  750b
   9637  750b				   SFX_tmp    SET	SFX_tmp + 10
   9638  750b
   9639  750b
   9640  750b
   9641  750b
   9642  750b
   9643  750b
   9644  750b
   9621  750b					      REPEND
   9622  750b
   9623  750b
   9624  750b
   9625  750b
   9626  750b
   9627  750b
   9628  750b
   9629  750b		       dc		      DC.B	SFX_tmp
   9630  750c
   9631  750c
   9632  750c
   9633  750c
   9634  750c
   9635  750c
   9636  750c
   9637  750c				   SFX_tmp    SET	SFX_tmp + 10
   9638  750c
   9639  750c
   9640  750c
   9641  750c
   9642  750c
   9643  750c
   9644  750c
   9621  750c					      REPEND
   9622  750c
   9623  750c
   9624  750c
   9625  750c
   9626  750c
   9627  750c
   9628  750c
   9629  750c		       e6		      DC.B	SFX_tmp
   9630  750d
   9631  750d
   9632  750d
   9633  750d
   9634  750d
   9635  750d
   9636  750d
   9637  750d				   SFX_tmp    SET	SFX_tmp + 10
   9638  750d
   9639  750d
   9640  750d
   9641  750d
   9642  750d
   9643  750d
   9644  750d
   9645  750d					      REPEND
   9646  750d
   9647  750d
   9648  750d
   9649  750d
   9650  750d
   9651  750d
   9652  750d
   9653  750d				   SFX_IndexToWorkVoiceTab
   9654  750d
   9655  750d
   9656  750d
   9657  750d
   9658  750d
   9659  750d
   9660  750d
   9661  750d		       00 0d 1a 	      HEX	00 0D 1A
   9662  7510
   9663  7510
   9664  7510
   9665  7510
   9666  7510
   9667  7510
   9668  7510
   9669  7510							; Flag set to 1 if channel 3 should be reserved
   9670  7510
   9671  7510
   9672  7510
   9673  7510
   9674  7510
   9675  7510
   9676  7510
   9677  7510		       00	   SFX_LimitVoice3 DC.B	0
   9678  7511
   9679  7511
   9680  7511
   9681  7511
   9682  7511
   9683  7511
   9684  7511
   9685  7511
   9686  7511
   9687  7511
   9688  7511
   9689  7511
   9690  7511
   9691  7511
   9692  7511
   9693  7511							; ----------------------------------
   9694  7511
   9695  7511
   9696  7511
   9697  7511
   9698  7511
   9699  7511
   9700  7511
   9701  7511							; -- INITIALIZE SID
   9702  7511
   9703  7511
   9704  7511
   9705  7511
   9706  7511
   9707  7511
   9708  7511
   9709  7511							; ----------------------------------
   9710  7511
   9711  7511
   9712  7511
   9713  7511
   9714  7511
   9715  7511
   9716  7511
   9717  7511				   .init
   9718  7511
   9719  7511
   9720  7511
   9721  7511
   9722  7511
   9723  7511
   9724  7511
   9725  7511		       a2 16		      ldx	#$16
   9726  7513
   9727  7513
   9728  7513
   9729  7513
   9730  7513
   9731  7513
   9732  7513
   9733  7513		       a9 00		      lda	#$00
   9734  7515
   9735  7515
   9736  7515
   9737  7515
   9738  7515
   9739  7515
   9740  7515
   9741  7515		       8d c9 74 	      sta	SFX_CurrentVoice
   9742  7518
   9743  7518
   9744  7518
   9745  7518
   9746  7518
   9747  7518
   9748  7518
   9749  7518				   .l1
   9750  7518
   9751  7518
   9752  7518
   9753  7518
   9754  7518
   9755  7518
   9756  7518
   9757  7518		       9d 00 d4 	      sta	_SFX_SID,x
   9758  751b
   9759  751b
   9760  751b
   9761  751b
   9762  751b
   9763  751b
   9764  751b
   9765  751b		       ca		      dex
   9766  751c
   9767  751c
   9768  751c
   9769  751c
   9770  751c
   9771  751c
   9772  751c
   9773  751c		       10 fa		      bpl	.l1
   9774  751e
   9775  751e
   9776  751e
   9777  751e
   9778  751e
   9779  751e
   9780  751e
   9781  751e		       a2 26		      ldx	#(_SFX_VOICEWORKSIZE * 3) - 1
   9782  7520
   9783  7520
   9784  7520
   9785  7520
   9786  7520
   9787  7520
   9788  7520
   9789  7520				   .l2
   9790  7520
   9791  7520
   9792  7520
   9793  7520
   9794  7520
   9795  7520
   9796  7520
   9797  7520		       9d ca 74 	      sta	SFX_VoiceControl,x
   9798  7523
   9799  7523
   9800  7523
   9801  7523
   9802  7523
   9803  7523
   9804  7523
   9805  7523		       ca		      dex
   9806  7524
   9807  7524
   9808  7524
   9809  7524
   9810  7524
   9811  7524
   9812  7524
   9813  7524		       10 fa		      bpl	.l2
   9814  7526
   9815  7526
   9816  7526
   9817  7526
   9818  7526
   9819  7526
   9820  7526
   9821  7526
   9822  7526
   9823  7526
   9824  7526
   9825  7526
   9826  7526
   9827  7526
   9828  7526
   9829  7526		       a9 08		      lda	#$08
   9830  7528
   9831  7528
   9832  7528
   9833  7528
   9834  7528
   9835  7528
   9836  7528
   9837  7528		       8d 04 d4 	      sta	_SFX_SIDVOICE1CONTROL
   9838  752b
   9839  752b
   9840  752b
   9841  752b
   9842  752b
   9843  752b
   9844  752b
   9845  752b		       8d 0b d4 	      sta	_SFX_SIDVOICE2CONTROL
   9846  752e
   9847  752e
   9848  752e
   9849  752e
   9850  752e
   9851  752e
   9852  752e
   9853  752e		       8d 12 d4 	      sta	_SFX_SIDVOICE3CONTROL
   9854  7531
   9855  7531
   9856  7531
   9857  7531
   9858  7531
   9859  7531
   9860  7531
   9861  7531		       a9 07		      lda	#$07
   9862  7533
   9863  7533
   9864  7533
   9865  7533
   9866  7533
   9867  7533
   9868  7533
   9869  7533		       8d 03 d4 	      sta	_SFX_SIDVOICE1PULSEWIDTHHI
   9870  7536
   9871  7536
   9872  7536
   9873  7536
   9874  7536
   9875  7536
   9876  7536
   9877  7536		       8d 0a d4 	      sta	_SFX_SIDVOICE2PULSEWIDTHHI
   9878  7539
   9879  7539
   9880  7539
   9881  7539
   9882  7539
   9883  7539
   9884  7539
   9885  7539		       8d 11 d4 	      sta	_SFX_SIDVOICE3PULSEWIDTHHI
   9886  753c
   9887  753c
   9888  753c
   9889  753c
   9890  753c
   9891  753c
   9892  753c
   9893  753c		       a9 0f		      lda	#$0f
   9894  753e
   9895  753e
   9896  753e
   9897  753e
   9898  753e
   9899  753e
   9900  753e
   9901  753e		       8d 18 d4 	      sta	_SFX_SIDVOLUMEFILTER
   9902  7541
   9903  7541
   9904  7541
   9905  7541
   9906  7541
   9907  7541
   9908  7541
   9909  7541		       a9 00		      lda	#0
   9910  7543
   9911  7543
   9912  7543
   9913  7543
   9914  7543
   9915  7543
   9916  7543
   9917  7543		       8d 17 d4 	      sta	_SFX_SIDFILTERCONTROL
   9918  7546
   9919  7546
   9920  7546
   9921  7546
   9922  7546
   9923  7546
   9924  7546
   9925  7546		       60		      rts
   9926  7547
   9927  7547
   9928  7547
   9929  7547
   9930  7547
   9931  7547
   9932  7547
   9933  7547
   9934  7547
   9935  7547
   9936  7547
   9937  7547
   9938  7547
   9939  7547
   9940  7547
   9941  7547							; Inline ASM end
   9942  7547		       60		      rts
   9943  7548
   9944  7548
   9945  7548
   9946  7548
   9947  7548
   9948  7548
   9949  7548
   9950  7548				   _Psfx_init_end
   9951  7548
   9952  7548
   9953  7548
   9954  7548
   9955  7548
   9956  7548
   9957  7548
   9958  7548				   _Psfx_start SUBROUTINE
   9959  7548
   9960  7548
   9961  7548
   9962  7548
   9963  7548
   9964  7548
   9965  7548
   9966  7548							; Inline ASM start
   9967  7548
   9968  7548
   9969  7548
   9970  7548
   9971  7548
   9972  7548
   9973  7548
   9974  7548
   9975  7548
   9976  7548
   9977  7548
   9978  7548
   9979  7548
   9980  7548
   9981  7548
   9982  7548		       8e dd 75 	      stx	.xTemp
   9983  754b
   9984  754b
   9985  754b
   9986  754b
   9987  754b
   9988  754b
   9989  754b
   9990  754b		       8c de 75 	      sty	.yTemp
   9991  754e
   9992  754e
   9993  754e
   9994  754e
   9995  754e
   9996  754e
   9997  754e
   9998  754e							; Convert the index into an offset
   9999  754e
  10000  754e
  10001  754e
  10002  754e
  10003  754e
  10004  754e
  10005  754e
  10006  754e		       ad 21 b5 	      lda	_sfx_start.effect_no
  10007  7551
  10008  7551
  10009  7551
  10010  7551
  10011  7551
  10012  7551
  10013  7551
  10014  7551		       aa		      tax
  10015  7552
  10016  7552
  10017  7552
  10018  7552
  10019  7552
  10020  7552
  10021  7552
  10022  7552		       bc f5 74 	      ldy	SFX_MulBy10Tab,x
  10023  7555
  10024  7555
  10025  7555
  10026  7555
  10027  7555
  10028  7555
  10029  7555
  10030  7555							; Find a new SID voice by picking the voice with the lowest remaining SFXVoiceTotalCount
  10031  7555
  10032  7555
  10033  7555
  10034  7555
  10035  7555
  10036  7555
  10037  7555
  10038  7555		       a2 00		      ldx	#0
  10039  7557
  10040  7557
  10041  7557
  10042  7557
  10043  7557
  10044  7557
  10045  7557
  10046  7557		       ad d6 74 	      lda	SFX_VoiceTotalCount
  10047  755a
  10048  755a
  10049  755a
  10050  755a
  10051  755a
  10052  755a
  10053  755a
  10054  755a		       cd e3 74 	      cmp	SFX_VoiceTotalCount + _SFX_VOICEWORKSIZE
  10055  755d
  10056  755d
  10057  755d
  10058  755d
  10059  755d
  10060  755d
  10061  755d
  10062  755d		       90 05		      bcc	.not2
  10063  755f
  10064  755f
  10065  755f
  10066  755f
  10067  755f
  10068  755f
  10069  755f
  10070  755f		       a2 01		      ldx	#1
  10071  7561
  10072  7561
  10073  7561
  10074  7561
  10075  7561
  10076  7561
  10077  7561
  10078  7561		       ad e3 74 	      lda	SFX_VoiceTotalCount + _SFX_VOICEWORKSIZE
  10079  7564
  10080  7564
  10081  7564
  10082  7564
  10083  7564
  10084  7564
  10085  7564
  10086  7564				   .not2
  10087  7564
  10088  7564
  10089  7564
  10090  7564
  10091  7564
  10092  7564
  10093  7564
  10094  7564							;lda SFX_LimitVoice3
  10095  7564
  10096  7564
  10097  7564
  10098  7564
  10099  7564
  10100  7564
  10101  7564
  10102  7564							;beq .not3
  10103  7564
  10104  7564
  10105  7564
  10106  7564
  10107  7564
  10108  7564
  10109  7564
  10110  7564							;cmp SFX_VoiceTotalCount + [_SFX_VOICEWORKSIZE * 2]
  10111  7564
  10112  7564
  10113  7564
  10114  7564
  10115  7564
  10116  7564
  10117  7564
  10118  7564							;bcc .not3
  10119  7564
  10120  7564
  10121  7564
  10122  7564
  10123  7564
  10124  7564
  10125  7564
  10126  7564							;ldx #2
  10127  7564
  10128  7564
  10129  7564
  10130  7564
  10131  7564
  10132  7564
  10133  7564
  10134  7564				   .not3
  10135  7564
  10136  7564
  10137  7564
  10138  7564
  10139  7564
  10140  7564
  10141  7564
  10142  7564							; Store what we have chosen
  10143  7564
  10144  7564
  10145  7564
  10146  7564
  10147  7564
  10148  7564
  10149  7564
  10150  7564		       8e c9 74 	      stx	SFX_CurrentVoice
  10151  7567
  10152  7567
  10153  7567
  10154  7567
  10155  7567
  10156  7567
  10157  7567
  10158  7567
  10159  7567
  10160  7567
  10161  7567
  10162  7567
  10163  7567
  10164  7567
  10165  7567
  10166  7567							; Now retire the values by one ready for next time
  10167  7567
  10168  7567
  10169  7567
  10170  7567
  10171  7567
  10172  7567
  10173  7567
  10174  7567		       ad d6 74 	      lda	SFX_VoiceTotalCount
  10175  756a
  10176  756a
  10177  756a
  10178  756a
  10179  756a
  10180  756a
  10181  756a
  10182  756a		       f0 03		      beq	.no1
  10183  756c
  10184  756c
  10185  756c
  10186  756c
  10187  756c
  10188  756c
  10189  756c
  10190  756c		       ce d6 74 	      dec	SFX_VoiceTotalCount
  10191  756f
  10192  756f
  10193  756f
  10194  756f
  10195  756f
  10196  756f
  10197  756f
  10198  756f				   .no1
  10199  756f
  10200  756f
  10201  756f
  10202  756f
  10203  756f
  10204  756f
  10205  756f
  10206  756f		       ad e3 74 	      lda	SFX_VoiceTotalCount + _SFX_VOICEWORKSIZE
  10207  7572
  10208  7572
  10209  7572
  10210  7572
  10211  7572
  10212  7572
  10213  7572
  10214  7572		       f0 03		      beq	.no2
  10215  7574
  10216  7574
  10217  7574
  10218  7574
  10219  7574
  10220  7574
  10221  7574
  10222  7574		       ce e3 74 	      dec	SFX_VoiceTotalCount + _SFX_VOICEWORKSIZE
  10223  7577
  10224  7577
  10225  7577
  10226  7577
  10227  7577
  10228  7577
  10229  7577
  10230  7577				   .no2
  10231  7577
  10232  7577
  10233  7577
  10234  7577
  10235  7577
  10236  7577
  10237  7577
  10238  7577		       ad f0 74 	      lda	SFX_VoiceTotalCount + [_SFX_VOICEWORKSIZE * 2]
  10239  757a
  10240  757a
  10241  757a
  10242  757a
  10243  757a
  10244  757a
  10245  757a
  10246  757a		       f0 03		      beq	.no3
  10247  757c
  10248  757c
  10249  757c
  10250  757c
  10251  757c
  10252  757c
  10253  757c
  10254  757c		       ce f0 74 	      dec	SFX_VoiceTotalCount + [_SFX_VOICEWORKSIZE * 2]
  10255  757f
  10256  757f
  10257  757f
  10258  757f
  10259  757f
  10260  757f
  10261  757f
  10262  757f				   .no3
  10263  757f
  10264  757f
  10265  757f
  10266  757f
  10267  757f
  10268  757f
  10269  757f
  10270  757f							; Fetch the SID voice offset adjustment
  10271  757f
  10272  757f
  10273  757f
  10274  757f
  10275  757f
  10276  757f
  10277  757f
  10278  757f		       bd f2 74 	      lda	SFX_MulBy7Tab,x
  10279  7582
  10280  7582
  10281  7582
  10282  7582
  10283  7582
  10284  7582
  10285  7582
  10286  7582		       aa		      tax
  10287  7583
  10288  7583
  10289  7583
  10290  7583
  10291  7583
  10292  7583
  10293  7583
  10294  7583							; Initialise the SID voice
  10295  7583
  10296  7583
  10297  7583
  10298  7583
  10299  7583
  10300  7583
  10301  7583
  10302  7583		       a9 00		      lda	#$00
  10303  7585
  10304  7585
  10305  7585
  10306  7585
  10307  7585
  10308  7585
  10309  7585
  10310  7585		       9d 05 d4 	      sta	_SFX_SIDVOICE1ATTACKDECAY,x
  10311  7588
  10312  7588
  10313  7588
  10314  7588
  10315  7588
  10316  7588
  10317  7588
  10318  7588		       9d 06 d4 	      sta	_SFX_SIDVOICE1SUSTAINRELEASE,x
  10319  758b
  10320  758b
  10321  758b
  10322  758b
  10323  758b
  10324  758b
  10325  758b
  10326  758b		       9d 04 d4 	      sta	_SFX_SIDVOICE1CONTROL,x
  10327  758e
  10328  758e
  10329  758e
  10330  758e
  10331  758e
  10332  758e
  10333  758e
  10334  758e							; Copy the SFX from the table to our work space for the voice
  10335  758e
  10336  758e
  10337  758e
  10338  758e
  10339  758e
  10340  758e
  10341  758e
  10342  758e		       ae c9 74 	      ldx	SFX_CurrentVoice
  10343  7591
  10344  7591
  10345  7591
  10346  7591
  10347  7591
  10348  7591
  10349  7591
  10350  7591							; Multiply by 12, convert the index to an offset
  10351  7591
  10352  7591
  10353  7591
  10354  7591
  10355  7591
  10356  7591
  10357  7591
  10358  7591		       bd 0d 75 	      lda	SFX_IndexToWorkVoiceTab,x
  10359  7594
  10360  7594
  10361  7594
  10362  7594
  10363  7594
  10364  7594
  10365  7594
  10366  7594		       aa		      tax
  10367  7595
  10368  7595
  10369  7595
  10370  7595
  10371  7595
  10372  7595
  10373  7595
  10374  7595							; Copy the ten bytes of SFX table data
  10375  7595
  10376  7595
  10377  7595
  10378  7595
  10379  7595
  10380  7595
  10381  7595
  10382  7595		       a9 0a		      lda	#$0A
  10383  7597
  10384  7597
  10385  7597
  10386  7597
  10387  7597
  10388  7597
  10389  7597
  10390  7597		       8d f1 74 	      sta	SFX_TempVar
  10391  759a
  10392  759a
  10393  759a
  10394  759a
  10395  759a
  10396  759a
  10397  759a
  10398  759a				   .l1
  10399  759a
  10400  759a
  10401  759a
  10402  759a
  10403  759a
  10404  759a
  10405  759a
  10406  759a				   sfx_table_inst
  10407  759a
  10408  759a
  10409  759a
  10410  759a
  10411  759a
  10412  759a
  10413  759a
  10414  759a							; Self modified
  10415  759a
  10416  759a
  10417  759a
  10418  759a
  10419  759a
  10420  759a
  10421  759a
  10422  759a		       b9 00 00 	      lda	$0000,y
  10423  759d
  10424  759d
  10425  759d
  10426  759d
  10427  759d
  10428  759d
  10429  759d
  10430  759d		       9d ca 74 	      sta	SFX_VoiceControl,x
  10431  75a0
  10432  75a0
  10433  75a0
  10434  75a0
  10435  75a0
  10436  75a0
  10437  75a0
  10438  75a0		       e8		      inx
  10439  75a1
  10440  75a1
  10441  75a1
  10442  75a1
  10443  75a1
  10444  75a1
  10445  75a1
  10446  75a1		       c8		      iny
  10447  75a2
  10448  75a2
  10449  75a2
  10450  75a2
  10451  75a2
  10452  75a2
  10453  75a2
  10454  75a2		       ce f1 74 	      dec	SFX_TempVar
  10455  75a5
  10456  75a5
  10457  75a5
  10458  75a5
  10459  75a5
  10460  75a5
  10461  75a5
  10462  75a5		       d0 f3		      bne	.l1
  10463  75a7
  10464  75a7
  10465  75a7
  10466  75a7
  10467  75a7
  10468  75a7
  10469  75a7
  10470  75a7		       a9 00		      lda	#$00
  10471  75a9
  10472  75a9
  10473  75a9
  10474  75a9
  10475  75a9
  10476  75a9
  10477  75a9
  10478  75a9							; All of these use -10 because X has just copied 10 bytes
  10479  75a9
  10480  75a9
  10481  75a9
  10482  75a9
  10483  75a9
  10484  75a9
  10485  75a9
  10486  75a9		       9d ca 74 	      sta	SFX_VoiceFreqDirection-10,x
  10487  75ac
  10488  75ac
  10489  75ac
  10490  75ac
  10491  75ac
  10492  75ac
  10493  75ac
  10494  75ac							; Copy the initial values to higher up
  10495  75ac
  10496  75ac
  10497  75ac
  10498  75ac
  10499  75ac
  10500  75ac
  10501  75ac
  10502  75ac		       bd c6 74 	      lda	SFX_VoiceFreqDecay-10,x
  10503  75af
  10504  75af
  10505  75af
  10506  75af
  10507  75af
  10508  75af
  10509  75af
  10510  75af		       9d cb 74 	      sta	SFX_VoiceFreqHiCount-10,x
  10511  75b2
  10512  75b2
  10513  75b2
  10514  75b2
  10515  75b2
  10516  75b2
  10517  75b2
  10518  75b2		       d0 09		      bne	.noMoreUpdates
  10519  75b4
  10520  75b4
  10521  75b4
  10522  75b4
  10523  75b4
  10524  75b4
  10525  75b4
  10526  75b4		       bd c9 74 	      lda	SFX_VoiceFreqHiCountInit-10,x
  10527  75b7
  10528  75b7
  10529  75b7
  10530  75b7
  10531  75b7
  10532  75b7
  10533  75b7
  10534  75b7		       9d cb 74 	      sta	SFX_VoiceFreqHiCount-10,x
  10535  75ba
  10536  75ba
  10537  75ba
  10538  75ba
  10539  75ba
  10540  75ba
  10541  75ba
  10542  75ba		       fe ca 74 	      inc	SFX_VoiceFreqDirection-10,x
  10543  75bd
  10544  75bd
  10545  75bd
  10546  75bd
  10547  75bd
  10548  75bd
  10549  75bd
  10550  75bd				   .noMoreUpdates
  10551  75bd
  10552  75bd
  10553  75bd
  10554  75bd
  10555  75bd
  10556  75bd
  10557  75bd
  10558  75bd							; Work out roughly how long the effect will last for priority evaluation by summing the
  10559  75bd
  10560  75bd
  10561  75bd
  10562  75bd
  10563  75bd
  10564  75bd
  10565  75bd
  10566  75bd							; attack and decay.
  10567  75bd
  10568  75bd
  10569  75bd
  10570  75bd
  10571  75bd
  10572  75bd
  10573  75bd
  10574  75bd		       bd c1 74 	      lda	SFX_VoiceAttackDecay-10,x
  10575  75c0
  10576  75c0
  10577  75c0
  10578  75c0
  10579  75c0
  10580  75c0
  10581  75c0
  10582  75c0		       4a		      lsr
  10583  75c1
  10584  75c1
  10585  75c1
  10586  75c1
  10587  75c1
  10588  75c1
  10589  75c1
  10590  75c1		       4a		      lsr
  10591  75c2
  10592  75c2
  10593  75c2
  10594  75c2
  10595  75c2
  10596  75c2
  10597  75c2
  10598  75c2		       4a		      lsr
  10599  75c3
  10600  75c3
  10601  75c3
  10602  75c3
  10603  75c3
  10604  75c3
  10605  75c3
  10606  75c3		       4a		      lsr
  10607  75c4
  10608  75c4
  10609  75c4
  10610  75c4
  10611  75c4
  10612  75c4
  10613  75c4
  10614  75c4		       8d f1 74 	      sta	SFX_TempVar
  10615  75c7
  10616  75c7
  10617  75c7
  10618  75c7
  10619  75c7
  10620  75c7
  10621  75c7
  10622  75c7		       bd c1 74 	      lda	SFX_VoiceAttackDecay-10,x
  10623  75ca
  10624  75ca
  10625  75ca
  10626  75ca
  10627  75ca
  10628  75ca
  10629  75ca
  10630  75ca		       29 0f		      and	#15
  10631  75cc
  10632  75cc
  10633  75cc
  10634  75cc
  10635  75cc
  10636  75cc
  10637  75cc
  10638  75cc		       18		      clc
  10639  75cd
  10640  75cd
  10641  75cd
  10642  75cd
  10643  75cd
  10644  75cd
  10645  75cd
  10646  75cd		       6d f1 74 	      adc	SFX_TempVar
  10647  75d0
  10648  75d0
  10649  75d0
  10650  75d0
  10651  75d0
  10652  75d0
  10653  75d0
  10654  75d0							; Slightly longer delay, carry will always be clear here
  10655  75d0
  10656  75d0
  10657  75d0
  10658  75d0
  10659  75d0
  10660  75d0
  10661  75d0
  10662  75d0		       0a		      asl
  10663  75d1
  10664  75d1
  10665  75d1
  10666  75d1
  10667  75d1
  10668  75d1
  10669  75d1
  10670  75d1							; Always add three so that the priority picks the next one if the attack/decay is really tiny.
  10671  75d1
  10672  75d1
  10673  75d1
  10674  75d1
  10675  75d1
  10676  75d1
  10677  75d1
  10678  75d1		       69 03		      adc	#3
  10679  75d3
  10680  75d3
  10681  75d3
  10682  75d3
  10683  75d3
  10684  75d3
  10685  75d3
  10686  75d3		       9d cc 74 	      sta	SFX_VoiceTotalCount-10,x
  10687  75d6
  10688  75d6
  10689  75d6
  10690  75d6
  10691  75d6
  10692  75d6
  10693  75d6
  10694  75d6		       ae dd 75 	      ldx	.xTemp
  10695  75d9
  10696  75d9
  10697  75d9
  10698  75d9
  10699  75d9
  10700  75d9
  10701  75d9
  10702  75d9		       ac de 75 	      ldy	.yTemp
  10703  75dc
  10704  75dc
  10705  75dc
  10706  75dc
  10707  75dc
  10708  75dc
  10709  75dc
  10710  75dc		       60		      rts
  10711  75dd
  10712  75dd
  10713  75dd
  10714  75dd
  10715  75dd
  10716  75dd
  10717  75dd
  10718  75dd
  10719  75dd
  10720  75dd
  10721  75dd
  10722  75dd
  10723  75dd
  10724  75dd
  10725  75dd
  10726  75dd		       00	   .xTemp     DC.B	0
  10727  75de
  10728  75de
  10729  75de
  10730  75de
  10731  75de
  10732  75de
  10733  75de
  10734  75de		       00	   .yTemp     DC.B	0
  10735  75df
  10736  75df
  10737  75df
  10738  75df
  10739  75df
  10740  75df
  10741  75df
  10742  75df
  10743  75df
  10744  75df
  10745  75df
  10746  75df
  10747  75df
  10748  75df
  10749  75df
  10750  75df							; Inline ASM end
  10751  75df		       60		      rts
  10752  75e0
  10753  75e0
  10754  75e0
  10755  75e0
  10756  75e0
  10757  75e0
  10758  75e0
  10759  75e0				   _Psfx_start_end
  10760  75e0
  10761  75e0
  10762  75e0
  10763  75e0
  10764  75e0
  10765  75e0
  10766  75e0
  10767  75e0				   _Psfx_play SUBROUTINE
  10768  75e0
  10769  75e0
  10770  75e0
  10771  75e0
  10772  75e0
  10773  75e0
  10774  75e0
  10775  75e0							; Inline ASM start
  10776  75e0
  10777  75e0
  10778  75e0
  10779  75e0
  10780  75e0
  10781  75e0
  10782  75e0
  10783  75e0
  10784  75e0
  10785  75e0
  10786  75e0
  10787  75e0
  10788  75e0
  10789  75e0
  10790  75e0
  10791  75e0							; ----------------------------------
  10792  75e0
  10793  75e0
  10794  75e0
  10795  75e0
  10796  75e0
  10797  75e0
  10798  75e0
  10799  75e0							; -- THE ACTUAL PLAY ROUTINE
  10800  75e0
  10801  75e0
  10802  75e0
  10803  75e0
  10804  75e0
  10805  75e0
  10806  75e0
  10807  75e0							; ----------------------------------
  10808  75e0
  10809  75e0
  10810  75e0
  10811  75e0
  10812  75e0
  10813  75e0
  10814  75e0
  10815  75e0
  10816  75e0
  10817  75e0
  10818  75e0
  10819  75e0
  10820  75e0
  10821  75e0
  10822  75e0
  10823  75e0							; Update the pulse according to the toggle
  10824  75e0
  10825  75e0
  10826  75e0
  10827  75e0
  10828  75e0
  10829  75e0
  10830  75e0
  10831  75e0		       ad b2 76 	      lda	.pulseToggle
  10832  75e3
  10833  75e3
  10834  75e3
  10835  75e3
  10836  75e3
  10837  75e3
  10838  75e3
  10839  75e3		       d0 1c		      bne	.doDecPulse
  10840  75e5
  10841  75e5
  10842  75e5
  10843  75e5
  10844  75e5
  10845  75e5
  10846  75e5
  10847  75e5							; Inc pulse
  10848  75e5
  10849  75e5
  10850  75e5
  10851  75e5
  10852  75e5
  10853  75e5
  10854  75e5
  10855  75e5		       ad b0 76 	      lda	.pulseWidthLo
  10856  75e8
  10857  75e8
  10858  75e8
  10859  75e8
  10860  75e8
  10861  75e8
  10862  75e8
  10863  75e8		       18		      clc
  10864  75e9
  10865  75e9
  10866  75e9
  10867  75e9
  10868  75e9
  10869  75e9
  10870  75e9
  10871  75e9		       69 50		      adc	#$50
  10872  75eb
  10873  75eb
  10874  75eb
  10875  75eb
  10876  75eb
  10877  75eb
  10878  75eb
  10879  75eb		       8d b0 76 	      sta	.pulseWidthLo
  10880  75ee
  10881  75ee
  10882  75ee
  10883  75ee
  10884  75ee
  10885  75ee
  10886  75ee
  10887  75ee		       90 2b		      bcc	.processVoices
  10888  75f0
  10889  75f0
  10890  75f0
  10891  75f0
  10892  75f0
  10893  75f0
  10894  75f0
  10895  75f0		       ee b1 76 	      inc	.pulseWidthHi
  10896  75f3
  10897  75f3
  10898  75f3
  10899  75f3
  10900  75f3
  10901  75f3
  10902  75f3
  10903  75f3		       ad b1 76 	      lda	.pulseWidthHi
  10904  75f6
  10905  75f6
  10906  75f6
  10907  75f6
  10908  75f6
  10909  75f6
  10910  75f6
  10911  75f6		       c9 05		      cmp	#$05
  10912  75f8
  10913  75f8
  10914  75f8
  10915  75f8
  10916  75f8
  10917  75f8
  10918  75f8
  10919  75f8		       d0 21		      bne	.processVoices
  10920  75fa
  10921  75fa
  10922  75fa
  10923  75fa
  10924  75fa
  10925  75fa
  10926  75fa
  10927  75fa		       a9 01		      lda	#$01
  10928  75fc
  10929  75fc
  10930  75fc
  10931  75fc
  10932  75fc
  10933  75fc
  10934  75fc
  10935  75fc		       8d b2 76 	      sta	.pulseToggle
  10936  75ff
  10937  75ff
  10938  75ff
  10939  75ff
  10940  75ff
  10941  75ff
  10942  75ff
  10943  75ff		       d0 1a		      bne	.processVoices
  10944  7601
  10945  7601
  10946  7601
  10947  7601
  10948  7601
  10949  7601
  10950  7601
  10951  7601				   .doDecPulse
  10952  7601
  10953  7601
  10954  7601
  10955  7601
  10956  7601
  10957  7601
  10958  7601
  10959  7601							; Dec pulse
  10960  7601
  10961  7601
  10962  7601
  10963  7601
  10964  7601
  10965  7601
  10966  7601
  10967  7601		       ad b0 76 	      lda	.pulseWidthLo
  10968  7604
  10969  7604
  10970  7604
  10971  7604
  10972  7604
  10973  7604
  10974  7604
  10975  7604		       38		      sec
  10976  7605
  10977  7605
  10978  7605
  10979  7605
  10980  7605
  10981  7605
  10982  7605
  10983  7605		       e9 50		      sbc	#$50
  10984  7607
  10985  7607
  10986  7607
  10987  7607
  10988  7607
  10989  7607
  10990  7607
  10991  7607		       8d b0 76 	      sta	.pulseWidthLo
  10992  760a
  10993  760a
  10994  760a
  10995  760a
  10996  760a
  10997  760a
  10998  760a
  10999  760a		       b0 0f		      bcs	.processVoices
  11000  760c
  11001  760c
  11002  760c
  11003  760c
  11004  760c
  11005  760c
  11006  760c
  11007  760c		       ce b1 76 	      dec	.pulseWidthHi
  11008  760f
  11009  760f
  11010  760f
  11011  760f
  11012  760f
  11013  760f
  11014  760f
  11015  760f		       ad b1 76 	      lda	.pulseWidthHi
  11016  7612
  11017  7612
  11018  7612
  11019  7612
  11020  7612
  11021  7612
  11022  7612
  11023  7612		       c9 02		      cmp	#$02
  11024  7614
  11025  7614
  11026  7614
  11027  7614
  11028  7614
  11029  7614
  11030  7614
  11031  7614		       d0 05		      bne	.processVoices
  11032  7616
  11033  7616
  11034  7616
  11035  7616
  11036  7616
  11037  7616
  11038  7616
  11039  7616		       a9 00		      lda	#$00
  11040  7618
  11041  7618
  11042  7618
  11043  7618
  11044  7618
  11045  7618
  11046  7618
  11047  7618		       8d b2 76 	      sta	.pulseToggle
  11048  761b
  11049  761b
  11050  761b
  11051  761b
  11052  761b
  11053  761b
  11054  761b
  11055  761b				   .processVoices
  11056  761b
  11057  761b
  11058  761b
  11059  761b
  11060  761b
  11061  761b
  11062  761b
  11063  761b		       a0 00		      ldy	#$00
  11064  761d
  11065  761d
  11066  761d
  11067  761d
  11068  761d
  11069  761d
  11070  761d
  11071  761d		       a2 00		      ldx	#$00
  11072  761f
  11073  761f
  11074  761f
  11075  761f
  11076  761f
  11077  761f
  11078  761f
  11079  761f		       20 26 76 	      jsr	.processOneVoice
  11080  7622
  11081  7622
  11082  7622
  11083  7622
  11084  7622
  11085  7622
  11086  7622
  11087  7622		       a0 07		      ldy	#$07
  11088  7624
  11089  7624
  11090  7624
  11091  7624
  11092  7624
  11093  7624
  11094  7624
  11095  7624		       a2 0d		      ldx	#_SFX_VOICEWORKSIZE
  11096  7626
  11097  7626
  11098  7626
  11099  7626
  11100  7626
  11101  7626
  11102  7626
  11103  7626							;lda SFX_LimitVoice3
  11104  7626
  11105  7626
  11106  7626
  11107  7626
  11108  7626
  11109  7626
  11110  7626
  11111  7626							;beq .skip
  11112  7626
  11113  7626
  11114  7626
  11115  7626
  11116  7626
  11117  7626
  11118  7626
  11119  7626							;jsr .processOneVoice
  11120  7626
  11121  7626
  11122  7626
  11123  7626
  11124  7626
  11125  7626
  11126  7626
  11127  7626							;ldy #$0E
  11128  7626
  11129  7626
  11130  7626
  11131  7626
  11132  7626
  11133  7626
  11134  7626
  11135  7626							;ldx #[_SFX_VOICEWORKSIZE * 2]
  11136  7626
  11137  7626
  11138  7626
  11139  7626
  11140  7626
  11141  7626
  11142  7626
  11143  7626				   .skip
  11144  7626
  11145  7626
  11146  7626
  11147  7626
  11148  7626
  11149  7626
  11150  7626
  11151  7626				   .processOneVoice
  11152  7626
  11153  7626
  11154  7626
  11155  7626
  11156  7626
  11157  7626
  11158  7626
  11159  7626							; Not likely to be any frequency changes so don't run the code, just update the SID voice instead
  11160  7626
  11161  7626
  11162  7626
  11163  7626
  11164  7626
  11165  7626
  11166  7626
  11167  7626		       bd d0 74 	      lda	SFX_VoiceFreqDecay,x
  11168  7629
  11169  7629
  11170  7629
  11171  7629
  11172  7629
  11173  7629
  11174  7629
  11175  7629		       1d d3 74 	      ora	SFX_VoiceFreqHiCountInit,x
  11176  762c
  11177  762c
  11178  762c
  11179  762c
  11180  762c
  11181  762c
  11182  762c
  11183  762c		       f0 5d		      beq	.noUpdates
  11184  762e
  11185  762e
  11186  762e
  11187  762e
  11188  762e
  11189  762e
  11190  762e
  11191  762e							; Process the direction
  11192  762e
  11193  762e
  11194  762e
  11195  762e
  11196  762e
  11197  762e
  11198  762e
  11199  762e		       bd d4 74 	      lda	SFX_VoiceFreqDirection,x
  11200  7631
  11201  7631
  11202  7631
  11203  7631
  11204  7631
  11205  7631
  11206  7631
  11207  7631		       d0 2d		      bne	.downWibble
  11208  7633
  11209  7633
  11210  7633
  11211  7633
  11212  7633
  11213  7633
  11214  7633
  11215  7633							; Incr
  11216  7633
  11217  7633
  11218  7633
  11219  7633
  11220  7633
  11221  7633
  11222  7633
  11223  7633		       bd cc 74 	      lda	SFX_VoiceFreqLo,x
  11224  7636
  11225  7636
  11226  7636
  11227  7636
  11228  7636
  11229  7636
  11230  7636
  11231  7636		       18		      clc
  11232  7637
  11233  7637
  11234  7637
  11235  7637
  11236  7637
  11237  7637
  11238  7637
  11239  7637		       7d ce 74 	      adc	SFX_VoiceFreqLoSpeed,x
  11240  763a
  11241  763a
  11242  763a
  11243  763a
  11244  763a
  11245  763a
  11246  763a
  11247  763a		       9d cc 74 	      sta	SFX_VoiceFreqLo,x
  11248  763d
  11249  763d
  11250  763d
  11251  763d
  11252  763d
  11253  763d
  11254  763d
  11255  763d		       90 03		      bcc	.noCarry1
  11256  763f
  11257  763f
  11258  763f
  11259  763f
  11260  763f
  11261  763f
  11262  763f
  11263  763f		       fe cd 74 	      inc	SFX_VoiceFreqHi,x
  11264  7642
  11265  7642
  11266  7642
  11267  7642
  11268  7642
  11269  7642
  11270  7642
  11271  7642				   .noCarry1
  11272  7642
  11273  7642
  11274  7642
  11275  7642
  11276  7642
  11277  7642
  11278  7642
  11279  7642							; Incr 2
  11280  7642
  11281  7642
  11282  7642
  11283  7642
  11284  7642
  11285  7642
  11286  7642
  11287  7642		       bd cd 74 	      lda	SFX_VoiceFreqHi,x
  11288  7645
  11289  7645
  11290  7645
  11291  7645
  11292  7645
  11293  7645
  11294  7645
  11295  7645		       18		      clc
  11296  7646
  11297  7646
  11298  7646
  11299  7646
  11300  7646
  11301  7646
  11302  7646
  11303  7646		       7d cf 74 	      adc	SFX_VoiceFreqHiSpeed2,x
  11304  7649
  11305  7649
  11306  7649
  11307  7649
  11308  7649
  11309  7649
  11310  7649
  11311  7649		       9d cd 74 	      sta	SFX_VoiceFreqHi,x
  11312  764c
  11313  764c
  11314  764c
  11315  764c
  11316  764c
  11317  764c
  11318  764c
  11319  764c		       de d5 74 	      dec	SFX_VoiceFreqHiCount,x
  11320  764f
  11321  764f
  11322  764f
  11323  764f
  11324  764f
  11325  764f
  11326  764f
  11327  764f		       d0 3a		      bne	.noUpdates
  11328  7651
  11329  7651
  11330  7651
  11331  7651
  11332  7651
  11333  7651
  11334  7651
  11335  7651				   .freqProcess
  11336  7651
  11337  7651
  11338  7651
  11339  7651
  11340  7651
  11341  7651
  11342  7651
  11343  7651		       bd d3 74 	      lda	SFX_VoiceFreqHiCountInit,x
  11344  7654
  11345  7654
  11346  7654
  11347  7654
  11348  7654
  11349  7654
  11350  7654
  11351  7654		       9d d5 74 	      sta	SFX_VoiceFreqHiCount,x
  11352  7657
  11353  7657
  11354  7657
  11355  7657
  11356  7657
  11357  7657
  11358  7657
  11359  7657		       f0 25		      beq	.freqReset
  11360  7659
  11361  7659
  11362  7659
  11363  7659
  11364  7659
  11365  7659
  11366  7659
  11367  7659							; Swap the direction
  11368  7659
  11369  7659
  11370  7659
  11371  7659
  11372  7659
  11373  7659
  11374  7659
  11375  7659		       a9 01		      lda	#$01
  11376  765b
  11377  765b
  11378  765b
  11379  765b
  11380  765b
  11381  765b
  11382  765b
  11383  765b		       9d d4 74 	      sta	SFX_VoiceFreqDirection,x
  11384  765e
  11385  765e
  11386  765e
  11387  765e
  11388  765e
  11389  765e
  11390  765e
  11391  765e		       d0 2b		      bne	.noUpdates
  11392  7660
  11393  7660
  11394  7660
  11395  7660
  11396  7660
  11397  7660
  11398  7660
  11399  7660				   .downWibble
  11400  7660
  11401  7660
  11402  7660
  11403  7660
  11404  7660
  11405  7660
  11406  7660
  11407  7660							; Decr
  11408  7660
  11409  7660
  11410  7660
  11411  7660
  11412  7660
  11413  7660
  11414  7660
  11415  7660		       bd cc 74 	      lda	SFX_VoiceFreqLo,x
  11416  7663
  11417  7663
  11418  7663
  11419  7663
  11420  7663
  11421  7663
  11422  7663
  11423  7663		       38		      sec
  11424  7664
  11425  7664
  11426  7664
  11427  7664
  11428  7664
  11429  7664
  11430  7664
  11431  7664		       fd d1 74 	      sbc	SFX_VoiceFreqLoSpeed2,x
  11432  7667
  11433  7667
  11434  7667
  11435  7667
  11436  7667
  11437  7667
  11438  7667
  11439  7667		       9d cc 74 	      sta	SFX_VoiceFreqLo,x
  11440  766a
  11441  766a
  11442  766a
  11443  766a
  11444  766a
  11445  766a
  11446  766a
  11447  766a		       b0 03		      bcs	.freqHiAdjust
  11448  766c
  11449  766c
  11450  766c
  11451  766c
  11452  766c
  11453  766c
  11454  766c
  11455  766c		       de cd 74 	      dec	SFX_VoiceFreqHi,x
  11456  766f
  11457  766f
  11458  766f
  11459  766f
  11460  766f
  11461  766f
  11462  766f
  11463  766f				   .freqHiAdjust
  11464  766f
  11465  766f
  11466  766f
  11467  766f
  11468  766f
  11469  766f
  11470  766f
  11471  766f							; Decr 2
  11472  766f
  11473  766f
  11474  766f
  11475  766f
  11476  766f
  11477  766f
  11478  766f
  11479  766f		       bd cd 74 	      lda	SFX_VoiceFreqHi,x
  11480  7672
  11481  7672
  11482  7672
  11483  7672
  11484  7672
  11485  7672
  11486  7672
  11487  7672		       38		      sec
  11488  7673
  11489  7673
  11490  7673
  11491  7673
  11492  7673
  11493  7673
  11494  7673
  11495  7673		       fd d2 74 	      sbc	SFX_VoiceFreqHiSpeed,x
  11496  7676
  11497  7676
  11498  7676
  11499  7676
  11500  7676
  11501  7676
  11502  7676
  11503  7676		       9d cd 74 	      sta	SFX_VoiceFreqHi,x
  11504  7679
  11505  7679
  11506  7679
  11507  7679
  11508  7679
  11509  7679
  11510  7679
  11511  7679		       de d5 74 	      dec	SFX_VoiceFreqHiCount,x
  11512  767c
  11513  767c
  11514  767c
  11515  767c
  11516  767c
  11517  767c
  11518  767c
  11519  767c		       d0 0d		      bne	.noUpdates
  11520  767e
  11521  767e
  11522  767e
  11523  767e
  11524  767e
  11525  767e
  11526  767e
  11527  767e				   .freqReset
  11528  767e
  11529  767e
  11530  767e
  11531  767e
  11532  767e
  11533  767e
  11534  767e
  11535  767e		       bd d0 74 	      lda	SFX_VoiceFreqDecay,x
  11536  7681
  11537  7681
  11538  7681
  11539  7681
  11540  7681
  11541  7681
  11542  7681
  11543  7681		       9d d5 74 	      sta	SFX_VoiceFreqHiCount,x
  11544  7684
  11545  7684
  11546  7684
  11547  7684
  11548  7684
  11549  7684
  11550  7684
  11551  7684		       f0 cb		      beq	.freqProcess
  11552  7686
  11553  7686
  11554  7686
  11555  7686
  11556  7686
  11557  7686
  11558  7686
  11559  7686							; Swap the direction
  11560  7686
  11561  7686
  11562  7686
  11563  7686
  11564  7686
  11565  7686
  11566  7686
  11567  7686		       a9 00		      lda	#$00
  11568  7688
  11569  7688
  11570  7688
  11571  7688
  11572  7688
  11573  7688
  11574  7688
  11575  7688		       9d d4 74 	      sta	SFX_VoiceFreqDirection,x
  11576  768b
  11577  768b
  11578  768b
  11579  768b
  11580  768b
  11581  768b
  11582  768b
  11583  768b				   .noUpdates
  11584  768b
  11585  768b
  11586  768b
  11587  768b
  11588  768b
  11589  768b
  11590  768b
  11591  768b							; Update SID from our calculated data
  11592  768b
  11593  768b
  11594  768b
  11595  768b
  11596  768b
  11597  768b
  11598  768b
  11599  768b		       bd cc 74 	      lda	SFX_VoiceFreqLo,x
  11600  768e
  11601  768e
  11602  768e
  11603  768e
  11604  768e
  11605  768e
  11606  768e
  11607  768e		       99 00 d4 	      sta	_SFX_SIDVOICE1FREQLO,y
  11608  7691
  11609  7691
  11610  7691
  11611  7691
  11612  7691
  11613  7691
  11614  7691
  11615  7691		       bd cd 74 	      lda	SFX_VoiceFreqHi,x
  11616  7694
  11617  7694
  11618  7694
  11619  7694
  11620  7694
  11621  7694
  11622  7694
  11623  7694		       99 01 d4 	      sta	_SFX_SIDVOICE1FREQHI,y
  11624  7697
  11625  7697
  11626  7697
  11627  7697
  11628  7697
  11629  7697
  11630  7697
  11631  7697		       bd cb 74 	      lda	SFX_VoiceAttackDecay,x
  11632  769a
  11633  769a
  11634  769a
  11635  769a
  11636  769a
  11637  769a
  11638  769a
  11639  769a		       99 05 d4 	      sta	_SFX_SIDVOICE1ATTACKDECAY,y
  11640  769d
  11641  769d
  11642  769d
  11643  769d
  11644  769d
  11645  769d
  11646  769d
  11647  769d		       bd ca 74 	      lda	SFX_VoiceControl,x
  11648  76a0
  11649  76a0
  11650  76a0
  11651  76a0
  11652  76a0
  11653  76a0
  11654  76a0
  11655  76a0		       99 04 d4 	      sta	_SFX_SIDVOICE1CONTROL,y
  11656  76a3
  11657  76a3
  11658  76a3
  11659  76a3
  11660  76a3
  11661  76a3
  11662  76a3
  11663  76a3		       ad b0 76 	      lda	.pulseWidthLo
  11664  76a6
  11665  76a6
  11666  76a6
  11667  76a6
  11668  76a6
  11669  76a6
  11670  76a6
  11671  76a6		       99 02 d4 	      sta	_SFX_SIDVOICE1PULSEWIDTHLO,y
  11672  76a9
  11673  76a9
  11674  76a9
  11675  76a9
  11676  76a9
  11677  76a9
  11678  76a9
  11679  76a9		       ad b1 76 	      lda	.pulseWidthHi
  11680  76ac
  11681  76ac
  11682  76ac
  11683  76ac
  11684  76ac
  11685  76ac
  11686  76ac
  11687  76ac		       99 03 d4 	      sta	_SFX_SIDVOICE1PULSEWIDTHHI,y
  11688  76af
  11689  76af
  11690  76af
  11691  76af
  11692  76af
  11693  76af
  11694  76af
  11695  76af		       60		      rts
  11696  76b0
  11697  76b0
  11698  76b0
  11699  76b0
  11700  76b0
  11701  76b0
  11702  76b0
  11703  76b0
  11704  76b0
  11705  76b0
  11706  76b0
  11707  76b0
  11708  76b0
  11709  76b0
  11710  76b0
  11711  76b0		       00	   .pulseWidthLo DC.B	0
  11712  76b1
  11713  76b1
  11714  76b1
  11715  76b1
  11716  76b1
  11717  76b1
  11718  76b1
  11719  76b1		       00	   .pulseWidthHi DC.B	0
  11720  76b2
  11721  76b2
  11722  76b2
  11723  76b2
  11724  76b2
  11725  76b2
  11726  76b2
  11727  76b2		       00	   .pulseToggle DC.B	0
  11728  76b3
  11729  76b3
  11730  76b3
  11731  76b3
  11732  76b3
  11733  76b3
  11734  76b3
  11735  76b3
  11736  76b3
  11737  76b3
  11738  76b3
  11739  76b3
  11740  76b3
  11741  76b3
  11742  76b3
  11743  76b3							; Inline ASM end
  11744  76b3		       60		      rts
  11745  76b4
  11746  76b4
  11747  76b4
  11748  76b4
  11749  76b4
  11750  76b4
  11751  76b4
  11752  76b4				   _Psfx_play_end
  11753  76b4
  11754  76b4
  11755  76b4
  11756  76b4
  11757  76b4
  11758  76b4
  11759  76b4
  11760  76b4				   _Pconfigure_sprites SUBROUTINE
  11761  76b4				   FPULL      SET	0
  11762  76b4				   FPUSH      SET	1
      0  76b4					      pbyte	#11
      1  76b4		       a9 0b		      lda	#11
      2  76b6				  -	      IF	!FPUSH
      3  76b6				  -	      pha
      4  76b6					      ENDIF
  11764  76b6				   FPULL      SET	1
  11765  76b6				   FPUSH      SET	0
      0  76b6					      plb2var	_spr_multicolor1
      1  76b6				  -	      IF	!FPULL
      2  76b6				  -	      pla
      3  76b6					      ENDIF
      4  76b6		       8d 25 d0 	      sta	_spr_multicolor1
  11767  76b6				   FPULL      SET	0
  11768  76b6				   FPUSH      SET	1
      0  76b9					      pbyte	#1
      1  76b9		       a9 01		      lda	#1
      2  76bb				  -	      IF	!FPUSH
      3  76bb				  -	      pha
      4  76bb					      ENDIF
  11770  76bb				   FPULL      SET	1
  11771  76bb				   FPUSH      SET	0
      0  76bb					      plb2var	_spr_multicolor2
      1  76bb				  -	      IF	!FPULL
      2  76bb				  -	      pla
      3  76bb					      ENDIF
      4  76bb		       8d 26 d0 	      sta	_spr_multicolor2
  11773  76bb				   FPULL      SET	0
  11774  76bb				   FPUSH      SET	1
      0  76be					      pbyte	#7
      1  76be		       a9 07		      lda	#7
      2  76c0				  -	      IF	!FPUSH
      3  76c0				  -	      pha
      4  76c0					      ENDIF
  11776  76c0				   FPULL      SET	1
  11777  76c0				   FPUSH      SET	0
      0  76c0					      plb2var	_spr_setmulti.spr_no
      1  76c0				  -	      IF	!FPULL
      2  76c0				  -	      pla
      3  76c0					      ENDIF
      4  76c0		       8d 07 b5 	      sta	_spr_setmulti.spr_no
  11779  76c3		       20 ea 71 	      jsr	_Pspr_setmulti
  11780  76c3				   FPULL      SET	0
  11781  76c3				   FPUSH      SET	1
      0  76c6					      pbyte	#7
      1  76c6		       a9 07		      lda	#7
      2  76c8				  -	      IF	!FPUSH
      3  76c8				  -	      pha
      4  76c8					      ENDIF
  11783  76c8				   FPULL      SET	1
  11784  76c8				   FPUSH      SET	0
      0  76c8					      plb2var	_spr_setcolor.spr_no
      1  76c8				  -	      IF	!FPULL
      2  76c8				  -	      pla
      3  76c8					      ENDIF
      4  76c8		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  11786  76c8				   FPULL      SET	0
  11787  76c8				   FPUSH      SET	1
      0  76cb					      pbyte	#5
      1  76cb		       a9 05		      lda	#5
      2  76cd				  -	      IF	!FPUSH
      3  76cd				  -	      pha
      4  76cd					      ENDIF
  11789  76cd				   FPULL      SET	1
  11790  76cd				   FPUSH      SET	0
      0  76cd					      plb2var	_spr_setcolor.color
      1  76cd				  -	      IF	!FPULL
      2  76cd				  -	      pla
      3  76cd					      ENDIF
      4  76cd		       8d 0a b5 	      sta	_spr_setcolor.color
  11792  76d0		       20 04 72 	      jsr	_Pspr_setcolor
  11793  76d0				   FPULL      SET	0
  11794  76d0				   FPUSH      SET	1
      0  76d3					      pbyte	#7
      1  76d3		       a9 07		      lda	#7
      2  76d5				  -	      IF	!FPUSH
      3  76d5				  -	      pha
      4  76d5					      ENDIF
  11796  76d5				   FPULL      SET	1
  11797  76d5				   FPUSH      SET	0
      0  76d5					      plb2var	_spr_setshape.spr_no
      1  76d5				  -	      IF	!FPULL
      2  76d5				  -	      pla
      3  76d5					      ENDIF
      4  76d5		       8d 05 b5 	      sta	_spr_setshape.spr_no
  11799  76d5				   FPULL      SET	0
  11800  76d5				   FPUSH      SET	1
      0  76d8					      pbyte	#195
      1  76d8		       a9 c3		      lda	#195
      2  76da				  -	      IF	!FPUSH
      3  76da				  -	      pha
      4  76da					      ENDIF
  11802  76da				   FPULL      SET	1
  11803  76da				   FPUSH      SET	0
      0  76da					      plb2var	_spr_setshape.shape
      1  76da				  -	      IF	!FPULL
      2  76da				  -	      pla
      3  76da					      ENDIF
      4  76da		       8d 06 b5 	      sta	_spr_setshape.shape
  11805  76dd		       20 e0 71 	      jsr	_Pspr_setshape
  11806  76dd				   FPULL      SET	0
  11807  76dd				   FPUSH      SET	1
      0  76e0					      pbyte	#7
      1  76e0		       a9 07		      lda	#7
      2  76e2				  -	      IF	!FPUSH
      3  76e2				  -	      pha
      4  76e2					      ENDIF
  11809  76e2				   FPULL      SET	1
  11810  76e2				   FPUSH      SET	0
      0  76e2					      plb2var	_spr_setposx.spr_no
      1  76e2				  -	      IF	!FPULL
      2  76e2				  -	      pla
      3  76e2					      ENDIF
      4  76e2		       8d fe b4 	      sta	_spr_setposx.spr_no
  11812  76e2				   FPULL      SET	0
      0  76e5					      pbyte	#173
      1  76e5		       a9 ad		      lda	#173
      2  76e7					      IF	!FPUSH
      3  76e7		       48		      pha
      4  76e8					      ENDIF
      0  76e8					      btow
      1  76e8		       a9 00		      lda	#$00
      2  76ea		       48		      pha
      0  76eb					      plw2var	_spr_setposx.x
      1  76eb					      IF	!FPULL
      2  76eb		       68		      pla
      3  76ec		       8d 00 b5 	      sta	_spr_setposx.x+1
      4  76ef		       68		      pla
      5  76f0		       8d ff b4 	      sta	_spr_setposx.x
      6  76f3				  -	      ELSE
      7  76f3				  -	      sta	_spr_setposx.x
      8  76f3				  -	      sty	_spr_setposx.x+1
      9  76f3					      ENDIF
  11816  76f3		       20 95 71 	      jsr	_Pspr_setposx
  11817  76f3				   FPUSH      SET	1
      0  76f6					      pbyte	#7
      1  76f6		       a9 07		      lda	#7
      2  76f8				  -	      IF	!FPUSH
      3  76f8				  -	      pha
      4  76f8					      ENDIF
  11819  76f8				   FPULL      SET	1
  11820  76f8				   FPUSH      SET	0
      0  76f8					      plb2var	_spr_setposy.spr_no
      1  76f8				  -	      IF	!FPULL
      2  76f8				  -	      pla
      3  76f8					      ENDIF
      4  76f8		       8d fc b4 	      sta	_spr_setposy.spr_no
  11822  76f8				   FPULL      SET	0
  11823  76f8				   FPUSH      SET	1
      0  76fb					      pbyte	#212
      1  76fb		       a9 d4		      lda	#212
      2  76fd				  -	      IF	!FPUSH
      3  76fd				  -	      pha
      4  76fd					      ENDIF
  11825  76fd				   FPULL      SET	1
  11826  76fd				   FPUSH      SET	0
      0  76fd					      plb2var	_spr_setposy.y
      1  76fd				  -	      IF	!FPULL
      2  76fd				  -	      pla
      3  76fd					      ENDIF
      4  76fd		       8d fd b4 	      sta	_spr_setposy.y
  11828  7700		       20 88 71 	      jsr	_Pspr_setposy
  11829  7700				   FPULL      SET	0
  11830  7700				   FPUSH      SET	1
      0  7703					      pbyte	#7
      1  7703		       a9 07		      lda	#7
      2  7705				  -	      IF	!FPUSH
      3  7705				  -	      pha
      4  7705					      ENDIF
  11832  7705				   FPULL      SET	1
  11833  7705				   FPUSH      SET	0
      0  7705					      plb2var	_spr_disable.spr_no
      1  7705				  -	      IF	!FPULL
      2  7705				  -	      pla
      3  7705					      ENDIF
      4  7705		       8d fb b4 	      sta	_spr_disable.spr_no
  11835  7708		       20 7b 71 	      jsr	_Pspr_disable
  11836  7708				   FPULL      SET	0
  11837  7708				   FPUSH      SET	1
      0  770b					      pbyte	#7
      1  770b		       a9 07		      lda	#7
      2  770d				  -	      IF	!FPUSH
      3  770d				  -	      pha
      4  770d					      ENDIF
  11839  770d				   FPULL      SET	1
  11840  770d				   FPUSH      SET	0
      0  770d					      plb2var	_spr_overbg.spr_no
      1  770d				  -	      IF	!FPULL
      2  770d				  -	      pla
      3  770d					      ENDIF
      4  770d		       8d 10 b5 	      sta	_spr_overbg.spr_no
  11842  7710		       20 4f 72 	      jsr	_Pspr_overbg
  11843  7710				   FPULL      SET	0
  11844  7710				   FPUSH      SET	1
      0  7713					      pbyte	#0
      1  7713		       a9 00		      lda	#0
      2  7715				  -	      IF	!FPUSH
      3  7715				  -	      pha
      4  7715					      ENDIF
  11846  7715				   FPULL      SET	1
  11847  7715				   FPUSH      SET	0
      0  7715					      plb2var	_configure_sprites.i
      1  7715				  -	      IF	!FPULL
      2  7715				  -	      pla
      3  7715					      ENDIF
      4  7715		       8d 41 b6 	      sta	_configure_sprites.i
  11849  7715				   FPULL      SET	0
  11850  7715				   FPUSH      SET	1
      0  7718					      pbyte	#3
      1  7718		       a9 03		      lda	#3
      2  771a				  -	      IF	!FPUSH
      3  771a				  -	      pha
      4  771a					      ENDIF
  11852  771a				   FPULL      SET	1
  11853  771a				   FPUSH      SET	0
      0  771a					      plb2var	XFOR_max_1
      1  771a				  -	      IF	!FPULL
      2  771a				  -	      pla
      3  771a					      ENDIF
      4  771a		       8d 42 b6 	      sta	XFOR_max_1
  11855  771d				   _FOR_1
      0  771d					      forb	1, _configure_sprites.i
      1  771d
      2  771d		       ad 42 b6 	      lda	XFOR_max_1
      3  7720		       cd 41 b6 	      cmp	_configure_sprites.i
      4  7723		       b0 03		      bcs	.enter
      5  7725
      6  7725		       4c 5e 77 	      jmp	_ENDFOR_1
      7  7728				   .enter
  11857  7728				   FPULL      SET	0
  11858  7728				   FPUSH      SET	1
      0  7728					      pbvar	_configure_sprites.i
      0  7728					      pbyte	_configure_sprites.i
      1  7728		       ad 41 b6 	      lda	_configure_sprites.i
      2  772b				  -	      IF	!FPUSH
      3  772b				  -	      pha
      4  772b					      ENDIF
  11860  772b				   FPULL      SET	1
  11861  772b				   FPUSH      SET	0
      0  772b					      plb2var	_spr_setmulti.spr_no
      1  772b				  -	      IF	!FPULL
      2  772b				  -	      pla
      3  772b					      ENDIF
      4  772b		       8d 07 b5 	      sta	_spr_setmulti.spr_no
  11863  772e		       20 ea 71 	      jsr	_Pspr_setmulti
  11864  772e				   FPULL      SET	0
  11865  772e				   FPUSH      SET	1
      0  7731					      pbvar	_configure_sprites.i
      0  7731					      pbyte	_configure_sprites.i
      1  7731		       ad 41 b6 	      lda	_configure_sprites.i
      2  7734				  -	      IF	!FPUSH
      3  7734				  -	      pha
      4  7734					      ENDIF
  11867  7734				   FPULL      SET	1
  11868  7734				   FPUSH      SET	0
      0  7734					      plb2var	_spr_setcolor.spr_no
      1  7734				  -	      IF	!FPULL
      2  7734				  -	      pla
      3  7734					      ENDIF
      4  7734		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  11870  7734				   FPULL      SET	0
  11871  7734				   FPUSH      SET	1
      0  7737					      pbyte	#2
      1  7737		       a9 02		      lda	#2
      2  7739				  -	      IF	!FPUSH
      3  7739				  -	      pha
      4  7739					      ENDIF
  11873  7739				   FPULL      SET	1
  11874  7739				   FPUSH      SET	0
      0  7739					      plb2var	_spr_setcolor.color
      1  7739				  -	      IF	!FPULL
      2  7739				  -	      pla
      3  7739					      ENDIF
      4  7739		       8d 0a b5 	      sta	_spr_setcolor.color
  11876  773c		       20 04 72 	      jsr	_Pspr_setcolor
  11877  773c				   FPULL      SET	0
  11878  773c				   FPUSH      SET	1
      0  773f					      pbvar	_configure_sprites.i
      0  773f					      pbyte	_configure_sprites.i
      1  773f		       ad 41 b6 	      lda	_configure_sprites.i
      2  7742				  -	      IF	!FPUSH
      3  7742				  -	      pha
      4  7742					      ENDIF
  11880  7742				   FPULL      SET	1
  11881  7742				   FPUSH      SET	0
      0  7742					      plb2var	_spr_setshape.spr_no
      1  7742				  -	      IF	!FPULL
      2  7742				  -	      pla
      3  7742					      ENDIF
      4  7742		       8d 05 b5 	      sta	_spr_setshape.spr_no
  11883  7742				   FPULL      SET	0
  11884  7742				   FPUSH      SET	1
      0  7745					      pbyte	#160
      1  7745		       a9 a0		      lda	#160
      2  7747				  -	      IF	!FPUSH
      3  7747				  -	      pha
      4  7747					      ENDIF
  11886  7747				   FPULL      SET	1
  11887  7747				   FPUSH      SET	0
      0  7747					      plb2var	_spr_setshape.shape
      1  7747				  -	      IF	!FPULL
      2  7747				  -	      pla
      3  7747					      ENDIF
      4  7747		       8d 06 b5 	      sta	_spr_setshape.shape
  11889  774a		       20 e0 71 	      jsr	_Pspr_setshape
  11890  774a				   FPULL      SET	0
  11891  774a				   FPUSH      SET	1
      0  774d					      pbvar	_configure_sprites.i
      0  774d					      pbyte	_configure_sprites.i
      1  774d		       ad 41 b6 	      lda	_configure_sprites.i
      2  7750				  -	      IF	!FPUSH
      3  7750				  -	      pha
      4  7750					      ENDIF
  11893  7750				   FPULL      SET	1
  11894  7750				   FPUSH      SET	0
      0  7750					      plb2var	_spr_disable.spr_no
      1  7750				  -	      IF	!FPULL
      2  7750				  -	      pla
      3  7750					      ENDIF
      4  7750		       8d fb b4 	      sta	_spr_disable.spr_no
  11896  7753		       20 7b 71 	      jsr	_Pspr_disable
      0  7756					      nextb	1, _configure_sprites.i
      1  7756
      2  7756				  -	      IFCONST	XFOR_step_1
      3  7756				  -
      4  7756				  -	      clc
      5  7756				  -	      lda	XFOR_step_1
      6  7756				  -	      adc	_configure_sprites.i
      7  7756				  -	      sta	_configure_sprites.i
      8  7756				  -
      9  7756				  -	      bcs	_ENDFOR_1
     10  7756					      ELSE
     11  7756
     12  7756		       ee 41 b6 	      inc	_configure_sprites.i
     13  7759
     14  7759		       f0 03		      beq	_ENDFOR_1
     15  775b					      ENDIF
     16  775b		       4c 1d 77 	      jmp	_FOR_1
  11898  775e				   _ENDFOR_1
  11899  775e				   FPULL      SET	0
  11900  775e				   FPUSH      SET	1
      0  775e					      pbyte	#6
      1  775e		       a9 06		      lda	#6
      2  7760				  -	      IF	!FPUSH
      3  7760				  -	      pha
      4  7760					      ENDIF
  11902  7760				   FPULL      SET	1
  11903  7760				   FPUSH      SET	0
      0  7760					      plb2var	_spr_setmulti.spr_no
      1  7760				  -	      IF	!FPULL
      2  7760				  -	      pla
      3  7760					      ENDIF
      4  7760		       8d 07 b5 	      sta	_spr_setmulti.spr_no
  11905  7763		       20 ea 71 	      jsr	_Pspr_setmulti
  11906  7763				   FPULL      SET	0
  11907  7763				   FPUSH      SET	1
      0  7766					      pbyte	#6
      1  7766		       a9 06		      lda	#6
      2  7768				  -	      IF	!FPUSH
      3  7768				  -	      pha
      4  7768					      ENDIF
  11909  7768				   FPULL      SET	1
  11910  7768				   FPUSH      SET	0
      0  7768					      plb2var	_spr_setcolor.spr_no
      1  7768				  -	      IF	!FPULL
      2  7768				  -	      pla
      3  7768					      ENDIF
      4  7768		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  11912  7768				   FPULL      SET	0
  11913  7768				   FPUSH      SET	1
      0  776b					      pbyte	#3
      1  776b		       a9 03		      lda	#3
      2  776d				  -	      IF	!FPUSH
      3  776d				  -	      pha
      4  776d					      ENDIF
  11915  776d				   FPULL      SET	1
  11916  776d				   FPUSH      SET	0
      0  776d					      plb2var	_spr_setcolor.color
      1  776d				  -	      IF	!FPULL
      2  776d				  -	      pla
      3  776d					      ENDIF
      4  776d		       8d 0a b5 	      sta	_spr_setcolor.color
  11918  7770		       20 04 72 	      jsr	_Pspr_setcolor
  11919  7770				   FPULL      SET	0
  11920  7770				   FPUSH      SET	1
      0  7773					      pbyte	#6
      1  7773		       a9 06		      lda	#6
      2  7775				  -	      IF	!FPUSH
      3  7775				  -	      pha
      4  7775					      ENDIF
  11922  7775				   FPULL      SET	1
  11923  7775				   FPUSH      SET	0
      0  7775					      plb2var	_spr_setshape.spr_no
      1  7775				  -	      IF	!FPULL
      2  7775				  -	      pla
      3  7775					      ENDIF
      4  7775		       8d 05 b5 	      sta	_spr_setshape.spr_no
  11925  7775				   FPULL      SET	0
  11926  7775				   FPUSH      SET	1
      0  7778					      pbyte	#222
      1  7778		       a9 de		      lda	#222
      2  777a				  -	      IF	!FPUSH
      3  777a				  -	      pha
      4  777a					      ENDIF
  11928  777a				   FPULL      SET	1
  11929  777a				   FPUSH      SET	0
      0  777a					      plb2var	_spr_setshape.shape
      1  777a				  -	      IF	!FPULL
      2  777a				  -	      pla
      3  777a					      ENDIF
      4  777a		       8d 06 b5 	      sta	_spr_setshape.shape
  11931  777d		       20 e0 71 	      jsr	_Pspr_setshape
  11932  777d				   FPULL      SET	0
  11933  777d				   FPUSH      SET	1
      0  7780					      pbyte	#6
      1  7780		       a9 06		      lda	#6
      2  7782				  -	      IF	!FPUSH
      3  7782				  -	      pha
      4  7782					      ENDIF
  11935  7782				   FPULL      SET	1
  11936  7782				   FPUSH      SET	0
      0  7782					      plb2var	_spr_disable.spr_no
      1  7782				  -	      IF	!FPULL
      2  7782				  -	      pla
      3  7782					      ENDIF
      4  7782		       8d fb b4 	      sta	_spr_disable.spr_no
  11938  7785		       20 7b 71 	      jsr	_Pspr_disable
  11939  7785				   FPULL      SET	0
  11940  7785				   FPUSH      SET	1
      0  7788					      pbyte	#5
      1  7788		       a9 05		      lda	#5
      2  778a				  -	      IF	!FPUSH
      3  778a				  -	      pha
      4  778a					      ENDIF
  11942  778a				   FPULL      SET	1
  11943  778a				   FPUSH      SET	0
      0  778a					      plb2var	_spr_sethires.spr_no
      1  778a				  -	      IF	!FPULL
      2  778a				  -	      pla
      3  778a					      ENDIF
      4  778a		       8d 08 b5 	      sta	_spr_sethires.spr_no
  11945  778d		       20 f7 71 	      jsr	_Pspr_sethires
  11946  778d				   FPULL      SET	0
  11947  778d				   FPUSH      SET	1
      0  7790					      pbyte	#5
      1  7790		       a9 05		      lda	#5
      2  7792				  -	      IF	!FPUSH
      3  7792				  -	      pha
      4  7792					      ENDIF
  11949  7792				   FPULL      SET	1
  11950  7792				   FPUSH      SET	0
      0  7792					      plb2var	_spr_setcolor.spr_no
      1  7792				  -	      IF	!FPULL
      2  7792				  -	      pla
      3  7792					      ENDIF
      4  7792		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  11952  7792				   FPULL      SET	0
  11953  7792				   FPUSH      SET	1
      0  7795					      pbyte	#5
      1  7795		       a9 05		      lda	#5
      2  7797				  -	      IF	!FPUSH
      3  7797				  -	      pha
      4  7797					      ENDIF
  11955  7797				   FPULL      SET	1
  11956  7797				   FPUSH      SET	0
      0  7797					      plb2var	_spr_setcolor.color
      1  7797				  -	      IF	!FPULL
      2  7797				  -	      pla
      3  7797					      ENDIF
      4  7797		       8d 0a b5 	      sta	_spr_setcolor.color
  11958  779a		       20 04 72 	      jsr	_Pspr_setcolor
  11959  779a				   FPULL      SET	0
  11960  779a				   FPUSH      SET	1
      0  779d					      pbyte	#5
      1  779d		       a9 05		      lda	#5
      2  779f				  -	      IF	!FPUSH
      3  779f				  -	      pha
      4  779f					      ENDIF
  11962  779f				   FPULL      SET	1
  11963  779f				   FPUSH      SET	0
      0  779f					      plb2var	_spr_setshape.spr_no
      1  779f				  -	      IF	!FPULL
      2  779f				  -	      pla
      3  779f					      ENDIF
      4  779f		       8d 05 b5 	      sta	_spr_setshape.spr_no
  11965  779f				   FPULL      SET	0
  11966  779f				   FPUSH      SET	1
      0  77a2					      pbyte	#228
      1  77a2		       a9 e4		      lda	#228
      2  77a4				  -	      IF	!FPUSH
      3  77a4				  -	      pha
      4  77a4					      ENDIF
  11968  77a4				   FPULL      SET	1
  11969  77a4				   FPUSH      SET	0
      0  77a4					      plb2var	_spr_setshape.shape
      1  77a4				  -	      IF	!FPULL
      2  77a4				  -	      pla
      3  77a4					      ENDIF
      4  77a4		       8d 06 b5 	      sta	_spr_setshape.shape
  11971  77a7		       20 e0 71 	      jsr	_Pspr_setshape
  11972  77a7				   FPULL      SET	0
  11973  77a7				   FPUSH      SET	1
      0  77aa					      pbyte	#5
      1  77aa		       a9 05		      lda	#5
      2  77ac				  -	      IF	!FPUSH
      3  77ac				  -	      pha
      4  77ac					      ENDIF
  11975  77ac				   FPULL      SET	1
  11976  77ac				   FPUSH      SET	0
      0  77ac					      plb2var	_spr_setdblheight.spr_no
      1  77ac				  -	      IF	!FPULL
      2  77ac				  -	      pla
      3  77ac					      ENDIF
      4  77ac		       8d 0d b5 	      sta	_spr_setdblheight.spr_no
  11978  77af		       20 28 72 	      jsr	_Pspr_setdblheight
  11979  77af				   FPULL      SET	0
  11980  77af				   FPUSH      SET	1
      0  77b2					      pbyte	#5
      1  77b2		       a9 05		      lda	#5
      2  77b4				  -	      IF	!FPUSH
      3  77b4				  -	      pha
      4  77b4					      ENDIF
  11982  77b4				   FPULL      SET	1
  11983  77b4				   FPUSH      SET	0
      0  77b4					      plb2var	_spr_setposx.spr_no
      1  77b4				  -	      IF	!FPULL
      2  77b4				  -	      pla
      3  77b4					      ENDIF
      4  77b4		       8d fe b4 	      sta	_spr_setposx.spr_no
  11985  77b4				   FPULL      SET	0
      0  77b7					      pbyte	#184
      1  77b7		       a9 b8		      lda	#184
      2  77b9					      IF	!FPUSH
      3  77b9		       48		      pha
      4  77ba					      ENDIF
      0  77ba					      btow
      1  77ba		       a9 00		      lda	#$00
      2  77bc		       48		      pha
      0  77bd					      plw2var	_spr_setposx.x
      1  77bd					      IF	!FPULL
      2  77bd		       68		      pla
      3  77be		       8d 00 b5 	      sta	_spr_setposx.x+1
      4  77c1		       68		      pla
      5  77c2		       8d ff b4 	      sta	_spr_setposx.x
      6  77c5				  -	      ELSE
      7  77c5				  -	      sta	_spr_setposx.x
      8  77c5				  -	      sty	_spr_setposx.x+1
      9  77c5					      ENDIF
  11989  77c5		       20 95 71 	      jsr	_Pspr_setposx
  11990  77c5				   FPUSH      SET	1
      0  77c8					      pbyte	#5
      1  77c8		       a9 05		      lda	#5
      2  77ca				  -	      IF	!FPUSH
      3  77ca				  -	      pha
      4  77ca					      ENDIF
  11992  77ca				   FPULL      SET	1
  11993  77ca				   FPUSH      SET	0
      0  77ca					      plb2var	_spr_setposy.spr_no
      1  77ca				  -	      IF	!FPULL
      2  77ca				  -	      pla
      3  77ca					      ENDIF
      4  77ca		       8d fc b4 	      sta	_spr_setposy.spr_no
  11995  77ca				   FPULL      SET	0
  11996  77ca				   FPUSH      SET	1
      0  77cd					      pbyte	#58
      1  77cd		       a9 3a		      lda	#58
      2  77cf				  -	      IF	!FPUSH
      3  77cf				  -	      pha
      4  77cf					      ENDIF
  11998  77cf				   FPULL      SET	1
  11999  77cf				   FPUSH      SET	0
      0  77cf					      plb2var	_spr_setposy.y
      1  77cf				  -	      IF	!FPULL
      2  77cf				  -	      pla
      3  77cf					      ENDIF
      4  77cf		       8d fd b4 	      sta	_spr_setposy.y
  12001  77d2		       20 88 71 	      jsr	_Pspr_setposy
  12002  77d2				   FPULL      SET	0
  12003  77d2				   FPUSH      SET	1
      0  77d5					      pbyte	#5
      1  77d5		       a9 05		      lda	#5
      2  77d7				  -	      IF	!FPUSH
      3  77d7				  -	      pha
      4  77d7					      ENDIF
  12005  77d7				   FPULL      SET	1
  12006  77d7				   FPUSH      SET	0
      0  77d7					      plb2var	_spr_enable.spr_no
      1  77d7				  -	      IF	!FPULL
      2  77d7				  -	      pla
      3  77d7					      ENDIF
      4  77d7		       8d fa b4 	      sta	_spr_enable.spr_no
  12008  77da		       20 6e 71 	      jsr	_Pspr_enable
  12009  77dd		       60		      rts
  12010  77de				   _Pconfigure_sprites_end
  12011  77de
  12012  77de
  12013  77de
  12014  77de
  12015  77de
  12016  77de
  12017  77de
  12018  77de				   _Pupdate_scoretable SUBROUTINE
      0  77de					      pbyte_pbyte_cmpblt_cond	_fleet, #10, _EI_3, _EL_3
      1  77de
      2  77de
      3  77de		       ad 37 b6 	      lda	_fleet
      4  77e1		       c9 0a		      cmp	#10
      5  77e3		       90 03		      bcc	*+5
      6  77e5					      IFCONST	_EL_3
      7  77e5		       4c 4d 78 	      jmp	_EL_3
      8  77e8				  -	      ELSE
      9  77e8				  -	      jmp	_EI_3
     10  77e8					      ENDIF
  12020  77e8				   FPULL      SET	0
  12021  77e8				   FPUSH      SET	1
      0  77e8					      pbyte	#48
      1  77e8		       a9 30		      lda	#48
      2  77ea				  -	      IF	!FPUSH
      3  77ea				  -	      pha
      4  77ea					      ENDIF
  12023  77ea				   FPULL      SET	1
  12024  77ea				   FPUSH      SET	0
      0  77ea					      pokeb_const_addr	#1175
      1  77ea
      2  77ea
      3  77ea
      4  77ea		       04 97	   .ad	      EQU	#1175
      5  77ea				  -	      IF	!FPULL
      6  77ea				  -	      pla
      7  77ea					      ENDIF
      8  77ea		       8d 97 04 	      sta	.ad
  12026  77ea				   FPULL      SET	0
      0  77ed					      pbyte	#3
      1  77ed		       a9 03		      lda	#3
      2  77ef					      IF	!FPUSH
      3  77ef		       48		      pha
      4  77f0					      ENDIF
      0  77f0					      btow
      1  77f0		       a9 00		      lda	#$00
      2  77f2		       48		      pha
  12029  77f2				   FPUSH      SET	1
      0  77f3					      pword	#40
      1  77f3				  -	      IF	!FPUSH
      2  77f3				  -	      lda	#<#40
      3  77f3				  -	      pha
      4  77f3				  -	      lda	#>#40
      5  77f3				  -	      pha
      6  77f3					      ELSE
      7  77f3		       a9 28		      lda	#<#40
      8  77f5		       a0 00		      ldy	#>#40
      9  77f7					      ENDIF
  12031  77f7				   FPULL      SET	1
  12032  77f7				   FPUSH      SET	0
      0  77f7					      mulw
      1  77f7				  -	      IF	!FPULL
      2  77f7				  -	      pla
      3  77f7				  -	      sta	R1
      4  77f7				  -	      pla
      5  77f7				  -	      sta	R0
      6  77f7					      ELSE
      7  77f7		       85 fb		      sta	R0
      8  77f9		       84 fc		      sty	R1
      9  77fb					      ENDIF
     10  77fb		       68		      pla
     11  77fc		       85 fe		      sta	R3
     12  77fe		       68		      pla
     13  77ff		       85 fd		      sta	R2
     14  7801		       20 0d 08 	      jsr	NUCL_SMUL16
     15  7804					      IF	!FPUSH
     16  7804		       a5 fb		      lda	R0
     17  7806		       48		      pha
     18  7807		       a5 fc		      lda	R1
     19  7809		       48		      pha
     20  780a				  -	      ELSE
     21  780a				  -	      lda	R0
     22  780a				  -	      ldy	R1
     23  780a					      ENDIF
  12034  780a				   FPULL      SET	0
      0  780a					      pbyte	#31
      1  780a		       a9 1f		      lda	#31
      2  780c					      IF	!FPUSH
      3  780c		       48		      pha
      4  780d					      ENDIF
      0  780d					      btow
      1  780d		       a9 00		      lda	#$00
      2  780f		       48		      pha
      0  7810					      addw
      1  7810		       ba		      tsx
      2  7811		       bd 02 01 	      lda.wx	stack+2
      3  7814		       18		      clc
      4  7815		       7d 04 01 	      adc.wx	stack+4
      5  7818		       9d 04 01 	      sta.wx	stack+4
      6  781b		       68		      pla
      7  781c		       7d 03 01 	      adc.wx	stack+3
      8  781f		       9d 03 01 	      sta.wx	stack+3
      9  7822		       68		      pla
      0  7823					      pword	#1024
      1  7823					      IF	!FPUSH
      2  7823		       a9 00		      lda	#<#1024
      3  7825		       48		      pha
      4  7826		       a9 04		      lda	#>#1024
      5  7828		       48		      pha
      6  7829				  -	      ELSE
      7  7829				  -	      lda	#<#1024
      8  7829				  -	      ldy	#>#1024
      9  7829					      ENDIF
      0  7829					      addw
      1  7829		       ba		      tsx
      2  782a		       bd 02 01 	      lda.wx	stack+2
      3  782d		       18		      clc
      4  782e		       7d 04 01 	      adc.wx	stack+4
      5  7831		       9d 04 01 	      sta.wx	stack+4
      6  7834		       68		      pla
      7  7835		       7d 03 01 	      adc.wx	stack+3
      8  7838		       9d 03 01 	      sta.wx	stack+3
      9  783b		       68		      pla
  12040  783b				   FPUSH      SET	1
      0  783c					      pbvar	_fleet
      0  783c					      pbyte	_fleet
      1  783c		       ad 37 b6 	      lda	_fleet
      2  783f				  -	      IF	!FPUSH
      3  783f				  -	      pha
      4  783f					      ENDIF
  12042  783f
  12043  783f				   FPULL      SET	1
  12044  783f				   FPUSH      SET	0
      0  783f					      bat
      1  783f				  -	      IF	!FPULL
      2  783f				  -	      pla
      3  783f					      ENDIF
      4  783f		       aa		      tax
      5  7840		       68		      pla
      6  7841		       85 46		      sta	RB
      7  7843		       68		      pla
      8  7844		       85 45		      sta	RA
      9  7846		       8a		      txa
     10  7847		       20 6d 0a 	      jsr	STDLIB_OUTPUT_BYTE
  12046  784a		       4c aa 78 	      jmp	_EI_3
  12047  784d
  12048  784d
  12049  784d
  12050  784d
  12051  784d
  12052  784d
  12053  784d
  12054  784d				   _EL_3
  12055  784d				   FPULL      SET	0
      0  784d					      pbyte	#3
      1  784d		       a9 03		      lda	#3
      2  784f					      IF	!FPUSH
      3  784f		       48		      pha
      4  7850					      ENDIF
      0  7850					      btow
      1  7850		       a9 00		      lda	#$00
      2  7852		       48		      pha
  12058  7852				   FPUSH      SET	1
      0  7853					      pword	#40
      1  7853				  -	      IF	!FPUSH
      2  7853				  -	      lda	#<#40
      3  7853				  -	      pha
      4  7853				  -	      lda	#>#40
      5  7853				  -	      pha
      6  7853					      ELSE
      7  7853		       a9 28		      lda	#<#40
      8  7855		       a0 00		      ldy	#>#40
      9  7857					      ENDIF
  12060  7857				   FPULL      SET	1
  12061  7857				   FPUSH      SET	0
      0  7857					      mulw
      1  7857				  -	      IF	!FPULL
      2  7857				  -	      pla
      3  7857				  -	      sta	R1
      4  7857				  -	      pla
      5  7857				  -	      sta	R0
      6  7857					      ELSE
      7  7857		       85 fb		      sta	R0
      8  7859		       84 fc		      sty	R1
      9  785b					      ENDIF
     10  785b		       68		      pla
     11  785c		       85 fe		      sta	R3
     12  785e		       68		      pla
     13  785f		       85 fd		      sta	R2
     14  7861		       20 0d 08 	      jsr	NUCL_SMUL16
     15  7864					      IF	!FPUSH
     16  7864		       a5 fb		      lda	R0
     17  7866		       48		      pha
     18  7867		       a5 fc		      lda	R1
     19  7869		       48		      pha
     20  786a				  -	      ELSE
     21  786a				  -	      lda	R0
     22  786a				  -	      ldy	R1
     23  786a					      ENDIF
  12063  786a				   FPULL      SET	0
      0  786a					      pbyte	#30
      1  786a		       a9 1e		      lda	#30
      2  786c					      IF	!FPUSH
      3  786c		       48		      pha
      4  786d					      ENDIF
      0  786d					      btow
      1  786d		       a9 00		      lda	#$00
      2  786f		       48		      pha
      0  7870					      addw
      1  7870		       ba		      tsx
      2  7871		       bd 02 01 	      lda.wx	stack+2
      3  7874		       18		      clc
      4  7875		       7d 04 01 	      adc.wx	stack+4
      5  7878		       9d 04 01 	      sta.wx	stack+4
      6  787b		       68		      pla
      7  787c		       7d 03 01 	      adc.wx	stack+3
      8  787f		       9d 03 01 	      sta.wx	stack+3
      9  7882		       68		      pla
      0  7883					      pword	#1024
      1  7883					      IF	!FPUSH
      2  7883		       a9 00		      lda	#<#1024
      3  7885		       48		      pha
      4  7886		       a9 04		      lda	#>#1024
      5  7888		       48		      pha
      6  7889				  -	      ELSE
      7  7889				  -	      lda	#<#1024
      8  7889				  -	      ldy	#>#1024
      9  7889					      ENDIF
      0  7889					      addw
      1  7889		       ba		      tsx
      2  788a		       bd 02 01 	      lda.wx	stack+2
      3  788d		       18		      clc
      4  788e		       7d 04 01 	      adc.wx	stack+4
      5  7891		       9d 04 01 	      sta.wx	stack+4
      6  7894		       68		      pla
      7  7895		       7d 03 01 	      adc.wx	stack+3
      8  7898		       9d 03 01 	      sta.wx	stack+3
      9  789b		       68		      pla
  12069  789b				   FPUSH      SET	1
      0  789c					      pbvar	_fleet
      0  789c					      pbyte	_fleet
      1  789c		       ad 37 b6 	      lda	_fleet
      2  789f				  -	      IF	!FPUSH
      3  789f				  -	      pha
      4  789f					      ENDIF
  12071  789f
  12072  789f				   FPULL      SET	1
  12073  789f				   FPUSH      SET	0
      0  789f					      bat
      1  789f				  -	      IF	!FPULL
      2  789f				  -	      pla
      3  789f					      ENDIF
      4  789f		       aa		      tax
      5  78a0		       68		      pla
      6  78a1		       85 46		      sta	RB
      7  78a3		       68		      pla
      8  78a4		       85 45		      sta	RA
      9  78a6		       8a		      txa
     10  78a7		       20 6d 0a 	      jsr	STDLIB_OUTPUT_BYTE
  12075  78aa
  12076  78aa
  12077  78aa
  12078  78aa
  12079  78aa
  12080  78aa
  12081  78aa
  12082  78aa				   _EI_3
      0  78aa					      pbyte_pbyte_cmpblt_cond	_ufo_count, #10, _EI_4, _EL_4
      1  78aa
      2  78aa
      3  78aa		       ad 39 b6 	      lda	_ufo_count
      4  78ad		       c9 0a		      cmp	#10
      5  78af		       90 03		      bcc	*+5
      6  78b1					      IFCONST	_EL_4
      7  78b1		       4c 19 79 	      jmp	_EL_4
      8  78b4				  -	      ELSE
      9  78b4				  -	      jmp	_EI_4
     10  78b4					      ENDIF
  12084  78b4				   FPULL      SET	0
  12085  78b4				   FPUSH      SET	1
      0  78b4					      pbyte	#48
      1  78b4		       a9 30		      lda	#48
      2  78b6				  -	      IF	!FPUSH
      3  78b6				  -	      pha
      4  78b6					      ENDIF
  12087  78b6				   FPULL      SET	1
  12088  78b6				   FPUSH      SET	0
      0  78b6					      pokeb_const_addr	#1179
      1  78b6
      2  78b6
      3  78b6
      4  78b6		       04 9b	   .ad	      EQU	#1179
      5  78b6				  -	      IF	!FPULL
      6  78b6				  -	      pla
      7  78b6					      ENDIF
      8  78b6		       8d 9b 04 	      sta	.ad
  12090  78b6				   FPULL      SET	0
      0  78b9					      pbyte	#3
      1  78b9		       a9 03		      lda	#3
      2  78bb					      IF	!FPUSH
      3  78bb		       48		      pha
      4  78bc					      ENDIF
      0  78bc					      btow
      1  78bc		       a9 00		      lda	#$00
      2  78be		       48		      pha
  12093  78be				   FPUSH      SET	1
      0  78bf					      pword	#40
      1  78bf				  -	      IF	!FPUSH
      2  78bf				  -	      lda	#<#40
      3  78bf				  -	      pha
      4  78bf				  -	      lda	#>#40
      5  78bf				  -	      pha
      6  78bf					      ELSE
      7  78bf		       a9 28		      lda	#<#40
      8  78c1		       a0 00		      ldy	#>#40
      9  78c3					      ENDIF
  12095  78c3				   FPULL      SET	1
  12096  78c3				   FPUSH      SET	0
      0  78c3					      mulw
      1  78c3				  -	      IF	!FPULL
      2  78c3				  -	      pla
      3  78c3				  -	      sta	R1
      4  78c3				  -	      pla
      5  78c3				  -	      sta	R0
      6  78c3					      ELSE
      7  78c3		       85 fb		      sta	R0
      8  78c5		       84 fc		      sty	R1
      9  78c7					      ENDIF
     10  78c7		       68		      pla
     11  78c8		       85 fe		      sta	R3
     12  78ca		       68		      pla
     13  78cb		       85 fd		      sta	R2
     14  78cd		       20 0d 08 	      jsr	NUCL_SMUL16
     15  78d0					      IF	!FPUSH
     16  78d0		       a5 fb		      lda	R0
     17  78d2		       48		      pha
     18  78d3		       a5 fc		      lda	R1
     19  78d5		       48		      pha
     20  78d6				  -	      ELSE
     21  78d6				  -	      lda	R0
     22  78d6				  -	      ldy	R1
     23  78d6					      ENDIF
  12098  78d6				   FPULL      SET	0
      0  78d6					      pbyte	#35
      1  78d6		       a9 23		      lda	#35
      2  78d8					      IF	!FPUSH
      3  78d8		       48		      pha
      4  78d9					      ENDIF
      0  78d9					      btow
      1  78d9		       a9 00		      lda	#$00
      2  78db		       48		      pha
      0  78dc					      addw
      1  78dc		       ba		      tsx
      2  78dd		       bd 02 01 	      lda.wx	stack+2
      3  78e0		       18		      clc
      4  78e1		       7d 04 01 	      adc.wx	stack+4
      5  78e4		       9d 04 01 	      sta.wx	stack+4
      6  78e7		       68		      pla
      7  78e8		       7d 03 01 	      adc.wx	stack+3
      8  78eb		       9d 03 01 	      sta.wx	stack+3
      9  78ee		       68		      pla
      0  78ef					      pword	#1024
      1  78ef					      IF	!FPUSH
      2  78ef		       a9 00		      lda	#<#1024
      3  78f1		       48		      pha
      4  78f2		       a9 04		      lda	#>#1024
      5  78f4		       48		      pha
      6  78f5				  -	      ELSE
      7  78f5				  -	      lda	#<#1024
      8  78f5				  -	      ldy	#>#1024
      9  78f5					      ENDIF
      0  78f5					      addw
      1  78f5		       ba		      tsx
      2  78f6		       bd 02 01 	      lda.wx	stack+2
      3  78f9		       18		      clc
      4  78fa		       7d 04 01 	      adc.wx	stack+4
      5  78fd		       9d 04 01 	      sta.wx	stack+4
      6  7900		       68		      pla
      7  7901		       7d 03 01 	      adc.wx	stack+3
      8  7904		       9d 03 01 	      sta.wx	stack+3
      9  7907		       68		      pla
  12104  7907				   FPUSH      SET	1
      0  7908					      pbvar	_ufo_count
      0  7908					      pbyte	_ufo_count
      1  7908		       ad 39 b6 	      lda	_ufo_count
      2  790b				  -	      IF	!FPUSH
      3  790b				  -	      pha
      4  790b					      ENDIF
  12106  790b
  12107  790b				   FPULL      SET	1
  12108  790b				   FPUSH      SET	0
      0  790b					      bat
      1  790b				  -	      IF	!FPULL
      2  790b				  -	      pla
      3  790b					      ENDIF
      4  790b		       aa		      tax
      5  790c		       68		      pla
      6  790d		       85 46		      sta	RB
      7  790f		       68		      pla
      8  7910		       85 45		      sta	RA
      9  7912		       8a		      txa
     10  7913		       20 6d 0a 	      jsr	STDLIB_OUTPUT_BYTE
  12110  7916		       4c 76 79 	      jmp	_EI_4
  12111  7919
  12112  7919
  12113  7919
  12114  7919
  12115  7919
  12116  7919
  12117  7919
  12118  7919				   _EL_4
  12119  7919				   FPULL      SET	0
      0  7919					      pbyte	#3
      1  7919		       a9 03		      lda	#3
      2  791b					      IF	!FPUSH
      3  791b		       48		      pha
      4  791c					      ENDIF
      0  791c					      btow
      1  791c		       a9 00		      lda	#$00
      2  791e		       48		      pha
  12122  791e				   FPUSH      SET	1
      0  791f					      pword	#40
      1  791f				  -	      IF	!FPUSH
      2  791f				  -	      lda	#<#40
      3  791f				  -	      pha
      4  791f				  -	      lda	#>#40
      5  791f				  -	      pha
      6  791f					      ELSE
      7  791f		       a9 28		      lda	#<#40
      8  7921		       a0 00		      ldy	#>#40
      9  7923					      ENDIF
  12124  7923				   FPULL      SET	1
  12125  7923				   FPUSH      SET	0
      0  7923					      mulw
      1  7923				  -	      IF	!FPULL
      2  7923				  -	      pla
      3  7923				  -	      sta	R1
      4  7923				  -	      pla
      5  7923				  -	      sta	R0
      6  7923					      ELSE
      7  7923		       85 fb		      sta	R0
      8  7925		       84 fc		      sty	R1
      9  7927					      ENDIF
     10  7927		       68		      pla
     11  7928		       85 fe		      sta	R3
     12  792a		       68		      pla
     13  792b		       85 fd		      sta	R2
     14  792d		       20 0d 08 	      jsr	NUCL_SMUL16
     15  7930					      IF	!FPUSH
     16  7930		       a5 fb		      lda	R0
     17  7932		       48		      pha
     18  7933		       a5 fc		      lda	R1
     19  7935		       48		      pha
     20  7936				  -	      ELSE
     21  7936				  -	      lda	R0
     22  7936				  -	      ldy	R1
     23  7936					      ENDIF
  12127  7936				   FPULL      SET	0
      0  7936					      pbyte	#34
      1  7936		       a9 22		      lda	#34
      2  7938					      IF	!FPUSH
      3  7938		       48		      pha
      4  7939					      ENDIF
      0  7939					      btow
      1  7939		       a9 00		      lda	#$00
      2  793b		       48		      pha
      0  793c					      addw
      1  793c		       ba		      tsx
      2  793d		       bd 02 01 	      lda.wx	stack+2
      3  7940		       18		      clc
      4  7941		       7d 04 01 	      adc.wx	stack+4
      5  7944		       9d 04 01 	      sta.wx	stack+4
      6  7947		       68		      pla
      7  7948		       7d 03 01 	      adc.wx	stack+3
      8  794b		       9d 03 01 	      sta.wx	stack+3
      9  794e		       68		      pla
      0  794f					      pword	#1024
      1  794f					      IF	!FPUSH
      2  794f		       a9 00		      lda	#<#1024
      3  7951		       48		      pha
      4  7952		       a9 04		      lda	#>#1024
      5  7954		       48		      pha
      6  7955				  -	      ELSE
      7  7955				  -	      lda	#<#1024
      8  7955				  -	      ldy	#>#1024
      9  7955					      ENDIF
      0  7955					      addw
      1  7955		       ba		      tsx
      2  7956		       bd 02 01 	      lda.wx	stack+2
      3  7959		       18		      clc
      4  795a		       7d 04 01 	      adc.wx	stack+4
      5  795d		       9d 04 01 	      sta.wx	stack+4
      6  7960		       68		      pla
      7  7961		       7d 03 01 	      adc.wx	stack+3
      8  7964		       9d 03 01 	      sta.wx	stack+3
      9  7967		       68		      pla
  12133  7967				   FPUSH      SET	1
      0  7968					      pbvar	_ufo_count
      0  7968					      pbyte	_ufo_count
      1  7968		       ad 39 b6 	      lda	_ufo_count
      2  796b				  -	      IF	!FPUSH
      3  796b				  -	      pha
      4  796b					      ENDIF
  12135  796b
  12136  796b				   FPULL      SET	1
  12137  796b				   FPUSH      SET	0
      0  796b					      bat
      1  796b				  -	      IF	!FPULL
      2  796b				  -	      pla
      3  796b					      ENDIF
      4  796b		       aa		      tax
      5  796c		       68		      pla
      6  796d		       85 46		      sta	RB
      7  796f		       68		      pla
      8  7970		       85 45		      sta	RA
      9  7972		       8a		      txa
     10  7973		       20 6d 0a 	      jsr	STDLIB_OUTPUT_BYTE
  12139  7976
  12140  7976
  12141  7976
  12142  7976
  12143  7976
  12144  7976
  12145  7976
  12146  7976				   _EI_4
  12147  7976				   FPULL      SET	0
      0  7976					      pwvar	_hiscore
      1  7976					      IF	!FPUSH
      2  7976		       ad 29 b5 	      lda	_hiscore
      3  7979		       48		      pha
      4  797a		       ad 2a b5 	      lda	_hiscore+1
      5  797d		       48		      pha
      6  797e				  -	      ELSE
      7  797e				  -	      lda	_hiscore
      8  797e				  -	      ldy	_hiscore+1
      9  797e					      ENDIF
      0  797e					      pwvar	_score
      1  797e					      IF	!FPUSH
      2  797e		       ad 27 b5 	      lda	_score
      3  7981		       48		      pha
      4  7982		       ad 28 b5 	      lda	_score+1
      5  7985		       48		      pha
      6  7986				  -	      ELSE
      7  7986				  -	      lda	_score
      8  7986				  -	      ldy	_score+1
      9  7986					      ENDIF
  12150  7986				   FPUSH      SET	1
      0  7986					      cmpwlt
      1  7986		       ba		      tsx
      2  7987		       bd 04 01 	      lda.wx	stack+4
      3  798a		       dd 02 01 	      cmp.wx	stack+2
      4  798d		       bd 03 01 	      lda.wx	stack+3
      5  7990		       fd 01 01 	      sbc.wx	stack+1
      6  7993		       10 0a		      bpl	.phf
      7  7995		       e8		      inx
      8  7996		       e8		      inx
      9  7997		       e8		      inx
     10  7998		       e8		      inx
     11  7999		       9a		      txs
      0  799a					      pone
      1  799a		       a9 01		      lda	#$01
      2  799c				  -	      IF	!FPUSH
      3  799c				  -	      pha
      4  799c					      ENDIF
     13  799c				  -	      IF	!FPUSH
     14  799c				  -	      jmp	*+11
     15  799c					      ELSE
     16  799c		       4c a6 79 	      jmp	*+10
     17  799f					      ENDIF
     18  799f		       e8	   .phf       inx
     19  79a0		       e8		      inx
     20  79a1		       e8		      inx
     21  79a2		       e8		      inx
     22  79a3		       9a		      txs
      0  79a4					      pzero
      1  79a4		       a9 00		      lda	#$00
      2  79a6				  -	      IF	!FPUSH
      3  79a6				  -	      pha
      4  79a6					      ENDIF
  12152  79a6				   FPULL      SET	1
  12153  79a6				   FPUSH      SET	0
      0  79a6					      cond_stmt	_EI_65537, _EL_65537
      1  79a6				  -	      IF	!FPULL
      2  79a6				  -	      pla
      3  79a6					      ENDIF
      4  79a6		       d0 03		      bne	*+5
      5  79a8				  -	      IFCONST	_EL_65537
      6  79a8				  -	      jmp	_EL_65537
      7  79a8					      ELSE
      8  79a8		       4c b7 79 	      jmp	_EI_65537
      9  79ab					      ENDIF
  12155  79ab				   FPULL      SET	0
  12156  79ab				   FPUSH      SET	1
      0  79ab					      pwvar	_score
      1  79ab				  -	      IF	!FPUSH
      2  79ab				  -	      lda	_score
      3  79ab				  -	      pha
      4  79ab				  -	      lda	_score+1
      5  79ab				  -	      pha
      6  79ab					      ELSE
      7  79ab		       ad 27 b5 	      lda	_score
      8  79ae		       ac 28 b5 	      ldy	_score+1
      9  79b1					      ENDIF
  12158  79b1				   FPULL      SET	1
  12159  79b1				   FPUSH      SET	0
      0  79b1					      plw2var	_hiscore
      1  79b1				  -	      IF	!FPULL
      2  79b1				  -	      pla
      3  79b1				  -	      sta	_hiscore+1
      4  79b1				  -	      pla
      5  79b1				  -	      sta	_hiscore
      6  79b1					      ELSE
      7  79b1		       8d 29 b5 	      sta	_hiscore
      8  79b4		       8c 2a b5 	      sty	_hiscore+1
      9  79b7					      ENDIF
  12161  79b7				   _EI_65537
  12162  79b7				   FPULL      SET	0
      0  79b7					      pbyte	#3
      1  79b7		       a9 03		      lda	#3
      2  79b9					      IF	!FPUSH
      3  79b9		       48		      pha
      4  79ba					      ENDIF
      0  79ba					      btow
      1  79ba		       a9 00		      lda	#$00
      2  79bc		       48		      pha
  12165  79bc				   FPUSH      SET	1
      0  79bd					      pword	#40
      1  79bd				  -	      IF	!FPUSH
      2  79bd				  -	      lda	#<#40
      3  79bd				  -	      pha
      4  79bd				  -	      lda	#>#40
      5  79bd				  -	      pha
      6  79bd					      ELSE
      7  79bd		       a9 28		      lda	#<#40
      8  79bf		       a0 00		      ldy	#>#40
      9  79c1					      ENDIF
  12167  79c1				   FPULL      SET	1
  12168  79c1				   FPUSH      SET	0
      0  79c1					      mulw
      1  79c1				  -	      IF	!FPULL
      2  79c1				  -	      pla
      3  79c1				  -	      sta	R1
      4  79c1				  -	      pla
      5  79c1				  -	      sta	R0
      6  79c1					      ELSE
      7  79c1		       85 fb		      sta	R0
      8  79c3		       84 fc		      sty	R1
      9  79c5					      ENDIF
     10  79c5		       68		      pla
     11  79c6		       85 fe		      sta	R3
     12  79c8		       68		      pla
     13  79c9		       85 fd		      sta	R2
     14  79cb		       20 0d 08 	      jsr	NUCL_SMUL16
     15  79ce					      IF	!FPUSH
     16  79ce		       a5 fb		      lda	R0
     17  79d0		       48		      pha
     18  79d1		       a5 fc		      lda	R1
     19  79d3		       48		      pha
     20  79d4				  -	      ELSE
     21  79d4				  -	      lda	R0
     22  79d4				  -	      ldy	R1
     23  79d4					      ENDIF
  12170  79d4				   FPULL      SET	0
      0  79d4					      pbyte	#2
      1  79d4		       a9 02		      lda	#2
      2  79d6					      IF	!FPUSH
      3  79d6		       48		      pha
      4  79d7					      ENDIF
      0  79d7					      btow
      1  79d7		       a9 00		      lda	#$00
      2  79d9		       48		      pha
      0  79da					      addw
      1  79da		       ba		      tsx
      2  79db		       bd 02 01 	      lda.wx	stack+2
      3  79de		       18		      clc
      4  79df		       7d 04 01 	      adc.wx	stack+4
      5  79e2		       9d 04 01 	      sta.wx	stack+4
      6  79e5		       68		      pla
      7  79e6		       7d 03 01 	      adc.wx	stack+3
      8  79e9		       9d 03 01 	      sta.wx	stack+3
      9  79ec		       68		      pla
      0  79ed					      pword	#1024
      1  79ed					      IF	!FPUSH
      2  79ed		       a9 00		      lda	#<#1024
      3  79ef		       48		      pha
      4  79f0		       a9 04		      lda	#>#1024
      5  79f2		       48		      pha
      6  79f3				  -	      ELSE
      7  79f3				  -	      lda	#<#1024
      8  79f3				  -	      ldy	#>#1024
      9  79f3					      ENDIF
      0  79f3					      addw
      1  79f3		       ba		      tsx
      2  79f4		       bd 02 01 	      lda.wx	stack+2
      3  79f7		       18		      clc
      4  79f8		       7d 04 01 	      adc.wx	stack+4
      5  79fb		       9d 04 01 	      sta.wx	stack+4
      6  79fe		       68		      pla
      7  79ff		       7d 03 01 	      adc.wx	stack+3
      8  7a02		       9d 03 01 	      sta.wx	stack+3
      9  7a05		       68		      pla
  12176  7a05				   FPUSH      SET	1
      0  7a06					      pwvar	_score
      1  7a06				  -	      IF	!FPUSH
      2  7a06				  -	      lda	_score
      3  7a06				  -	      pha
      4  7a06				  -	      lda	_score+1
      5  7a06				  -	      pha
      6  7a06					      ELSE
      7  7a06		       ad 27 b5 	      lda	_score
      8  7a09		       ac 28 b5 	      ldy	_score+1
      9  7a0c					      ENDIF
  12178  7a0c
  12179  7a0c				   FPULL      SET	1
  12180  7a0c				   FPUSH      SET	0
      0  7a0c					      wat
      1  7a0c				  -	      IF	!FPULL
      2  7a0c				  -	      pla
      3  7a0c				  -	      sta	R3
      4  7a0c				  -	      pla
      5  7a0c				  -	      sta	R2
      6  7a0c					      ELSE
      7  7a0c		       85 fd		      sta	R2
      8  7a0e		       84 fe		      sty	R3
      9  7a10					      ENDIF
     10  7a10		       68		      pla
     11  7a11		       85 46		      sta	RB
     12  7a13		       68		      pla
     13  7a14		       85 45		      sta	RA
     14  7a16		       20 1f 0a 	      jsr	STDLIB_OUTPUT_WORD
  12182  7a19
  12183  7a19
  12184  7a19
  12185  7a19
  12186  7a19
  12187  7a19
  12188  7a19
  12189  7a19				   _Lupdate_scoretable.print_hi
  12190  7a19				   FPULL      SET	0
      0  7a19					      pbyte	#3
      1  7a19		       a9 03		      lda	#3
      2  7a1b					      IF	!FPUSH
      3  7a1b		       48		      pha
      4  7a1c					      ENDIF
      0  7a1c					      btow
      1  7a1c		       a9 00		      lda	#$00
      2  7a1e		       48		      pha
  12193  7a1e				   FPUSH      SET	1
      0  7a1f					      pword	#40
      1  7a1f				  -	      IF	!FPUSH
      2  7a1f				  -	      lda	#<#40
      3  7a1f				  -	      pha
      4  7a1f				  -	      lda	#>#40
      5  7a1f				  -	      pha
      6  7a1f					      ELSE
      7  7a1f		       a9 28		      lda	#<#40
      8  7a21		       a0 00		      ldy	#>#40
      9  7a23					      ENDIF
  12195  7a23				   FPULL      SET	1
  12196  7a23				   FPUSH      SET	0
      0  7a23					      mulw
      1  7a23				  -	      IF	!FPULL
      2  7a23				  -	      pla
      3  7a23				  -	      sta	R1
      4  7a23				  -	      pla
      5  7a23				  -	      sta	R0
      6  7a23					      ELSE
      7  7a23		       85 fb		      sta	R0
      8  7a25		       84 fc		      sty	R1
      9  7a27					      ENDIF
     10  7a27		       68		      pla
     11  7a28		       85 fe		      sta	R3
     12  7a2a		       68		      pla
     13  7a2b		       85 fd		      sta	R2
     14  7a2d		       20 0d 08 	      jsr	NUCL_SMUL16
     15  7a30					      IF	!FPUSH
     16  7a30		       a5 fb		      lda	R0
     17  7a32		       48		      pha
     18  7a33		       a5 fc		      lda	R1
     19  7a35		       48		      pha
     20  7a36				  -	      ELSE
     21  7a36				  -	      lda	R0
     22  7a36				  -	      ldy	R1
     23  7a36					      ENDIF
  12198  7a36				   FPULL      SET	0
      0  7a36					      pbyte	#7
      1  7a36		       a9 07		      lda	#7
      2  7a38					      IF	!FPUSH
      3  7a38		       48		      pha
      4  7a39					      ENDIF
      0  7a39					      btow
      1  7a39		       a9 00		      lda	#$00
      2  7a3b		       48		      pha
      0  7a3c					      addw
      1  7a3c		       ba		      tsx
      2  7a3d		       bd 02 01 	      lda.wx	stack+2
      3  7a40		       18		      clc
      4  7a41		       7d 04 01 	      adc.wx	stack+4
      5  7a44		       9d 04 01 	      sta.wx	stack+4
      6  7a47		       68		      pla
      7  7a48		       7d 03 01 	      adc.wx	stack+3
      8  7a4b		       9d 03 01 	      sta.wx	stack+3
      9  7a4e		       68		      pla
      0  7a4f					      pword	#1024
      1  7a4f					      IF	!FPUSH
      2  7a4f		       a9 00		      lda	#<#1024
      3  7a51		       48		      pha
      4  7a52		       a9 04		      lda	#>#1024
      5  7a54		       48		      pha
      6  7a55				  -	      ELSE
      7  7a55				  -	      lda	#<#1024
      8  7a55				  -	      ldy	#>#1024
      9  7a55					      ENDIF
      0  7a55					      addw
      1  7a55		       ba		      tsx
      2  7a56		       bd 02 01 	      lda.wx	stack+2
      3  7a59		       18		      clc
      4  7a5a		       7d 04 01 	      adc.wx	stack+4
      5  7a5d		       9d 04 01 	      sta.wx	stack+4
      6  7a60		       68		      pla
      7  7a61		       7d 03 01 	      adc.wx	stack+3
      8  7a64		       9d 03 01 	      sta.wx	stack+3
      9  7a67		       68		      pla
  12204  7a67				   FPUSH      SET	1
      0  7a68					      pwvar	_hiscore
      1  7a68				  -	      IF	!FPUSH
      2  7a68				  -	      lda	_hiscore
      3  7a68				  -	      pha
      4  7a68				  -	      lda	_hiscore+1
      5  7a68				  -	      pha
      6  7a68					      ELSE
      7  7a68		       ad 29 b5 	      lda	_hiscore
      8  7a6b		       ac 2a b5 	      ldy	_hiscore+1
      9  7a6e					      ENDIF
  12206  7a6e
  12207  7a6e				   FPULL      SET	1
  12208  7a6e				   FPUSH      SET	0
      0  7a6e					      wat
      1  7a6e				  -	      IF	!FPULL
      2  7a6e				  -	      pla
      3  7a6e				  -	      sta	R3
      4  7a6e				  -	      pla
      5  7a6e				  -	      sta	R2
      6  7a6e					      ELSE
      7  7a6e		       85 fd		      sta	R2
      8  7a70		       84 fe		      sty	R3
      9  7a72					      ENDIF
     10  7a72		       68		      pla
     11  7a73		       85 46		      sta	RB
     12  7a75		       68		      pla
     13  7a76		       85 45		      sta	RA
     14  7a78		       20 1f 0a 	      jsr	STDLIB_OUTPUT_WORD
  12210  7a7b		       60		      rts
  12211  7a7c
  12212  7a7c
  12213  7a7c
  12214  7a7c
  12215  7a7c
  12216  7a7c
  12217  7a7c
  12218  7a7c				   _Pupdate_scoretable_end
  12219  7a7c
  12220  7a7c
  12221  7a7c
  12222  7a7c
  12223  7a7c
  12224  7a7c
  12225  7a7c
  12226  7a7c				   _Pupdate_sprites SUBROUTINE
  12227  7a7c				   FPULL      SET	0
      0  7a7c					      pword	#1500
      1  7a7c					      IF	!FPUSH
      2  7a7c		       a9 dc		      lda	#<#1500
      3  7a7e		       48		      pha
      4  7a7f		       a9 05		      lda	#>#1500
      5  7a81		       48		      pha
      6  7a82				  -	      ELSE
      7  7a82				  -	      lda	#<#1500
      8  7a82				  -	      ldy	#>#1500
      9  7a82					      ENDIF
      0  7a82					      pbvar	_speed
      0  7a82					      pbyte	_speed
      1  7a82		       ad 23 b5 	      lda	_speed
      2  7a85					      IF	!FPUSH
      3  7a85		       48		      pha
      4  7a86					      ENDIF
      0  7a86					      btow
      1  7a86		       a9 00		      lda	#$00
      2  7a88		       48		      pha
      0  7a89					      lshiftwc	3
      1  7a89		       ba		      tsx
      2  7a8a					      REPEAT	3
      3  7a8a		       1e 02 01 	      asl.wx	stack+2
      4  7a8d		       3e 01 01 	      rol.wx	stack+1
      2  7a8d					      REPEND
      3  7a90		       1e 02 01 	      asl.wx	stack+2
      4  7a93		       3e 01 01 	      rol.wx	stack+1
      2  7a93					      REPEND
      3  7a96		       1e 02 01 	      asl.wx	stack+2
      4  7a99		       3e 01 01 	      rol.wx	stack+1
      5  7a9c					      REPEND
      0  7a9c					      addw
      1  7a9c		       ba		      tsx
      2  7a9d		       bd 02 01 	      lda.wx	stack+2
      3  7aa0		       18		      clc
      4  7aa1		       7d 04 01 	      adc.wx	stack+4
      5  7aa4		       9d 04 01 	      sta.wx	stack+4
      6  7aa7		       68		      pla
      7  7aa8		       7d 03 01 	      adc.wx	stack+3
      8  7aab		       9d 03 01 	      sta.wx	stack+3
      9  7aae		       68		      pla
      0  7aaf					      plw2var	_update_sprites.freq
      1  7aaf					      IF	!FPULL
      2  7aaf		       68		      pla
      3  7ab0		       8d 44 b6 	      sta	_update_sprites.freq+1
      4  7ab3		       68		      pla
      5  7ab4		       8d 43 b6 	      sta	_update_sprites.freq
      6  7ab7				  -	      ELSE
      7  7ab7				  -	      sta	_update_sprites.freq
      8  7ab7				  -	      sty	_update_sprites.freq+1
      9  7ab7					      ENDIF
      0  7ab7					      pwvar	_update_sprites.freq
      1  7ab7					      IF	!FPUSH
      2  7ab7		       ad 43 b6 	      lda	_update_sprites.freq
      3  7aba		       48		      pha
      4  7abb		       ad 44 b6 	      lda	_update_sprites.freq+1
      5  7abe		       48		      pha
      6  7abf				  -	      ELSE
      7  7abf				  -	      lda	_update_sprites.freq
      8  7abf				  -	      ldy	_update_sprites.freq+1
      9  7abf					      ENDIF
  12235  7abf				   FPUSH      SET	1
      0  7abf					      pword	#54286
      1  7abf				  -	      IF	!FPUSH
      2  7abf				  -	      lda	#<#54286
      3  7abf				  -	      pha
      4  7abf				  -	      lda	#>#54286
      5  7abf				  -	      pha
      6  7abf					      ELSE
      7  7abf		       a9 0e		      lda	#<#54286
      8  7ac1		       a0 d4		      ldy	#>#54286
      9  7ac3					      ENDIF
  12237  7ac3				   FPULL      SET	1
  12238  7ac3				   FPUSH      SET	0
      0  7ac3					      doke
      1  7ac3				  -	      IF	!FPULL
      2  7ac3				  -	      pla
      3  7ac3				  -	      sta	R1
      4  7ac3				  -	      pla
      5  7ac3				  -	      sta	R0
      6  7ac3					      ELSE
      7  7ac3		       85 fb		      sta	R0
      8  7ac5		       84 fc		      sty	R1
      9  7ac7					      ENDIF
     10  7ac7		       a0 01		      ldy	#$01
     11  7ac9		       68		      pla
     12  7aca		       91 fb		      sta	(R0),y
     13  7acc		       68		      pla
     14  7acd		       88		      dey
     15  7ace		       91 fb		      sta	(R0),y
  12240  7ace				   FPULL      SET	0
  12241  7ace				   FPUSH      SET	1
      0  7ad0					      pbyte	#7
      1  7ad0		       a9 07		      lda	#7
      2  7ad2				  -	      IF	!FPUSH
      3  7ad2				  -	      pha
      4  7ad2					      ENDIF
  12243  7ad2				   FPULL      SET	1
  12244  7ad2				   FPUSH      SET	0
      0  7ad2					      plb2var	_spr_setposy.spr_no
      1  7ad2				  -	      IF	!FPULL
      2  7ad2				  -	      pla
      3  7ad2					      ENDIF
      4  7ad2		       8d fc b4 	      sta	_spr_setposy.spr_no
  12246  7ad2				   FPULL      SET	0
      0  7ad5					      pwvar	_aircraft_altitude
      1  7ad5					      IF	!FPUSH
      2  7ad5		       ad 2f b5 	      lda	_aircraft_altitude
      3  7ad8		       48		      pha
      4  7ad9		       ad 30 b5 	      lda	_aircraft_altitude+1
      5  7adc		       48		      pha
      6  7add				  -	      ELSE
      7  7add				  -	      lda	_aircraft_altitude
      8  7add				  -	      ldy	_aircraft_altitude+1
      9  7add					      ENDIF
      0  7add					      rshiftwc	2
      1  7add		       ba		      tsx
      2  7ade					      REPEAT	2
      3  7ade		       5e 01 01 	      lsr.wx	stack+1
      4  7ae1		       7e 02 01 	      ror.wx	stack+2
      2  7ae1					      REPEND
      3  7ae4		       5e 01 01 	      lsr.wx	stack+1
      4  7ae7		       7e 02 01 	      ror.wx	stack+2
      5  7aea					      REPEND
      0  7aea					      wtob
      1  7aea		       68		      pla
      0  7aeb					      plb2var	_spr_setposy.y
      1  7aeb					      IF	!FPULL
      2  7aeb		       68		      pla
      3  7aec					      ENDIF
      4  7aec		       8d fd b4 	      sta	_spr_setposy.y
  12251  7aef		       20 88 71 	      jsr	_Pspr_setposy
      0  7af2					      pbvar	_dir
      0  7af2					      pbyte	_dir
      1  7af2		       ad 24 b5 	      lda	_dir
      2  7af5					      IF	!FPUSH
      3  7af5		       48		      pha
      4  7af6					      ENDIF
  12253  7af6				   FPUSH      SET	1
      0  7af6					      pbarray_fast	_update_sprites.spr_loc_offsets
      1  7af6					      IF	!FPULL
      2  7af6		       68		      pla
      3  7af7					      ENDIF
      4  7af7		       aa		      tax
      5  7af8		       bd 00 a4 	      lda	_update_sprites.spr_loc_offsets,x
      6  7afb				  -	      IF	!FPUSH
      7  7afb				  -	      pha
      8  7afb					      ENDIF
  12255  7afb				   FPULL      SET	1
  12256  7afb				   FPUSH      SET	0
      0  7afb					      plb2var	_update_sprites.spr_loc_offset
      1  7afb				  -	      IF	!FPULL
      2  7afb				  -	      pla
      3  7afb					      ENDIF
      4  7afb		       8d 45 b6 	      sta	_update_sprites.spr_loc_offset
  12258  7afb				   FPULL      SET	0
  12259  7afb				   FPUSH      SET	1
      0  7afe					      pbyte_pbyte_cmpbeq	_turning, #0
      1  7afe
      2  7afe
      3  7afe
      4  7afe
      5  7afe
      6  7afe		       ad 2b b5 	      lda	_turning
      7  7b01		       c9 00		      cmp	#0
      8  7b03		       f0 05		      beq	.true
      0  7b05					      pzero
      1  7b05		       a9 00		      lda	#$00
      2  7b07				  -	      IF	!FPUSH
      3  7b07				  -	      pha
      4  7b07					      ENDIF
     10  7b07				  -	      IF	!FPUSH
     11  7b07				  -	      jmp	*+6
     12  7b07					      ELSE
     13  7b07		       4c 0c 7b 	      jmp	*+5
     14  7b0a					      ENDIF
     15  7b0a				   .true
      0  7b0a					      pone
      1  7b0a		       a9 01		      lda	#$01
      2  7b0c				  -	      IF	!FPUSH
      3  7b0c				  -	      pha
      4  7b0c					      ENDIF
  12261  7b0c				   FPULL      SET	1
  12262  7b0c				   FPUSH      SET	0
      0  7b0c					      cond_stmt	_EI_5, _EL_5
      1  7b0c				  -	      IF	!FPULL
      2  7b0c				  -	      pla
      3  7b0c					      ENDIF
      4  7b0c		       d0 03		      bne	*+5
      5  7b0e					      IFCONST	_EL_5
      6  7b0e		       4c 42 7b 	      jmp	_EL_5
      7  7b11				  -	      ELSE
      8  7b11				  -	      jmp	_EI_5
      9  7b11					      ENDIF
  12264  7b11				   FPULL      SET	0
  12265  7b11				   FPUSH      SET	1
      0  7b11					      pbyte_pbyte_cmpbeq	_aircraft_mode, #0
      1  7b11
      2  7b11
      3  7b11
      4  7b11
      5  7b11
      6  7b11		       ad 35 b6 	      lda	_aircraft_mode
      7  7b14		       c9 00		      cmp	#0
      8  7b16		       f0 05		      beq	.true
      0  7b18					      pzero
      1  7b18		       a9 00		      lda	#$00
      2  7b1a				  -	      IF	!FPUSH
      3  7b1a				  -	      pha
      4  7b1a					      ENDIF
     10  7b1a				  -	      IF	!FPUSH
     11  7b1a				  -	      jmp	*+6
     12  7b1a					      ELSE
     13  7b1a		       4c 1f 7b 	      jmp	*+5
     14  7b1d					      ENDIF
     15  7b1d				   .true
      0  7b1d					      pone
      1  7b1d		       a9 01		      lda	#$01
      2  7b1f				  -	      IF	!FPUSH
      3  7b1f				  -	      pha
      4  7b1f					      ENDIF
  12267  7b1f				   FPULL      SET	1
  12268  7b1f				   FPUSH      SET	0
      0  7b1f					      cond_stmt	_EI_65538, _EL_65538
      1  7b1f				  -	      IF	!FPULL
      2  7b1f				  -	      pla
      3  7b1f					      ENDIF
      4  7b1f		       d0 03		      bne	*+5
      5  7b21				  -	      IFCONST	_EL_65538
      6  7b21				  -	      jmp	_EL_65538
      7  7b21					      ELSE
      8  7b21		       4c 3f 7b 	      jmp	_EI_65538
      9  7b24					      ENDIF
  12270  7b24				   FPULL      SET	0
  12271  7b24				   FPUSH      SET	1
      0  7b24					      pbyte	#7
      1  7b24		       a9 07		      lda	#7
      2  7b26				  -	      IF	!FPUSH
      3  7b26				  -	      pha
      4  7b26					      ENDIF
  12273  7b26				   FPULL      SET	1
  12274  7b26				   FPUSH      SET	0
      0  7b26					      plb2var	_spr_setshape.spr_no
      1  7b26				  -	      IF	!FPULL
      2  7b26				  -	      pla
      3  7b26					      ENDIF
      4  7b26		       8d 05 b5 	      sta	_spr_setshape.spr_no
  12276  7b26				   FPULL      SET	0
      0  7b29					      opt_pbyte_pbyte_add	#168, _lifting
      1  7b29
      2  7b29
      3  7b29
      4  7b29
      5  7b29
      6  7b29		       a9 a8		      lda	#168
      7  7b2b		       18		      clc
      8  7b2c		       6d 2c b5 	      adc	_lifting
      9  7b2f					      IF	!FPUSH
     10  7b2f		       48		      pha
     11  7b30					      ENDIF
  12278  7b30				   FPUSH      SET	1
      0  7b30					      pbvar	_update_sprites.spr_loc_offset
      0  7b30					      pbyte	_update_sprites.spr_loc_offset
      1  7b30		       ad 45 b6 	      lda	_update_sprites.spr_loc_offset
      2  7b33				  -	      IF	!FPUSH
      3  7b33				  -	      pha
      4  7b33					      ENDIF
  12280  7b33				   FPULL      SET	1
      0  7b33					      addb
      1  7b33				  -	      IF	!FPULL
      2  7b33				  -	      pla
      3  7b33					      ENDIF
      4  7b33		       85 fb		      sta	R0
      5  7b35		       68		      pla
      6  7b36		       18		      clc
      7  7b37		       65 fb		      adc	R0
      8  7b39				  -	      IF	!FPUSH
      9  7b39				  -	      pha
     10  7b39					      ENDIF
  12282  7b39				   FPUSH      SET	0
      0  7b39					      plb2var	_spr_setshape.shape
      1  7b39				  -	      IF	!FPULL
      2  7b39				  -	      pla
      3  7b39					      ENDIF
      4  7b39		       8d 06 b5 	      sta	_spr_setshape.shape
  12284  7b3c		       20 e0 71 	      jsr	_Pspr_setshape
  12285  7b3f				   _EI_65538
  12286  7b3f		       4c cc 7b 	      jmp	_EI_5
  12287  7b42
  12288  7b42
  12289  7b42
  12290  7b42
  12291  7b42
  12292  7b42
  12293  7b42
  12294  7b42				   _EL_5
      0  7b42					      pbyte_pbyte_cmpbeq_cond	_turn_phase, #0, _EI_6, _EL_6
      1  7b42
      2  7b42
      3  7b42		       ad 2d b5 	      lda	_turn_phase
      4  7b45		       c9 00		      cmp	#0
      5  7b47		       f0 03		      beq	*+5
      6  7b49					      IFCONST	_EL_6
      7  7b49		       4c 5d 7b 	      jmp	_EL_6
      8  7b4c				  -	      ELSE
      9  7b4c				  -	      jmp	_EI_6
     10  7b4c					      ENDIF
  12296  7b4c				   FPULL      SET	0
  12297  7b4c				   FPUSH      SET	1
      0  7b4c					      opt_pbyte_pbyte_add	#171, _update_sprites.spr_loc_offset
      1  7b4c
      2  7b4c
      3  7b4c
      4  7b4c
      5  7b4c
      6  7b4c		       a9 ab		      lda	#171
      7  7b4e		       18		      clc
      8  7b4f		       6d 45 b6 	      adc	_update_sprites.spr_loc_offset
      9  7b52				  -	      IF	!FPUSH
     10  7b52				  -	      pha
     11  7b52					      ENDIF
  12299  7b52				   FPULL      SET	1
  12300  7b52				   FPUSH      SET	0
      0  7b52					      plb2var	_turn_phase
      1  7b52				  -	      IF	!FPULL
      2  7b52				  -	      pla
      3  7b52					      ENDIF
      4  7b52		       8d 2d b5 	      sta	_turn_phase
  12302  7b52				   FPULL      SET	0
  12303  7b52				   FPUSH      SET	1
      0  7b55					      pbyte	#0
      1  7b55		       a9 00		      lda	#0
      2  7b57				  -	      IF	!FPUSH
      3  7b57				  -	      pha
      4  7b57					      ENDIF
  12305  7b57				   FPULL      SET	1
  12306  7b57				   FPUSH      SET	0
      0  7b57					      plb2var	_update_sprites.turn_count
      1  7b57				  -	      IF	!FPULL
      2  7b57				  -	      pla
      3  7b57					      ENDIF
      4  7b57		       8d 46 b6 	      sta	_update_sprites.turn_count
  12308  7b5a		       4c cc 7b 	      jmp	_EI_6
  12309  7b5d				   _EL_6
  12310  7b5d				   FPULL      SET	0
      0  7b5d					      opt_pbyte_pbyte_and	_frame_count, #1
      1  7b5d
      2  7b5d
      3  7b5d
      4  7b5d
      5  7b5d
      6  7b5d		       ad 25 b5 	      lda	_frame_count
      7  7b60		       29 01		      and	#1
      8  7b62					      IF	!FPUSH
      9  7b62		       48		      pha
     10  7b63					      ENDIF
  12312  7b63				   FPUSH      SET	1
      0  7b63					      pbyte	#0
      1  7b63		       a9 00		      lda	#0
      2  7b65				  -	      IF	!FPUSH
      3  7b65				  -	      pha
      4  7b65					      ENDIF
  12314  7b65				   FPULL      SET	1
      0  7b65					      cmpbeq
      1  7b65				  -	      IF	!FPULL
      2  7b65				  -	      pla
      3  7b65					      ENDIF
      4  7b65		       85 fc		      sta	R1
      5  7b67		       68		      pla
      6  7b68		       c5 fc		      cmp	R1
      7  7b6a		       f0 05		      beq	.pht
      0  7b6c					      pzero
      1  7b6c		       a9 00		      lda	#$00
      2  7b6e				  -	      IF	!FPUSH
      3  7b6e				  -	      pha
      4  7b6e					      ENDIF
      9  7b6e				  -	      IF	!FPUSH
     10  7b6e				  -	      jmp	*+6
     11  7b6e					      ELSE
     12  7b6e		       4c 73 7b 	      jmp	*+5
     13  7b71					      ENDIF
      0  7b71				   .pht       pone
      1  7b71		       a9 01		      lda	#$01
      2  7b73				  -	      IF	!FPUSH
      3  7b73				  -	      pha
      4  7b73					      ENDIF
  12316  7b73				   FPUSH      SET	0
      0  7b73					      cond_stmt	_EI_7, _EL_7
      1  7b73				  -	      IF	!FPULL
      2  7b73				  -	      pla
      3  7b73					      ENDIF
      4  7b73		       d0 03		      bne	*+5
      5  7b75				  -	      IFCONST	_EL_7
      6  7b75				  -	      jmp	_EL_7
      7  7b75					      ELSE
      8  7b75		       4c cc 7b 	      jmp	_EI_7
      9  7b78					      ENDIF
      0  7b78					      incb	_turn_phase
      1  7b78		       ee 2d b5 	      inc	_turn_phase
      0  7b7b					      incb	_update_sprites.turn_count
      1  7b7b		       ee 46 b6 	      inc	_update_sprites.turn_count
      0  7b7e					      incw	_aircraft_altitude
      1  7b7e		       ee 2f b5 	      inc	_aircraft_altitude
      2  7b81		       d0 03		      bne	.skip
      3  7b83		       ee 30 b5 	      inc	_aircraft_altitude+1
      4  7b86				   .skip
      0  7b86					      incw	_aircraft_altitude
      1  7b86		       ee 2f b5 	      inc	_aircraft_altitude
      2  7b89		       d0 03		      bne	.skip
      3  7b8b		       ee 30 b5 	      inc	_aircraft_altitude+1
      4  7b8e				   .skip
  12322  7b8e				   FPULL      SET	0
  12323  7b8e				   FPUSH      SET	1
      0  7b8e					      pbyte	#7
      1  7b8e		       a9 07		      lda	#7
      2  7b90				  -	      IF	!FPUSH
      3  7b90				  -	      pha
      4  7b90					      ENDIF
  12325  7b90				   FPULL      SET	1
  12326  7b90				   FPUSH      SET	0
      0  7b90					      plb2var	_spr_setshape.spr_no
      1  7b90				  -	      IF	!FPULL
      2  7b90				  -	      pla
      3  7b90					      ENDIF
      4  7b90		       8d 05 b5 	      sta	_spr_setshape.spr_no
  12328  7b90				   FPULL      SET	0
  12329  7b90				   FPUSH      SET	1
      0  7b93					      pbvar	_turn_phase
      0  7b93					      pbyte	_turn_phase
      1  7b93		       ad 2d b5 	      lda	_turn_phase
      2  7b96				  -	      IF	!FPUSH
      3  7b96				  -	      pha
      4  7b96					      ENDIF
  12331  7b96				   FPULL      SET	1
  12332  7b96				   FPUSH      SET	0
      0  7b96					      plb2var	_spr_setshape.shape
      1  7b96				  -	      IF	!FPULL
      2  7b96				  -	      pla
      3  7b96					      ENDIF
      4  7b96		       8d 06 b5 	      sta	_spr_setshape.shape
  12334  7b99		       20 e0 71 	      jsr	_Pspr_setshape
  12335  7b99				   FPULL      SET	0
  12336  7b99				   FPUSH      SET	1
      0  7b9c					      opt_pbyte_pbarray_fast	_update_sprites.turn_count, _update_sprites.turn_speed
      1  7b9c
      2  7b9c
      3  7b9c
      4  7b9c		       ae 46 b6 	      ldx	_update_sprites.turn_count
      5  7b9f		       bd 02 a4 	      lda	_update_sprites.turn_speed,x
      6  7ba2				  -	      IF	!FPUSH
      7  7ba2				  -	      pha
      8  7ba2					      ENDIF
  12338  7ba2				   FPULL      SET	1
  12339  7ba2				   FPUSH      SET	0
      0  7ba2					      plb2var	_speed
      1  7ba2				  -	      IF	!FPULL
      2  7ba2				  -	      pla
      3  7ba2					      ENDIF
      4  7ba2		       8d 23 b5 	      sta	_speed
      0  7ba5					      pbyte_pbyte_cmpbeq_cond	_update_sprites.turn_count, #11, _EI_65539, _EL_65539
      1  7ba5
      2  7ba5
      3  7ba5		       ad 46 b6 	      lda	_update_sprites.turn_count
      4  7ba8		       c9 0b		      cmp	#11
      5  7baa		       f0 03		      beq	*+5
      6  7bac				  -	      IFCONST	_EL_65539
      7  7bac				  -	      jmp	_EL_65539
      8  7bac					      ELSE
      9  7bac		       4c b8 7b 	      jmp	_EI_65539
     10  7baf					      ENDIF
  12342  7baf				   FPULL      SET	0
  12343  7baf				   FPUSH      SET	1
      0  7baf					      opt_pbyte_pbarray_fast	_dir, _update_sprites.switchdir
      1  7baf
      2  7baf
      3  7baf
      4  7baf		       ae 24 b5 	      ldx	_dir
      5  7bb2		       bd 17 a4 	      lda	_update_sprites.switchdir,x
      6  7bb5				  -	      IF	!FPUSH
      7  7bb5				  -	      pha
      8  7bb5					      ENDIF
  12345  7bb5				   FPULL      SET	1
  12346  7bb5				   FPUSH      SET	0
      0  7bb5					      plb2var	_dir
      1  7bb5				  -	      IF	!FPULL
      2  7bb5				  -	      pla
      3  7bb5					      ENDIF
      4  7bb5		       8d 24 b5 	      sta	_dir
  12348  7bb8
  12349  7bb8
  12350  7bb8
  12351  7bb8
  12352  7bb8
  12353  7bb8
  12354  7bb8				   _EI_65539
      0  7bb8					      pbyte_pbyte_cmpbeq_cond	_update_sprites.turn_count, #20, _EI_8, _EL_8
      1  7bb8
      2  7bb8
      3  7bb8		       ad 46 b6 	      lda	_update_sprites.turn_count
      4  7bbb		       c9 14		      cmp	#20
      5  7bbd		       f0 03		      beq	*+5
      6  7bbf				  -	      IFCONST	_EL_8
      7  7bbf				  -	      jmp	_EL_8
      8  7bbf					      ELSE
      9  7bbf		       4c cc 7b 	      jmp	_EI_8
     10  7bc2					      ENDIF
  12356  7bc2				   FPULL      SET	0
  12357  7bc2				   FPUSH      SET	1
      0  7bc2					      pbyte	#0
      1  7bc2		       a9 00		      lda	#0
      2  7bc4				  -	      IF	!FPUSH
      3  7bc4				  -	      pha
      4  7bc4					      ENDIF
  12359  7bc4				   FPULL      SET	1
  12360  7bc4				   FPUSH      SET	0
      0  7bc4					      plb2var	_turn_phase
      1  7bc4				  -	      IF	!FPULL
      2  7bc4				  -	      pla
      3  7bc4					      ENDIF
      4  7bc4		       8d 2d b5 	      sta	_turn_phase
  12362  7bc4				   FPULL      SET	0
  12363  7bc4				   FPUSH      SET	1
      0  7bc7					      pbyte	#0
      1  7bc7		       a9 00		      lda	#0
      2  7bc9				  -	      IF	!FPUSH
      3  7bc9				  -	      pha
      4  7bc9					      ENDIF
  12365  7bc9				   FPULL      SET	1
  12366  7bc9				   FPUSH      SET	0
      0  7bc9					      plb2var	_turning
      1  7bc9				  -	      IF	!FPULL
      2  7bc9				  -	      pla
      3  7bc9					      ENDIF
      4  7bc9		       8d 2b b5 	      sta	_turning
  12368  7bcc				   _EI_8
  12369  7bcc
  12370  7bcc
  12371  7bcc
  12372  7bcc
  12373  7bcc
  12374  7bcc
  12375  7bcc
  12376  7bcc				   _EI_7
  12377  7bcc
  12378  7bcc
  12379  7bcc
  12380  7bcc
  12381  7bcc
  12382  7bcc
  12383  7bcc
  12384  7bcc				   _EI_6
  12385  7bcc
  12386  7bcc
  12387  7bcc
  12388  7bcc
  12389  7bcc
  12390  7bcc
  12391  7bcc
  12392  7bcc				   _EI_5
      0  7bcc					      pbyte_pbyte_cmpbeq_cond	_bullet_on, #1, _EI_9, _EL_9
      1  7bcc
      2  7bcc
      3  7bcc		       ad 29 b6 	      lda	_bullet_on
      4  7bcf		       c9 01		      cmp	#1
      5  7bd1		       f0 03		      beq	*+5
      6  7bd3				  -	      IFCONST	_EL_9
      7  7bd3				  -	      jmp	_EL_9
      8  7bd3					      ELSE
      9  7bd3		       4c fe 7d 	      jmp	_EI_9
     10  7bd6					      ENDIF
  12394  7bd6				   FPULL      SET	0
  12395  7bd6				   FPUSH      SET	1
      0  7bd6					      pbyte	#6
      1  7bd6		       a9 06		      lda	#6
      2  7bd8				  -	      IF	!FPUSH
      3  7bd8				  -	      pha
      4  7bd8					      ENDIF
  12397  7bd8				   FPULL      SET	1
  12398  7bd8				   FPUSH      SET	0
      0  7bd8					      plb2var	_spr_setpos.spr_no
      1  7bd8				  -	      IF	!FPULL
      2  7bd8				  -	      pla
      3  7bd8					      ENDIF
      4  7bd8		       8d 01 b5 	      sta	_spr_setpos.spr_no
  12400  7bd8				   FPULL      SET	0
  12401  7bd8				   FPUSH      SET	1
      0  7bdb					      pwvar	_bullet_xpos
      1  7bdb				  -	      IF	!FPUSH
      2  7bdb				  -	      lda	_bullet_xpos
      3  7bdb				  -	      pha
      4  7bdb				  -	      lda	_bullet_xpos+1
      5  7bdb				  -	      pha
      6  7bdb					      ELSE
      7  7bdb		       ad 2a b6 	      lda	_bullet_xpos
      8  7bde		       ac 2b b6 	      ldy	_bullet_xpos+1
      9  7be1					      ENDIF
  12403  7be1				   FPULL      SET	1
  12404  7be1				   FPUSH      SET	0
      0  7be1					      plw2var	_spr_setpos.x
      1  7be1				  -	      IF	!FPULL
      2  7be1				  -	      pla
      3  7be1				  -	      sta	_spr_setpos.x+1
      4  7be1				  -	      pla
      5  7be1				  -	      sta	_spr_setpos.x
      6  7be1					      ELSE
      7  7be1		       8d 02 b5 	      sta	_spr_setpos.x
      8  7be4		       8c 03 b5 	      sty	_spr_setpos.x+1
      9  7be7					      ENDIF
  12406  7be7				   FPULL      SET	0
  12407  7be7				   FPUSH      SET	1
      0  7be7					      pbvar	_bullet_ypos
      0  7be7					      pbyte	_bullet_ypos
      1  7be7		       ad 2c b6 	      lda	_bullet_ypos
      2  7bea				  -	      IF	!FPUSH
      3  7bea				  -	      pha
      4  7bea					      ENDIF
  12409  7bea				   FPULL      SET	1
  12410  7bea				   FPUSH      SET	0
      0  7bea					      plb2var	_spr_setpos.y
      1  7bea				  -	      IF	!FPULL
      2  7bea				  -	      pla
      3  7bea					      ENDIF
      4  7bea		       8d 04 b5 	      sta	_spr_setpos.y
  12412  7bed		       20 bb 71 	      jsr	_Pspr_setpos
  12413  7bed				   FPULL      SET	0
      0  7bf0					      pbvar	_bullet_dir
      0  7bf0					      pbyte	_bullet_dir
      1  7bf0		       ad 34 b6 	      lda	_bullet_dir
      2  7bf3					      IF	!FPUSH
      3  7bf3		       48		      pha
      4  7bf4					      ENDIF
      0  7bf4					      btow
      1  7bf4		       a9 00		      lda	#$00
      2  7bf6		       48		      pha
      0  7bf7					      dblw
      1  7bf7		       ba		      tsx
      2  7bf8		       1e 02 01 	      asl.wx	stack+2
      3  7bfb		       3e 01 01 	      rol.wx	stack+1
  12417  7bfb				   FPUSH      SET	1
      0  7bfe					      pwarray	_update_sprites.bullet_dx
      1  7bfe					      IF	!FPULL
      2  7bfe		       68		      pla
      3  7bff		       85 fc		      sta	R1
      4  7c01		       68		      pla
      5  7c02		       85 fb		      sta	R0
      6  7c04				  -	      ELSE
      7  7c04				  -	      sta	R0
      8  7c04				  -	      sty	R1
      9  7c04					      ENDIF
     10  7c04		       a9 1d		      lda	#<_update_sprites.bullet_dx
     11  7c06		       18		      clc
     12  7c07		       65 fb		      adc	R0
     13  7c09		       85 fb		      sta	R0
     14  7c0b		       a9 a4		      lda	#>_update_sprites.bullet_dx
     15  7c0d		       65 fc		      adc	R1
     16  7c0f		       85 fc		      sta	R1
     17  7c11				  -	      IF	!FPUSH
     18  7c11				  -	      ldy	#$00
     19  7c11				  -	      lda	(R0),y
     20  7c11				  -	      pha
     21  7c11				  -	      iny
     22  7c11				  -	      lda	(R0),y
     23  7c11				  -	      pha
     24  7c11					      ELSE
     25  7c11		       a0 00		      ldy	#$00
     26  7c13		       b1 fb		      lda	(R0),y
     27  7c15		       aa		      tax
     28  7c16		       c8		      iny
     29  7c17		       b1 fb		      lda	(R0),y
     30  7c19		       a8		      tay
     31  7c1a		       8a		      txa
     32  7c1b					      ENDIF
  12419  7c1b				   FPULL      SET	1
  12420  7c1b				   FPUSH      SET	0
      0  7c1b					      plw2var	_update_sprites.curr_bullet_dx
      1  7c1b				  -	      IF	!FPULL
      2  7c1b				  -	      pla
      3  7c1b				  -	      sta	_update_sprites.curr_bullet_dx+1
      4  7c1b				  -	      pla
      5  7c1b				  -	      sta	_update_sprites.curr_bullet_dx
      6  7c1b					      ELSE
      7  7c1b		       8d 47 b6 	      sta	_update_sprites.curr_bullet_dx
      8  7c1e		       8c 48 b6 	      sty	_update_sprites.curr_bullet_dx+1
      9  7c21					      ENDIF
      0  7c21					      pbyte_pbyte_cmpbeq_cond	_bullet_dir, #1, _EI_10, _EL_10
      1  7c21
      2  7c21
      3  7c21		       ad 34 b6 	      lda	_bullet_dir
      4  7c24		       c9 01		      cmp	#1
      5  7c26		       f0 03		      beq	*+5
      6  7c28					      IFCONST	_EL_10
      7  7c28		       4c c7 7c 	      jmp	_EL_10
      8  7c2b				  -	      ELSE
      9  7c2b				  -	      jmp	_EI_10
     10  7c2b					      ENDIF
      0  7c2b					      pbyte_pbyte_cmpbeq_cond	_dir, #1, _EI_11, _EL_11
      1  7c2b
      2  7c2b
      3  7c2b		       ad 24 b5 	      lda	_dir
      4  7c2e		       c9 01		      cmp	#1
      5  7c30		       f0 03		      beq	*+5
      6  7c32					      IFCONST	_EL_11
      7  7c32		       4c 80 7c 	      jmp	_EL_11
      8  7c35				  -	      ELSE
      9  7c35				  -	      jmp	_EI_11
     10  7c35					      ENDIF
  12424  7c35				   FPULL      SET	0
      0  7c35					      pwvar	_bullet_xpos
      1  7c35					      IF	!FPUSH
      2  7c35		       ad 2a b6 	      lda	_bullet_xpos
      3  7c38		       48		      pha
      4  7c39		       ad 2b b6 	      lda	_bullet_xpos+1
      5  7c3c		       48		      pha
      6  7c3d				  -	      ELSE
      7  7c3d				  -	      lda	_bullet_xpos
      8  7c3d				  -	      ldy	_bullet_xpos+1
      9  7c3d					      ENDIF
      0  7c3d					      pbvar	_bullet_speed
      0  7c3d					      pbyte	_bullet_speed
      1  7c3d		       ad 2e b6 	      lda	_bullet_speed
      2  7c40					      IF	!FPUSH
      3  7c40		       48		      pha
      4  7c41					      ENDIF
      0  7c41					      btow
      1  7c41		       a9 00		      lda	#$00
      2  7c43		       48		      pha
      0  7c44					      addw
      1  7c44		       ba		      tsx
      2  7c45		       bd 02 01 	      lda.wx	stack+2
      3  7c48		       18		      clc
      4  7c49		       7d 04 01 	      adc.wx	stack+4
      5  7c4c		       9d 04 01 	      sta.wx	stack+4
      6  7c4f		       68		      pla
      7  7c50		       7d 03 01 	      adc.wx	stack+3
      8  7c53		       9d 03 01 	      sta.wx	stack+3
      9  7c56		       68		      pla
      0  7c57					      pbvar	_microspeed
      0  7c57					      pbyte	_microspeed
      1  7c57		       ad 3e b6 	      lda	_microspeed
      2  7c5a					      IF	!FPUSH
      3  7c5a		       48		      pha
      4  7c5b					      ENDIF
      0  7c5b					      btow
      1  7c5b		       a9 00		      lda	#$00
      2  7c5d		       48		      pha
      0  7c5e					      subw
      1  7c5e		       ba		      tsx
      2  7c5f		       bd 04 01 	      lda.wx	stack+4
      3  7c62		       38		      sec
      4  7c63		       fd 02 01 	      sbc.wx	stack+2
      5  7c66		       9d 04 01 	      sta.wx	stack+4
      6  7c69		       bd 03 01 	      lda.wx	stack+3
      7  7c6c		       fd 01 01 	      sbc.wx	stack+1
      8  7c6f		       9d 03 01 	      sta.wx	stack+3
      9  7c72		       e8		      inx
     10  7c73		       e8		      inx
     11  7c74		       9a		      txs
      0  7c75					      plw2var	_bullet_xpos
      1  7c75					      IF	!FPULL
      2  7c75		       68		      pla
      3  7c76		       8d 2b b6 	      sta	_bullet_xpos+1
      4  7c79		       68		      pla
      5  7c7a		       8d 2a b6 	      sta	_bullet_xpos
      6  7c7d				  -	      ELSE
      7  7c7d				  -	      sta	_bullet_xpos
      8  7c7d				  -	      sty	_bullet_xpos+1
      9  7c7d					      ENDIF
  12433  7c7d		       4c c4 7c 	      jmp	_EI_11
  12434  7c80				   _EL_11
      0  7c80					      pwvar	_bullet_xpos
      1  7c80					      IF	!FPUSH
      2  7c80		       ad 2a b6 	      lda	_bullet_xpos
      3  7c83		       48		      pha
      4  7c84		       ad 2b b6 	      lda	_bullet_xpos+1
      5  7c87		       48		      pha
      6  7c88				  -	      ELSE
      7  7c88				  -	      lda	_bullet_xpos
      8  7c88				  -	      ldy	_bullet_xpos+1
      9  7c88					      ENDIF
      0  7c88					      pbvar	_bullet_speed
      0  7c88					      pbyte	_bullet_speed
      1  7c88		       ad 2e b6 	      lda	_bullet_speed
      2  7c8b					      IF	!FPUSH
      3  7c8b		       48		      pha
      4  7c8c					      ENDIF
      0  7c8c					      btow
      1  7c8c		       a9 00		      lda	#$00
      2  7c8e		       48		      pha
      0  7c8f					      addw
      1  7c8f		       ba		      tsx
      2  7c90		       bd 02 01 	      lda.wx	stack+2
      3  7c93		       18		      clc
      4  7c94		       7d 04 01 	      adc.wx	stack+4
      5  7c97		       9d 04 01 	      sta.wx	stack+4
      6  7c9a		       68		      pla
      7  7c9b		       7d 03 01 	      adc.wx	stack+3
      8  7c9e		       9d 03 01 	      sta.wx	stack+3
      9  7ca1		       68		      pla
      0  7ca2					      pbvar	_microspeed
      0  7ca2					      pbyte	_microspeed
      1  7ca2		       ad 3e b6 	      lda	_microspeed
      2  7ca5					      IF	!FPUSH
      3  7ca5		       48		      pha
      4  7ca6					      ENDIF
      0  7ca6					      btow
      1  7ca6		       a9 00		      lda	#$00
      2  7ca8		       48		      pha
      0  7ca9					      addw
      1  7ca9		       ba		      tsx
      2  7caa		       bd 02 01 	      lda.wx	stack+2
      3  7cad		       18		      clc
      4  7cae		       7d 04 01 	      adc.wx	stack+4
      5  7cb1		       9d 04 01 	      sta.wx	stack+4
      6  7cb4		       68		      pla
      7  7cb5		       7d 03 01 	      adc.wx	stack+3
      8  7cb8		       9d 03 01 	      sta.wx	stack+3
      9  7cbb		       68		      pla
      0  7cbc					      plw2var	_bullet_xpos
      1  7cbc					      IF	!FPULL
      2  7cbc		       68		      pla
      3  7cbd		       8d 2b b6 	      sta	_bullet_xpos+1
      4  7cc0		       68		      pla
      5  7cc1		       8d 2a b6 	      sta	_bullet_xpos
      6  7cc4				  -	      ELSE
      7  7cc4				  -	      sta	_bullet_xpos
      8  7cc4				  -	      sty	_bullet_xpos+1
      9  7cc4					      ENDIF
  12443  7cc4				   _EI_11
  12444  7cc4		       4c 68 7d 	      jmp	_EI_10
  12445  7cc7
  12446  7cc7
  12447  7cc7
  12448  7cc7
  12449  7cc7
  12450  7cc7
  12451  7cc7
  12452  7cc7				   _EL_10
      0  7cc7					      pbyte_pbyte_cmpbeq_cond	_dir, #0, _EI_12, _EL_12
      1  7cc7
      2  7cc7
      3  7cc7		       ad 24 b5 	      lda	_dir
      4  7cca		       c9 00		      cmp	#0
      5  7ccc		       f0 03		      beq	*+5
      6  7cce					      IFCONST	_EL_12
      7  7cce		       4c 1c 7d 	      jmp	_EL_12
      8  7cd1				  -	      ELSE
      9  7cd1				  -	      jmp	_EI_12
     10  7cd1					      ENDIF
      0  7cd1					      pwvar	_bullet_xpos
      1  7cd1					      IF	!FPUSH
      2  7cd1		       ad 2a b6 	      lda	_bullet_xpos
      3  7cd4		       48		      pha
      4  7cd5		       ad 2b b6 	      lda	_bullet_xpos+1
      5  7cd8		       48		      pha
      6  7cd9				  -	      ELSE
      7  7cd9				  -	      lda	_bullet_xpos
      8  7cd9				  -	      ldy	_bullet_xpos+1
      9  7cd9					      ENDIF
      0  7cd9					      pbvar	_bullet_speed
      0  7cd9					      pbyte	_bullet_speed
      1  7cd9		       ad 2e b6 	      lda	_bullet_speed
      2  7cdc					      IF	!FPUSH
      3  7cdc		       48		      pha
      4  7cdd					      ENDIF
      0  7cdd					      btow
      1  7cdd		       a9 00		      lda	#$00
      2  7cdf		       48		      pha
      0  7ce0					      subw
      1  7ce0		       ba		      tsx
      2  7ce1		       bd 04 01 	      lda.wx	stack+4
      3  7ce4		       38		      sec
      4  7ce5		       fd 02 01 	      sbc.wx	stack+2
      5  7ce8		       9d 04 01 	      sta.wx	stack+4
      6  7ceb		       bd 03 01 	      lda.wx	stack+3
      7  7cee		       fd 01 01 	      sbc.wx	stack+1
      8  7cf1		       9d 03 01 	      sta.wx	stack+3
      9  7cf4		       e8		      inx
     10  7cf5		       e8		      inx
     11  7cf6		       9a		      txs
      0  7cf7					      pbvar	_microspeed
      0  7cf7					      pbyte	_microspeed
      1  7cf7		       ad 3e b6 	      lda	_microspeed
      2  7cfa					      IF	!FPUSH
      3  7cfa		       48		      pha
      4  7cfb					      ENDIF
      0  7cfb					      btow
      1  7cfb		       a9 00		      lda	#$00
      2  7cfd		       48		      pha
      0  7cfe					      addw
      1  7cfe		       ba		      tsx
      2  7cff		       bd 02 01 	      lda.wx	stack+2
      3  7d02		       18		      clc
      4  7d03		       7d 04 01 	      adc.wx	stack+4
      5  7d06		       9d 04 01 	      sta.wx	stack+4
      6  7d09		       68		      pla
      7  7d0a		       7d 03 01 	      adc.wx	stack+3
      8  7d0d		       9d 03 01 	      sta.wx	stack+3
      9  7d10		       68		      pla
      0  7d11					      plw2var	_bullet_xpos
      1  7d11					      IF	!FPULL
      2  7d11		       68		      pla
      3  7d12		       8d 2b b6 	      sta	_bullet_xpos+1
      4  7d15		       68		      pla
      5  7d16		       8d 2a b6 	      sta	_bullet_xpos
      6  7d19				  -	      ELSE
      7  7d19				  -	      sta	_bullet_xpos
      8  7d19				  -	      sty	_bullet_xpos+1
      9  7d19					      ENDIF
  12462  7d19		       4c 68 7d 	      jmp	_EI_12
  12463  7d1c				   _EL_12
      0  7d1c					      pwvar	_bullet_xpos
      1  7d1c					      IF	!FPUSH
      2  7d1c		       ad 2a b6 	      lda	_bullet_xpos
      3  7d1f		       48		      pha
      4  7d20		       ad 2b b6 	      lda	_bullet_xpos+1
      5  7d23		       48		      pha
      6  7d24				  -	      ELSE
      7  7d24				  -	      lda	_bullet_xpos
      8  7d24				  -	      ldy	_bullet_xpos+1
      9  7d24					      ENDIF
      0  7d24					      pbvar	_bullet_speed
      0  7d24					      pbyte	_bullet_speed
      1  7d24		       ad 2e b6 	      lda	_bullet_speed
      2  7d27					      IF	!FPUSH
      3  7d27		       48		      pha
      4  7d28					      ENDIF
      0  7d28					      btow
      1  7d28		       a9 00		      lda	#$00
      2  7d2a		       48		      pha
      0  7d2b					      subw
      1  7d2b		       ba		      tsx
      2  7d2c		       bd 04 01 	      lda.wx	stack+4
      3  7d2f		       38		      sec
      4  7d30		       fd 02 01 	      sbc.wx	stack+2
      5  7d33		       9d 04 01 	      sta.wx	stack+4
      6  7d36		       bd 03 01 	      lda.wx	stack+3
      7  7d39		       fd 01 01 	      sbc.wx	stack+1
      8  7d3c		       9d 03 01 	      sta.wx	stack+3
      9  7d3f		       e8		      inx
     10  7d40		       e8		      inx
     11  7d41		       9a		      txs
      0  7d42					      pbvar	_microspeed
      0  7d42					      pbyte	_microspeed
      1  7d42		       ad 3e b6 	      lda	_microspeed
      2  7d45					      IF	!FPUSH
      3  7d45		       48		      pha
      4  7d46					      ENDIF
      0  7d46					      btow
      1  7d46		       a9 00		      lda	#$00
      2  7d48		       48		      pha
      0  7d49					      subw
      1  7d49		       ba		      tsx
      2  7d4a		       bd 04 01 	      lda.wx	stack+4
      3  7d4d		       38		      sec
      4  7d4e		       fd 02 01 	      sbc.wx	stack+2
      5  7d51		       9d 04 01 	      sta.wx	stack+4
      6  7d54		       bd 03 01 	      lda.wx	stack+3
      7  7d57		       fd 01 01 	      sbc.wx	stack+1
      8  7d5a		       9d 03 01 	      sta.wx	stack+3
      9  7d5d		       e8		      inx
     10  7d5e		       e8		      inx
     11  7d5f		       9a		      txs
      0  7d60					      plw2var	_bullet_xpos
      1  7d60					      IF	!FPULL
      2  7d60		       68		      pla
      3  7d61		       8d 2b b6 	      sta	_bullet_xpos+1
      4  7d64		       68		      pla
      5  7d65		       8d 2a b6 	      sta	_bullet_xpos
      6  7d68				  -	      ELSE
      7  7d68				  -	      sta	_bullet_xpos
      8  7d68				  -	      sty	_bullet_xpos+1
      9  7d68					      ENDIF
  12472  7d68				   _EI_12
  12473  7d68
  12474  7d68
  12475  7d68
  12476  7d68
  12477  7d68
  12478  7d68
  12479  7d68
  12480  7d68				   _EI_10
  12481  7d68				   FPUSH      SET	1
      0  7d68					      opt_pbyte_pbyte_add	_bullet_ypos, _bullet_dy
      1  7d68
      2  7d68
      3  7d68
      4  7d68
      5  7d68
      6  7d68		       ad 2c b6 	      lda	_bullet_ypos
      7  7d6b		       18		      clc
      8  7d6c		       6d 2d b6 	      adc	_bullet_dy
      9  7d6f				  -	      IF	!FPUSH
     10  7d6f				  -	      pha
     11  7d6f					      ENDIF
  12483  7d6f				   FPULL      SET	1
  12484  7d6f				   FPUSH      SET	0
      0  7d6f					      plb2var	_bullet_ypos
      1  7d6f				  -	      IF	!FPULL
      2  7d6f				  -	      pla
      3  7d6f					      ENDIF
      4  7d6f		       8d 2c b6 	      sta	_bullet_ypos
  12486  7d6f				   FPULL      SET	0
      0  7d72					      pwvar	_bullet_xpos
      1  7d72					      IF	!FPUSH
      2  7d72		       ad 2a b6 	      lda	_bullet_xpos
      3  7d75		       48		      pha
      4  7d76		       ad 2b b6 	      lda	_bullet_xpos+1
      5  7d79		       48		      pha
      6  7d7a				  -	      ELSE
      7  7d7a				  -	      lda	_bullet_xpos
      8  7d7a				  -	      ldy	_bullet_xpos+1
      9  7d7a					      ENDIF
      0  7d7a					      pbyte	#20
      1  7d7a		       a9 14		      lda	#20
      2  7d7c					      IF	!FPUSH
      3  7d7c		       48		      pha
      4  7d7d					      ENDIF
      0  7d7d					      btow
      1  7d7d		       a9 00		      lda	#$00
      2  7d7f		       48		      pha
      0  7d80					      cmpwlt
      1  7d80		       ba		      tsx
      2  7d81		       bd 04 01 	      lda.wx	stack+4
      3  7d84		       dd 02 01 	      cmp.wx	stack+2
      4  7d87		       bd 03 01 	      lda.wx	stack+3
      5  7d8a		       fd 01 01 	      sbc.wx	stack+1
      6  7d8d		       10 0b		      bpl	.phf
      7  7d8f		       e8		      inx
      8  7d90		       e8		      inx
      9  7d91		       e8		      inx
     10  7d92		       e8		      inx
     11  7d93		       9a		      txs
      0  7d94					      pone
      1  7d94		       a9 01		      lda	#$01
      2  7d96					      IF	!FPUSH
      3  7d96		       48		      pha
      4  7d97					      ENDIF
     13  7d97					      IF	!FPUSH
     14  7d97		       4c a2 7d 	      jmp	*+11
     15  7d9a				  -	      ELSE
     16  7d9a				  -	      jmp	*+10
     17  7d9a					      ENDIF
     18  7d9a		       e8	   .phf       inx
     19  7d9b		       e8		      inx
     20  7d9c		       e8		      inx
     21  7d9d		       e8		      inx
     22  7d9e		       9a		      txs
      0  7d9f					      pzero
      1  7d9f		       a9 00		      lda	#$00
      2  7da1					      IF	!FPUSH
      3  7da1		       48		      pha
      4  7da2					      ENDIF
      0  7da2					      pwvar	_bullet_xpos
      1  7da2					      IF	!FPUSH
      2  7da2		       ad 2a b6 	      lda	_bullet_xpos
      3  7da5		       48		      pha
      4  7da6		       ad 2b b6 	      lda	_bullet_xpos+1
      5  7da9		       48		      pha
      6  7daa				  -	      ELSE
      7  7daa				  -	      lda	_bullet_xpos
      8  7daa				  -	      ldy	_bullet_xpos+1
      9  7daa					      ENDIF
      0  7daa					      pword	#340
      1  7daa					      IF	!FPUSH
      2  7daa		       a9 54		      lda	#<#340
      3  7dac		       48		      pha
      4  7dad		       a9 01		      lda	#>#340
      5  7daf		       48		      pha
      6  7db0				  -	      ELSE
      7  7db0				  -	      lda	#<#340
      8  7db0				  -	      ldy	#>#340
      9  7db0					      ENDIF
  12493  7db0				   FPUSH      SET	1
      0  7db0					      cmpwgt
      1  7db0		       ba		      tsx
      2  7db1		       bd 02 01 	      lda.wx	stack+2
      3  7db4		       dd 04 01 	      cmp.wx	stack+4
      4  7db7		       bd 01 01 	      lda.wx	stack+1
      5  7dba		       fd 03 01 	      sbc.wx	stack+3
      6  7dbd		       30 0a		      bmi	.pht
      7  7dbf		       e8		      inx
      8  7dc0		       e8		      inx
      9  7dc1		       e8		      inx
     10  7dc2		       e8		      inx
     11  7dc3		       9a		      txs
      0  7dc4					      pzero
      1  7dc4		       a9 00		      lda	#$00
      2  7dc6				  -	      IF	!FPUSH
      3  7dc6				  -	      pha
      4  7dc6					      ENDIF
     13  7dc6				  -	      IF	!FPUSH
     14  7dc6				  -	      jmp	*+11
     15  7dc6					      ELSE
     16  7dc6		       4c d0 7d 	      jmp	*+10
     17  7dc9					      ENDIF
     18  7dc9		       e8	   .pht       inx
     19  7dca		       e8		      inx
     20  7dcb		       e8		      inx
     21  7dcc		       e8		      inx
     22  7dcd		       9a		      txs
      0  7dce					      pone
      1  7dce		       a9 01		      lda	#$01
      2  7dd0				  -	      IF	!FPUSH
      3  7dd0				  -	      pha
      4  7dd0					      ENDIF
  12495  7dd0				   FPULL      SET	1
      0  7dd0					      orb
      1  7dd0				  -	      IF	!FPULL
      2  7dd0				  -	      pla
      3  7dd0					      ENDIF
      4  7dd0		       85 fc		      sta	R1
      5  7dd2		       68		      pla
      6  7dd3		       05 fc		      ora	R1
      7  7dd5				  -	      IF	!FPUSH
      8  7dd5				  -	      pha
      9  7dd5					      ENDIF
  12497  7dd5				   FPUSH      SET	0
      0  7dd5					      cond_stmt	_EI_65540, _EL_65540
      1  7dd5				  -	      IF	!FPULL
      2  7dd5				  -	      pla
      3  7dd5					      ENDIF
      4  7dd5		       d0 03		      bne	*+5
      5  7dd7				  -	      IFCONST	_EL_65540
      6  7dd7				  -	      jmp	_EL_65540
      7  7dd7					      ELSE
      8  7dd7		       4c e7 7d 	      jmp	_EI_65540
      9  7dda					      ENDIF
  12499  7dda				   FPULL      SET	0
  12500  7dda				   FPUSH      SET	1
      0  7dda					      pbyte	#0
      1  7dda		       a9 00		      lda	#0
      2  7ddc				  -	      IF	!FPUSH
      3  7ddc				  -	      pha
      4  7ddc					      ENDIF
  12502  7ddc				   FPULL      SET	1
  12503  7ddc				   FPUSH      SET	0
      0  7ddc					      plb2var	_bullet_on
      1  7ddc				  -	      IF	!FPULL
      2  7ddc				  -	      pla
      3  7ddc					      ENDIF
      4  7ddc		       8d 29 b6 	      sta	_bullet_on
  12505  7ddc				   FPULL      SET	0
  12506  7ddc				   FPUSH      SET	1
      0  7ddf					      pbyte	#6
      1  7ddf		       a9 06		      lda	#6
      2  7de1				  -	      IF	!FPUSH
      3  7de1				  -	      pha
      4  7de1					      ENDIF
  12508  7de1				   FPULL      SET	1
  12509  7de1				   FPUSH      SET	0
      0  7de1					      plb2var	_spr_disable.spr_no
      1  7de1				  -	      IF	!FPULL
      2  7de1				  -	      pla
      3  7de1					      ENDIF
      4  7de1		       8d fb b4 	      sta	_spr_disable.spr_no
  12511  7de4		       20 7b 71 	      jsr	_Pspr_disable
  12512  7de7				   _EI_65540
      0  7de7					      pbyte_pbyte_cmpbgt_cond	_bullet_ypos, #230, _EI_65541, _EL_65541
      1  7de7
      2  7de7
      3  7de7		       a9 e6		      lda	#230
      4  7de9		       cd 2c b6 	      cmp	_bullet_ypos
      5  7dec		       90 03		      bcc	*+5
      6  7dee				  -	      IFCONST	_EL_65541
      7  7dee				  -	      jmp	_EL_65541
      8  7dee					      ELSE
      9  7dee		       4c fe 7d 	      jmp	_EI_65541
     10  7df1					      ENDIF
  12514  7df1				   FPULL      SET	0
  12515  7df1				   FPUSH      SET	1
      0  7df1					      pbyte	#0
      1  7df1		       a9 00		      lda	#0
      2  7df3				  -	      IF	!FPUSH
      3  7df3				  -	      pha
      4  7df3					      ENDIF
  12517  7df3				   FPULL      SET	1
  12518  7df3				   FPUSH      SET	0
      0  7df3					      plb2var	_bullet_on
      1  7df3				  -	      IF	!FPULL
      2  7df3				  -	      pla
      3  7df3					      ENDIF
      4  7df3		       8d 29 b6 	      sta	_bullet_on
  12520  7df3				   FPULL      SET	0
  12521  7df3				   FPUSH      SET	1
      0  7df6					      pbyte	#6
      1  7df6		       a9 06		      lda	#6
      2  7df8				  -	      IF	!FPUSH
      3  7df8				  -	      pha
      4  7df8					      ENDIF
  12523  7df8				   FPULL      SET	1
  12524  7df8				   FPUSH      SET	0
      0  7df8					      plb2var	_spr_disable.spr_no
      1  7df8				  -	      IF	!FPULL
      2  7df8				  -	      pla
      3  7df8					      ENDIF
      4  7df8		       8d fb b4 	      sta	_spr_disable.spr_no
  12526  7dfb		       20 7b 71 	      jsr	_Pspr_disable
  12527  7dfe				   _EI_65541
  12528  7dfe
  12529  7dfe
  12530  7dfe
  12531  7dfe
  12532  7dfe
  12533  7dfe
  12534  7dfe
  12535  7dfe				   _EI_9
  12536  7dfe				   FPULL      SET	0
  12537  7dfe				   FPUSH      SET	1
      0  7dfe					      pbyte	#0
      1  7dfe		       a9 00		      lda	#0
      2  7e00				  -	      IF	!FPUSH
      3  7e00				  -	      pha
      4  7e00					      ENDIF
  12539  7e00				   FPULL      SET	1
  12540  7e00				   FPUSH      SET	0
      0  7e00					      plb2var	_update_sprites.i
      1  7e00				  -	      IF	!FPULL
      2  7e00				  -	      pla
      3  7e00					      ENDIF
      4  7e00		       8d 49 b6 	      sta	_update_sprites.i
  12542  7e00				   FPULL      SET	0
  12543  7e00				   FPUSH      SET	1
      0  7e03					      pbyte	#3
      1  7e03		       a9 03		      lda	#3
      2  7e05				  -	      IF	!FPUSH
      3  7e05				  -	      pha
      4  7e05					      ENDIF
  12545  7e05				   FPULL      SET	1
  12546  7e05				   FPUSH      SET	0
      0  7e05					      plb2var	XFOR_max_2
      1  7e05				  -	      IF	!FPULL
      2  7e05				  -	      pla
      3  7e05					      ENDIF
      4  7e05		       8d 4a b6 	      sta	XFOR_max_2
  12548  7e08				   _FOR_2
      0  7e08					      forb	2, _update_sprites.i
      1  7e08
      2  7e08		       ad 4a b6 	      lda	XFOR_max_2
      3  7e0b		       cd 49 b6 	      cmp	_update_sprites.i
      4  7e0e		       b0 03		      bcs	.enter
      5  7e10
      6  7e10		       4c c8 7f 	      jmp	_ENDFOR_2
      7  7e13				   .enter
  12550  7e13				   FPULL      SET	0
      0  7e13					      opt_pbyte_pbarray_fast	_update_sprites.i, _ufo_on
      1  7e13
      2  7e13
      3  7e13
      4  7e13		       ae 49 b6 	      ldx	_update_sprites.i
      5  7e16		       bd 48 b5 	      lda	_ufo_on,x
      6  7e19					      IF	!FPUSH
      7  7e19		       48		      pha
      8  7e1a					      ENDIF
  12552  7e1a				   FPUSH      SET	1
      0  7e1a					      pbyte	#1
      1  7e1a		       a9 01		      lda	#1
      2  7e1c				  -	      IF	!FPUSH
      3  7e1c				  -	      pha
      4  7e1c					      ENDIF
  12554  7e1c				   FPULL      SET	1
      0  7e1c					      cmpbeq
      1  7e1c				  -	      IF	!FPULL
      2  7e1c				  -	      pla
      3  7e1c					      ENDIF
      4  7e1c		       85 fc		      sta	R1
      5  7e1e		       68		      pla
      6  7e1f		       c5 fc		      cmp	R1
      7  7e21		       f0 05		      beq	.pht
      0  7e23					      pzero
      1  7e23		       a9 00		      lda	#$00
      2  7e25				  -	      IF	!FPUSH
      3  7e25				  -	      pha
      4  7e25					      ENDIF
      9  7e25				  -	      IF	!FPUSH
     10  7e25				  -	      jmp	*+6
     11  7e25					      ELSE
     12  7e25		       4c 2a 7e 	      jmp	*+5
     13  7e28					      ENDIF
      0  7e28				   .pht       pone
      1  7e28		       a9 01		      lda	#$01
      2  7e2a				  -	      IF	!FPUSH
      3  7e2a				  -	      pha
      4  7e2a					      ENDIF
  12556  7e2a				   FPUSH      SET	0
      0  7e2a					      cond_stmt	_EI_13, _EL_13
      1  7e2a				  -	      IF	!FPULL
      2  7e2a				  -	      pla
      3  7e2a					      ENDIF
      4  7e2a		       d0 03		      bne	*+5
      5  7e2c					      IFCONST	_EL_13
      6  7e2c		       4c b7 7f 	      jmp	_EL_13
      7  7e2f				  -	      ELSE
      8  7e2f				  -	      jmp	_EI_13
      9  7e2f					      ENDIF
  12558  7e2f				   FPULL      SET	0
      0  7e2f					      pbvar	_update_sprites.i
      0  7e2f					      pbyte	_update_sprites.i
      1  7e2f		       ad 49 b6 	      lda	_update_sprites.i
      2  7e32					      IF	!FPUSH
      3  7e32		       48		      pha
      4  7e33					      ENDIF
      0  7e33					      btow
      1  7e33		       a9 00		      lda	#$00
      2  7e35		       48		      pha
      0  7e36					      dblw
      1  7e36		       ba		      tsx
      2  7e37		       1e 02 01 	      asl.wx	stack+2
      3  7e3a		       3e 01 01 	      rol.wx	stack+1
      0  7e3d					      pwarray	_ufo_xpos
      1  7e3d					      IF	!FPULL
      2  7e3d		       68		      pla
      3  7e3e		       85 fc		      sta	R1
      4  7e40		       68		      pla
      5  7e41		       85 fb		      sta	R0
      6  7e43				  -	      ELSE
      7  7e43				  -	      sta	R0
      8  7e43				  -	      sty	R1
      9  7e43					      ENDIF
     10  7e43		       a9 38		      lda	#<_ufo_xpos
     11  7e45		       18		      clc
     12  7e46		       65 fb		      adc	R0
     13  7e48		       85 fb		      sta	R0
     14  7e4a		       a9 b5		      lda	#>_ufo_xpos
     15  7e4c		       65 fc		      adc	R1
     16  7e4e		       85 fc		      sta	R1
     17  7e50					      IF	!FPUSH
     18  7e50		       a0 00		      ldy	#$00
     19  7e52		       b1 fb		      lda	(R0),y
     20  7e54		       48		      pha
     21  7e55		       c8		      iny
     22  7e56		       b1 fb		      lda	(R0),y
     23  7e58		       48		      pha
     24  7e59				  -	      ELSE
     25  7e59				  -	      ldy	#$00
     26  7e59				  -	      lda	(R0),y
     27  7e59				  -	      tax
     28  7e59				  -	      iny
     29  7e59				  -	      lda	(R0),y
     30  7e59				  -	      tay
     31  7e59				  -	      txa
     32  7e59					      ENDIF
      0  7e59					      pwvar	_aircraft_xpos
      1  7e59					      IF	!FPUSH
      2  7e59		       ad 31 b5 	      lda	_aircraft_xpos
      3  7e5c		       48		      pha
      4  7e5d		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  7e60		       48		      pha
      6  7e61				  -	      ELSE
      7  7e61				  -	      lda	_aircraft_xpos
      8  7e61				  -	      ldy	_aircraft_xpos+1
      9  7e61					      ENDIF
      0  7e61					      subw
      1  7e61		       ba		      tsx
      2  7e62		       bd 04 01 	      lda.wx	stack+4
      3  7e65		       38		      sec
      4  7e66		       fd 02 01 	      sbc.wx	stack+2
      5  7e69		       9d 04 01 	      sta.wx	stack+4
      6  7e6c		       bd 03 01 	      lda.wx	stack+3
      7  7e6f		       fd 01 01 	      sbc.wx	stack+1
      8  7e72		       9d 03 01 	      sta.wx	stack+3
      9  7e75		       e8		      inx
     10  7e76		       e8		      inx
     11  7e77		       9a		      txs
      0  7e78					      plw2var	_update_sprites.x
      1  7e78					      IF	!FPULL
      2  7e78		       68		      pla
      3  7e79		       8d 4c b6 	      sta	_update_sprites.x+1
      4  7e7c		       68		      pla
      5  7e7d		       8d 4b b6 	      sta	_update_sprites.x
      6  7e80				  -	      ELSE
      7  7e80				  -	      sta	_update_sprites.x
      8  7e80				  -	      sty	_update_sprites.x+1
      9  7e80					      ENDIF
      0  7e80					      pwvar	_update_sprites.x
      1  7e80					      IF	!FPUSH
      2  7e80		       ad 4b b6 	      lda	_update_sprites.x
      3  7e83		       48		      pha
      4  7e84		       ad 4c b6 	      lda	_update_sprites.x+1
      5  7e87		       48		      pha
      6  7e88				  -	      ELSE
      7  7e88				  -	      lda	_update_sprites.x
      8  7e88				  -	      ldy	_update_sprites.x+1
      9  7e88					      ENDIF
      0  7e88					      absw
      1  7e88		       ba		      tsx
      2  7e89		       bd 01 01 	      lda.wx	stack+1
      3  7e8c		       10 15		      bpl	.skip
      4  7e8e		       49 ff		      eor	#$ff
      5  7e90		       9d 01 01 	      sta.wx	stack+1
      6  7e93		       bd 02 01 	      lda.wx	stack+2
      7  7e96		       49 ff		      eor	#$ff
      8  7e98		       18		      clc
      9  7e99		       69 01		      adc	#$01
     10  7e9b		       9d 02 01 	      sta.wx	stack+2
     11  7e9e		       d0 03		      bne	.skip
     12  7ea0		       fe 01 01 	      inc.wx	stack+1
     13  7ea3				   .skip
      0  7ea3					      pbyte	#160
      1  7ea3		       a9 a0		      lda	#160
      2  7ea5					      IF	!FPUSH
      3  7ea5		       48		      pha
      4  7ea6					      ENDIF
      0  7ea6					      btow
      1  7ea6		       a9 00		      lda	#$00
      2  7ea8		       48		      pha
  12570  7ea8				   FPUSH      SET	1
      0  7ea9					      cmpwlte
      1  7ea9		       ba		      tsx
      2  7eaa		       bd 02 01 	      lda.wx	stack+2
      3  7ead		       dd 04 01 	      cmp.wx	stack+4
      4  7eb0		       bd 01 01 	      lda.wx	stack+1
      5  7eb3		       fd 03 01 	      sbc.wx	stack+3
      6  7eb6		       30 0a		      bmi	.phf
      7  7eb8		       e8		      inx
      8  7eb9		       e8		      inx
      9  7eba		       e8		      inx
     10  7ebb		       e8		      inx
     11  7ebc		       9a		      txs
      0  7ebd					      pone
      1  7ebd		       a9 01		      lda	#$01
      2  7ebf				  -	      IF	!FPUSH
      3  7ebf				  -	      pha
      4  7ebf					      ENDIF
     13  7ebf				  -	      IF	!FPUSH
     14  7ebf				  -	      jmp	*+11
     15  7ebf					      ELSE
     16  7ebf		       4c c9 7e 	      jmp	*+10
     17  7ec2					      ENDIF
     18  7ec2		       e8	   .phf       inx
     19  7ec3		       e8		      inx
     20  7ec4		       e8		      inx
     21  7ec5		       e8		      inx
     22  7ec6		       9a		      txs
      0  7ec7					      pzero
      1  7ec7		       a9 00		      lda	#$00
      2  7ec9				  -	      IF	!FPUSH
      3  7ec9				  -	      pha
      4  7ec9					      ENDIF
  12572  7ec9				   FPULL      SET	1
  12573  7ec9				   FPUSH      SET	0
      0  7ec9					      cond_stmt	_EI_14, _EL_14
      1  7ec9				  -	      IF	!FPULL
      2  7ec9				  -	      pla
      3  7ec9					      ENDIF
      4  7ec9		       d0 03		      bne	*+5
      5  7ecb					      IFCONST	_EL_14
      6  7ecb		       4c ab 7f 	      jmp	_EL_14
      7  7ece				  -	      ELSE
      8  7ece				  -	      jmp	_EI_14
      9  7ece					      ENDIF
  12575  7ece				   FPULL      SET	0
  12576  7ece				   FPUSH      SET	1
      0  7ece					      pbvar	_update_sprites.i
      0  7ece					      pbyte	_update_sprites.i
      1  7ece		       ad 49 b6 	      lda	_update_sprites.i
      2  7ed1				  -	      IF	!FPUSH
      3  7ed1				  -	      pha
      4  7ed1					      ENDIF
  12578  7ed1				   FPULL      SET	1
  12579  7ed1				   FPUSH      SET	0
      0  7ed1					      plb2var	_spr_setpos.spr_no
      1  7ed1				  -	      IF	!FPULL
      2  7ed1				  -	      pla
      3  7ed1					      ENDIF
      4  7ed1		       8d 01 b5 	      sta	_spr_setpos.spr_no
  12581  7ed1				   FPULL      SET	0
  12582  7ed1				   FPUSH      SET	1
      0  7ed4					      opt_pwvar_pword_add	_update_sprites.x, #173
      1  7ed4
      2  7ed4
      3  7ed4
      4  7ed4		       ad 4b b6 	      lda	_update_sprites.x
      5  7ed7		       18		      clc
      6  7ed8		       69 ad		      adc	<#173
      7  7eda				  -	      IF	!FPUSH
      8  7eda				  -	      pha
      9  7eda					      ELSE
     10  7eda		       aa		      tax
     11  7edb					      ENDIF
     12  7edb		       ad 4c b6 	      lda	_update_sprites.x+1
     13  7ede		       69 00		      adc	>#173
     14  7ee0				  -	      IF	!FPUSH
     15  7ee0				  -	      pha
     16  7ee0					      ELSE
     17  7ee0		       a8		      tay
     18  7ee1		       8a		      txa
     19  7ee2					      ENDIF
  12584  7ee2				   FPULL      SET	1
  12585  7ee2				   FPUSH      SET	0
      0  7ee2					      plw2var	_spr_setpos.x
      1  7ee2				  -	      IF	!FPULL
      2  7ee2				  -	      pla
      3  7ee2				  -	      sta	_spr_setpos.x+1
      4  7ee2				  -	      pla
      5  7ee2				  -	      sta	_spr_setpos.x
      6  7ee2					      ELSE
      7  7ee2		       8d 02 b5 	      sta	_spr_setpos.x
      8  7ee5		       8c 03 b5 	      sty	_spr_setpos.x+1
      9  7ee8					      ENDIF
  12587  7ee8				   FPULL      SET	0
  12588  7ee8				   FPUSH      SET	1
      0  7ee8					      opt_pbyte_pbarray_fast	_update_sprites.i, _ufo_altitude
      1  7ee8
      2  7ee8
      3  7ee8
      4  7ee8		       ae 49 b6 	      ldx	_update_sprites.i
      5  7eeb		       bd 34 b5 	      lda	_ufo_altitude,x
      6  7eee				  -	      IF	!FPUSH
      7  7eee				  -	      pha
      8  7eee					      ENDIF
  12590  7eee				   FPULL      SET	1
  12591  7eee				   FPUSH      SET	0
      0  7eee					      plb2var	_spr_setpos.y
      1  7eee				  -	      IF	!FPULL
      2  7eee				  -	      pla
      3  7eee					      ENDIF
      4  7eee		       8d 04 b5 	      sta	_spr_setpos.y
  12593  7ef1		       20 bb 71 	      jsr	_Pspr_setpos
  12594  7ef1				   FPULL      SET	0
  12595  7ef1				   FPUSH      SET	1
      0  7ef4					      pbvar	_update_sprites.i
      0  7ef4					      pbyte	_update_sprites.i
      1  7ef4		       ad 49 b6 	      lda	_update_sprites.i
      2  7ef7				  -	      IF	!FPUSH
      3  7ef7				  -	      pha
      4  7ef7					      ENDIF
  12597  7ef7				   FPULL      SET	1
  12598  7ef7				   FPUSH      SET	0
      0  7ef7					      plb2var	_spr_enable.spr_no
      1  7ef7				  -	      IF	!FPULL
      2  7ef7				  -	      pla
      3  7ef7					      ENDIF
      4  7ef7		       8d fa b4 	      sta	_spr_enable.spr_no
  12600  7efa		       20 6e 71 	      jsr	_Pspr_enable
  12601  7efa				   FPULL      SET	0
      0  7efd					      opt_pbyte_pbarray_fast	_update_sprites.i, _ufo_hit
      1  7efd
      2  7efd
      3  7efd
      4  7efd		       ae 49 b6 	      ldx	_update_sprites.i
      5  7f00		       bd 4c b5 	      lda	_ufo_hit,x
      6  7f03					      IF	!FPUSH
      7  7f03		       48		      pha
      8  7f04					      ENDIF
  12603  7f04				   FPUSH      SET	1
      0  7f04					      pbyte	#1
      1  7f04		       a9 01		      lda	#1
      2  7f06				  -	      IF	!FPUSH
      3  7f06				  -	      pha
      4  7f06					      ENDIF
  12605  7f06				   FPULL      SET	1
  12606  7f06				   FPUSH      SET	0
      0  7f06					      cmpbeq
      1  7f06				  -	      IF	!FPULL
      2  7f06				  -	      pla
      3  7f06					      ENDIF
      4  7f06		       85 fc		      sta	R1
      5  7f08		       68		      pla
      6  7f09		       c5 fc		      cmp	R1
      7  7f0b		       f0 06		      beq	.pht
      0  7f0d					      pzero
      1  7f0d		       a9 00		      lda	#$00
      2  7f0f					      IF	!FPUSH
      3  7f0f		       48		      pha
      4  7f10					      ENDIF
      9  7f10					      IF	!FPUSH
     10  7f10		       4c 16 7f 	      jmp	*+6
     11  7f13				  -	      ELSE
     12  7f13				  -	      jmp	*+5
     13  7f13					      ENDIF
      0  7f13				   .pht       pone
      1  7f13		       a9 01		      lda	#$01
      2  7f15					      IF	!FPUSH
      3  7f15		       48		      pha
      4  7f16					      ENDIF
  12608  7f16				   FPULL      SET	0
      0  7f16					      opt_pbyte_pbyte_and	_frame_count, #3
      1  7f16
      2  7f16
      3  7f16
      4  7f16
      5  7f16
      6  7f16		       ad 25 b5 	      lda	_frame_count
      7  7f19		       29 03		      and	#3
      8  7f1b					      IF	!FPUSH
      9  7f1b		       48		      pha
     10  7f1c					      ENDIF
  12610  7f1c				   FPUSH      SET	1
      0  7f1c					      pbyte	#1
      1  7f1c		       a9 01		      lda	#1
      2  7f1e				  -	      IF	!FPUSH
      3  7f1e				  -	      pha
      4  7f1e					      ENDIF
  12612  7f1e				   FPULL      SET	1
      0  7f1e					      cmpbeq
      1  7f1e				  -	      IF	!FPULL
      2  7f1e				  -	      pla
      3  7f1e					      ENDIF
      4  7f1e		       85 fc		      sta	R1
      5  7f20		       68		      pla
      6  7f21		       c5 fc		      cmp	R1
      7  7f23		       f0 05		      beq	.pht
      0  7f25					      pzero
      1  7f25		       a9 00		      lda	#$00
      2  7f27				  -	      IF	!FPUSH
      3  7f27				  -	      pha
      4  7f27					      ENDIF
      9  7f27				  -	      IF	!FPUSH
     10  7f27				  -	      jmp	*+6
     11  7f27					      ELSE
     12  7f27		       4c 2c 7f 	      jmp	*+5
     13  7f2a					      ENDIF
      0  7f2a				   .pht       pone
      1  7f2a		       a9 01		      lda	#$01
      2  7f2c				  -	      IF	!FPUSH
      3  7f2c				  -	      pha
      4  7f2c					      ENDIF
      0  7f2c					      andb
      1  7f2c				  -	      IF	!FPULL
      2  7f2c				  -	      pla
      3  7f2c					      ENDIF
      4  7f2c		       85 fc		      sta	R1
      5  7f2e		       68		      pla
      6  7f2f		       25 fc		      and	R1
      7  7f31				  -	      IF	!FPUSH
      8  7f31				  -	      pha
      9  7f31					      ENDIF
  12615  7f31				   FPUSH      SET	0
      0  7f31					      cond_stmt	_EI_15, _EL_15
      1  7f31				  -	      IF	!FPULL
      2  7f31				  -	      pla
      3  7f31					      ENDIF
      4  7f31		       d0 03		      bne	*+5
      5  7f33					      IFCONST	_EL_15
      6  7f33		       4c 8d 7f 	      jmp	_EL_15
      7  7f36				  -	      ELSE
      8  7f36				  -	      jmp	_EI_15
      9  7f36					      ENDIF
  12617  7f36				   FPULL      SET	0
  12618  7f36				   FPUSH      SET	1
      0  7f36					      pbvar	_update_sprites.i
      0  7f36					      pbyte	_update_sprites.i
      1  7f36		       ad 49 b6 	      lda	_update_sprites.i
      2  7f39				  -	      IF	!FPUSH
      3  7f39				  -	      pha
      4  7f39					      ENDIF
  12620  7f39				   FPULL      SET	1
  12621  7f39				   FPUSH      SET	0
      0  7f39					      plb2var	_spr_setshape.spr_no
      1  7f39				  -	      IF	!FPULL
      2  7f39				  -	      pla
      3  7f39					      ENDIF
      4  7f39		       8d 05 b5 	      sta	_spr_setshape.spr_no
  12623  7f39				   FPULL      SET	0
  12624  7f39				   FPUSH      SET	1
      0  7f3c					      opt_pbyte_pbarray_fast	_update_sprites.i, _ufo_animphase
      1  7f3c
      2  7f3c
      3  7f3c
      4  7f3c		       ae 49 b6 	      ldx	_update_sprites.i
      5  7f3f		       bd 50 b5 	      lda	_ufo_animphase,x
      6  7f42				  -	      IF	!FPUSH
      7  7f42				  -	      pha
      8  7f42					      ENDIF
  12626  7f42				   FPULL      SET	1
  12627  7f42				   FPUSH      SET	0
      0  7f42					      plb2var	_spr_setshape.shape
      1  7f42				  -	      IF	!FPULL
      2  7f42				  -	      pla
      3  7f42					      ENDIF
      4  7f42		       8d 06 b5 	      sta	_spr_setshape.shape
  12629  7f45		       20 e0 71 	      jsr	_Pspr_setshape
  12630  7f45				   FPULL      SET	0
  12631  7f45				   FPUSH      SET	1
      0  7f48					      pbvar	_update_sprites.i
      0  7f48					      pbyte	_update_sprites.i
      1  7f48		       ad 49 b6 	      lda	_update_sprites.i
      2  7f4b				  -	      IF	!FPUSH
      3  7f4b				  -	      pha
      4  7f4b					      ENDIF
  12633  7f4b				   FPULL      SET	1
  12634  7f4b				   FPUSH      SET	0
      0  7f4b					      incbarrb	_ufo_animphase
      1  7f4b				  -	      IF	!FPULL
      2  7f4b				  -	      pla
      3  7f4b					      ENDIF
      4  7f4b		       aa		      tax
      5  7f4c		       fe 50 b5 	      inc.wx	_ufo_animphase
  12636  7f4c				   FPULL      SET	0
      0  7f4f					      opt_pbyte_pbarray_fast	_update_sprites.i, _ufo_animphase
      1  7f4f
      2  7f4f
      3  7f4f
      4  7f4f		       ae 49 b6 	      ldx	_update_sprites.i
      5  7f52		       bd 50 b5 	      lda	_ufo_animphase,x
      6  7f55					      IF	!FPUSH
      7  7f55		       48		      pha
      8  7f56					      ENDIF
  12638  7f56				   FPUSH      SET	1
      0  7f56					      pbyte	#167
      1  7f56		       a9 a7		      lda	#167
      2  7f58				  -	      IF	!FPUSH
      3  7f58				  -	      pha
      4  7f58					      ENDIF
  12640  7f58				   FPULL      SET	1
      0  7f58					      cmpbeq
      1  7f58				  -	      IF	!FPULL
      2  7f58				  -	      pla
      3  7f58					      ENDIF
      4  7f58		       85 fc		      sta	R1
      5  7f5a		       68		      pla
      6  7f5b		       c5 fc		      cmp	R1
      7  7f5d		       f0 05		      beq	.pht
      0  7f5f					      pzero
      1  7f5f		       a9 00		      lda	#$00
      2  7f61				  -	      IF	!FPUSH
      3  7f61				  -	      pha
      4  7f61					      ENDIF
      9  7f61				  -	      IF	!FPUSH
     10  7f61				  -	      jmp	*+6
     11  7f61					      ELSE
     12  7f61		       4c 66 7f 	      jmp	*+5
     13  7f64					      ENDIF
      0  7f64				   .pht       pone
      1  7f64		       a9 01		      lda	#$01
      2  7f66				  -	      IF	!FPUSH
      3  7f66				  -	      pha
      4  7f66					      ENDIF
  12642  7f66				   FPUSH      SET	0
      0  7f66					      cond_stmt	_EI_16, _EL_16
      1  7f66				  -	      IF	!FPULL
      2  7f66				  -	      pla
      3  7f66					      ENDIF
      4  7f66		       d0 03		      bne	*+5
      5  7f68				  -	      IFCONST	_EL_16
      6  7f68				  -	      jmp	_EL_16
      7  7f68					      ELSE
      8  7f68		       4c 8a 7f 	      jmp	_EI_16
      9  7f6b					      ENDIF
  12644  7f6b				   FPULL      SET	0
      0  7f6b					      pbyte	#0
      1  7f6b		       a9 00		      lda	#0
      2  7f6d					      IF	!FPUSH
      3  7f6d		       48		      pha
      4  7f6e					      ENDIF
  12646  7f6e				   FPUSH      SET	1
      0  7f6e					      pbvar	_update_sprites.i
      0  7f6e					      pbyte	_update_sprites.i
      1  7f6e		       ad 49 b6 	      lda	_update_sprites.i
      2  7f71				  -	      IF	!FPUSH
      3  7f71				  -	      pha
      4  7f71					      ENDIF
  12648  7f71				   FPULL      SET	1
  12649  7f71				   FPUSH      SET	0
      0  7f71					      plbarray_fast	_ufo_on
      1  7f71				  -	      IF	!FPULL
      2  7f71				  -	      pla
      3  7f71					      ENDIF
      4  7f71		       aa		      tax
      5  7f72		       68		      pla
      6  7f73		       9d 48 b5 	      sta	_ufo_on,x
  12651  7f73				   FPULL      SET	0
      0  7f76					      pbyte	#0
      1  7f76		       a9 00		      lda	#0
      2  7f78					      IF	!FPUSH
      3  7f78		       48		      pha
      4  7f79					      ENDIF
  12653  7f79				   FPUSH      SET	1
      0  7f79					      pbvar	_update_sprites.i
      0  7f79					      pbyte	_update_sprites.i
      1  7f79		       ad 49 b6 	      lda	_update_sprites.i
      2  7f7c				  -	      IF	!FPUSH
      3  7f7c				  -	      pha
      4  7f7c					      ENDIF
  12655  7f7c				   FPULL      SET	1
  12656  7f7c				   FPUSH      SET	0
      0  7f7c					      plbarray_fast	_ufo_hit
      1  7f7c				  -	      IF	!FPULL
      2  7f7c				  -	      pla
      3  7f7c					      ENDIF
      4  7f7c		       aa		      tax
      5  7f7d		       68		      pla
      6  7f7e		       9d 4c b5 	      sta	_ufo_hit,x
  12658  7f7e				   FPULL      SET	0
  12659  7f7e				   FPUSH      SET	1
      0  7f81					      pbvar	_update_sprites.i
      0  7f81					      pbyte	_update_sprites.i
      1  7f81		       ad 49 b6 	      lda	_update_sprites.i
      2  7f84				  -	      IF	!FPUSH
      3  7f84				  -	      pha
      4  7f84					      ENDIF
  12661  7f84				   FPULL      SET	1
  12662  7f84				   FPUSH      SET	0
      0  7f84					      plb2var	_spr_disable.spr_no
      1  7f84				  -	      IF	!FPULL
      2  7f84				  -	      pla
      3  7f84					      ENDIF
      4  7f84		       8d fb b4 	      sta	_spr_disable.spr_no
  12664  7f87		       20 7b 71 	      jsr	_Pspr_disable
  12665  7f8a				   _EI_16
  12666  7f8a		       4c a8 7f 	      jmp	_EI_15
  12667  7f8d
  12668  7f8d
  12669  7f8d
  12670  7f8d
  12671  7f8d
  12672  7f8d
  12673  7f8d
  12674  7f8d				   _EL_15
  12675  7f8d				   FPULL      SET	0
  12676  7f8d				   FPUSH      SET	1
      0  7f8d					      pbvar	_update_sprites.i
      0  7f8d					      pbyte	_update_sprites.i
      1  7f8d		       ad 49 b6 	      lda	_update_sprites.i
      2  7f90				  -	      IF	!FPUSH
      3  7f90				  -	      pha
      4  7f90					      ENDIF
  12678  7f90				   FPULL      SET	1
  12679  7f90				   FPUSH      SET	0
      0  7f90					      plb2var	_spr_setshape.spr_no
      1  7f90				  -	      IF	!FPULL
      2  7f90				  -	      pla
      3  7f90					      ENDIF
      4  7f90		       8d 05 b5 	      sta	_spr_setshape.spr_no
  12681  7f90				   FPULL      SET	0
  12682  7f90				   FPUSH      SET	1
      0  7f93					      opt_pbyte_pbyte_and	_frame_count, #48
      1  7f93
      2  7f93
      3  7f93
      4  7f93
      5  7f93
      6  7f93		       ad 25 b5 	      lda	_frame_count
      7  7f96		       29 30		      and	#48
      8  7f98				  -	      IF	!FPUSH
      9  7f98				  -	      pha
     10  7f98					      ENDIF
  12684  7f98				   FPULL      SET	1
  12685  7f98				   FPUSH      SET	0
      0  7f98					      rshiftbc	4
      1  7f98				  -	      IF	!FPULL
      2  7f98				  -	      pla
      3  7f98					      ENDIF
      4  7f98					      REPEAT	4
      5  7f98		       4a		      lsr
      4  7f98					      REPEND
      5  7f99		       4a		      lsr
      4  7f99					      REPEND
      5  7f9a		       4a		      lsr
      4  7f9a					      REPEND
      5  7f9b		       4a		      lsr
      6  7f9c					      REPEND
      7  7f9c					      IF	!FPUSH
      8  7f9c		       48		      pha
      9  7f9d					      ENDIF
  12687  7f9d				   FPULL      SET	0
  12688  7f9d				   FPUSH      SET	1
      0  7f9d					      pbarray_fast	_update_sprites.ufo_anim
      1  7f9d					      IF	!FPULL
      2  7f9d		       68		      pla
      3  7f9e					      ENDIF
      4  7f9e		       aa		      tax
      5  7f9f		       bd 19 a4 	      lda	_update_sprites.ufo_anim,x
      6  7fa2				  -	      IF	!FPUSH
      7  7fa2				  -	      pha
      8  7fa2					      ENDIF
  12690  7fa2				   FPULL      SET	1
  12691  7fa2				   FPUSH      SET	0
      0  7fa2					      plb2var	_spr_setshape.shape
      1  7fa2				  -	      IF	!FPULL
      2  7fa2				  -	      pla
      3  7fa2					      ENDIF
      4  7fa2		       8d 06 b5 	      sta	_spr_setshape.shape
  12693  7fa5		       20 e0 71 	      jsr	_Pspr_setshape
  12694  7fa8
  12695  7fa8
  12696  7fa8
  12697  7fa8
  12698  7fa8				   _EI_15
  12699  7fa8		       4c b4 7f 	      jmp	_EI_14
  12700  7fab
  12701  7fab
  12702  7fab
  12703  7fab
  12704  7fab
  12705  7fab
  12706  7fab
  12707  7fab				   _EL_14
  12708  7fab				   FPULL      SET	0
  12709  7fab				   FPUSH      SET	1
      0  7fab					      pbvar	_update_sprites.i
      0  7fab					      pbyte	_update_sprites.i
      1  7fab		       ad 49 b6 	      lda	_update_sprites.i
      2  7fae				  -	      IF	!FPUSH
      3  7fae				  -	      pha
      4  7fae					      ENDIF
  12711  7fae				   FPULL      SET	1
  12712  7fae				   FPUSH      SET	0
      0  7fae					      plb2var	_spr_disable.spr_no
      1  7fae				  -	      IF	!FPULL
      2  7fae				  -	      pla
      3  7fae					      ENDIF
      4  7fae		       8d fb b4 	      sta	_spr_disable.spr_no
  12714  7fb1		       20 7b 71 	      jsr	_Pspr_disable
  12715  7fb4				   _EI_14
  12716  7fb4		       4c c0 7f 	      jmp	_EI_13
  12717  7fb7
  12718  7fb7
  12719  7fb7
  12720  7fb7
  12721  7fb7
  12722  7fb7
  12723  7fb7
  12724  7fb7				   _EL_13
  12725  7fb7				   FPULL      SET	0
  12726  7fb7				   FPUSH      SET	1
      0  7fb7					      pbvar	_update_sprites.i
      0  7fb7					      pbyte	_update_sprites.i
      1  7fb7		       ad 49 b6 	      lda	_update_sprites.i
      2  7fba				  -	      IF	!FPUSH
      3  7fba				  -	      pha
      4  7fba					      ENDIF
  12728  7fba				   FPULL      SET	1
  12729  7fba				   FPUSH      SET	0
      0  7fba					      plb2var	_spr_disable.spr_no
      1  7fba				  -	      IF	!FPULL
      2  7fba				  -	      pla
      3  7fba					      ENDIF
      4  7fba		       8d fb b4 	      sta	_spr_disable.spr_no
  12731  7fbd		       20 7b 71 	      jsr	_Pspr_disable
  12732  7fc0				   _EI_13
      0  7fc0					      nextb	2, _update_sprites.i
      1  7fc0
      2  7fc0				  -	      IFCONST	XFOR_step_2
      3  7fc0				  -
      4  7fc0				  -	      clc
      5  7fc0				  -	      lda	XFOR_step_2
      6  7fc0				  -	      adc	_update_sprites.i
      7  7fc0				  -	      sta	_update_sprites.i
      8  7fc0				  -
      9  7fc0				  -	      bcs	_ENDFOR_2
     10  7fc0					      ELSE
     11  7fc0
     12  7fc0		       ee 49 b6 	      inc	_update_sprites.i
     13  7fc3
     14  7fc3		       f0 03		      beq	_ENDFOR_2
     15  7fc5					      ENDIF
     16  7fc5		       4c 08 7e 	      jmp	_FOR_2
  12734  7fc8
  12735  7fc8
  12736  7fc8
  12737  7fc8
  12738  7fc8
  12739  7fc8
  12740  7fc8
  12741  7fc8				   _ENDFOR_2
  12742  7fc8		       60		      rts
  12743  7fc9
  12744  7fc9
  12745  7fc9
  12746  7fc9
  12747  7fc9
  12748  7fc9
  12749  7fc9
  12750  7fc9				   _Pupdate_sprites_end
  12751  7fc9
  12752  7fc9
  12753  7fc9
  12754  7fc9
  12755  7fc9
  12756  7fc9
  12757  7fc9
  12758  7fc9				   _Pshift_left SUBROUTINE
  12759  7fc9				   FPULL      SET	0
  12760  7fc9				   FPUSH      SET	1
      0  7fc9					      pword	#1703
      1  7fc9				  -	      IF	!FPUSH
      2  7fc9				  -	      lda	#<#1703
      3  7fc9				  -	      pha
      4  7fc9				  -	      lda	#>#1703
      5  7fc9				  -	      pha
      6  7fc9					      ELSE
      7  7fc9		       a9 a7		      lda	#<#1703
      8  7fcb		       a0 06		      ldy	#>#1703
      9  7fcd					      ENDIF
  12762  7fcd				   FPULL      SET	1
  12763  7fcd				   FPUSH      SET	0
      0  7fcd					      plw2var	_shift_left.loc
      1  7fcd				  -	      IF	!FPULL
      2  7fcd				  -	      pla
      3  7fcd				  -	      sta	_shift_left.loc+1
      4  7fcd				  -	      pla
      5  7fcd				  -	      sta	_shift_left.loc
      6  7fcd					      ELSE
      7  7fcd		       8d 4d b6 	      sta	_shift_left.loc
      8  7fd0		       8c 4e b6 	      sty	_shift_left.loc+1
      9  7fd3					      ENDIF
  12765  7fd3				   FPULL      SET	0
  12766  7fd3				   FPUSH      SET	1
      0  7fd3					      pbyte	#0
      1  7fd3		       a9 00		      lda	#0
      2  7fd5				  -	      IF	!FPUSH
      3  7fd5				  -	      pha
      4  7fd5					      ENDIF
  12768  7fd5				   FPULL      SET	1
  12769  7fd5				   FPUSH      SET	0
      0  7fd5					      plb2var	_shift_left.i
      1  7fd5				  -	      IF	!FPULL
      2  7fd5				  -	      pla
      3  7fd5					      ENDIF
      4  7fd5		       8d 4f b6 	      sta	_shift_left.i
  12771  7fd5				   FPULL      SET	0
  12772  7fd5				   FPUSH      SET	1
      0  7fd8					      pbyte	#7
      1  7fd8		       a9 07		      lda	#7
      2  7fda				  -	      IF	!FPUSH
      3  7fda				  -	      pha
      4  7fda					      ENDIF
  12774  7fda				   FPULL      SET	1
  12775  7fda				   FPUSH      SET	0
      0  7fda					      plb2var	XFOR_max_3
      1  7fda				  -	      IF	!FPULL
      2  7fda				  -	      pla
      3  7fda					      ENDIF
      4  7fda		       8d 50 b6 	      sta	XFOR_max_3
  12777  7fdd				   _FOR_3
      0  7fdd					      forb	3, _shift_left.i
      1  7fdd
      2  7fdd		       ad 50 b6 	      lda	XFOR_max_3
      3  7fe0		       cd 4f b6 	      cmp	_shift_left.i
      4  7fe3		       b0 03		      bcs	.enter
      5  7fe5
      6  7fe5		       4c 2e 80 	      jmp	_ENDFOR_3
      7  7fe8				   .enter
  12779  7fe8				   FPULL      SET	0
  12780  7fe8				   FPUSH      SET	1
      0  7fe8					      pwvar	_city_map_ptr_right
      1  7fe8				  -	      IF	!FPUSH
      2  7fe8				  -	      lda	_city_map_ptr_right
      3  7fe8				  -	      pha
      4  7fe8				  -	      lda	_city_map_ptr_right+1
      5  7fe8				  -	      pha
      6  7fe8					      ELSE
      7  7fe8		       a5 04		      lda	_city_map_ptr_right
      8  7fea		       a4 05		      ldy	_city_map_ptr_right+1
      9  7fec					      ENDIF
  12782  7fec				   FPULL      SET	1
  12783  7fec				   FPUSH      SET	0
      0  7fec					      peekb
      1  7fec				  -	      IF	!FPULL
      2  7fec				  -	      pla
      3  7fec				  -	      sta	.selfmod_code+2
      4  7fec				  -	      pla
      5  7fec				  -	      sta	.selfmod_code+1
      6  7fec					      ELSE
      7  7fec		       8d f3 7f 	      sta	.selfmod_code+1
      8  7fef		       8c f4 7f 	      sty	.selfmod_code+2
      9  7ff2					      ENDIF
     10  7ff2				   .selfmod_code
     11  7ff2		       ad 00 00 	      lda.w	$0000
     12  7ff5					      IF	!FPUSH
     13  7ff5		       48		      pha
     14  7ff6					      ENDIF
  12785  7ff6				   FPULL      SET	0
  12786  7ff6				   FPUSH      SET	1
      0  7ff6					      pwvar	_shift_left.loc
      1  7ff6				  -	      IF	!FPUSH
      2  7ff6				  -	      lda	_shift_left.loc
      3  7ff6				  -	      pha
      4  7ff6				  -	      lda	_shift_left.loc+1
      5  7ff6				  -	      pha
      6  7ff6					      ELSE
      7  7ff6		       ad 4d b6 	      lda	_shift_left.loc
      8  7ff9		       ac 4e b6 	      ldy	_shift_left.loc+1
      9  7ffc					      ENDIF
  12788  7ffc				   FPULL      SET	1
  12789  7ffc				   FPUSH      SET	0
      0  7ffc					      pokeb
      1  7ffc				  -	      IF	!FPULL
      2  7ffc				  -	      pla
      3  7ffc				  -	      sta	.selfmod_code+2
      4  7ffc				  -	      pla
      5  7ffc				  -	      sta	.selfmod_code+1
      6  7ffc					      ELSE
      7  7ffc		       8d 04 80 	      sta	.selfmod_code+1
      8  7fff		       8c 05 80 	      sty	.selfmod_code+2
      9  8002					      ENDIF
     10  8002		       68		      pla
     11  8003				   .selfmod_code
     12  8003		       8d 00 00 	      sta.w	$0000
  12791  8003				   FPULL      SET	0
  12792  8003				   FPUSH      SET	1
      0  8006					      opt_pwvar_pword_add	_shift_left.loc, #40
      1  8006
      2  8006
      3  8006
      4  8006		       ad 4d b6 	      lda	_shift_left.loc
      5  8009		       18		      clc
      6  800a		       69 28		      adc	<#40
      7  800c				  -	      IF	!FPUSH
      8  800c				  -	      pha
      9  800c					      ELSE
     10  800c		       aa		      tax
     11  800d					      ENDIF
     12  800d		       ad 4e b6 	      lda	_shift_left.loc+1
     13  8010		       69 00		      adc	>#40
     14  8012				  -	      IF	!FPUSH
     15  8012				  -	      pha
     16  8012					      ELSE
     17  8012		       a8		      tay
     18  8013		       8a		      txa
     19  8014					      ENDIF
  12794  8014				   FPULL      SET	1
  12795  8014				   FPUSH      SET	0
      0  8014					      plw2var	_shift_left.loc
      1  8014				  -	      IF	!FPULL
      2  8014				  -	      pla
      3  8014				  -	      sta	_shift_left.loc+1
      4  8014				  -	      pla
      5  8014				  -	      sta	_shift_left.loc
      6  8014					      ELSE
      7  8014		       8d 4d b6 	      sta	_shift_left.loc
      8  8017		       8c 4e b6 	      sty	_shift_left.loc+1
      9  801a					      ENDIF
      0  801a					      incw	_city_map_ptr_right
      1  801a		       e6 04		      inc	_city_map_ptr_right
      2  801c		       d0 02		      bne	.skip
      3  801e		       e6 05		      inc	_city_map_ptr_right+1
      4  8020				   .skip
      0  8020					      incw	_city_map_ptr_left
      1  8020		       e6 02		      inc	_city_map_ptr_left
      2  8022		       d0 02		      bne	.skip
      3  8024		       e6 03		      inc	_city_map_ptr_left+1
      4  8026				   .skip
      0  8026					      nextb	3, _shift_left.i
      1  8026
      2  8026				  -	      IFCONST	XFOR_step_3
      3  8026				  -
      4  8026				  -	      clc
      5  8026				  -	      lda	XFOR_step_3
      6  8026				  -	      adc	_shift_left.i
      7  8026				  -	      sta	_shift_left.i
      8  8026				  -
      9  8026				  -	      bcs	_ENDFOR_3
     10  8026					      ELSE
     11  8026
     12  8026		       ee 4f b6 	      inc	_shift_left.i
     13  8029
     14  8029		       f0 03		      beq	_ENDFOR_3
     15  802b					      ENDIF
     16  802b		       4c dd 7f 	      jmp	_FOR_3
  12800  802e
  12801  802e
  12802  802e
  12803  802e
  12804  802e				   _ENDFOR_3
  12805  802e				   FPULL      SET	0
      0  802e					      pword	#319
      1  802e					      IF	!FPUSH
      2  802e		       a9 3f		      lda	#<#319
      3  8030		       48		      pha
      4  8031		       a9 01		      lda	#>#319
      5  8033		       48		      pha
      6  8034				  -	      ELSE
      7  8034				  -	      lda	#<#319
      8  8034				  -	      ldy	#>#319
      9  8034					      ENDIF
      0  8034					      pword	#1664
      1  8034					      IF	!FPUSH
      2  8034		       a9 80		      lda	#<#1664
      3  8036		       48		      pha
      4  8037		       a9 06		      lda	#>#1664
      5  8039		       48		      pha
      6  803a				  -	      ELSE
      7  803a				  -	      lda	#<#1664
      8  803a				  -	      ldy	#>#1664
      9  803a					      ENDIF
      0  803a					      pword	#1665
      1  803a					      IF	!FPUSH
      2  803a		       a9 81		      lda	#<#1665
      3  803c		       48		      pha
      4  803d		       a9 06		      lda	#>#1665
      5  803f		       48		      pha
      6  8040				  -	      ELSE
      7  8040				  -	      lda	#<#1665
      8  8040				  -	      ldy	#>#1665
      9  8040					      ENDIF
      0  8040					      memcpy
      1  8040					      IF	!FPULL
      2  8040		       68		      pla
      3  8041		       85 fc		      sta	R1
      4  8043		       68		      pla
      5  8044		       85 fb		      sta	R0
      6  8046				  -	      ELSE
      7  8046				  -	      sta	R0
      8  8046				  -	      sty	R1
      9  8046					      ENDIF
     10  8046		       68		      pla
     11  8047		       85 fe		      sta	R3
     12  8049		       68		      pla
     13  804a		       85 fd		      sta	R2
     14  804c		       68		      pla
     15  804d		       85 40		      sta	R5
     16  804f		       68		      pla
     17  8050		       85 3f		      sta	R4
     18  8052		       20 f9 0a 	      jsr	mem_memcpy
      0  8055					      pwvar	_city_map_ptr_right
      1  8055					      IF	!FPUSH
      2  8055		       a5 04		      lda	_city_map_ptr_right
      3  8057		       48		      pha
      4  8058		       a5 05		      lda	_city_map_ptr_right+1
      5  805a		       48		      pha
      6  805b				  -	      ELSE
      7  805b				  -	      lda	_city_map_ptr_right
      8  805b				  -	      ldy	_city_map_ptr_right+1
      9  805b					      ENDIF
  12811  805b				   FPUSH      SET	1
      0  805b					      pword	#21504
      1  805b				  -	      IF	!FPUSH
      2  805b				  -	      lda	#<#21504
      3  805b				  -	      pha
      4  805b				  -	      lda	#>#21504
      5  805b				  -	      pha
      6  805b					      ELSE
      7  805b		       a9 00		      lda	#<#21504
      8  805d		       a0 54		      ldy	#>#21504
      9  805f					      ENDIF
  12813  805f				   FPULL      SET	1
      0  805f					      cmpweq
      1  805f				  -	      IF	!FPULL
      2  805f				  -	      pla
      3  805f				  -	      sta	R2
      4  805f				  -	      pla
      5  805f				  -	      sta	R1
      6  805f					      ELSE
      7  805f		       85 fc		      sta	R1
      8  8061		       84 fd		      sty	R2
      9  8063					      ENDIF
     10  8063		       68		      pla
     11  8064		       c5 fd		      cmp	R2
     12  8066		       d0 0a		      bne	.phf
     13  8068		       68		      pla
     14  8069		       c5 fc		      cmp	R1
     15  806b		       d0 06		      bne	.phf+1
      0  806d					      pone
      1  806d		       a9 01		      lda	#$01
      2  806f				  -	      IF	!FPUSH
      3  806f				  -	      pha
      4  806f					      ENDIF
     17  806f				  -	      IF	!FPUSH
     18  806f				  -	      jmp	*+7
     19  806f					      ELSE
     20  806f		       4c 75 80 	      jmp	*+6
     21  8072					      ENDIF
     22  8072				   .phf
     23  8072		       68		      pla
      0  8073					      pzero
      1  8073		       a9 00		      lda	#$00
      2  8075				  -	      IF	!FPUSH
      3  8075				  -	      pha
      4  8075					      ENDIF
  12815  8075				   FPUSH      SET	0
      0  8075					      cond_stmt	_EI_17, _EL_17
      1  8075				  -	      IF	!FPULL
      2  8075				  -	      pla
      3  8075					      ENDIF
      4  8075		       d0 03		      bne	*+5
      5  8077				  -	      IFCONST	_EL_17
      6  8077				  -	      jmp	_EL_17
      7  8077					      ELSE
      8  8077		       4c 82 80 	      jmp	_EI_17
      9  807a					      ENDIF
  12817  807a				   FPULL      SET	0
  12818  807a				   FPUSH      SET	1
      0  807a					      pword	#16384
      1  807a				  -	      IF	!FPUSH
      2  807a				  -	      lda	#<#16384
      3  807a				  -	      pha
      4  807a				  -	      lda	#>#16384
      5  807a				  -	      pha
      6  807a					      ELSE
      7  807a		       a9 00		      lda	#<#16384
      8  807c		       a0 40		      ldy	#>#16384
      9  807e					      ENDIF
  12820  807e				   FPULL      SET	1
  12821  807e				   FPUSH      SET	0
      0  807e					      plw2var	_city_map_ptr_right
      1  807e				  -	      IF	!FPULL
      2  807e				  -	      pla
      3  807e				  -	      sta	_city_map_ptr_right+1
      4  807e				  -	      pla
      5  807e				  -	      sta	_city_map_ptr_right
      6  807e					      ELSE
      7  807e		       85 04		      sta	_city_map_ptr_right
      8  8080		       84 05		      sty	_city_map_ptr_right+1
      9  8082					      ENDIF
  12823  8082				   _EI_17
  12824  8082				   FPULL      SET	0
      0  8082					      pwvar	_city_map_ptr_left
      1  8082					      IF	!FPUSH
      2  8082		       a5 02		      lda	_city_map_ptr_left
      3  8084		       48		      pha
      4  8085		       a5 03		      lda	_city_map_ptr_left+1
      5  8087		       48		      pha
      6  8088				  -	      ELSE
      7  8088				  -	      lda	_city_map_ptr_left
      8  8088				  -	      ldy	_city_map_ptr_left+1
      9  8088					      ENDIF
  12826  8088				   FPUSH      SET	1
      0  8088					      pword	#21503
      1  8088				  -	      IF	!FPUSH
      2  8088				  -	      lda	#<#21503
      3  8088				  -	      pha
      4  8088				  -	      lda	#>#21503
      5  8088				  -	      pha
      6  8088					      ELSE
      7  8088		       a9 ff		      lda	#<#21503
      8  808a		       a0 53		      ldy	#>#21503
      9  808c					      ENDIF
  12828  808c				   FPULL      SET	1
      0  808c					      cmpweq
      1  808c				  -	      IF	!FPULL
      2  808c				  -	      pla
      3  808c				  -	      sta	R2
      4  808c				  -	      pla
      5  808c				  -	      sta	R1
      6  808c					      ELSE
      7  808c		       85 fc		      sta	R1
      8  808e		       84 fd		      sty	R2
      9  8090					      ENDIF
     10  8090		       68		      pla
     11  8091		       c5 fd		      cmp	R2
     12  8093		       d0 0a		      bne	.phf
     13  8095		       68		      pla
     14  8096		       c5 fc		      cmp	R1
     15  8098		       d0 06		      bne	.phf+1
      0  809a					      pone
      1  809a		       a9 01		      lda	#$01
      2  809c				  -	      IF	!FPUSH
      3  809c				  -	      pha
      4  809c					      ENDIF
     17  809c				  -	      IF	!FPUSH
     18  809c				  -	      jmp	*+7
     19  809c					      ELSE
     20  809c		       4c a2 80 	      jmp	*+6
     21  809f					      ENDIF
     22  809f				   .phf
     23  809f		       68		      pla
      0  80a0					      pzero
      1  80a0		       a9 00		      lda	#$00
      2  80a2				  -	      IF	!FPUSH
      3  80a2				  -	      pha
      4  80a2					      ENDIF
  12830  80a2				   FPUSH      SET	0
      0  80a2					      cond_stmt	_EI_18, _EL_18
      1  80a2				  -	      IF	!FPULL
      2  80a2				  -	      pla
      3  80a2					      ENDIF
      4  80a2		       d0 03		      bne	*+5
      5  80a4				  -	      IFCONST	_EL_18
      6  80a4				  -	      jmp	_EL_18
      7  80a4					      ELSE
      8  80a4		       4c af 80 	      jmp	_EI_18
      9  80a7					      ENDIF
  12832  80a7				   FPULL      SET	0
  12833  80a7				   FPUSH      SET	1
      0  80a7					      pword	#16391
      1  80a7				  -	      IF	!FPUSH
      2  80a7				  -	      lda	#<#16391
      3  80a7				  -	      pha
      4  80a7				  -	      lda	#>#16391
      5  80a7				  -	      pha
      6  80a7					      ELSE
      7  80a7		       a9 07		      lda	#<#16391
      8  80a9		       a0 40		      ldy	#>#16391
      9  80ab					      ENDIF
  12835  80ab				   FPULL      SET	1
  12836  80ab				   FPUSH      SET	0
      0  80ab					      plw2var	_city_map_ptr_left
      1  80ab				  -	      IF	!FPULL
      2  80ab				  -	      pla
      3  80ab				  -	      sta	_city_map_ptr_left+1
      4  80ab				  -	      pla
      5  80ab				  -	      sta	_city_map_ptr_left
      6  80ab					      ELSE
      7  80ab		       85 02		      sta	_city_map_ptr_left
      8  80ad		       84 03		      sty	_city_map_ptr_left+1
      9  80af					      ENDIF
  12838  80af				   _EI_18
  12839  80af		       60		      rts
  12840  80b0
  12841  80b0
  12842  80b0
  12843  80b0
  12844  80b0
  12845  80b0
  12846  80b0
  12847  80b0				   _Pshift_left_end
  12848  80b0
  12849  80b0
  12850  80b0
  12851  80b0
  12852  80b0
  12853  80b0
  12854  80b0
  12855  80b0				   _Pshift_right SUBROUTINE
  12856  80b0				   FPULL      SET	0
      0  80b0					      pword	#319
      1  80b0					      IF	!FPUSH
      2  80b0		       a9 3f		      lda	#<#319
      3  80b2		       48		      pha
      4  80b3		       a9 01		      lda	#>#319
      5  80b5		       48		      pha
      6  80b6				  -	      ELSE
      7  80b6				  -	      lda	#<#319
      8  80b6				  -	      ldy	#>#319
      9  80b6					      ENDIF
      0  80b6					      pword	#1665
      1  80b6					      IF	!FPUSH
      2  80b6		       a9 81		      lda	#<#1665
      3  80b8		       48		      pha
      4  80b9		       a9 06		      lda	#>#1665
      5  80bb		       48		      pha
      6  80bc				  -	      ELSE
      7  80bc				  -	      lda	#<#1665
      8  80bc				  -	      ldy	#>#1665
      9  80bc					      ENDIF
      0  80bc					      pword	#1664
      1  80bc					      IF	!FPUSH
      2  80bc		       a9 80		      lda	#<#1664
      3  80be		       48		      pha
      4  80bf		       a9 06		      lda	#>#1664
      5  80c1		       48		      pha
      6  80c2				  -	      ELSE
      7  80c2				  -	      lda	#<#1664
      8  80c2				  -	      ldy	#>#1664
      9  80c2					      ENDIF
      0  80c2					      memshift
      1  80c2					      IF	!FPULL
      2  80c2		       68		      pla
      3  80c3		       85 fc		      sta	R1
      4  80c5		       68		      pla
      5  80c6		       85 fb		      sta	R0
      6  80c8				  -	      ELSE
      7  80c8				  -	      sta	R0
      8  80c8				  -	      sty	R1
      9  80c8					      ENDIF
     10  80c8		       68		      pla
     11  80c9		       85 fe		      sta	R3
     12  80cb		       68		      pla
     13  80cc		       85 fd		      sta	R2
     14  80ce		       68		      pla
     15  80cf		       85 40		      sta	R5
     16  80d1		       68		      pla
     17  80d2		       85 3f		      sta	R4
     18  80d4		       20 1a 0b 	      jsr	mem_memshift
  12861  80d4				   FPUSH      SET	1
      0  80d7					      pword	#1944
      1  80d7				  -	      IF	!FPUSH
      2  80d7				  -	      lda	#<#1944
      3  80d7				  -	      pha
      4  80d7				  -	      lda	#>#1944
      5  80d7				  -	      pha
      6  80d7					      ELSE
      7  80d7		       a9 98		      lda	#<#1944
      8  80d9		       a0 07		      ldy	#>#1944
      9  80db					      ENDIF
  12863  80db				   FPULL      SET	1
  12864  80db				   FPUSH      SET	0
      0  80db					      plw2var	_shift_right.loc
      1  80db				  -	      IF	!FPULL
      2  80db				  -	      pla
      3  80db				  -	      sta	_shift_right.loc+1
      4  80db				  -	      pla
      5  80db				  -	      sta	_shift_right.loc
      6  80db					      ELSE
      7  80db		       8d 51 b6 	      sta	_shift_right.loc
      8  80de		       8c 52 b6 	      sty	_shift_right.loc+1
      9  80e1					      ENDIF
  12866  80e1				   FPULL      SET	0
  12867  80e1				   FPUSH      SET	1
      0  80e1					      pbyte	#0
      1  80e1		       a9 00		      lda	#0
      2  80e3				  -	      IF	!FPUSH
      3  80e3				  -	      pha
      4  80e3					      ENDIF
  12869  80e3				   FPULL      SET	1
  12870  80e3				   FPUSH      SET	0
      0  80e3					      plb2var	_shift_right.i
      1  80e3				  -	      IF	!FPULL
      2  80e3				  -	      pla
      3  80e3					      ENDIF
      4  80e3		       8d 53 b6 	      sta	_shift_right.i
  12872  80e3				   FPULL      SET	0
  12873  80e3				   FPUSH      SET	1
      0  80e6					      pbyte	#7
      1  80e6		       a9 07		      lda	#7
      2  80e8				  -	      IF	!FPUSH
      3  80e8				  -	      pha
      4  80e8					      ENDIF
  12875  80e8				   FPULL      SET	1
  12876  80e8				   FPUSH      SET	0
      0  80e8					      plb2var	XFOR_max_4
      1  80e8				  -	      IF	!FPULL
      2  80e8				  -	      pla
      3  80e8					      ENDIF
      4  80e8		       8d 54 b6 	      sta	XFOR_max_4
  12878  80eb				   _FOR_4
      0  80eb					      forb	4, _shift_right.i
      1  80eb
      2  80eb		       ad 54 b6 	      lda	XFOR_max_4
      3  80ee		       cd 53 b6 	      cmp	_shift_right.i
      4  80f1		       b0 03		      bcs	.enter
      5  80f3
      6  80f3		       4c 44 81 	      jmp	_ENDFOR_4
      7  80f6				   .enter
  12880  80f6				   FPULL      SET	0
  12881  80f6				   FPUSH      SET	1
      0  80f6					      pwvar	_city_map_ptr_left
      1  80f6				  -	      IF	!FPUSH
      2  80f6				  -	      lda	_city_map_ptr_left
      3  80f6				  -	      pha
      4  80f6				  -	      lda	_city_map_ptr_left+1
      5  80f6				  -	      pha
      6  80f6					      ELSE
      7  80f6		       a5 02		      lda	_city_map_ptr_left
      8  80f8		       a4 03		      ldy	_city_map_ptr_left+1
      9  80fa					      ENDIF
  12883  80fa				   FPULL      SET	1
  12884  80fa				   FPUSH      SET	0
      0  80fa					      peekb
      1  80fa				  -	      IF	!FPULL
      2  80fa				  -	      pla
      3  80fa				  -	      sta	.selfmod_code+2
      4  80fa				  -	      pla
      5  80fa				  -	      sta	.selfmod_code+1
      6  80fa					      ELSE
      7  80fa		       8d 01 81 	      sta	.selfmod_code+1
      8  80fd		       8c 02 81 	      sty	.selfmod_code+2
      9  8100					      ENDIF
     10  8100				   .selfmod_code
     11  8100		       ad 00 00 	      lda.w	$0000
     12  8103					      IF	!FPUSH
     13  8103		       48		      pha
     14  8104					      ENDIF
  12886  8104				   FPULL      SET	0
  12887  8104				   FPUSH      SET	1
      0  8104					      pwvar	_shift_right.loc
      1  8104				  -	      IF	!FPUSH
      2  8104				  -	      lda	_shift_right.loc
      3  8104				  -	      pha
      4  8104				  -	      lda	_shift_right.loc+1
      5  8104				  -	      pha
      6  8104					      ELSE
      7  8104		       ad 51 b6 	      lda	_shift_right.loc
      8  8107		       ac 52 b6 	      ldy	_shift_right.loc+1
      9  810a					      ENDIF
  12889  810a				   FPULL      SET	1
  12890  810a				   FPUSH      SET	0
      0  810a					      pokeb
      1  810a				  -	      IF	!FPULL
      2  810a				  -	      pla
      3  810a				  -	      sta	.selfmod_code+2
      4  810a				  -	      pla
      5  810a				  -	      sta	.selfmod_code+1
      6  810a					      ELSE
      7  810a		       8d 12 81 	      sta	.selfmod_code+1
      8  810d		       8c 13 81 	      sty	.selfmod_code+2
      9  8110					      ENDIF
     10  8110		       68		      pla
     11  8111				   .selfmod_code
     12  8111		       8d 00 00 	      sta.w	$0000
  12892  8111				   FPULL      SET	0
  12893  8111				   FPUSH      SET	1
      0  8114					      opt_pwvar_pword_sub	_shift_right.loc, #40
      1  8114
      2  8114
      3  8114
      4  8114		       ad 51 b6 	      lda	_shift_right.loc
      5  8117		       38		      sec
      6  8118		       e9 28		      sbc	<#40
      7  811a				  -	      IF	!FPUSH
      8  811a				  -	      pha
      9  811a					      ELSE
     10  811a		       aa		      tax
     11  811b					      ENDIF
     12  811b		       ad 52 b6 	      lda	_shift_right.loc+1
     13  811e		       e9 00		      sbc	>#40
     14  8120				  -	      IF	!FPUSH
     15  8120				  -	      pha
     16  8120					      ELSE
     17  8120		       a8		      tay
     18  8121		       8a		      txa
     19  8122					      ENDIF
  12895  8122				   FPULL      SET	1
  12896  8122				   FPUSH      SET	0
      0  8122					      plw2var	_shift_right.loc
      1  8122				  -	      IF	!FPULL
      2  8122				  -	      pla
      3  8122				  -	      sta	_shift_right.loc+1
      4  8122				  -	      pla
      5  8122				  -	      sta	_shift_right.loc
      6  8122					      ELSE
      7  8122		       8d 51 b6 	      sta	_shift_right.loc
      8  8125		       8c 52 b6 	      sty	_shift_right.loc+1
      9  8128					      ENDIF
      0  8128					      decw	_city_map_ptr_left
      1  8128		       c6 02		      dec	_city_map_ptr_left
      2  812a		       a9 ff		      lda	#$ff
      3  812c		       c5 02		      cmp	_city_map_ptr_left
      4  812e		       d0 02		      bne	.skip
      5  8130		       c6 03		      dec	_city_map_ptr_left+1
      6  8132				   .skip
      0  8132					      decw	_city_map_ptr_right
      1  8132		       c6 04		      dec	_city_map_ptr_right
      2  8134		       a9 ff		      lda	#$ff
      3  8136		       c5 04		      cmp	_city_map_ptr_right
      4  8138		       d0 02		      bne	.skip
      5  813a		       c6 05		      dec	_city_map_ptr_right+1
      6  813c				   .skip
      0  813c					      nextb	4, _shift_right.i
      1  813c
      2  813c				  -	      IFCONST	XFOR_step_4
      3  813c				  -
      4  813c				  -	      clc
      5  813c				  -	      lda	XFOR_step_4
      6  813c				  -	      adc	_shift_right.i
      7  813c				  -	      sta	_shift_right.i
      8  813c				  -
      9  813c				  -	      bcs	_ENDFOR_4
     10  813c					      ELSE
     11  813c
     12  813c		       ee 53 b6 	      inc	_shift_right.i
     13  813f
     14  813f		       f0 03		      beq	_ENDFOR_4
     15  8141					      ENDIF
     16  8141		       4c eb 80 	      jmp	_FOR_4
  12901  8144
  12902  8144
  12903  8144
  12904  8144
  12905  8144				   _ENDFOR_4
  12906  8144				   FPULL      SET	0
      0  8144					      pwvar	_city_map_ptr_left
      1  8144					      IF	!FPUSH
      2  8144		       a5 02		      lda	_city_map_ptr_left
      3  8146		       48		      pha
      4  8147		       a5 03		      lda	_city_map_ptr_left+1
      5  8149		       48		      pha
      6  814a				  -	      ELSE
      7  814a				  -	      lda	_city_map_ptr_left
      8  814a				  -	      ldy	_city_map_ptr_left+1
      9  814a					      ENDIF
  12908  814a				   FPUSH      SET	1
      0  814a					      pword	#16383
      1  814a				  -	      IF	!FPUSH
      2  814a				  -	      lda	#<#16383
      3  814a				  -	      pha
      4  814a				  -	      lda	#>#16383
      5  814a				  -	      pha
      6  814a					      ELSE
      7  814a		       a9 ff		      lda	#<#16383
      8  814c		       a0 3f		      ldy	#>#16383
      9  814e					      ENDIF
  12910  814e				   FPULL      SET	1
      0  814e					      cmpweq
      1  814e				  -	      IF	!FPULL
      2  814e				  -	      pla
      3  814e				  -	      sta	R2
      4  814e				  -	      pla
      5  814e				  -	      sta	R1
      6  814e					      ELSE
      7  814e		       85 fc		      sta	R1
      8  8150		       84 fd		      sty	R2
      9  8152					      ENDIF
     10  8152		       68		      pla
     11  8153		       c5 fd		      cmp	R2
     12  8155		       d0 0a		      bne	.phf
     13  8157		       68		      pla
     14  8158		       c5 fc		      cmp	R1
     15  815a		       d0 06		      bne	.phf+1
      0  815c					      pone
      1  815c		       a9 01		      lda	#$01
      2  815e				  -	      IF	!FPUSH
      3  815e				  -	      pha
      4  815e					      ENDIF
     17  815e				  -	      IF	!FPUSH
     18  815e				  -	      jmp	*+7
     19  815e					      ELSE
     20  815e		       4c 64 81 	      jmp	*+6
     21  8161					      ENDIF
     22  8161				   .phf
     23  8161		       68		      pla
      0  8162					      pzero
      1  8162		       a9 00		      lda	#$00
      2  8164				  -	      IF	!FPUSH
      3  8164				  -	      pha
      4  8164					      ENDIF
  12912  8164				   FPUSH      SET	0
      0  8164					      cond_stmt	_EI_19, _EL_19
      1  8164				  -	      IF	!FPULL
      2  8164				  -	      pla
      3  8164					      ENDIF
      4  8164		       d0 03		      bne	*+5
      5  8166				  -	      IFCONST	_EL_19
      6  8166				  -	      jmp	_EL_19
      7  8166					      ELSE
      8  8166		       4c 71 81 	      jmp	_EI_19
      9  8169					      ENDIF
  12914  8169				   FPULL      SET	0
  12915  8169				   FPUSH      SET	1
      0  8169					      pword	#21503
      1  8169				  -	      IF	!FPUSH
      2  8169				  -	      lda	#<#21503
      3  8169				  -	      pha
      4  8169				  -	      lda	#>#21503
      5  8169				  -	      pha
      6  8169					      ELSE
      7  8169		       a9 ff		      lda	#<#21503
      8  816b		       a0 53		      ldy	#>#21503
      9  816d					      ENDIF
  12917  816d				   FPULL      SET	1
  12918  816d				   FPUSH      SET	0
      0  816d					      plw2var	_city_map_ptr_left
      1  816d				  -	      IF	!FPULL
      2  816d				  -	      pla
      3  816d				  -	      sta	_city_map_ptr_left+1
      4  816d				  -	      pla
      5  816d				  -	      sta	_city_map_ptr_left
      6  816d					      ELSE
      7  816d		       85 02		      sta	_city_map_ptr_left
      8  816f		       84 03		      sty	_city_map_ptr_left+1
      9  8171					      ENDIF
  12920  8171				   _EI_19
  12921  8171				   FPULL      SET	0
      0  8171					      pwvar	_city_map_ptr_right
      1  8171					      IF	!FPUSH
      2  8171		       a5 04		      lda	_city_map_ptr_right
      3  8173		       48		      pha
      4  8174		       a5 05		      lda	_city_map_ptr_right+1
      5  8176		       48		      pha
      6  8177				  -	      ELSE
      7  8177				  -	      lda	_city_map_ptr_right
      8  8177				  -	      ldy	_city_map_ptr_right+1
      9  8177					      ENDIF
  12923  8177				   FPUSH      SET	1
      0  8177					      pword	#16376
      1  8177				  -	      IF	!FPUSH
      2  8177				  -	      lda	#<#16376
      3  8177				  -	      pha
      4  8177				  -	      lda	#>#16376
      5  8177				  -	      pha
      6  8177					      ELSE
      7  8177		       a9 f8		      lda	#<#16376
      8  8179		       a0 3f		      ldy	#>#16376
      9  817b					      ENDIF
  12925  817b				   FPULL      SET	1
      0  817b					      cmpweq
      1  817b				  -	      IF	!FPULL
      2  817b				  -	      pla
      3  817b				  -	      sta	R2
      4  817b				  -	      pla
      5  817b				  -	      sta	R1
      6  817b					      ELSE
      7  817b		       85 fc		      sta	R1
      8  817d		       84 fd		      sty	R2
      9  817f					      ENDIF
     10  817f		       68		      pla
     11  8180		       c5 fd		      cmp	R2
     12  8182		       d0 0a		      bne	.phf
     13  8184		       68		      pla
     14  8185		       c5 fc		      cmp	R1
     15  8187		       d0 06		      bne	.phf+1
      0  8189					      pone
      1  8189		       a9 01		      lda	#$01
      2  818b				  -	      IF	!FPUSH
      3  818b				  -	      pha
      4  818b					      ENDIF
     17  818b				  -	      IF	!FPUSH
     18  818b				  -	      jmp	*+7
     19  818b					      ELSE
     20  818b		       4c 91 81 	      jmp	*+6
     21  818e					      ENDIF
     22  818e				   .phf
     23  818e		       68		      pla
      0  818f					      pzero
      1  818f		       a9 00		      lda	#$00
      2  8191				  -	      IF	!FPUSH
      3  8191				  -	      pha
      4  8191					      ENDIF
  12927  8191				   FPUSH      SET	0
      0  8191					      cond_stmt	_EI_20, _EL_20
      1  8191				  -	      IF	!FPULL
      2  8191				  -	      pla
      3  8191					      ENDIF
      4  8191		       d0 03		      bne	*+5
      5  8193				  -	      IFCONST	_EL_20
      6  8193				  -	      jmp	_EL_20
      7  8193					      ELSE
      8  8193		       4c 9e 81 	      jmp	_EI_20
      9  8196					      ENDIF
  12929  8196				   FPULL      SET	0
  12930  8196				   FPUSH      SET	1
      0  8196					      pword	#21496
      1  8196				  -	      IF	!FPUSH
      2  8196				  -	      lda	#<#21496
      3  8196				  -	      pha
      4  8196				  -	      lda	#>#21496
      5  8196				  -	      pha
      6  8196					      ELSE
      7  8196		       a9 f8		      lda	#<#21496
      8  8198		       a0 53		      ldy	#>#21496
      9  819a					      ENDIF
  12932  819a				   FPULL      SET	1
  12933  819a				   FPUSH      SET	0
      0  819a					      plw2var	_city_map_ptr_right
      1  819a				  -	      IF	!FPULL
      2  819a				  -	      pla
      3  819a				  -	      sta	_city_map_ptr_right+1
      4  819a				  -	      pla
      5  819a				  -	      sta	_city_map_ptr_right
      6  819a					      ELSE
      7  819a		       85 04		      sta	_city_map_ptr_right
      8  819c		       84 05		      sty	_city_map_ptr_right+1
      9  819e					      ENDIF
  12935  819e				   _EI_20
  12936  819e		       60		      rts
  12937  819f
  12938  819f
  12939  819f
  12940  819f
  12941  819f
  12942  819f
  12943  819f
  12944  819f				   _Pshift_right_end
  12945  819f
  12946  819f
  12947  819f
  12948  819f
  12949  819f
  12950  819f
  12951  819f
  12952  819f				   _Pquery_joystick SUBROUTINE
      0  819f					      pbyte_pbyte_cmpbneq_cond	_aircraft_mode, #0, _EI_65542, _EL_65542
      1  819f
      2  819f
      3  819f		       ad 35 b6 	      lda	_aircraft_mode
      4  81a2		       c9 00		      cmp	#0
      5  81a4		       d0 03		      bne	*+5
      6  81a6				  -	      IFCONST	_EL_65542
      7  81a6				  -	      jmp	_EL_65542
      8  81a6					      ELSE
      9  81a6		       4c aa 81 	      jmp	_EI_65542
     10  81a9					      ENDIF
  12954  81a9		       60		      rts
  12955  81aa
  12956  81aa
  12957  81aa
  12958  81aa
  12959  81aa
  12960  81aa
  12961  81aa
  12962  81aa				   _EI_65542
  12963  81aa		       20 dc 72 	      jsr	_Fbjoy_1_down
  12964  81aa				   FPULL      SET	0
  12965  81aa				   FPUSH      SET	1
      0  81ad					      pbyte	#1
      1  81ad		       a9 01		      lda	#1
      2  81af				  -	      IF	!FPUSH
      3  81af				  -	      pha
      4  81af					      ENDIF
  12967  81af				   FPULL      SET	1
  12968  81af				   FPUSH      SET	0
      0  81af					      cmpbeq
      1  81af				  -	      IF	!FPULL
      2  81af				  -	      pla
      3  81af					      ENDIF
      4  81af		       85 fc		      sta	R1
      5  81b1		       68		      pla
      6  81b2		       c5 fc		      cmp	R1
      7  81b4		       f0 06		      beq	.pht
      0  81b6					      pzero
      1  81b6		       a9 00		      lda	#$00
      2  81b8					      IF	!FPUSH
      3  81b8		       48		      pha
      4  81b9					      ENDIF
      9  81b9					      IF	!FPUSH
     10  81b9		       4c bf 81 	      jmp	*+6
     11  81bc				  -	      ELSE
     12  81bc				  -	      jmp	*+5
     13  81bc					      ENDIF
      0  81bc				   .pht       pone
      1  81bc		       a9 01		      lda	#$01
      2  81be					      IF	!FPUSH
      3  81be		       48		      pha
      4  81bf					      ENDIF
  12970  81bf				   FPULL      SET	0
  12971  81bf				   FPUSH      SET	1
      0  81bf					      pbyte_pbyte_cmpbeq	_fuel, #0
      1  81bf
      2  81bf
      3  81bf
      4  81bf
      5  81bf
      6  81bf		       ad 36 b6 	      lda	_fuel
      7  81c2		       c9 00		      cmp	#0
      8  81c4		       f0 05		      beq	.true
      0  81c6					      pzero
      1  81c6		       a9 00		      lda	#$00
      2  81c8				  -	      IF	!FPUSH
      3  81c8				  -	      pha
      4  81c8					      ENDIF
     10  81c8				  -	      IF	!FPUSH
     11  81c8				  -	      jmp	*+6
     12  81c8					      ELSE
     13  81c8		       4c cd 81 	      jmp	*+5
     14  81cb					      ENDIF
     15  81cb				   .true
      0  81cb					      pone
      1  81cb		       a9 01		      lda	#$01
      2  81cd				  -	      IF	!FPUSH
      3  81cd				  -	      pha
      4  81cd					      ENDIF
  12973  81cd				   FPULL      SET	1
      0  81cd					      orb
      1  81cd				  -	      IF	!FPULL
      2  81cd				  -	      pla
      3  81cd					      ENDIF
      4  81cd		       85 fc		      sta	R1
      5  81cf		       68		      pla
      6  81d0		       05 fc		      ora	R1
      7  81d2				  -	      IF	!FPUSH
      8  81d2				  -	      pha
      9  81d2					      ENDIF
  12975  81d2				   FPUSH      SET	0
      0  81d2					      cond_stmt	_EI_21, _EL_21
      1  81d2				  -	      IF	!FPULL
      2  81d2				  -	      pla
      3  81d2					      ENDIF
      4  81d2		       d0 03		      bne	*+5
      5  81d4					      IFCONST	_EL_21
      6  81d4		       4c ef 81 	      jmp	_EL_21
      7  81d7				  -	      ELSE
      8  81d7				  -	      jmp	_EI_21
      9  81d7					      ENDIF
      0  81d7					      incw	_aircraft_altitude
      1  81d7		       ee 2f b5 	      inc	_aircraft_altitude
      2  81da		       d0 03		      bne	.skip
      3  81dc		       ee 30 b5 	      inc	_aircraft_altitude+1
      4  81df				   .skip
      0  81df					      incw	_aircraft_altitude
      1  81df		       ee 2f b5 	      inc	_aircraft_altitude
      2  81e2		       d0 03		      bne	.skip
      3  81e4		       ee 30 b5 	      inc	_aircraft_altitude+1
      4  81e7				   .skip
  12979  81e7				   FPULL      SET	0
  12980  81e7				   FPUSH      SET	1
      0  81e7					      pbyte	#2
      1  81e7		       a9 02		      lda	#2
      2  81e9				  -	      IF	!FPUSH
      3  81e9				  -	      pha
      4  81e9					      ENDIF
  12982  81e9				   FPULL      SET	1
  12983  81e9				   FPUSH      SET	0
      0  81e9					      plb2var	_lifting
      1  81e9				  -	      IF	!FPULL
      2  81e9				  -	      pla
      3  81e9					      ENDIF
      4  81e9		       8d 2c b5 	      sta	_lifting
  12985  81ec		       4c 63 82 	      jmp	_EI_21
  12986  81ef				   _EL_21
  12987  81ef		       20 c0 72 	      jsr	_Fbjoy_1_up
  12988  81ef				   FPULL      SET	0
  12989  81ef				   FPUSH      SET	1
      0  81f2					      pbyte	#1
      1  81f2		       a9 01		      lda	#1
      2  81f4				  -	      IF	!FPUSH
      3  81f4				  -	      pha
      4  81f4					      ENDIF
  12991  81f4				   FPULL      SET	1
  12992  81f4				   FPUSH      SET	0
      0  81f4					      cmpbeq
      1  81f4				  -	      IF	!FPULL
      2  81f4				  -	      pla
      3  81f4					      ENDIF
      4  81f4		       85 fc		      sta	R1
      5  81f6		       68		      pla
      6  81f7		       c5 fc		      cmp	R1
      7  81f9		       f0 06		      beq	.pht
      0  81fb					      pzero
      1  81fb		       a9 00		      lda	#$00
      2  81fd					      IF	!FPUSH
      3  81fd		       48		      pha
      4  81fe					      ENDIF
      9  81fe					      IF	!FPUSH
     10  81fe		       4c 04 82 	      jmp	*+6
     11  8201				  -	      ELSE
     12  8201				  -	      jmp	*+5
     13  8201					      ENDIF
      0  8201				   .pht       pone
      1  8201		       a9 01		      lda	#$01
      2  8203					      IF	!FPUSH
      3  8203		       48		      pha
      4  8204					      ENDIF
  12994  8204				   FPULL      SET	0
      0  8204					      pwvar	_aircraft_altitude
      1  8204					      IF	!FPUSH
      2  8204		       ad 2f b5 	      lda	_aircraft_altitude
      3  8207		       48		      pha
      4  8208		       ad 30 b5 	      lda	_aircraft_altitude+1
      5  820b		       48		      pha
      6  820c				  -	      ELSE
      7  820c				  -	      lda	_aircraft_altitude
      8  820c				  -	      ldy	_aircraft_altitude+1
      9  820c					      ENDIF
      0  820c					      pword	#360
      1  820c					      IF	!FPUSH
      2  820c		       a9 68		      lda	#<#360
      3  820e		       48		      pha
      4  820f		       a9 01		      lda	#>#360
      5  8211		       48		      pha
      6  8212				  -	      ELSE
      7  8212				  -	      lda	#<#360
      8  8212				  -	      ldy	#>#360
      9  8212					      ENDIF
  12997  8212				   FPUSH      SET	1
      0  8212					      cmpwgt
      1  8212		       ba		      tsx
      2  8213		       bd 02 01 	      lda.wx	stack+2
      3  8216		       dd 04 01 	      cmp.wx	stack+4
      4  8219		       bd 01 01 	      lda.wx	stack+1
      5  821c		       fd 03 01 	      sbc.wx	stack+3
      6  821f		       30 0a		      bmi	.pht
      7  8221		       e8		      inx
      8  8222		       e8		      inx
      9  8223		       e8		      inx
     10  8224		       e8		      inx
     11  8225		       9a		      txs
      0  8226					      pzero
      1  8226		       a9 00		      lda	#$00
      2  8228				  -	      IF	!FPUSH
      3  8228				  -	      pha
      4  8228					      ENDIF
     13  8228				  -	      IF	!FPUSH
     14  8228				  -	      jmp	*+11
     15  8228					      ELSE
     16  8228		       4c 32 82 	      jmp	*+10
     17  822b					      ENDIF
     18  822b		       e8	   .pht       inx
     19  822c		       e8		      inx
     20  822d		       e8		      inx
     21  822e		       e8		      inx
     22  822f		       9a		      txs
      0  8230					      pone
      1  8230		       a9 01		      lda	#$01
      2  8232				  -	      IF	!FPUSH
      3  8232				  -	      pha
      4  8232					      ENDIF
  12999  8232				   FPULL      SET	1
      0  8232					      andb
      1  8232				  -	      IF	!FPULL
      2  8232				  -	      pla
      3  8232					      ENDIF
      4  8232		       85 fc		      sta	R1
      5  8234		       68		      pla
      6  8235		       25 fc		      and	R1
      7  8237				  -	      IF	!FPUSH
      8  8237				  -	      pha
      9  8237					      ENDIF
  13001  8237				   FPUSH      SET	0
      0  8237					      cond_stmt	_EI_22, _EL_22
      1  8237				  -	      IF	!FPULL
      2  8237				  -	      pla
      3  8237					      ENDIF
      4  8237		       d0 03		      bne	*+5
      5  8239					      IFCONST	_EL_22
      6  8239		       4c 5e 82 	      jmp	_EL_22
      7  823c				  -	      ELSE
      8  823c				  -	      jmp	_EI_22
      9  823c					      ENDIF
      0  823c					      decw	_aircraft_altitude
      1  823c		       ce 2f b5 	      dec	_aircraft_altitude
      2  823f		       a9 ff		      lda	#$ff
      3  8241		       cd 2f b5 	      cmp	_aircraft_altitude
      4  8244		       d0 03		      bne	.skip
      5  8246		       ce 30 b5 	      dec	_aircraft_altitude+1
      6  8249				   .skip
      0  8249					      decw	_aircraft_altitude
      1  8249		       ce 2f b5 	      dec	_aircraft_altitude
      2  824c		       a9 ff		      lda	#$ff
      3  824e		       cd 2f b5 	      cmp	_aircraft_altitude
      4  8251		       d0 03		      bne	.skip
      5  8253		       ce 30 b5 	      dec	_aircraft_altitude+1
      6  8256				   .skip
  13005  8256				   FPULL      SET	0
  13006  8256				   FPUSH      SET	1
      0  8256					      pbyte	#1
      1  8256		       a9 01		      lda	#1
      2  8258				  -	      IF	!FPUSH
      3  8258				  -	      pha
      4  8258					      ENDIF
  13008  8258				   FPULL      SET	1
  13009  8258				   FPUSH      SET	0
      0  8258					      plb2var	_lifting
      1  8258				  -	      IF	!FPULL
      2  8258				  -	      pla
      3  8258					      ENDIF
      4  8258		       8d 2c b5 	      sta	_lifting
  13011  825b		       4c 63 82 	      jmp	_EI_22
  13012  825e				   _EL_22
  13013  825e				   FPULL      SET	0
  13014  825e				   FPUSH      SET	1
      0  825e					      pbyte	#0
      1  825e		       a9 00		      lda	#0
      2  8260				  -	      IF	!FPUSH
      3  8260				  -	      pha
      4  8260					      ENDIF
  13016  8260				   FPULL      SET	1
  13017  8260				   FPUSH      SET	0
      0  8260					      plb2var	_lifting
      1  8260				  -	      IF	!FPULL
      2  8260				  -	      pla
      3  8260					      ENDIF
      4  8260		       8d 2c b5 	      sta	_lifting
  13019  8263				   _EI_22
  13020  8263
  13021  8263
  13022  8263
  13023  8263
  13024  8263
  13025  8263
  13026  8263
  13027  8263				   _EI_21
  13028  8263		       20 14 73 	      jsr	_Fbjoy_1_right
  13029  8263				   FPULL      SET	0
  13030  8263				   FPUSH      SET	1
      0  8266					      pbyte	#1
      1  8266		       a9 01		      lda	#1
      2  8268				  -	      IF	!FPUSH
      3  8268				  -	      pha
      4  8268					      ENDIF
  13032  8268				   FPULL      SET	1
      0  8268					      cmpbeq
      1  8268				  -	      IF	!FPULL
      2  8268				  -	      pla
      3  8268					      ENDIF
      4  8268		       85 fc		      sta	R1
      5  826a		       68		      pla
      6  826b		       c5 fc		      cmp	R1
      7  826d		       f0 05		      beq	.pht
      0  826f					      pzero
      1  826f		       a9 00		      lda	#$00
      2  8271				  -	      IF	!FPUSH
      3  8271				  -	      pha
      4  8271					      ENDIF
      9  8271				  -	      IF	!FPUSH
     10  8271				  -	      jmp	*+6
     11  8271					      ELSE
     12  8271		       4c 76 82 	      jmp	*+5
     13  8274					      ENDIF
      0  8274				   .pht       pone
      1  8274		       a9 01		      lda	#$01
      2  8276				  -	      IF	!FPUSH
      3  8276				  -	      pha
      4  8276					      ENDIF
  13034  8276				   FPUSH      SET	0
      0  8276					      cond_stmt	_EI_65543, _EL_65543
      1  8276				  -	      IF	!FPULL
      2  8276				  -	      pla
      3  8276					      ENDIF
      4  8276		       d0 03		      bne	*+5
      5  8278				  -	      IFCONST	_EL_65543
      6  8278				  -	      jmp	_EL_65543
      7  8278					      ELSE
      8  8278		       4c 80 82 	      jmp	_EI_65543
      9  827b					      ENDIF
  13036  827b				   FPULL      SET	0
  13037  827b				   FPUSH      SET	1
      0  827b					      pbyte	#1
      1  827b		       a9 01		      lda	#1
      2  827d				  -	      IF	!FPUSH
      3  827d				  -	      pha
      4  827d					      ENDIF
  13039  827d				   FPULL      SET	1
  13040  827d				   FPUSH      SET	0
      0  827d					      plb2var	_query_joystick.joy_dir
      1  827d				  -	      IF	!FPULL
      2  827d				  -	      pla
      3  827d					      ENDIF
      4  827d		       8d 55 b6 	      sta	_query_joystick.joy_dir
  13042  8280				   _EI_65543
  13043  8280		       20 14 73 	      jsr	_Fbjoy_1_right
  13044  8280				   FPULL      SET	0
  13045  8280				   FPUSH      SET	1
      0  8283					      pbyte	#1
      1  8283		       a9 01		      lda	#1
      2  8285				  -	      IF	!FPUSH
      3  8285				  -	      pha
      4  8285					      ENDIF
  13047  8285				   FPULL      SET	1
      0  8285					      cmpbeq
      1  8285				  -	      IF	!FPULL
      2  8285				  -	      pla
      3  8285					      ENDIF
      4  8285		       85 fc		      sta	R1
      5  8287		       68		      pla
      6  8288		       c5 fc		      cmp	R1
      7  828a		       f0 05		      beq	.pht
      0  828c					      pzero
      1  828c		       a9 00		      lda	#$00
      2  828e				  -	      IF	!FPUSH
      3  828e				  -	      pha
      4  828e					      ENDIF
      9  828e				  -	      IF	!FPUSH
     10  828e				  -	      jmp	*+6
     11  828e					      ELSE
     12  828e		       4c 93 82 	      jmp	*+5
     13  8291					      ENDIF
      0  8291				   .pht       pone
      1  8291		       a9 01		      lda	#$01
      2  8293				  -	      IF	!FPUSH
      3  8293				  -	      pha
      4  8293					      ENDIF
  13049  8293				   FPUSH      SET	0
      0  8293					      cond_stmt	_EI_23, _EL_23
      1  8293				  -	      IF	!FPULL
      2  8293				  -	      pla
      3  8293					      ENDIF
      4  8293		       d0 03		      bne	*+5
      5  8295					      IFCONST	_EL_23
      6  8295		       4c cd 82 	      jmp	_EL_23
      7  8298				  -	      ELSE
      8  8298				  -	      jmp	_EI_23
      9  8298					      ENDIF
      0  8298					      pbyte_pbyte_cmpbeq_cond	_dir, #1, _EI_24, _EL_24
      1  8298
      2  8298
      3  8298		       ad 24 b5 	      lda	_dir
      4  829b		       c9 01		      cmp	#1
      5  829d		       f0 03		      beq	*+5
      6  829f					      IFCONST	_EL_24
      7  829f		       4c b2 82 	      jmp	_EL_24
      8  82a2				  -	      ELSE
      9  82a2				  -	      jmp	_EI_24
     10  82a2					      ENDIF
      0  82a2					      pbyte_pbyte_cmpblt_cond	_speed, #96, _EI_25, _EL_25
      1  82a2
      2  82a2
      3  82a2		       ad 23 b5 	      lda	_speed
      4  82a5		       c9 60		      cmp	#96
      5  82a7		       90 03		      bcc	*+5
      6  82a9				  -	      IFCONST	_EL_25
      7  82a9				  -	      jmp	_EL_25
      8  82a9					      ELSE
      9  82a9		       4c af 82 	      jmp	_EI_25
     10  82ac					      ENDIF
      0  82ac					      incb	_speed
      1  82ac		       ee 23 b5 	      inc	_speed
  13054  82af
  13055  82af
  13056  82af
  13057  82af
  13058  82af
  13059  82af
  13060  82af				   _EI_25
  13061  82af		       4c ca 82 	      jmp	_EI_24
  13062  82b2
  13063  82b2
  13064  82b2
  13065  82b2
  13066  82b2
  13067  82b2
  13068  82b2
  13069  82b2				   _EL_24
      0  82b2					      pbyte_pbyte_cmpbgt_cond	_speed, #48, _EI_26, _EL_26
      1  82b2
      2  82b2
      3  82b2		       a9 30		      lda	#48
      4  82b4		       cd 23 b5 	      cmp	_speed
      5  82b7		       90 03		      bcc	*+5
      6  82b9					      IFCONST	_EL_26
      7  82b9		       4c c5 82 	      jmp	_EL_26
      8  82bc				  -	      ELSE
      9  82bc				  -	      jmp	_EI_26
     10  82bc					      ENDIF
      0  82bc					      decb	_speed
      1  82bc		       ce 23 b5 	      dec	_speed
      0  82bf					      decb	_speed
      1  82bf		       ce 23 b5 	      dec	_speed
  13073  82c2		       4c ca 82 	      jmp	_EI_26
  13074  82c5
  13075  82c5
  13076  82c5
  13077  82c5
  13078  82c5
  13079  82c5
  13080  82c5
  13081  82c5				   _EL_26
  13082  82c5				   FPULL      SET	0
  13083  82c5				   FPUSH      SET	1
      0  82c5					      pbyte	#2
      1  82c5		       a9 02		      lda	#2
      2  82c7				  -	      IF	!FPUSH
      3  82c7				  -	      pha
      4  82c7					      ENDIF
  13085  82c7				   FPULL      SET	1
  13086  82c7				   FPUSH      SET	0
      0  82c7					      plb2var	_turning
      1  82c7				  -	      IF	!FPULL
      2  82c7				  -	      pla
      3  82c7					      ENDIF
      4  82c7		       8d 2b b5 	      sta	_turning
  13088  82ca				   _EI_26
  13089  82ca
  13090  82ca
  13091  82ca
  13092  82ca
  13093  82ca
  13094  82ca
  13095  82ca
  13096  82ca				   _EI_24
  13097  82ca		       4c 17 83 	      jmp	_EI_23
  13098  82cd
  13099  82cd
  13100  82cd
  13101  82cd
  13102  82cd
  13103  82cd
  13104  82cd
  13105  82cd				   _EL_23
  13106  82cd		       20 f8 72 	      jsr	_Fbjoy_1_left
  13107  82cd				   FPULL      SET	0
  13108  82cd				   FPUSH      SET	1
      0  82d0					      pbyte	#1
      1  82d0		       a9 01		      lda	#1
      2  82d2				  -	      IF	!FPUSH
      3  82d2				  -	      pha
      4  82d2					      ENDIF
  13110  82d2				   FPULL      SET	1
      0  82d2					      cmpbeq
      1  82d2				  -	      IF	!FPULL
      2  82d2				  -	      pla
      3  82d2					      ENDIF
      4  82d2		       85 fc		      sta	R1
      5  82d4		       68		      pla
      6  82d5		       c5 fc		      cmp	R1
      7  82d7		       f0 05		      beq	.pht
      0  82d9					      pzero
      1  82d9		       a9 00		      lda	#$00
      2  82db				  -	      IF	!FPUSH
      3  82db				  -	      pha
      4  82db					      ENDIF
      9  82db				  -	      IF	!FPUSH
     10  82db				  -	      jmp	*+6
     11  82db					      ELSE
     12  82db		       4c e0 82 	      jmp	*+5
     13  82de					      ENDIF
      0  82de				   .pht       pone
      1  82de		       a9 01		      lda	#$01
      2  82e0				  -	      IF	!FPUSH
      3  82e0				  -	      pha
      4  82e0					      ENDIF
  13112  82e0				   FPUSH      SET	0
      0  82e0					      cond_stmt	_EI_27, _EL_27
      1  82e0				  -	      IF	!FPULL
      2  82e0				  -	      pla
      3  82e0					      ENDIF
      4  82e0		       d0 03		      bne	*+5
      5  82e2				  -	      IFCONST	_EL_27
      6  82e2				  -	      jmp	_EL_27
      7  82e2					      ELSE
      8  82e2		       4c 17 83 	      jmp	_EI_27
      9  82e5					      ENDIF
      0  82e5					      pbyte_pbyte_cmpbeq_cond	_dir, #0, _EI_28, _EL_28
      1  82e5
      2  82e5
      3  82e5		       ad 24 b5 	      lda	_dir
      4  82e8		       c9 00		      cmp	#0
      5  82ea		       f0 03		      beq	*+5
      6  82ec					      IFCONST	_EL_28
      7  82ec		       4c ff 82 	      jmp	_EL_28
      8  82ef				  -	      ELSE
      9  82ef				  -	      jmp	_EI_28
     10  82ef					      ENDIF
      0  82ef					      pbyte_pbyte_cmpblt_cond	_speed, #96, _EI_29, _EL_29
      1  82ef
      2  82ef
      3  82ef		       ad 23 b5 	      lda	_speed
      4  82f2		       c9 60		      cmp	#96
      5  82f4		       90 03		      bcc	*+5
      6  82f6				  -	      IFCONST	_EL_29
      7  82f6				  -	      jmp	_EL_29
      8  82f6					      ELSE
      9  82f6		       4c fc 82 	      jmp	_EI_29
     10  82f9					      ENDIF
      0  82f9					      incb	_speed
      1  82f9		       ee 23 b5 	      inc	_speed
  13117  82fc
  13118  82fc
  13119  82fc
  13120  82fc
  13121  82fc
  13122  82fc
  13123  82fc				   _EI_29
  13124  82fc		       4c 17 83 	      jmp	_EI_28
  13125  82ff
  13126  82ff
  13127  82ff
  13128  82ff
  13129  82ff
  13130  82ff
  13131  82ff
  13132  82ff				   _EL_28
      0  82ff					      pbyte_pbyte_cmpbgt_cond	_speed, #48, _EI_30, _EL_30
      1  82ff
      2  82ff
      3  82ff		       a9 30		      lda	#48
      4  8301		       cd 23 b5 	      cmp	_speed
      5  8304		       90 03		      bcc	*+5
      6  8306					      IFCONST	_EL_30
      7  8306		       4c 12 83 	      jmp	_EL_30
      8  8309				  -	      ELSE
      9  8309				  -	      jmp	_EI_30
     10  8309					      ENDIF
      0  8309					      decb	_speed
      1  8309		       ce 23 b5 	      dec	_speed
      0  830c					      decb	_speed
      1  830c		       ce 23 b5 	      dec	_speed
  13136  830f		       4c 17 83 	      jmp	_EI_30
  13137  8312
  13138  8312
  13139  8312
  13140  8312
  13141  8312
  13142  8312
  13143  8312
  13144  8312				   _EL_30
  13145  8312				   FPULL      SET	0
  13146  8312				   FPUSH      SET	1
      0  8312					      pbyte	#1
      1  8312		       a9 01		      lda	#1
      2  8314				  -	      IF	!FPUSH
      3  8314				  -	      pha
      4  8314					      ENDIF
  13148  8314				   FPULL      SET	1
  13149  8314				   FPUSH      SET	0
      0  8314					      plb2var	_turning
      1  8314				  -	      IF	!FPULL
      2  8314				  -	      pla
      3  8314					      ENDIF
      4  8314		       8d 2b b5 	      sta	_turning
  13151  8317				   _EI_30
  13152  8317
  13153  8317
  13154  8317
  13155  8317
  13156  8317
  13157  8317
  13158  8317
  13159  8317				   _EI_28
  13160  8317
  13161  8317
  13162  8317
  13163  8317
  13164  8317
  13165  8317
  13166  8317
  13167  8317				   _EI_27
  13168  8317
  13169  8317
  13170  8317
  13171  8317
  13172  8317
  13173  8317
  13174  8317
  13175  8317				   _EI_23
  13176  8317		       20 30 73 	      jsr	_Fbjoy_1_fire
  13177  8317				   FPULL      SET	0
  13178  8317				   FPUSH      SET	1
      0  831a					      pbyte	#1
      1  831a		       a9 01		      lda	#1
      2  831c				  -	      IF	!FPUSH
      3  831c				  -	      pha
      4  831c					      ENDIF
  13180  831c				   FPULL      SET	1
  13181  831c				   FPUSH      SET	0
      0  831c					      cmpbeq
      1  831c				  -	      IF	!FPULL
      2  831c				  -	      pla
      3  831c					      ENDIF
      4  831c		       85 fc		      sta	R1
      5  831e		       68		      pla
      6  831f		       c5 fc		      cmp	R1
      7  8321		       f0 06		      beq	.pht
      0  8323					      pzero
      1  8323		       a9 00		      lda	#$00
      2  8325					      IF	!FPUSH
      3  8325		       48		      pha
      4  8326					      ENDIF
      9  8326					      IF	!FPUSH
     10  8326		       4c 2c 83 	      jmp	*+6
     11  8329				  -	      ELSE
     12  8329				  -	      jmp	*+5
     13  8329					      ENDIF
      0  8329				   .pht       pone
      1  8329		       a9 01		      lda	#$01
      2  832b					      IF	!FPUSH
      3  832b		       48		      pha
      4  832c					      ENDIF
  13183  832c				   FPULL      SET	0
  13184  832c				   FPUSH      SET	1
      0  832c					      pbyte_pbyte_cmpbeq	_bullet_on, #0
      1  832c
      2  832c
      3  832c
      4  832c
      5  832c
      6  832c		       ad 29 b6 	      lda	_bullet_on
      7  832f		       c9 00		      cmp	#0
      8  8331		       f0 05		      beq	.true
      0  8333					      pzero
      1  8333		       a9 00		      lda	#$00
      2  8335				  -	      IF	!FPUSH
      3  8335				  -	      pha
      4  8335					      ENDIF
     10  8335				  -	      IF	!FPUSH
     11  8335				  -	      jmp	*+6
     12  8335					      ELSE
     13  8335		       4c 3a 83 	      jmp	*+5
     14  8338					      ENDIF
     15  8338				   .true
      0  8338					      pone
      1  8338		       a9 01		      lda	#$01
      2  833a				  -	      IF	!FPUSH
      3  833a				  -	      pha
      4  833a					      ENDIF
  13186  833a				   FPULL      SET	1
      0  833a					      andb
      1  833a				  -	      IF	!FPULL
      2  833a				  -	      pla
      3  833a					      ENDIF
      4  833a		       85 fc		      sta	R1
      5  833c		       68		      pla
      6  833d		       25 fc		      and	R1
      7  833f				  -	      IF	!FPUSH
      8  833f				  -	      pha
      9  833f					      ENDIF
  13188  833f				   FPUSH      SET	0
      0  833f					      cond_stmt	_EI_31, _EL_31
      1  833f				  -	      IF	!FPULL
      2  833f				  -	      pla
      3  833f					      ENDIF
      4  833f		       d0 03		      bne	*+5
      5  8341				  -	      IFCONST	_EL_31
      6  8341				  -	      jmp	_EL_31
      7  8341					      ELSE
      8  8341		       4c 2d 84 	      jmp	_EI_31
      9  8344					      ENDIF
      0  8344					      pbyte_pbyte_cmpbeq_cond	_turning, #0, _EI_32, _EL_32
      1  8344
      2  8344
      3  8344		       ad 2b b5 	      lda	_turning
      4  8347		       c9 00		      cmp	#0
      5  8349		       f0 03		      beq	*+5
      6  834b				  -	      IFCONST	_EL_32
      7  834b				  -	      jmp	_EL_32
      8  834b					      ELSE
      9  834b		       4c 2d 84 	      jmp	_EI_32
     10  834e					      ENDIF
  13191  834e				   FPULL      SET	0
  13192  834e				   FPUSH      SET	1
      0  834e					      pbyte	#1
      1  834e		       a9 01		      lda	#1
      2  8350				  -	      IF	!FPUSH
      3  8350				  -	      pha
      4  8350					      ENDIF
  13194  8350				   FPULL      SET	1
  13195  8350				   FPUSH      SET	0
      0  8350					      plb2var	_bullet_on
      1  8350				  -	      IF	!FPULL
      2  8350				  -	      pla
      3  8350					      ENDIF
      4  8350		       8d 29 b6 	      sta	_bullet_on
  13197  8350				   FPULL      SET	0
  13198  8350				   FPUSH      SET	1
      0  8353					      pbvar	_dir
      0  8353					      pbyte	_dir
      1  8353		       ad 24 b5 	      lda	_dir
      2  8356				  -	      IF	!FPUSH
      3  8356				  -	      pha
      4  8356					      ENDIF
  13200  8356				   FPULL      SET	1
  13201  8356				   FPUSH      SET	0
      0  8356					      plb2var	_bullet_dir
      1  8356				  -	      IF	!FPULL
      2  8356				  -	      pla
      3  8356					      ENDIF
      4  8356		       8d 34 b6 	      sta	_bullet_dir
  13203  8359		       20 dc 72 	      jsr	_Fbjoy_1_down
  13204  8359				   FPULL      SET	0
  13205  8359				   FPUSH      SET	1
      0  835c					      pbyte	#1
      1  835c		       a9 01		      lda	#1
      2  835e				  -	      IF	!FPUSH
      3  835e				  -	      pha
      4  835e					      ENDIF
  13207  835e				   FPULL      SET	1
      0  835e					      cmpbeq
      1  835e				  -	      IF	!FPULL
      2  835e				  -	      pla
      3  835e					      ENDIF
      4  835e		       85 fc		      sta	R1
      5  8360		       68		      pla
      6  8361		       c5 fc		      cmp	R1
      7  8363		       f0 05		      beq	.pht
      0  8365					      pzero
      1  8365		       a9 00		      lda	#$00
      2  8367				  -	      IF	!FPUSH
      3  8367				  -	      pha
      4  8367					      ENDIF
      9  8367				  -	      IF	!FPUSH
     10  8367				  -	      jmp	*+6
     11  8367					      ELSE
     12  8367		       4c 6c 83 	      jmp	*+5
     13  836a					      ENDIF
      0  836a				   .pht       pone
      1  836a		       a9 01		      lda	#$01
      2  836c				  -	      IF	!FPUSH
      3  836c				  -	      pha
      4  836c					      ENDIF
  13209  836c				   FPUSH      SET	0
      0  836c					      cond_stmt	_EI_33, _EL_33
      1  836c				  -	      IF	!FPULL
      2  836c				  -	      pla
      3  836c					      ENDIF
      4  836c		       d0 03		      bne	*+5
      5  836e					      IFCONST	_EL_33
      6  836e		       4c b1 83 	      jmp	_EL_33
      7  8371				  -	      ELSE
      8  8371				  -	      jmp	_EI_33
      9  8371					      ENDIF
  13211  8371				   FPULL      SET	0
      0  8371					      pbyte	#174
      1  8371		       a9 ae		      lda	#174
      2  8373					      IF	!FPUSH
      3  8373		       48		      pha
      4  8374					      ENDIF
      0  8374					      btow
      1  8374		       a9 00		      lda	#$00
      2  8376		       48		      pha
      0  8377					      plw2var	_bullet_xpos
      1  8377					      IF	!FPULL
      2  8377		       68		      pla
      3  8378		       8d 2b b6 	      sta	_bullet_xpos+1
      4  837b		       68		      pla
      5  837c		       8d 2a b6 	      sta	_bullet_xpos
      6  837f				  -	      ELSE
      7  837f				  -	      sta	_bullet_xpos
      8  837f				  -	      sty	_bullet_xpos+1
      9  837f					      ENDIF
      0  837f					      pwvar	_aircraft_altitude
      1  837f					      IF	!FPUSH
      2  837f		       ad 2f b5 	      lda	_aircraft_altitude
      3  8382		       48		      pha
      4  8383		       ad 30 b5 	      lda	_aircraft_altitude+1
      5  8386		       48		      pha
      6  8387				  -	      ELSE
      7  8387				  -	      lda	_aircraft_altitude
      8  8387				  -	      ldy	_aircraft_altitude+1
      9  8387					      ENDIF
      0  8387					      rshiftwc	2
      1  8387		       ba		      tsx
      2  8388					      REPEAT	2
      3  8388		       5e 01 01 	      lsr.wx	stack+1
      4  838b		       7e 02 01 	      ror.wx	stack+2
      2  838b					      REPEND
      3  838e		       5e 01 01 	      lsr.wx	stack+1
      4  8391		       7e 02 01 	      ror.wx	stack+2
      5  8394					      REPEND
      0  8394					      wtob
      1  8394		       68		      pla
  13218  8394				   FPUSH      SET	1
      0  8395					      pbyte	#2
      1  8395		       a9 02		      lda	#2
      2  8397				  -	      IF	!FPUSH
      3  8397				  -	      pha
      4  8397					      ENDIF
  13220  8397				   FPULL      SET	1
      0  8397					      addb
      1  8397				  -	      IF	!FPULL
      2  8397				  -	      pla
      3  8397					      ENDIF
      4  8397		       85 fb		      sta	R0
      5  8399		       68		      pla
      6  839a		       18		      clc
      7  839b		       65 fb		      adc	R0
      8  839d				  -	      IF	!FPUSH
      9  839d				  -	      pha
     10  839d					      ENDIF
  13222  839d				   FPUSH      SET	0
      0  839d					      plb2var	_bullet_ypos
      1  839d				  -	      IF	!FPULL
      2  839d				  -	      pla
      3  839d					      ENDIF
      4  839d		       8d 2c b6 	      sta	_bullet_ypos
  13224  839d				   FPULL      SET	0
  13225  839d				   FPUSH      SET	1
      0  83a0					      pbvar	_microspeed
      0  83a0					      pbyte	_microspeed
      1  83a0		       ad 3e b6 	      lda	_microspeed
      2  83a3				  -	      IF	!FPUSH
      3  83a3				  -	      pha
      4  83a3					      ENDIF
  13227  83a3				   FPULL      SET	1
  13228  83a3				   FPUSH      SET	0
      0  83a3					      plb2var	_bullet_speed
      1  83a3				  -	      IF	!FPULL
      2  83a3				  -	      pla
      3  83a3					      ENDIF
      4  83a3		       8d 2e b6 	      sta	_bullet_speed
  13230  83a3				   FPULL      SET	0
  13231  83a3				   FPUSH      SET	1
      0  83a6					      pbyte	#4
      1  83a6		       a9 04		      lda	#4
      2  83a8				  -	      IF	!FPUSH
      3  83a8				  -	      pha
      4  83a8					      ENDIF
  13233  83a8				   FPULL      SET	1
  13234  83a8				   FPUSH      SET	0
      0  83a8					      plb2var	_sfx_start.effect_no
      1  83a8				  -	      IF	!FPULL
      2  83a8				  -	      pla
      3  83a8					      ENDIF
      4  83a8		       8d 21 b5 	      sta	_sfx_start.effect_no
  13236  83ab		       20 48 75 	      jsr	_Psfx_start
  13237  83ae		       4c 0b 84 	      jmp	_EI_33
  13238  83b1				   _EL_33
  13239  83b1				   FPULL      SET	0
      0  83b1					      pbyte	#166
      1  83b1		       a9 a6		      lda	#166
      2  83b3					      IF	!FPUSH
      3  83b3		       48		      pha
      4  83b4					      ENDIF
      0  83b4					      pbvar	_dir
      0  83b4					      pbyte	_dir
      1  83b4		       ad 24 b5 	      lda	_dir
      2  83b7					      IF	!FPUSH
      3  83b7		       48		      pha
      4  83b8					      ENDIF
  13242  83b8				   FPUSH      SET	1
      0  83b8					      pbyte	#16
      1  83b8		       a9 10		      lda	#16
      2  83ba				  -	      IF	!FPUSH
      3  83ba				  -	      pha
      4  83ba					      ENDIF
  13244  83ba				   FPULL      SET	1
      0  83ba					      mulb
      1  83ba				  -	      IF	!FPULL
      2  83ba				  -	      pla
      3  83ba					      ENDIF
      4  83ba		       85 fc		      sta	R1
      5  83bc		       68		      pla
      6  83bd		       85 fd		      sta	R2
      7  83bf		       a9 00		      lda	#$00
      8  83c1		       f0 05		      beq	.enterLoop
      9  83c3				   .doAdd
     10  83c3		       18		      clc
     11  83c4		       65 fc		      adc	R1
     12  83c6				   .loop
     13  83c6		       06 fc		      asl	R1
     14  83c8				   .enterLoop
     15  83c8		       46 fd		      lsr	R2
     16  83ca		       b0 f7		      bcs	.doAdd
     17  83cc		       d0 f8		      bne	.loop
     18  83ce				   .end
     19  83ce				  -	      IF	!FPUSH
     20  83ce				  -	      pha
     21  83ce					      ENDIF
  13246  83ce				   FPUSH      SET	0
      0  83ce					      addb
      1  83ce				  -	      IF	!FPULL
      2  83ce				  -	      pla
      3  83ce					      ENDIF
      4  83ce		       85 fb		      sta	R0
      5  83d0		       68		      pla
      6  83d1		       18		      clc
      7  83d2		       65 fb		      adc	R0
      8  83d4					      IF	!FPUSH
      9  83d4		       48		      pha
     10  83d5					      ENDIF
      0  83d5					      btow
      1  83d5		       a9 00		      lda	#$00
      2  83d7		       48		      pha
  13249  83d7				   FPULL      SET	0
      0  83d8					      plw2var	_bullet_xpos
      1  83d8					      IF	!FPULL
      2  83d8		       68		      pla
      3  83d9		       8d 2b b6 	      sta	_bullet_xpos+1
      4  83dc		       68		      pla
      5  83dd		       8d 2a b6 	      sta	_bullet_xpos
      6  83e0				  -	      ELSE
      7  83e0				  -	      sta	_bullet_xpos
      8  83e0				  -	      sty	_bullet_xpos+1
      9  83e0					      ENDIF
      0  83e0					      pwvar	_aircraft_altitude
      1  83e0					      IF	!FPUSH
      2  83e0		       ad 2f b5 	      lda	_aircraft_altitude
      3  83e3		       48		      pha
      4  83e4		       ad 30 b5 	      lda	_aircraft_altitude+1
      5  83e7		       48		      pha
      6  83e8				  -	      ELSE
      7  83e8				  -	      lda	_aircraft_altitude
      8  83e8				  -	      ldy	_aircraft_altitude+1
      9  83e8					      ENDIF
      0  83e8					      rshiftwc	2
      1  83e8		       ba		      tsx
      2  83e9					      REPEAT	2
      3  83e9		       5e 01 01 	      lsr.wx	stack+1
      4  83ec		       7e 02 01 	      ror.wx	stack+2
      2  83ec					      REPEND
      3  83ef		       5e 01 01 	      lsr.wx	stack+1
      4  83f2		       7e 02 01 	      ror.wx	stack+2
      5  83f5					      REPEND
      0  83f5					      wtob
      1  83f5		       68		      pla
      0  83f6					      plb2var	_bullet_ypos
      1  83f6					      IF	!FPULL
      2  83f6		       68		      pla
      3  83f7					      ENDIF
      4  83f7		       8d 2c b6 	      sta	_bullet_ypos
  13255  83f7				   FPUSH      SET	1
      0  83fa					      opt_pbyte_pbyte_add	_microspeed, #12
      1  83fa
      2  83fa
      3  83fa
      4  83fa
      5  83fa
      6  83fa		       ad 3e b6 	      lda	_microspeed
      7  83fd		       18		      clc
      8  83fe		       69 0c		      adc	#12
      9  8400				  -	      IF	!FPUSH
     10  8400				  -	      pha
     11  8400					      ENDIF
  13257  8400				   FPULL      SET	1
  13258  8400				   FPUSH      SET	0
      0  8400					      plb2var	_bullet_speed
      1  8400				  -	      IF	!FPULL
      2  8400				  -	      pla
      3  8400					      ENDIF
      4  8400		       8d 2e b6 	      sta	_bullet_speed
  13260  8400				   FPULL      SET	0
  13261  8400				   FPUSH      SET	1
      0  8403					      pbyte	#0
      1  8403		       a9 00		      lda	#0
      2  8405				  -	      IF	!FPUSH
      3  8405				  -	      pha
      4  8405					      ENDIF
  13263  8405				   FPULL      SET	1
  13264  8405				   FPUSH      SET	0
      0  8405					      plb2var	_sfx_start.effect_no
      1  8405				  -	      IF	!FPULL
      2  8405				  -	      pla
      3  8405					      ENDIF
      4  8405		       8d 21 b5 	      sta	_sfx_start.effect_no
  13266  8408		       20 48 75 	      jsr	_Psfx_start
  13267  840b				   _EI_33
  13268  840b				   FPULL      SET	0
  13269  840b				   FPUSH      SET	1
      0  840b					      opt_pbyte_pbarray_fast	_lifting, _query_joystick.lifting_to_bullet_dy
      1  840b
      2  840b
      3  840b
      4  840b		       ae 2c b5 	      ldx	_lifting
      5  840e		       bd 25 a4 	      lda	_query_joystick.lifting_to_bullet_dy,x
      6  8411				  -	      IF	!FPUSH
      7  8411				  -	      pha
      8  8411					      ENDIF
  13271  8411				   FPULL      SET	1
  13272  8411				   FPUSH      SET	0
      0  8411					      plb2var	_bullet_dy
      1  8411				  -	      IF	!FPULL
      2  8411				  -	      pla
      3  8411					      ENDIF
      4  8411		       8d 2d b6 	      sta	_bullet_dy
  13274  8411				   FPULL      SET	0
  13275  8411				   FPUSH      SET	1
      0  8414					      pbyte	#6
      1  8414		       a9 06		      lda	#6
      2  8416				  -	      IF	!FPUSH
      3  8416				  -	      pha
      4  8416					      ENDIF
  13277  8416				   FPULL      SET	1
  13278  8416				   FPUSH      SET	0
      0  8416					      plb2var	_spr_enable.spr_no
      1  8416				  -	      IF	!FPULL
      2  8416				  -	      pla
      3  8416					      ENDIF
      4  8416		       8d fa b4 	      sta	_spr_enable.spr_no
  13280  8419		       20 6e 71 	      jsr	_Pspr_enable
  13281  8419				   FPULL      SET	0
  13282  8419				   FPUSH      SET	1
      0  841c					      pbyte	#6
      1  841c		       a9 06		      lda	#6
      2  841e				  -	      IF	!FPUSH
      3  841e				  -	      pha
      4  841e					      ENDIF
  13284  841e				   FPULL      SET	1
  13285  841e				   FPUSH      SET	0
      0  841e					      plb2var	_spr_setshape.spr_no
      1  841e				  -	      IF	!FPULL
      2  841e				  -	      pla
      3  841e					      ENDIF
      4  841e		       8d 05 b5 	      sta	_spr_setshape.spr_no
  13287  841e				   FPULL      SET	0
  13288  841e				   FPUSH      SET	1
      0  8421					      opt_pbyte_pbyte_sub	#223, _dir
      1  8421
      2  8421
      3  8421
      4  8421
      5  8421
      6  8421		       a9 df		      lda	#223
      7  8423		       38		      sec
      8  8424		       ed 24 b5 	      sbc	_dir
      9  8427				  -	      IF	!FPUSH
     10  8427				  -	      pha
     11  8427					      ENDIF
  13290  8427				   FPULL      SET	1
  13291  8427				   FPUSH      SET	0
      0  8427					      plb2var	_spr_setshape.shape
      1  8427				  -	      IF	!FPULL
      2  8427				  -	      pla
      3  8427					      ENDIF
      4  8427		       8d 06 b5 	      sta	_spr_setshape.shape
  13293  842a		       20 e0 71 	      jsr	_Pspr_setshape
  13294  842d
  13295  842d
  13296  842d
  13297  842d
  13298  842d				   _EI_32
  13299  842d
  13300  842d
  13301  842d
  13302  842d
  13303  842d
  13304  842d
  13305  842d
  13306  842d				   _EI_31
  13307  842d		       60		      rts
  13308  842e
  13309  842e
  13310  842e
  13311  842e
  13312  842e
  13313  842e
  13314  842e
  13315  842e				   _Pquery_joystick_end
  13316  842e
  13317  842e
  13318  842e
  13319  842e
  13320  842e
  13321  842e
  13322  842e
  13323  842e				   _Ppoll_collisions SUBROUTINE
      0  842e					      pbyte_pbyte_cmpbneq_cond	_aircraft_mode, #0, _EI_65544, _EL_65544
      1  842e
      2  842e
      3  842e		       ad 35 b6 	      lda	_aircraft_mode
      4  8431		       c9 00		      cmp	#0
      5  8433		       d0 03		      bne	*+5
      6  8435				  -	      IFCONST	_EL_65544
      7  8435				  -	      jmp	_EL_65544
      8  8435					      ELSE
      9  8435		       4c 39 84 	      jmp	_EI_65544
     10  8438					      ENDIF
  13325  8438		       60		      rts
  13326  8439
  13327  8439
  13328  8439
  13329  8439
  13330  8439
  13331  8439
  13332  8439
  13333  8439				   _EI_65544
  13334  8439				   FPULL      SET	0
  13335  8439				   FPUSH      SET	1
      0  8439					      peekb_const_addr	#53279
      1  8439
      2  8439
      3  8439
      4  8439		       d0 1f	   .ad	      EQU	#53279
      5  8439		       ad 1f d0 	      lda	.ad
      6  843c				  -	      IF	!FPUSH
      7  843c				  -	      pha
      8  843c					      ENDIF
  13337  843c				   FPULL      SET	1
  13338  843c				   FPUSH      SET	0
      0  843c					      plb2var	_poll_collisions.aircraft_coll_state
      1  843c				  -	      IF	!FPULL
      2  843c				  -	      pla
      3  843c					      ENDIF
      4  843c		       8d 56 b6 	      sta	_poll_collisions.aircraft_coll_state
  13340  843c				   FPULL      SET	0
      0  843f					      opt_pbyte_pbyte_and	_poll_collisions.aircraft_coll_state, #128
      1  843f
      2  843f
      3  843f
      4  843f
      5  843f
      6  843f		       ad 56 b6 	      lda	_poll_collisions.aircraft_coll_state
      7  8442		       29 80		      and	#128
      8  8444					      IF	!FPUSH
      9  8444		       48		      pha
     10  8445					      ENDIF
  13342  8445				   FPUSH      SET	1
      0  8445					      pbyte	#128
      1  8445		       a9 80		      lda	#128
      2  8447				  -	      IF	!FPUSH
      3  8447				  -	      pha
      4  8447					      ENDIF
  13344  8447				   FPULL      SET	1
      0  8447					      cmpbeq
      1  8447				  -	      IF	!FPULL
      2  8447				  -	      pla
      3  8447					      ENDIF
      4  8447		       85 fc		      sta	R1
      5  8449		       68		      pla
      6  844a		       c5 fc		      cmp	R1
      7  844c		       f0 05		      beq	.pht
      0  844e					      pzero
      1  844e		       a9 00		      lda	#$00
      2  8450				  -	      IF	!FPUSH
      3  8450				  -	      pha
      4  8450					      ENDIF
      9  8450				  -	      IF	!FPUSH
     10  8450				  -	      jmp	*+6
     11  8450					      ELSE
     12  8450		       4c 55 84 	      jmp	*+5
     13  8453					      ENDIF
      0  8453				   .pht       pone
      1  8453		       a9 01		      lda	#$01
      2  8455				  -	      IF	!FPUSH
      3  8455				  -	      pha
      4  8455					      ENDIF
  13346  8455				   FPUSH      SET	0
      0  8455					      cond_stmt	_EI_65545, _EL_65545
      1  8455				  -	      IF	!FPULL
      2  8455				  -	      pla
      3  8455					      ENDIF
      4  8455		       d0 03		      bne	*+5
      5  8457				  -	      IFCONST	_EL_65545
      6  8457				  -	      jmp	_EL_65545
      7  8457					      ELSE
      8  8457		       4c 5d 84 	      jmp	_EI_65545
      9  845a					      ENDIF
  13348  845a		       4c bb 85 	      jmp	_Lpoll_collisions.aircraft_hit
  13349  845d				   _EI_65545
  13350  845d				   FPULL      SET	0
  13351  845d				   FPUSH      SET	1
      0  845d					      peekb_const_addr	#53278
      1  845d
      2  845d
      3  845d
      4  845d		       d0 1e	   .ad	      EQU	#53278
      5  845d		       ad 1e d0 	      lda	.ad
      6  8460				  -	      IF	!FPUSH
      7  8460				  -	      pha
      8  8460					      ENDIF
  13353  8460				   FPULL      SET	1
  13354  8460				   FPUSH      SET	0
      0  8460					      plb2var	_poll_collisions.spr_hit
      1  8460				  -	      IF	!FPULL
      2  8460				  -	      pla
      3  8460					      ENDIF
      4  8460		       8d 57 b6 	      sta	_poll_collisions.spr_hit
  13356  8460				   FPULL      SET	0
      0  8463					      opt_pbyte_pbyte_and	_poll_collisions.spr_hit, #192
      1  8463
      2  8463
      3  8463
      4  8463
      5  8463
      6  8463		       ad 57 b6 	      lda	_poll_collisions.spr_hit
      7  8466		       29 c0		      and	#192
      8  8468					      IF	!FPUSH
      9  8468		       48		      pha
     10  8469					      ENDIF
  13358  8469				   FPUSH      SET	1
      0  8469					      pbyte	#0
      1  8469		       a9 00		      lda	#0
      2  846b				  -	      IF	!FPUSH
      3  846b				  -	      pha
      4  846b					      ENDIF
  13360  846b				   FPULL      SET	1
      0  846b					      cmpbneq
      1  846b				  -	      IF	!FPULL
      2  846b				  -	      pla
      3  846b					      ENDIF
      4  846b		       85 fc		      sta	R1
      5  846d		       68		      pla
      6  846e		       c5 fc		      cmp	R1
      7  8470		       d0 05		      bne	.pht
      0  8472					      pzero
      1  8472		       a9 00		      lda	#$00
      2  8474				  -	      IF	!FPUSH
      3  8474				  -	      pha
      4  8474					      ENDIF
      9  8474				  -	      IF	!FPUSH
     10  8474				  -	      jmp	*+6
     11  8474					      ELSE
     12  8474		       4c 79 84 	      jmp	*+5
     13  8477					      ENDIF
      0  8477				   .pht       pone
      1  8477		       a9 01		      lda	#$01
      2  8479				  -	      IF	!FPUSH
      3  8479				  -	      pha
      4  8479					      ENDIF
  13362  8479				   FPUSH      SET	0
      0  8479					      cond_stmt	_EI_34, _EL_34
      1  8479				  -	      IF	!FPULL
      2  8479				  -	      pla
      3  8479					      ENDIF
      4  8479		       d0 03		      bne	*+5
      5  847b				  -	      IFCONST	_EL_34
      6  847b				  -	      jmp	_EL_34
      7  847b					      ELSE
      8  847b		       4c ba 85 	      jmp	_EI_34
      9  847e					      ENDIF
  13364  847e				   FPULL      SET	0
  13365  847e				   FPUSH      SET	1
      0  847e					      pbyte	#0
      1  847e		       a9 00		      lda	#0
      2  8480				  -	      IF	!FPUSH
      3  8480				  -	      pha
      4  8480					      ENDIF
  13367  8480				   FPULL      SET	1
  13368  8480				   FPUSH      SET	0
      0  8480					      plb2var	_poll_collisions.i
      1  8480				  -	      IF	!FPULL
      2  8480				  -	      pla
      3  8480					      ENDIF
      4  8480		       8d 58 b6 	      sta	_poll_collisions.i
  13370  8480				   FPULL      SET	0
  13371  8480				   FPUSH      SET	1
      0  8483					      pbyte	#3
      1  8483		       a9 03		      lda	#3
      2  8485				  -	      IF	!FPUSH
      3  8485				  -	      pha
      4  8485					      ENDIF
  13373  8485				   FPULL      SET	1
  13374  8485				   FPUSH      SET	0
      0  8485					      plb2var	XFOR_max_5
      1  8485				  -	      IF	!FPULL
      2  8485				  -	      pla
      3  8485					      ENDIF
      4  8485		       8d 59 b6 	      sta	XFOR_max_5
  13376  8488				   _FOR_5
      0  8488					      forb	5, _poll_collisions.i
      1  8488
      2  8488		       ad 59 b6 	      lda	XFOR_max_5
      3  848b		       cd 58 b6 	      cmp	_poll_collisions.i
      4  848e		       b0 03		      bcs	.enter
      5  8490
      6  8490		       4c 9c 85 	      jmp	_ENDFOR_5
      7  8493				   .enter
  13378  8493				   FPULL      SET	0
      0  8493					      opt_pbyte_pbarray_fast	_poll_collisions.i, _ufo_hit
      1  8493
      2  8493
      3  8493
      4  8493		       ae 58 b6 	      ldx	_poll_collisions.i
      5  8496		       bd 4c b5 	      lda	_ufo_hit,x
      6  8499					      IF	!FPUSH
      7  8499		       48		      pha
      8  849a					      ENDIF
  13380  849a				   FPUSH      SET	1
      0  849a					      pbyte	#0
      1  849a		       a9 00		      lda	#0
      2  849c				  -	      IF	!FPUSH
      3  849c				  -	      pha
      4  849c					      ENDIF
  13382  849c				   FPULL      SET	1
  13383  849c				   FPUSH      SET	0
      0  849c					      cmpbeq
      1  849c				  -	      IF	!FPULL
      2  849c				  -	      pla
      3  849c					      ENDIF
      4  849c		       85 fc		      sta	R1
      5  849e		       68		      pla
      6  849f		       c5 fc		      cmp	R1
      7  84a1		       f0 06		      beq	.pht
      0  84a3					      pzero
      1  84a3		       a9 00		      lda	#$00
      2  84a5					      IF	!FPUSH
      3  84a5		       48		      pha
      4  84a6					      ENDIF
      9  84a6					      IF	!FPUSH
     10  84a6		       4c ac 84 	      jmp	*+6
     11  84a9				  -	      ELSE
     12  84a9				  -	      jmp	*+5
     13  84a9					      ENDIF
      0  84a9				   .pht       pone
      1  84a9		       a9 01		      lda	#$01
      2  84ab					      IF	!FPUSH
      3  84ab		       48		      pha
      4  84ac					      ENDIF
  13385  84ac				   FPULL      SET	0
      0  84ac					      opt_pbyte_pbyte_and	_poll_collisions.spr_hit, #63
      1  84ac
      2  84ac
      3  84ac
      4  84ac
      5  84ac
      6  84ac		       ad 57 b6 	      lda	_poll_collisions.spr_hit
      7  84af		       29 3f		      and	#63
      8  84b1					      IF	!FPUSH
      9  84b1		       48		      pha
     10  84b2					      ENDIF
  13387  84b2				   FPUSH      SET	1
      0  84b2					      opt_pbyte_pbarray_fast	_poll_collisions.i, _poll_collisions.bits
      1  84b2
      2  84b2
      3  84b2
      4  84b2		       ae 58 b6 	      ldx	_poll_collisions.i
      5  84b5		       bd 28 a4 	      lda	_poll_collisions.bits,x
      6  84b8				  -	      IF	!FPUSH
      7  84b8				  -	      pha
      8  84b8					      ENDIF
  13389  84b8				   FPULL      SET	1
      0  84b8					      cmpbeq
      1  84b8				  -	      IF	!FPULL
      2  84b8				  -	      pla
      3  84b8					      ENDIF
      4  84b8		       85 fc		      sta	R1
      5  84ba		       68		      pla
      6  84bb		       c5 fc		      cmp	R1
      7  84bd		       f0 05		      beq	.pht
      0  84bf					      pzero
      1  84bf		       a9 00		      lda	#$00
      2  84c1				  -	      IF	!FPUSH
      3  84c1				  -	      pha
      4  84c1					      ENDIF
      9  84c1				  -	      IF	!FPUSH
     10  84c1				  -	      jmp	*+6
     11  84c1					      ELSE
     12  84c1		       4c c6 84 	      jmp	*+5
     13  84c4					      ENDIF
      0  84c4				   .pht       pone
      1  84c4		       a9 01		      lda	#$01
      2  84c6				  -	      IF	!FPUSH
      3  84c6				  -	      pha
      4  84c6					      ENDIF
      0  84c6					      andb
      1  84c6				  -	      IF	!FPULL
      2  84c6				  -	      pla
      3  84c6					      ENDIF
      4  84c6		       85 fc		      sta	R1
      5  84c8		       68		      pla
      6  84c9		       25 fc		      and	R1
      7  84cb				  -	      IF	!FPUSH
      8  84cb				  -	      pha
      9  84cb					      ENDIF
  13392  84cb				   FPUSH      SET	0
      0  84cb					      cond_stmt	_EI_35, _EL_35
      1  84cb				  -	      IF	!FPULL
      2  84cb				  -	      pla
      3  84cb					      ENDIF
      4  84cb		       d0 03		      bne	*+5
      5  84cd				  -	      IFCONST	_EL_35
      6  84cd				  -	      jmp	_EL_35
      7  84cd					      ELSE
      8  84cd		       4c 94 85 	      jmp	_EI_35
      9  84d0					      ENDIF
  13394  84d0				   FPULL      SET	0
      0  84d0					      pbyte	#1
      1  84d0		       a9 01		      lda	#1
      2  84d2					      IF	!FPUSH
      3  84d2		       48		      pha
      4  84d3					      ENDIF
  13396  84d3				   FPUSH      SET	1
      0  84d3					      pbvar	_poll_collisions.i
      0  84d3					      pbyte	_poll_collisions.i
      1  84d3		       ad 58 b6 	      lda	_poll_collisions.i
      2  84d6				  -	      IF	!FPUSH
      3  84d6				  -	      pha
      4  84d6					      ENDIF
  13398  84d6				   FPULL      SET	1
  13399  84d6				   FPUSH      SET	0
      0  84d6					      plbarray_fast	_ufo_hit
      1  84d6				  -	      IF	!FPULL
      2  84d6				  -	      pla
      3  84d6					      ENDIF
      4  84d6		       aa		      tax
      5  84d7		       68		      pla
      6  84d8		       9d 4c b5 	      sta	_ufo_hit,x
  13401  84d8				   FPULL      SET	0
      0  84db					      pbyte	#163
      1  84db		       a9 a3		      lda	#163
      2  84dd					      IF	!FPUSH
      3  84dd		       48		      pha
      4  84de					      ENDIF
  13403  84de				   FPUSH      SET	1
      0  84de					      pbvar	_poll_collisions.i
      0  84de					      pbyte	_poll_collisions.i
      1  84de		       ad 58 b6 	      lda	_poll_collisions.i
      2  84e1				  -	      IF	!FPUSH
      3  84e1				  -	      pha
      4  84e1					      ENDIF
  13405  84e1				   FPULL      SET	1
  13406  84e1				   FPUSH      SET	0
      0  84e1					      plbarray_fast	_ufo_animphase
      1  84e1				  -	      IF	!FPULL
      2  84e1				  -	      pla
      3  84e1					      ENDIF
      4  84e1		       aa		      tax
      5  84e2		       68		      pla
      6  84e3		       9d 50 b5 	      sta	_ufo_animphase,x
  13408  84e3				   FPULL      SET	0
  13409  84e3				   FPUSH      SET	1
      0  84e6					      pbyte	#0
      1  84e6		       a9 00		      lda	#0
      2  84e8				  -	      IF	!FPUSH
      3  84e8				  -	      pha
      4  84e8					      ENDIF
  13411  84e8				   FPULL      SET	1
  13412  84e8				   FPUSH      SET	0
      0  84e8					      plb2var	_bullet_on
      1  84e8				  -	      IF	!FPULL
      2  84e8				  -	      pla
      3  84e8					      ENDIF
      4  84e8		       8d 29 b6 	      sta	_bullet_on
  13414  84e8				   FPULL      SET	0
  13415  84e8				   FPUSH      SET	1
      0  84eb					      pbyte	#6
      1  84eb		       a9 06		      lda	#6
      2  84ed				  -	      IF	!FPUSH
      3  84ed				  -	      pha
      4  84ed					      ENDIF
  13417  84ed				   FPULL      SET	1
  13418  84ed				   FPUSH      SET	0
      0  84ed					      plb2var	_spr_disable.spr_no
      1  84ed				  -	      IF	!FPULL
      2  84ed				  -	      pla
      3  84ed					      ENDIF
      4  84ed		       8d fb b4 	      sta	_spr_disable.spr_no
  13420  84f0		       20 7b 71 	      jsr	_Pspr_disable
  13421  84f0				   FPULL      SET	0
  13422  84f0				   FPUSH      SET	1
      0  84f3					      pbyte	#2
      1  84f3		       a9 02		      lda	#2
      2  84f5				  -	      IF	!FPUSH
      3  84f5				  -	      pha
      4  84f5					      ENDIF
  13424  84f5				   FPULL      SET	1
  13425  84f5				   FPUSH      SET	0
      0  84f5					      plb2var	_sfx_start.effect_no
      1  84f5				  -	      IF	!FPULL
      2  84f5				  -	      pla
      3  84f5					      ENDIF
      4  84f5		       8d 21 b5 	      sta	_sfx_start.effect_no
  13427  84f8		       20 48 75 	      jsr	_Psfx_start
      0  84fb					      incw	_score
      1  84fb		       ee 27 b5 	      inc	_score
      2  84fe		       d0 03		      bne	.skip
      3  8500		       ee 28 b5 	      inc	_score+1
      4  8503				   .skip
      0  8503					      decb	_ufo_count
      1  8503		       ce 39 b6 	      dec	_ufo_count
      0  8506					      incw	_ufos_killed
      1  8506		       ee 3a b6 	      inc	_ufos_killed
      2  8509		       d0 03		      bne	.skip
      3  850b		       ee 3b b6 	      inc	_ufos_killed+1
      4  850e				   .skip
      0  850e					      decb	_no_of_ufos_in_this_wave
      1  850e		       ce 28 b6 	      dec	_no_of_ufos_in_this_wave
  13432  8511		       20 de 77 	      jsr	_Pupdate_scoretable
  13433  8511				   FPULL      SET	0
  13434  8511				   FPUSH      SET	1
      0  8514					      pbyte_pbyte_cmpbeq	_ufo_count, #0
      1  8514
      2  8514
      3  8514
      4  8514
      5  8514
      6  8514		       ad 39 b6 	      lda	_ufo_count
      7  8517		       c9 00		      cmp	#0
      8  8519		       f0 05		      beq	.true
      0  851b					      pzero
      1  851b		       a9 00		      lda	#$00
      2  851d				  -	      IF	!FPUSH
      3  851d				  -	      pha
      4  851d					      ENDIF
     10  851d				  -	      IF	!FPUSH
     11  851d				  -	      jmp	*+6
     12  851d					      ELSE
     13  851d		       4c 22 85 	      jmp	*+5
     14  8520					      ENDIF
     15  8520				   .true
      0  8520					      pone
      1  8520		       a9 01		      lda	#$01
      2  8522				  -	      IF	!FPUSH
      3  8522				  -	      pha
      4  8522					      ENDIF
  13436  8522				   FPULL      SET	1
  13437  8522				   FPUSH      SET	0
      0  8522					      cond_stmt	_EI_65546, _EL_65546
      1  8522				  -	      IF	!FPULL
      2  8522				  -	      pla
      3  8522					      ENDIF
      4  8522		       d0 03		      bne	*+5
      5  8524				  -	      IFCONST	_EL_65546
      6  8524				  -	      jmp	_EL_65546
      7  8524					      ELSE
      8  8524		       4c 94 85 	      jmp	_EI_65546
      9  8527					      ENDIF
  13439  8527				   FPULL      SET	0
      0  8527					      paddr	_S1
      0  8527					      pword	_S1
      1  8527					      IF	!FPUSH
      2  8527		       a9 df		      lda	#<_S1
      3  8529		       48		      pha
      4  852a		       a9 ad		      lda	#>_S1
      5  852c		       48		      pha
      6  852d				  -	      ELSE
      7  852d				  -	      lda	#<_S1
      8  852d				  -	      ldy	#>_S1
      9  852d					      ENDIF
      0  852d					      pbyte	#0
      1  852d		       a9 00		      lda	#0
      2  852f					      IF	!FPUSH
      3  852f		       48		      pha
      4  8530					      ENDIF
      0  8530					      btow
      1  8530		       a9 00		      lda	#$00
      2  8532		       48		      pha
  13443  8532				   FPUSH      SET	1
      0  8533					      pword	#40
      1  8533				  -	      IF	!FPUSH
      2  8533				  -	      lda	#<#40
      3  8533				  -	      pha
      4  8533				  -	      lda	#>#40
      5  8533				  -	      pha
      6  8533					      ELSE
      7  8533		       a9 28		      lda	#<#40
      8  8535		       a0 00		      ldy	#>#40
      9  8537					      ENDIF
  13445  8537				   FPULL      SET	1
  13446  8537				   FPUSH      SET	0
      0  8537					      mulw
      1  8537				  -	      IF	!FPULL
      2  8537				  -	      pla
      3  8537				  -	      sta	R1
      4  8537				  -	      pla
      5  8537				  -	      sta	R0
      6  8537					      ELSE
      7  8537		       85 fb		      sta	R0
      8  8539		       84 fc		      sty	R1
      9  853b					      ENDIF
     10  853b		       68		      pla
     11  853c		       85 fe		      sta	R3
     12  853e		       68		      pla
     13  853f		       85 fd		      sta	R2
     14  8541		       20 0d 08 	      jsr	NUCL_SMUL16
     15  8544					      IF	!FPUSH
     16  8544		       a5 fb		      lda	R0
     17  8546		       48		      pha
     18  8547		       a5 fc		      lda	R1
     19  8549		       48		      pha
     20  854a				  -	      ELSE
     21  854a				  -	      lda	R0
     22  854a				  -	      ldy	R1
     23  854a					      ENDIF
  13448  854a				   FPULL      SET	0
      0  854a					      pbyte	#12
      1  854a		       a9 0c		      lda	#12
      2  854c					      IF	!FPUSH
      3  854c		       48		      pha
      4  854d					      ENDIF
      0  854d					      btow
      1  854d		       a9 00		      lda	#$00
      2  854f		       48		      pha
      0  8550					      addw
      1  8550		       ba		      tsx
      2  8551		       bd 02 01 	      lda.wx	stack+2
      3  8554		       18		      clc
      4  8555		       7d 04 01 	      adc.wx	stack+4
      5  8558		       9d 04 01 	      sta.wx	stack+4
      6  855b		       68		      pla
      7  855c		       7d 03 01 	      adc.wx	stack+3
      8  855f		       9d 03 01 	      sta.wx	stack+3
      9  8562		       68		      pla
      0  8563					      pword	#1024
      1  8563					      IF	!FPUSH
      2  8563		       a9 00		      lda	#<#1024
      3  8565		       48		      pha
      4  8566		       a9 04		      lda	#>#1024
      5  8568		       48		      pha
      6  8569				  -	      ELSE
      7  8569				  -	      lda	#<#1024
      8  8569				  -	      ldy	#>#1024
      9  8569					      ENDIF
      0  8569					      addw
      1  8569		       ba		      tsx
      2  856a		       bd 02 01 	      lda.wx	stack+2
      3  856d		       18		      clc
      4  856e		       7d 04 01 	      adc.wx	stack+4
      5  8571		       9d 04 01 	      sta.wx	stack+4
      6  8574		       68		      pla
      7  8575		       7d 03 01 	      adc.wx	stack+3
      8  8578		       9d 03 01 	      sta.wx	stack+3
      9  857b		       68		      pla
      0  857c					      textat
      1  857c					      IF	!FPULL
      2  857c		       68		      pla
      3  857d		       85 fe		      sta	R3
      4  857f		       68		      pla
      5  8580		       85 fd		      sta	R2
      6  8582				  -	      ELSE
      7  8582				  -	      sta	R2
      8  8582				  -	      sty	R3
      9  8582					      ENDIF
     10  8582		       68		      pla
     11  8583		       85 fc		      sta	R1
     12  8585		       68		      pla
     13  8586		       85 fb		      sta	R0
     14  8588		       a0 00		      ldy	#$00
     15  858a				   .loop
     16  858a		       b1 fb		      lda	(R0),y
     17  858c		       f0 06		      beq	.end
     18  858e		       91 fd		      sta	(R2),y
     19  8590		       c8		      iny
     20  8591		       4c 8a 85 	      jmp	.loop
     21  8594				   .end
  13455  8594				   _EI_65546
  13456  8594
  13457  8594
  13458  8594
  13459  8594
  13460  8594
  13461  8594
  13462  8594
  13463  8594				   _EI_35
      0  8594					      nextb	5, _poll_collisions.i
      1  8594
      2  8594				  -	      IFCONST	XFOR_step_5
      3  8594				  -
      4  8594				  -	      clc
      5  8594				  -	      lda	XFOR_step_5
      6  8594				  -	      adc	_poll_collisions.i
      7  8594				  -	      sta	_poll_collisions.i
      8  8594				  -
      9  8594				  -	      bcs	_ENDFOR_5
     10  8594					      ELSE
     11  8594
     12  8594		       ee 58 b6 	      inc	_poll_collisions.i
     13  8597
     14  8597		       f0 03		      beq	_ENDFOR_5
     15  8599					      ENDIF
     16  8599		       4c 88 84 	      jmp	_FOR_5
  13465  859c
  13466  859c
  13467  859c
  13468  859c
  13469  859c
  13470  859c
  13471  859c
  13472  859c				   _ENDFOR_5
      0  859c					      opt_pbyte_pbyte_and	_poll_collisions.spr_hit, #128
      1  859c
      2  859c
      3  859c
      4  859c
      5  859c
      6  859c		       ad 57 b6 	      lda	_poll_collisions.spr_hit
      7  859f		       29 80		      and	#128
      8  85a1					      IF	!FPUSH
      9  85a1		       48		      pha
     10  85a2					      ENDIF
  13474  85a2				   FPUSH      SET	1
      0  85a2					      pbyte	#0
      1  85a2		       a9 00		      lda	#0
      2  85a4				  -	      IF	!FPUSH
      3  85a4				  -	      pha
      4  85a4					      ENDIF
  13476  85a4				   FPULL      SET	1
      0  85a4					      cmpbneq
      1  85a4				  -	      IF	!FPULL
      2  85a4				  -	      pla
      3  85a4					      ENDIF
      4  85a4		       85 fc		      sta	R1
      5  85a6		       68		      pla
      6  85a7		       c5 fc		      cmp	R1
      7  85a9		       d0 05		      bne	.pht
      0  85ab					      pzero
      1  85ab		       a9 00		      lda	#$00
      2  85ad				  -	      IF	!FPUSH
      3  85ad				  -	      pha
      4  85ad					      ENDIF
      9  85ad				  -	      IF	!FPUSH
     10  85ad				  -	      jmp	*+6
     11  85ad					      ELSE
     12  85ad		       4c b2 85 	      jmp	*+5
     13  85b0					      ENDIF
      0  85b0				   .pht       pone
      1  85b0		       a9 01		      lda	#$01
      2  85b2				  -	      IF	!FPUSH
      3  85b2				  -	      pha
      4  85b2					      ENDIF
  13478  85b2				   FPUSH      SET	0
      0  85b2					      cond_stmt	_EI_65547, _EL_65547
      1  85b2				  -	      IF	!FPULL
      2  85b2				  -	      pla
      3  85b2					      ENDIF
      4  85b2		       d0 03		      bne	*+5
      5  85b4				  -	      IFCONST	_EL_65547
      6  85b4				  -	      jmp	_EL_65547
      7  85b4					      ELSE
      8  85b4		       4c ba 85 	      jmp	_EI_65547
      9  85b7					      ENDIF
  13480  85b7		       4c bb 85 	      jmp	_Lpoll_collisions.aircraft_hit
  13481  85ba				   _EI_65547
  13482  85ba
  13483  85ba
  13484  85ba
  13485  85ba
  13486  85ba
  13487  85ba
  13488  85ba
  13489  85ba				   _EI_34
  13490  85ba		       60		      rts
  13491  85bb
  13492  85bb
  13493  85bb
  13494  85bb
  13495  85bb
  13496  85bb
  13497  85bb
  13498  85bb				   _Lpoll_collisions.aircraft_hit
  13499  85bb				   FPULL      SET	0
  13500  85bb				   FPUSH      SET	1
      0  85bb					      pbyte	#4
      1  85bb		       a9 04		      lda	#4
      2  85bd				  -	      IF	!FPUSH
      3  85bd				  -	      pha
      4  85bd					      ENDIF
  13502  85bd				   FPULL      SET	1
  13503  85bd				   FPUSH      SET	0
      0  85bd					      plb2var	_aircraft_mode
      1  85bd				  -	      IF	!FPULL
      2  85bd				  -	      pla
      3  85bd					      ENDIF
      4  85bd		       8d 35 b6 	      sta	_aircraft_mode
  13505  85bd				   FPULL      SET	0
      0  85c0					      pbyte	#242
      1  85c0		       a9 f2		      lda	#242
      2  85c2					      IF	!FPUSH
      3  85c2		       48		      pha
      4  85c3					      ENDIF
      0  85c3					      pbvar	_dir
      0  85c3					      pbyte	_dir
      1  85c3		       ad 24 b5 	      lda	_dir
      2  85c6					      IF	!FPUSH
      3  85c6		       48		      pha
      4  85c7					      ENDIF
  13508  85c7				   FPUSH      SET	1
      0  85c7					      pbyte	#8
      1  85c7		       a9 08		      lda	#8
      2  85c9				  -	      IF	!FPUSH
      3  85c9				  -	      pha
      4  85c9					      ENDIF
  13510  85c9				   FPULL      SET	1
      0  85c9					      mulb
      1  85c9				  -	      IF	!FPULL
      2  85c9				  -	      pla
      3  85c9					      ENDIF
      4  85c9		       85 fc		      sta	R1
      5  85cb		       68		      pla
      6  85cc		       85 fd		      sta	R2
      7  85ce		       a9 00		      lda	#$00
      8  85d0		       f0 05		      beq	.enterLoop
      9  85d2				   .doAdd
     10  85d2		       18		      clc
     11  85d3		       65 fc		      adc	R1
     12  85d5				   .loop
     13  85d5		       06 fc		      asl	R1
     14  85d7				   .enterLoop
     15  85d7		       46 fd		      lsr	R2
     16  85d9		       b0 f7		      bcs	.doAdd
     17  85db		       d0 f8		      bne	.loop
     18  85dd				   .end
     19  85dd				  -	      IF	!FPUSH
     20  85dd				  -	      pha
     21  85dd					      ENDIF
      0  85dd					      addb
      1  85dd				  -	      IF	!FPULL
      2  85dd				  -	      pla
      3  85dd					      ENDIF
      4  85dd		       85 fb		      sta	R0
      5  85df		       68		      pla
      6  85e0		       18		      clc
      7  85e1		       65 fb		      adc	R0
      8  85e3				  -	      IF	!FPUSH
      9  85e3				  -	      pha
     10  85e3					      ENDIF
  13513  85e3				   FPUSH      SET	0
      0  85e3					      plb2var	_turn_phase
      1  85e3				  -	      IF	!FPULL
      2  85e3				  -	      pla
      3  85e3					      ENDIF
      4  85e3		       8d 2d b5 	      sta	_turn_phase
  13515  85e3				   FPULL      SET	0
  13516  85e3				   FPUSH      SET	1
      0  85e6					      pbyte	#0
      1  85e6		       a9 00		      lda	#0
      2  85e8				  -	      IF	!FPUSH
      3  85e8				  -	      pha
      4  85e8					      ENDIF
  13518  85e8				   FPULL      SET	1
  13519  85e8				   FPUSH      SET	0
      0  85e8					      plb2var	_turn_phase_count
      1  85e8				  -	      IF	!FPULL
      2  85e8				  -	      pla
      3  85e8					      ENDIF
      4  85e8		       8d 2e b5 	      sta	_turn_phase_count
  13521  85e8				   FPULL      SET	0
  13522  85e8				   FPUSH      SET	1
      0  85eb					      pbyte	#0
      1  85eb		       a9 00		      lda	#0
      2  85ed				  -	      IF	!FPUSH
      3  85ed				  -	      pha
      4  85ed					      ENDIF
  13524  85ed				   FPULL      SET	1
  13525  85ed				   FPUSH      SET	0
      0  85ed					      plb2var	_turning
      1  85ed				  -	      IF	!FPULL
      2  85ed				  -	      pla
      3  85ed					      ENDIF
      4  85ed		       8d 2b b5 	      sta	_turning
  13527  85ed				   FPULL      SET	0
      0  85f0					      pbyte	#128
      1  85f0		       a9 80		      lda	#128
      2  85f2					      IF	!FPUSH
      3  85f2		       48		      pha
      4  85f3					      ENDIF
  13529  85f3				   FPUSH      SET	1
      0  85f3					      pword	#54290
      1  85f3				  -	      IF	!FPUSH
      2  85f3				  -	      lda	#<#54290
      3  85f3				  -	      pha
      4  85f3				  -	      lda	#>#54290
      5  85f3				  -	      pha
      6  85f3					      ELSE
      7  85f3		       a9 12		      lda	#<#54290
      8  85f5		       a0 d4		      ldy	#>#54290
      9  85f7					      ENDIF
  13531  85f7				   FPULL      SET	1
  13532  85f7				   FPUSH      SET	0
      0  85f7					      pokeb
      1  85f7				  -	      IF	!FPULL
      2  85f7				  -	      pla
      3  85f7				  -	      sta	.selfmod_code+2
      4  85f7				  -	      pla
      5  85f7				  -	      sta	.selfmod_code+1
      6  85f7					      ELSE
      7  85f7		       8d ff 85 	      sta	.selfmod_code+1
      8  85fa		       8c 00 86 	      sty	.selfmod_code+2
      9  85fd					      ENDIF
     10  85fd		       68		      pla
     11  85fe				   .selfmod_code
     12  85fe		       8d 00 00 	      sta.w	$0000
  13534  85fe				   FPULL      SET	0
  13535  85fe				   FPUSH      SET	1
      0  8601					      pbyte	#5
      1  8601		       a9 05		      lda	#5
      2  8603				  -	      IF	!FPUSH
      3  8603				  -	      pha
      4  8603					      ENDIF
  13537  8603				   FPULL      SET	1
  13538  8603				   FPUSH      SET	0
      0  8603					      plb2var	_sfx_start.effect_no
      1  8603				  -	      IF	!FPULL
      2  8603				  -	      pla
      3  8603					      ENDIF
      4  8603		       8d 21 b5 	      sta	_sfx_start.effect_no
  13540  8606		       20 48 75 	      jsr	_Psfx_start
  13541  8609		       20 de 77 	      jsr	_Pupdate_scoretable
  13542  860c		       60		      rts
  13543  860d		       60		      rts
  13544  860e				   _Ppoll_collisions_end
  13545  860e
  13546  860e
  13547  860e
  13548  860e
  13549  860e
  13550  860e
  13551  860e
  13552  860e				   _Psetup_screen SUBROUTINE
  13553  860e				   FPULL      SET	0
      0  860e					      peekb_const_addr	#53265
      1  860e
      2  860e
      3  860e
      4  860e		       d0 11	   .ad	      EQU	#53265
      5  860e		       ad 11 d0 	      lda	.ad
      6  8611					      IF	!FPUSH
      7  8611		       48		      pha
      8  8612					      ENDIF
  13555  8612				   FPUSH      SET	1
      0  8612					      pbyte	#239
      1  8612		       a9 ef		      lda	#239
      2  8614				  -	      IF	!FPUSH
      3  8614				  -	      pha
      4  8614					      ENDIF
  13557  8614				   FPULL      SET	1
      0  8614					      andb
      1  8614				  -	      IF	!FPULL
      2  8614				  -	      pla
      3  8614					      ENDIF
      4  8614		       85 fc		      sta	R1
      5  8616		       68		      pla
      6  8617		       25 fc		      and	R1
      7  8619				  -	      IF	!FPUSH
      8  8619				  -	      pha
      9  8619					      ENDIF
  13559  8619				   FPUSH      SET	0
      0  8619					      pokeb_const_addr	#53265
      1  8619
      2  8619
      3  8619
      4  8619		       d0 11	   .ad	      EQU	#53265
      5  8619				  -	      IF	!FPULL
      6  8619				  -	      pla
      7  8619					      ENDIF
      8  8619		       8d 11 d0 	      sta	.ad
  13561  8619				   FPULL      SET	0
      0  861c					      pbyte	#5
      1  861c		       a9 05		      lda	#5
      2  861e					      IF	!FPUSH
      3  861e		       48		      pha
      4  861f					      ENDIF
      0  861f					      pbyte	#200
      1  861f		       a9 c8		      lda	#200
      2  8621					      IF	!FPUSH
      3  8621		       48		      pha
      4  8622					      ENDIF
      0  8622					      btow
      1  8622		       a9 00		      lda	#$00
      2  8624		       48		      pha
      0  8625					      pword	#55296
      1  8625					      IF	!FPUSH
      2  8625		       a9 00		      lda	#<#55296
      3  8627		       48		      pha
      4  8628		       a9 d8		      lda	#>#55296
      5  862a		       48		      pha
      6  862b				  -	      ELSE
      7  862b				  -	      lda	#<#55296
      8  862b				  -	      ldy	#>#55296
      9  862b					      ENDIF
      0  862b					      memset
      1  862b					      IF	!FPULL
      2  862b		       68		      pla
      3  862c		       85 fc		      sta	R1
      4  862e		       68		      pla
      5  862f		       85 fb		      sta	R0
      6  8631				  -	      ELSE
      7  8631				  -	      sta	R0
      8  8631				  -	      sty	R1
      9  8631					      ENDIF
     10  8631		       68		      pla
     11  8632		       85 fe		      sta	R3
     12  8634		       68		      pla
     13  8635		       85 fd		      sta	R2
     14  8637		       68		      pla
     15  8638		       20 de 0a 	      jsr	mem_memset
      0  863b					      pbyte	#2
      1  863b		       a9 02		      lda	#2
      2  863d					      IF	!FPUSH
      3  863d		       48		      pha
      4  863e					      ENDIF
  13568  863e				   FPUSH      SET	1
      0  863e					      pword	#55385
      1  863e				  -	      IF	!FPUSH
      2  863e				  -	      lda	#<#55385
      3  863e				  -	      pha
      4  863e				  -	      lda	#>#55385
      5  863e				  -	      pha
      6  863e					      ELSE
      7  863e		       a9 59		      lda	#<#55385
      8  8640		       a0 d8		      ldy	#>#55385
      9  8642					      ENDIF
  13570  8642				   FPULL      SET	1
  13571  8642				   FPUSH      SET	0
      0  8642					      pokeb
      1  8642				  -	      IF	!FPULL
      2  8642				  -	      pla
      3  8642				  -	      sta	.selfmod_code+2
      4  8642				  -	      pla
      5  8642				  -	      sta	.selfmod_code+1
      6  8642					      ELSE
      7  8642		       8d 4a 86 	      sta	.selfmod_code+1
      8  8645		       8c 4b 86 	      sty	.selfmod_code+2
      9  8648					      ENDIF
     10  8648		       68		      pla
     11  8649				   .selfmod_code
     12  8649		       8d 00 00 	      sta.w	$0000
  13573  8649				   FPULL      SET	0
      0  864c					      pbyte	#2
      1  864c		       a9 02		      lda	#2
      2  864e					      IF	!FPUSH
      3  864e		       48		      pha
      4  864f					      ENDIF
  13575  864f				   FPUSH      SET	1
      0  864f					      pword	#55386
      1  864f				  -	      IF	!FPUSH
      2  864f				  -	      lda	#<#55386
      3  864f				  -	      pha
      4  864f				  -	      lda	#>#55386
      5  864f				  -	      pha
      6  864f					      ELSE
      7  864f		       a9 5a		      lda	#<#55386
      8  8651		       a0 d8		      ldy	#>#55386
      9  8653					      ENDIF
  13577  8653				   FPULL      SET	1
  13578  8653				   FPUSH      SET	0
      0  8653					      pokeb
      1  8653				  -	      IF	!FPULL
      2  8653				  -	      pla
      3  8653				  -	      sta	.selfmod_code+2
      4  8653				  -	      pla
      5  8653				  -	      sta	.selfmod_code+1
      6  8653					      ELSE
      7  8653		       8d 5b 86 	      sta	.selfmod_code+1
      8  8656		       8c 5c 86 	      sty	.selfmod_code+2
      9  8659					      ENDIF
     10  8659		       68		      pla
     11  865a				   .selfmod_code
     12  865a		       8d 00 00 	      sta.w	$0000
  13580  865a				   FPULL      SET	0
      0  865d					      pbyte	#2
      1  865d		       a9 02		      lda	#2
      2  865f					      IF	!FPUSH
      3  865f		       48		      pha
      4  8660					      ENDIF
      0  8660					      pbyte	#4
      1  8660		       a9 04		      lda	#4
      2  8662					      IF	!FPUSH
      3  8662		       48		      pha
      4  8663					      ENDIF
      0  8663					      btow
      1  8663		       a9 00		      lda	#$00
      2  8665		       48		      pha
      0  8666					      pword	#55423
      1  8666					      IF	!FPUSH
      2  8666		       a9 7f		      lda	#<#55423
      3  8668		       48		      pha
      4  8669		       a9 d8		      lda	#>#55423
      5  866b		       48		      pha
      6  866c				  -	      ELSE
      7  866c				  -	      lda	#<#55423
      8  866c				  -	      ldy	#>#55423
      9  866c					      ENDIF
      0  866c					      memset
      1  866c					      IF	!FPULL
      2  866c		       68		      pla
      3  866d		       85 fc		      sta	R1
      4  866f		       68		      pla
      5  8670		       85 fb		      sta	R0
      6  8672				  -	      ELSE
      7  8672				  -	      sta	R0
      8  8672				  -	      sty	R1
      9  8672					      ENDIF
     10  8672		       68		      pla
     11  8673		       85 fe		      sta	R3
     12  8675		       68		      pla
     13  8676		       85 fd		      sta	R2
     14  8678		       68		      pla
     15  8679		       20 de 0a 	      jsr	mem_memset
      0  867c					      pbyte	#2
      1  867c		       a9 02		      lda	#2
      2  867e					      IF	!FPUSH
      3  867e		       48		      pha
      4  867f					      ENDIF
  13587  867f				   FPUSH      SET	1
      0  867f					      pword	#55338
      1  867f				  -	      IF	!FPUSH
      2  867f				  -	      lda	#<#55338
      3  867f				  -	      pha
      4  867f				  -	      lda	#>#55338
      5  867f				  -	      pha
      6  867f					      ELSE
      7  867f		       a9 2a		      lda	#<#55338
      8  8681		       a0 d8		      ldy	#>#55338
      9  8683					      ENDIF
  13589  8683				   FPULL      SET	1
  13590  8683				   FPUSH      SET	0
      0  8683					      pokeb
      1  8683				  -	      IF	!FPULL
      2  8683				  -	      pla
      3  8683				  -	      sta	.selfmod_code+2
      4  8683				  -	      pla
      5  8683				  -	      sta	.selfmod_code+1
      6  8683					      ELSE
      7  8683		       8d 8b 86 	      sta	.selfmod_code+1
      8  8686		       8c 8c 86 	      sty	.selfmod_code+2
      9  8689					      ENDIF
     10  8689		       68		      pla
     11  868a				   .selfmod_code
     12  868a		       8d 00 00 	      sta.w	$0000
  13592  868a				   FPULL      SET	0
      0  868d					      pbyte	#7
      1  868d		       a9 07		      lda	#7
      2  868f					      IF	!FPUSH
      3  868f		       48		      pha
      4  8690					      ENDIF
  13594  8690				   FPUSH      SET	1
      0  8690					      pword	#55339
      1  8690				  -	      IF	!FPUSH
      2  8690				  -	      lda	#<#55339
      3  8690				  -	      pha
      4  8690				  -	      lda	#>#55339
      5  8690				  -	      pha
      6  8690					      ELSE
      7  8690		       a9 2b		      lda	#<#55339
      8  8692		       a0 d8		      ldy	#>#55339
      9  8694					      ENDIF
  13596  8694				   FPULL      SET	1
  13597  8694				   FPUSH      SET	0
      0  8694					      pokeb
      1  8694				  -	      IF	!FPULL
      2  8694				  -	      pla
      3  8694				  -	      sta	.selfmod_code+2
      4  8694				  -	      pla
      5  8694				  -	      sta	.selfmod_code+1
      6  8694					      ELSE
      7  8694		       8d 9c 86 	      sta	.selfmod_code+1
      8  8697		       8c 9d 86 	      sty	.selfmod_code+2
      9  869a					      ENDIF
     10  869a		       68		      pla
     11  869b				   .selfmod_code
     12  869b		       8d 00 00 	      sta.w	$0000
  13599  869b				   FPULL      SET	0
      0  869e					      pbyte	#7
      1  869e		       a9 07		      lda	#7
      2  86a0					      IF	!FPUSH
      3  86a0		       48		      pha
      4  86a1					      ENDIF
  13601  86a1				   FPUSH      SET	1
      0  86a1					      pword	#55340
      1  86a1				  -	      IF	!FPUSH
      2  86a1				  -	      lda	#<#55340
      3  86a1				  -	      pha
      4  86a1				  -	      lda	#>#55340
      5  86a1				  -	      pha
      6  86a1					      ELSE
      7  86a1		       a9 2c		      lda	#<#55340
      8  86a3		       a0 d8		      ldy	#>#55340
      9  86a5					      ENDIF
  13603  86a5				   FPULL      SET	1
  13604  86a5				   FPUSH      SET	0
      0  86a5					      pokeb
      1  86a5				  -	      IF	!FPULL
      2  86a5				  -	      pla
      3  86a5				  -	      sta	.selfmod_code+2
      4  86a5				  -	      pla
      5  86a5				  -	      sta	.selfmod_code+1
      6  86a5					      ELSE
      7  86a5		       8d ad 86 	      sta	.selfmod_code+1
      8  86a8		       8c ae 86 	      sty	.selfmod_code+2
      9  86ab					      ENDIF
     10  86ab		       68		      pla
     11  86ac				   .selfmod_code
     12  86ac		       8d 00 00 	      sta.w	$0000
  13606  86ac				   FPULL      SET	0
      0  86af					      pbyte	#200
      1  86af		       a9 c8		      lda	#200
      2  86b1					      IF	!FPUSH
      3  86b1		       48		      pha
      4  86b2					      ENDIF
      0  86b2					      btow
      1  86b2		       a9 00		      lda	#$00
      2  86b4		       48		      pha
      0  86b5					      pword	#1024
      1  86b5					      IF	!FPUSH
      2  86b5		       a9 00		      lda	#<#1024
      3  86b7		       48		      pha
      4  86b8		       a9 04		      lda	#>#1024
      5  86ba		       48		      pha
      6  86bb				  -	      ELSE
      7  86bb				  -	      lda	#<#1024
      8  86bb				  -	      ldy	#>#1024
      9  86bb					      ENDIF
      0  86bb					      paddr	_setup_screen.dashboard
      0  86bb					      pword	_setup_screen.dashboard
      1  86bb					      IF	!FPUSH
      2  86bb		       a9 30		      lda	#<_setup_screen.dashboard
      3  86bd		       48		      pha
      4  86be		       a9 a4		      lda	#>_setup_screen.dashboard
      5  86c0		       48		      pha
      6  86c1				  -	      ELSE
      7  86c1				  -	      lda	#<_setup_screen.dashboard
      8  86c1				  -	      ldy	#>_setup_screen.dashboard
      9  86c1					      ENDIF
      0  86c1					      memcpy
      1  86c1					      IF	!FPULL
      2  86c1		       68		      pla
      3  86c2		       85 fc		      sta	R1
      4  86c4		       68		      pla
      5  86c5		       85 fb		      sta	R0
      6  86c7				  -	      ELSE
      7  86c7				  -	      sta	R0
      8  86c7				  -	      sty	R1
      9  86c7					      ENDIF
     10  86c7		       68		      pla
     11  86c8		       85 fe		      sta	R3
     12  86ca		       68		      pla
     13  86cb		       85 fd		      sta	R2
     14  86cd		       68		      pla
     15  86ce		       85 40		      sta	R5
     16  86d0		       68		      pla
     17  86d1		       85 3f		      sta	R4
     18  86d3		       20 f9 0a 	      jsr	mem_memcpy
  13612  86d3				   FPUSH      SET	1
      0  86d6					      pbvar	_setup_screen.draw_title
      0  86d6					      pbyte	_setup_screen.draw_title
      1  86d6		       ad 5a b6 	      lda	_setup_screen.draw_title
      2  86d9				  -	      IF	!FPUSH
      3  86d9				  -	      pha
      4  86d9					      ENDIF
  13614  86d9				   FPULL      SET	1
  13615  86d9				   FPUSH      SET	0
      0  86d9					      ongosub	_On_LB1, _On_HB1
      1  86d9				  -	      IF	!FPULL
      2  86d9				  -	      pla
      3  86d9					      ENDIF
      4  86d9		       aa		      tax
      5  86da		       bd f0 ad 	      lda.wx	_On_LB1
      6  86dd		       8d e7 86 	      sta	.selfmod_code+1
      7  86e0		       bd f3 ad 	      lda.wx	_On_HB1
      8  86e3		       8d e8 86 	      sta	.selfmod_code+2
      9  86e6				   .selfmod_code
     10  86e6		       20 00 00 	      jsr	$0000
  13617  86e6				   FPULL      SET	0
      0  86e9					      pbyte	#160
      1  86e9		       a9 a0		      lda	#160
      2  86eb					      IF	!FPUSH
      3  86eb		       48		      pha
      4  86ec					      ENDIF
      0  86ec					      pbyte	#40
      1  86ec		       a9 28		      lda	#40
      2  86ee					      IF	!FPUSH
      3  86ee		       48		      pha
      4  86ef					      ENDIF
      0  86ef					      btow
      1  86ef		       a9 00		      lda	#$00
      2  86f1		       48		      pha
      0  86f2					      pword	#1984
      1  86f2					      IF	!FPUSH
      2  86f2		       a9 c0		      lda	#<#1984
      3  86f4		       48		      pha
      4  86f5		       a9 07		      lda	#>#1984
      5  86f7		       48		      pha
      6  86f8				  -	      ELSE
      7  86f8				  -	      lda	#<#1984
      8  86f8				  -	      ldy	#>#1984
      9  86f8					      ENDIF
      0  86f8					      memset
      1  86f8					      IF	!FPULL
      2  86f8		       68		      pla
      3  86f9		       85 fc		      sta	R1
      4  86fb		       68		      pla
      5  86fc		       85 fb		      sta	R0
      6  86fe				  -	      ELSE
      7  86fe				  -	      sta	R0
      8  86fe				  -	      sty	R1
      9  86fe					      ENDIF
     10  86fe		       68		      pla
     11  86ff		       85 fe		      sta	R3
     12  8701		       68		      pla
     13  8702		       85 fd		      sta	R2
     14  8704		       68		      pla
     15  8705		       20 de 0a 	      jsr	mem_memset
      0  8708					      pbyte	#14
      1  8708		       a9 0e		      lda	#14
      2  870a					      IF	!FPUSH
      3  870a		       48		      pha
      4  870b					      ENDIF
      0  870b					      pword	#360
      1  870b					      IF	!FPUSH
      2  870b		       a9 68		      lda	#<#360
      3  870d		       48		      pha
      4  870e		       a9 01		      lda	#>#360
      5  8710		       48		      pha
      6  8711				  -	      ELSE
      7  8711				  -	      lda	#<#360
      8  8711				  -	      ldy	#>#360
      9  8711					      ENDIF
      0  8711					      pword	#55936
      1  8711					      IF	!FPUSH
      2  8711		       a9 80		      lda	#<#55936
      3  8713		       48		      pha
      4  8714		       a9 da		      lda	#>#55936
      5  8716		       48		      pha
      6  8717				  -	      ELSE
      7  8717				  -	      lda	#<#55936
      8  8717				  -	      ldy	#>#55936
      9  8717					      ENDIF
      0  8717					      memset
      1  8717					      IF	!FPULL
      2  8717		       68		      pla
      3  8718		       85 fc		      sta	R1
      4  871a		       68		      pla
      5  871b		       85 fb		      sta	R0
      6  871d				  -	      ELSE
      7  871d				  -	      sta	R0
      8  871d				  -	      sty	R1
      9  871d					      ENDIF
     10  871d		       68		      pla
     11  871e		       85 fe		      sta	R3
     12  8720		       68		      pla
     13  8721		       85 fd		      sta	R2
     14  8723		       68		      pla
     15  8724		       20 de 0a 	      jsr	mem_memset
  13627  8724				   FPUSH      SET	1
      0  8727					      pword	#1664
      1  8727				  -	      IF	!FPUSH
      2  8727				  -	      lda	#<#1664
      3  8727				  -	      pha
      4  8727				  -	      lda	#>#1664
      5  8727				  -	      pha
      6  8727					      ELSE
      7  8727		       a9 80		      lda	#<#1664
      8  8729		       a0 06		      ldy	#>#1664
      9  872b					      ENDIF
  13629  872b				   FPULL      SET	1
  13630  872b				   FPUSH      SET	0
      0  872b					      plw2var	_setup_screen.n
      1  872b				  -	      IF	!FPULL
      2  872b				  -	      pla
      3  872b				  -	      sta	_setup_screen.n+1
      4  872b				  -	      pla
      5  872b				  -	      sta	_setup_screen.n
      6  872b					      ELSE
      7  872b		       8d 5b b6 	      sta	_setup_screen.n
      8  872e		       8c 5c b6 	      sty	_setup_screen.n+1
      9  8731					      ENDIF
  13632  8731				   FPULL      SET	0
  13633  8731				   FPUSH      SET	1
      0  8731					      pword	#1983
      1  8731				  -	      IF	!FPUSH
      2  8731				  -	      lda	#<#1983
      3  8731				  -	      pha
      4  8731				  -	      lda	#>#1983
      5  8731				  -	      pha
      6  8731					      ELSE
      7  8731		       a9 bf		      lda	#<#1983
      8  8733		       a0 07		      ldy	#>#1983
      9  8735					      ENDIF
  13635  8735				   FPULL      SET	1
  13636  8735				   FPUSH      SET	0
      0  8735					      plw2var	XFOR_max_6
      1  8735				  -	      IF	!FPULL
      2  8735				  -	      pla
      3  8735				  -	      sta	XFOR_max_6+1
      4  8735				  -	      pla
      5  8735				  -	      sta	XFOR_max_6
      6  8735					      ELSE
      7  8735		       8d 5d b6 	      sta	XFOR_max_6
      8  8738		       8c 5e b6 	      sty	XFOR_max_6+1
      9  873b					      ENDIF
  13638  873b				   _FOR_6
      0  873b					      forw	6, _setup_screen.n
      1  873b				  -	      IFCONST	XFOR_step_6
      2  873b				  -
      3  873b				  -	      lda	XFOR_step_6 + 1
      4  873b				  -
      5  873b				  -	      bpl	.cmp
      6  873b				  -.neg
      7  873b				  -
      8  873b				  -	      lda	_setup_screen.n
      9  873b				  -	      cmp	XFOR_max_6
     10  873b				  -	      lda	_setup_screen.n+1
     11  873b				  -	      sbc	XFOR_max_6+1
     12  873b				  -	      bpl	.enter
     13  873b				  -	      jmp	_ENDFOR_6
     14  873b					      ENDIF
     15  873b				   .cmp
     16  873b
     17  873b		       ad 5d b6 	      lda	XFOR_max_6
     18  873e		       cd 5b b6 	      cmp	_setup_screen.n
     19  8741		       ad 5e b6 	      lda	XFOR_max_6+1
     20  8744		       ed 5c b6 	      sbc	_setup_screen.n+1
     21  8747		       10 03		      bpl	.enter
     22  8749		       4c 6a 87 	      jmp	_ENDFOR_6
     23  874c				   .enter
  13640  874c				   FPULL      SET	0
      0  874c					      pbyte	#90
      1  874c		       a9 5a		      lda	#90
      2  874e					      IF	!FPUSH
      3  874e		       48		      pha
      4  874f					      ENDIF
  13642  874f				   FPUSH      SET	1
      0  874f					      pwvar	_setup_screen.n
      1  874f				  -	      IF	!FPUSH
      2  874f				  -	      lda	_setup_screen.n
      3  874f				  -	      pha
      4  874f				  -	      lda	_setup_screen.n+1
      5  874f				  -	      pha
      6  874f					      ELSE
      7  874f		       ad 5b b6 	      lda	_setup_screen.n
      8  8752		       ac 5c b6 	      ldy	_setup_screen.n+1
      9  8755					      ENDIF
  13644  8755				   FPULL      SET	1
  13645  8755				   FPUSH      SET	0
      0  8755					      pokeb
      1  8755				  -	      IF	!FPULL
      2  8755				  -	      pla
      3  8755				  -	      sta	.selfmod_code+2
      4  8755				  -	      pla
      5  8755				  -	      sta	.selfmod_code+1
      6  8755					      ELSE
      7  8755		       8d 5d 87 	      sta	.selfmod_code+1
      8  8758		       8c 5e 87 	      sty	.selfmod_code+2
      9  875b					      ENDIF
     10  875b		       68		      pla
     11  875c				   .selfmod_code
     12  875c		       8d 00 00 	      sta.w	$0000
      0  875f					      nextw	6, _setup_screen.n
      1  875f
      2  875f				  -	      IFCONST	XFOR_step_6
      3  875f				  -
      4  875f				  -	      clc
      5  875f				  -	      lda	XFOR_step_6
      6  875f				  -	      adc	_setup_screen.n
      7  875f				  -	      sta	_setup_screen.n
      8  875f				  -	      lda	XFOR_step_6+1
      9  875f				  -	      adc	_setup_screen.n+1
     10  875f				  -	      sta	_setup_screen.n+1
     11  875f					      ELSE
     12  875f
     13  875f		       ee 5b b6 	      inc	_setup_screen.n
     14  8762		       d0 03		      bne	.skip
     15  8764		       ee 5c b6 	      inc	_setup_screen.n+1
     16  8767					      ENDIF
     17  8767				   .skip
     18  8767
     19  8767		       4c 3b 87 	      jmp	_FOR_6
  13648  876a				   _ENDFOR_6
  13649  876a				   FPULL      SET	0
      0  876a					      pword	#18783
      1  876a					      IF	!FPUSH
      2  876a		       a9 5f		      lda	#<#18783
      3  876c		       48		      pha
      4  876d		       a9 49		      lda	#>#18783
      5  876f		       48		      pha
      6  8770				  -	      ELSE
      7  8770				  -	      lda	#<#18783
      8  8770				  -	      ldy	#>#18783
      9  8770					      ENDIF
      0  8770					      pbyte	#1
      1  8770		       a9 01		      lda	#1
      2  8772					      IF	!FPUSH
      3  8772		       48		      pha
      4  8773					      ENDIF
      0  8773					      btow
      1  8773		       a9 00		      lda	#$00
      2  8775		       48		      pha
      0  8776					      addw
      1  8776		       ba		      tsx
      2  8777		       bd 02 01 	      lda.wx	stack+2
      3  877a		       18		      clc
      4  877b		       7d 04 01 	      adc.wx	stack+4
      5  877e		       9d 04 01 	      sta.wx	stack+4
      6  8781		       68		      pla
      7  8782		       7d 03 01 	      adc.wx	stack+3
      8  8785		       9d 03 01 	      sta.wx	stack+3
      9  8788		       68		      pla
      0  8789					      plw2var	_setup_screen.loc
      1  8789					      IF	!FPULL
      2  8789		       68		      pla
      3  878a		       8d 60 b6 	      sta	_setup_screen.loc+1
      4  878d		       68		      pla
      5  878e		       8d 5f b6 	      sta	_setup_screen.loc
      6  8791				  -	      ELSE
      7  8791				  -	      sta	_setup_screen.loc
      8  8791				  -	      sty	_setup_screen.loc+1
      9  8791					      ENDIF
  13655  8791				   FPUSH      SET	1
      0  8791					      pbyte	#0
      1  8791		       a9 00		      lda	#0
      2  8793				  -	      IF	!FPUSH
      3  8793				  -	      pha
      4  8793					      ENDIF
  13657  8793				   FPULL      SET	1
  13658  8793				   FPUSH      SET	0
      0  8793					      plb2var	_setup_screen.col
      1  8793				  -	      IF	!FPULL
      2  8793				  -	      pla
      3  8793					      ENDIF
      4  8793		       8d 61 b6 	      sta	_setup_screen.col
  13660  8793				   FPULL      SET	0
  13661  8793				   FPUSH      SET	1
      0  8796					      pbyte	#39
      1  8796		       a9 27		      lda	#39
      2  8798				  -	      IF	!FPUSH
      3  8798				  -	      pha
      4  8798					      ENDIF
  13663  8798				   FPULL      SET	1
  13664  8798				   FPUSH      SET	0
      0  8798					      plb2var	XFOR_max_7
      1  8798				  -	      IF	!FPULL
      2  8798				  -	      pla
      3  8798					      ENDIF
      4  8798		       8d 62 b6 	      sta	XFOR_max_7
  13666  879b				   _FOR_7
      0  879b					      forb	7, _setup_screen.col
      1  879b
      2  879b		       ad 62 b6 	      lda	XFOR_max_7
      3  879e		       cd 61 b6 	      cmp	_setup_screen.col
      4  87a1		       b0 03		      bcs	.enter
      5  87a3
      6  87a3		       4c 44 88 	      jmp	_ENDFOR_7
      7  87a6				   .enter
  13668  87a6				   FPULL      SET	0
  13669  87a6				   FPUSH      SET	1
      0  87a6					      pbyte	#16
      1  87a6		       a9 10		      lda	#16
      2  87a8				  -	      IF	!FPUSH
      3  87a8				  -	      pha
      4  87a8					      ENDIF
  13671  87a8				   FPULL      SET	1
  13672  87a8				   FPUSH      SET	0
      0  87a8					      plb2var	_setup_screen.i
      1  87a8				  -	      IF	!FPULL
      2  87a8				  -	      pla
      3  87a8					      ENDIF
      4  87a8		       8d 63 b6 	      sta	_setup_screen.i
  13674  87a8				   FPULL      SET	0
  13675  87a8				   FPUSH      SET	1
      0  87ab					      pbyte	#23
      1  87ab		       a9 17		      lda	#23
      2  87ad				  -	      IF	!FPUSH
      3  87ad				  -	      pha
      4  87ad					      ENDIF
  13677  87ad				   FPULL      SET	1
  13678  87ad				   FPUSH      SET	0
      0  87ad					      plb2var	XFOR_max_8
      1  87ad				  -	      IF	!FPULL
      2  87ad				  -	      pla
      3  87ad					      ENDIF
      4  87ad		       8d 64 b6 	      sta	XFOR_max_8
  13680  87b0				   _FOR_8
      0  87b0					      forb	8, _setup_screen.i
      1  87b0
      2  87b0		       ad 64 b6 	      lda	XFOR_max_8
      3  87b3		       cd 63 b6 	      cmp	_setup_screen.i
      4  87b6		       b0 03		      bcs	.enter
      5  87b8
      6  87b8		       4c 3c 88 	      jmp	_ENDFOR_8
      7  87bb				   .enter
  13682  87bb				   FPULL      SET	0
  13683  87bb				   FPUSH      SET	1
      0  87bb					      pwvar	_setup_screen.loc
      1  87bb				  -	      IF	!FPUSH
      2  87bb				  -	      lda	_setup_screen.loc
      3  87bb				  -	      pha
      4  87bb				  -	      lda	_setup_screen.loc+1
      5  87bb				  -	      pha
      6  87bb					      ELSE
      7  87bb		       ad 5f b6 	      lda	_setup_screen.loc
      8  87be		       ac 60 b6 	      ldy	_setup_screen.loc+1
      9  87c1					      ENDIF
  13685  87c1				   FPULL      SET	1
  13686  87c1				   FPUSH      SET	0
      0  87c1					      peekb
      1  87c1				  -	      IF	!FPULL
      2  87c1				  -	      pla
      3  87c1				  -	      sta	.selfmod_code+2
      4  87c1				  -	      pla
      5  87c1				  -	      sta	.selfmod_code+1
      6  87c1					      ELSE
      7  87c1		       8d c8 87 	      sta	.selfmod_code+1
      8  87c4		       8c c9 87 	      sty	.selfmod_code+2
      9  87c7					      ENDIF
     10  87c7				   .selfmod_code
     11  87c7		       ad 00 00 	      lda.w	$0000
     12  87ca					      IF	!FPUSH
     13  87ca		       48		      pha
     14  87cb					      ENDIF
  13688  87cb				   FPULL      SET	0
      0  87cb					      pword	#1024
      1  87cb					      IF	!FPUSH
      2  87cb		       a9 00		      lda	#<#1024
      3  87cd		       48		      pha
      4  87ce		       a9 04		      lda	#>#1024
      5  87d0		       48		      pha
      6  87d1				  -	      ELSE
      7  87d1				  -	      lda	#<#1024
      8  87d1				  -	      ldy	#>#1024
      9  87d1					      ENDIF
      0  87d1					      pbvar	_setup_screen.i
      0  87d1					      pbyte	_setup_screen.i
      1  87d1		       ad 63 b6 	      lda	_setup_screen.i
      2  87d4					      IF	!FPUSH
      3  87d4		       48		      pha
      4  87d5					      ENDIF
      0  87d5					      btow
      1  87d5		       a9 00		      lda	#$00
      2  87d7		       48		      pha
      0  87d8					      pbyte	#40
      1  87d8		       a9 28		      lda	#40
      2  87da					      IF	!FPUSH
      3  87da		       48		      pha
      4  87db					      ENDIF
      0  87db					      btow
      1  87db		       a9 00		      lda	#$00
      2  87dd		       48		      pha
      0  87de					      mulw
      1  87de					      IF	!FPULL
      2  87de		       68		      pla
      3  87df		       85 fc		      sta	R1
      4  87e1		       68		      pla
      5  87e2		       85 fb		      sta	R0
      6  87e4				  -	      ELSE
      7  87e4				  -	      sta	R0
      8  87e4				  -	      sty	R1
      9  87e4					      ENDIF
     10  87e4		       68		      pla
     11  87e5		       85 fe		      sta	R3
     12  87e7		       68		      pla
     13  87e8		       85 fd		      sta	R2
     14  87ea		       20 0d 08 	      jsr	NUCL_SMUL16
     15  87ed					      IF	!FPUSH
     16  87ed		       a5 fb		      lda	R0
     17  87ef		       48		      pha
     18  87f0		       a5 fc		      lda	R1
     19  87f2		       48		      pha
     20  87f3				  -	      ELSE
     21  87f3				  -	      lda	R0
     22  87f3				  -	      ldy	R1
     23  87f3					      ENDIF
      0  87f3					      addw
      1  87f3		       ba		      tsx
      2  87f4		       bd 02 01 	      lda.wx	stack+2
      3  87f7		       18		      clc
      4  87f8		       7d 04 01 	      adc.wx	stack+4
      5  87fb		       9d 04 01 	      sta.wx	stack+4
      6  87fe		       68		      pla
      7  87ff		       7d 03 01 	      adc.wx	stack+3
      8  8802		       9d 03 01 	      sta.wx	stack+3
      9  8805		       68		      pla
      0  8806					      pbvar	_setup_screen.col
      0  8806					      pbyte	_setup_screen.col
      1  8806		       ad 61 b6 	      lda	_setup_screen.col
      2  8809					      IF	!FPUSH
      3  8809		       48		      pha
      4  880a					      ENDIF
      0  880a					      btow
      1  880a		       a9 00		      lda	#$00
      2  880c		       48		      pha
      0  880d					      addw
      1  880d		       ba		      tsx
      2  880e		       bd 02 01 	      lda.wx	stack+2
      3  8811		       18		      clc
      4  8812		       7d 04 01 	      adc.wx	stack+4
      5  8815		       9d 04 01 	      sta.wx	stack+4
      6  8818		       68		      pla
      7  8819		       7d 03 01 	      adc.wx	stack+3
      8  881c		       9d 03 01 	      sta.wx	stack+3
      9  881f		       68		      pla
      0  8820					      pokeb
      1  8820					      IF	!FPULL
      2  8820		       68		      pla
      3  8821		       8d 2b 88 	      sta	.selfmod_code+2
      4  8824		       68		      pla
      5  8825		       8d 2a 88 	      sta	.selfmod_code+1
      6  8828				  -	      ELSE
      7  8828				  -	      sta	.selfmod_code+1
      8  8828				  -	      sty	.selfmod_code+2
      9  8828					      ENDIF
     10  8828		       68		      pla
     11  8829				   .selfmod_code
     12  8829		       8d 00 00 	      sta.w	$0000
      0  882c					      incw	_setup_screen.loc
      1  882c		       ee 5f b6 	      inc	_setup_screen.loc
      2  882f		       d0 03		      bne	.skip
      3  8831		       ee 60 b6 	      inc	_setup_screen.loc+1
      4  8834				   .skip
      0  8834					      nextb	8, _setup_screen.i
      1  8834
      2  8834				  -	      IFCONST	XFOR_step_8
      3  8834				  -
      4  8834				  -	      clc
      5  8834				  -	      lda	XFOR_step_8
      6  8834				  -	      adc	_setup_screen.i
      7  8834				  -	      sta	_setup_screen.i
      8  8834				  -
      9  8834				  -	      bcs	_ENDFOR_8
     10  8834					      ELSE
     11  8834
     12  8834		       ee 63 b6 	      inc	_setup_screen.i
     13  8837
     14  8837		       f0 03		      beq	_ENDFOR_8
     15  8839					      ENDIF
     16  8839		       4c b0 87 	      jmp	_FOR_8
  13702  883c				   _ENDFOR_8
      0  883c					      nextb	7, _setup_screen.col
      1  883c
      2  883c				  -	      IFCONST	XFOR_step_7
      3  883c				  -
      4  883c				  -	      clc
      5  883c				  -	      lda	XFOR_step_7
      6  883c				  -	      adc	_setup_screen.col
      7  883c				  -	      sta	_setup_screen.col
      8  883c				  -
      9  883c				  -	      bcs	_ENDFOR_7
     10  883c					      ELSE
     11  883c
     12  883c		       ee 61 b6 	      inc	_setup_screen.col
     13  883f
     14  883f		       f0 03		      beq	_ENDFOR_7
     15  8841					      ENDIF
     16  8841		       4c 9b 87 	      jmp	_FOR_7
  13704  8844
  13705  8844
  13706  8844
  13707  8844
  13708  8844
  13709  8844
  13710  8844
  13711  8844				   _ENDFOR_7
      0  8844					      pbyte_pbyte_cmpbeq_cond	_setup_screen.draw_title, #1, _EI_65548, _EL_65548
      1  8844
      2  8844
      3  8844		       ad 5a b6 	      lda	_setup_screen.draw_title
      4  8847		       c9 01		      cmp	#1
      5  8849		       f0 03		      beq	*+5
      6  884b				  -	      IFCONST	_EL_65548
      7  884b				  -	      jmp	_EL_65548
      8  884b					      ELSE
      9  884b		       4c 62 88 	      jmp	_EI_65548
     10  884e					      ENDIF
  13713  884e				   FPUSH      SET	1
      0  884e					      pbyte	#32
      1  884e		       a9 20		      lda	#32
      2  8850				  -	      IF	!FPUSH
      3  8850				  -	      pha
      4  8850					      ENDIF
  13715  8850				   FPULL      SET	1
  13716  8850				   FPUSH      SET	0
      0  8850					      pokeb_const_addr	#1830
      1  8850
      2  8850
      3  8850
      4  8850		       07 26	   .ad	      EQU	#1830
      5  8850				  -	      IF	!FPULL
      6  8850				  -	      pla
      7  8850					      ENDIF
      8  8850		       8d 26 07 	      sta	.ad
  13718  8850				   FPULL      SET	0
  13719  8850				   FPUSH      SET	1
      0  8853					      pbyte	#32
      1  8853		       a9 20		      lda	#32
      2  8855				  -	      IF	!FPUSH
      3  8855				  -	      pha
      4  8855					      ENDIF
  13721  8855				   FPULL      SET	1
  13722  8855				   FPUSH      SET	0
      0  8855					      pokeb_const_addr	#1796
      1  8855
      2  8855
      3  8855
      4  8855		       07 04	   .ad	      EQU	#1796
      5  8855				  -	      IF	!FPULL
      6  8855				  -	      pla
      7  8855					      ENDIF
      8  8855		       8d 04 07 	      sta	.ad
  13724  8855				   FPULL      SET	0
  13725  8855				   FPUSH      SET	1
      0  8858					      pbyte	#32
      1  8858		       a9 20		      lda	#32
      2  885a				  -	      IF	!FPUSH
      3  885a				  -	      pha
      4  885a					      ENDIF
  13727  885a				   FPULL      SET	1
  13728  885a				   FPUSH      SET	0
      0  885a					      pokeb_const_addr	#1878
      1  885a
      2  885a
      3  885a
      4  885a		       07 56	   .ad	      EQU	#1878
      5  885a				  -	      IF	!FPULL
      6  885a				  -	      pla
      7  885a					      ENDIF
      8  885a		       8d 56 07 	      sta	.ad
  13730  885a				   FPULL      SET	0
  13731  885a				   FPUSH      SET	1
      0  885d					      pbyte	#32
      1  885d		       a9 20		      lda	#32
      2  885f				  -	      IF	!FPUSH
      3  885f				  -	      pha
      4  885f					      ENDIF
  13733  885f				   FPULL      SET	1
  13734  885f				   FPUSH      SET	0
      0  885f					      pokeb_const_addr	#1879
      1  885f
      2  885f
      3  885f
      4  885f		       07 57	   .ad	      EQU	#1879
      5  885f				  -	      IF	!FPULL
      6  885f				  -	      pla
      7  885f					      ENDIF
      8  885f		       8d 57 07 	      sta	.ad
  13736  8862
  13737  8862
  13738  8862
  13739  8862
  13740  8862				   _EI_65548
  13741  8862				   FPULL      SET	0
      0  8862					      pbyte	#3
      1  8862		       a9 03		      lda	#3
      2  8864					      IF	!FPUSH
      3  8864		       48		      pha
      4  8865					      ENDIF
      0  8865					      btow
      1  8865		       a9 00		      lda	#$00
      2  8867		       48		      pha
  13744  8867				   FPUSH      SET	1
      0  8868					      pword	#40
      1  8868				  -	      IF	!FPUSH
      2  8868				  -	      lda	#<#40
      3  8868				  -	      pha
      4  8868				  -	      lda	#>#40
      5  8868				  -	      pha
      6  8868					      ELSE
      7  8868		       a9 28		      lda	#<#40
      8  886a		       a0 00		      ldy	#>#40
      9  886c					      ENDIF
  13746  886c				   FPULL      SET	1
  13747  886c				   FPUSH      SET	0
      0  886c					      mulw
      1  886c				  -	      IF	!FPULL
      2  886c				  -	      pla
      3  886c				  -	      sta	R1
      4  886c				  -	      pla
      5  886c				  -	      sta	R0
      6  886c					      ELSE
      7  886c		       85 fb		      sta	R0
      8  886e		       84 fc		      sty	R1
      9  8870					      ENDIF
     10  8870		       68		      pla
     11  8871		       85 fe		      sta	R3
     12  8873		       68		      pla
     13  8874		       85 fd		      sta	R2
     14  8876		       20 0d 08 	      jsr	NUCL_SMUL16
     15  8879					      IF	!FPUSH
     16  8879		       a5 fb		      lda	R0
     17  887b		       48		      pha
     18  887c		       a5 fc		      lda	R1
     19  887e		       48		      pha
     20  887f				  -	      ELSE
     21  887f				  -	      lda	R0
     22  887f				  -	      ldy	R1
     23  887f					      ENDIF
  13749  887f				   FPULL      SET	0
      0  887f					      pbyte	#7
      1  887f		       a9 07		      lda	#7
      2  8881					      IF	!FPUSH
      3  8881		       48		      pha
      4  8882					      ENDIF
      0  8882					      btow
      1  8882		       a9 00		      lda	#$00
      2  8884		       48		      pha
      0  8885					      addw
      1  8885		       ba		      tsx
      2  8886		       bd 02 01 	      lda.wx	stack+2
      3  8889		       18		      clc
      4  888a		       7d 04 01 	      adc.wx	stack+4
      5  888d		       9d 04 01 	      sta.wx	stack+4
      6  8890		       68		      pla
      7  8891		       7d 03 01 	      adc.wx	stack+3
      8  8894		       9d 03 01 	      sta.wx	stack+3
      9  8897		       68		      pla
      0  8898					      pword	#1024
      1  8898					      IF	!FPUSH
      2  8898		       a9 00		      lda	#<#1024
      3  889a		       48		      pha
      4  889b		       a9 04		      lda	#>#1024
      5  889d		       48		      pha
      6  889e				  -	      ELSE
      7  889e				  -	      lda	#<#1024
      8  889e				  -	      ldy	#>#1024
      9  889e					      ENDIF
      0  889e					      addw
      1  889e		       ba		      tsx
      2  889f		       bd 02 01 	      lda.wx	stack+2
      3  88a2		       18		      clc
      4  88a3		       7d 04 01 	      adc.wx	stack+4
      5  88a6		       9d 04 01 	      sta.wx	stack+4
      6  88a9		       68		      pla
      7  88aa		       7d 03 01 	      adc.wx	stack+3
      8  88ad		       9d 03 01 	      sta.wx	stack+3
      9  88b0		       68		      pla
  13755  88b0				   FPUSH      SET	1
      0  88b1					      pwvar	_hiscore
      1  88b1				  -	      IF	!FPUSH
      2  88b1				  -	      lda	_hiscore
      3  88b1				  -	      pha
      4  88b1				  -	      lda	_hiscore+1
      5  88b1				  -	      pha
      6  88b1					      ELSE
      7  88b1		       ad 29 b5 	      lda	_hiscore
      8  88b4		       ac 2a b5 	      ldy	_hiscore+1
      9  88b7					      ENDIF
  13757  88b7
  13758  88b7				   FPULL      SET	1
  13759  88b7				   FPUSH      SET	0
      0  88b7					      wat
      1  88b7				  -	      IF	!FPULL
      2  88b7				  -	      pla
      3  88b7				  -	      sta	R3
      4  88b7				  -	      pla
      5  88b7				  -	      sta	R2
      6  88b7					      ELSE
      7  88b7		       85 fd		      sta	R2
      8  88b9		       84 fe		      sty	R3
      9  88bb					      ENDIF
     10  88bb		       68		      pla
     11  88bc		       85 46		      sta	RB
     12  88be		       68		      pla
     13  88bf		       85 45		      sta	RA
     14  88c1		       20 1f 0a 	      jsr	STDLIB_OUTPUT_WORD
  13761  88c1				   FPULL      SET	0
      0  88c4					      peekb_const_addr	#53265
      1  88c4
      2  88c4
      3  88c4
      4  88c4		       d0 11	   .ad	      EQU	#53265
      5  88c4		       ad 11 d0 	      lda	.ad
      6  88c7					      IF	!FPUSH
      7  88c7		       48		      pha
      8  88c8					      ENDIF
  13763  88c8				   FPUSH      SET	1
      0  88c8					      pbyte	#16
      1  88c8		       a9 10		      lda	#16
      2  88ca				  -	      IF	!FPUSH
      3  88ca				  -	      pha
      4  88ca					      ENDIF
  13765  88ca				   FPULL      SET	1
      0  88ca					      orb
      1  88ca				  -	      IF	!FPULL
      2  88ca				  -	      pla
      3  88ca					      ENDIF
      4  88ca		       85 fc		      sta	R1
      5  88cc		       68		      pla
      6  88cd		       05 fc		      ora	R1
      7  88cf				  -	      IF	!FPUSH
      8  88cf				  -	      pha
      9  88cf					      ENDIF
  13767  88cf				   FPUSH      SET	0
      0  88cf					      pokeb_const_addr	#53265
      1  88cf
      2  88cf
      3  88cf
      4  88cf		       d0 11	   .ad	      EQU	#53265
      5  88cf				  -	      IF	!FPULL
      6  88cf				  -	      pla
      7  88cf					      ENDIF
      8  88cf		       8d 11 d0 	      sta	.ad
  13769  88d2		       60		      rts
  13770  88d3
  13771  88d3
  13772  88d3
  13773  88d3
  13774  88d3				   _Lsetup_screen.draw_bg
  13775  88d3				   FPULL      SET	0
      0  88d3					      pword	#440
      1  88d3					      IF	!FPUSH
      2  88d3		       a9 b8		      lda	#<#440
      3  88d5		       48		      pha
      4  88d6		       a9 01		      lda	#>#440
      5  88d8		       48		      pha
      6  88d9				  -	      ELSE
      7  88d9				  -	      lda	#<#440
      8  88d9				  -	      ldy	#>#440
      9  88d9					      ENDIF
      0  88d9					      pword	#1024
      1  88d9					      IF	!FPUSH
      2  88d9		       a9 00		      lda	#<#1024
      3  88db		       48		      pha
      4  88dc		       a9 04		      lda	#>#1024
      5  88de		       48		      pha
      6  88df				  -	      ELSE
      7  88df				  -	      lda	#<#1024
      8  88df				  -	      ldy	#>#1024
      9  88df					      ENDIF
      0  88df					      pbyte	#200
      1  88df		       a9 c8		      lda	#200
      2  88e1					      IF	!FPUSH
      3  88e1		       48		      pha
      4  88e2					      ENDIF
      0  88e2					      btow
      1  88e2		       a9 00		      lda	#$00
      2  88e4		       48		      pha
      0  88e5					      addw
      1  88e5		       ba		      tsx
      2  88e6		       bd 02 01 	      lda.wx	stack+2
      3  88e9		       18		      clc
      4  88ea		       7d 04 01 	      adc.wx	stack+4
      5  88ed		       9d 04 01 	      sta.wx	stack+4
      6  88f0		       68		      pla
      7  88f1		       7d 03 01 	      adc.wx	stack+3
      8  88f4		       9d 03 01 	      sta.wx	stack+3
      9  88f7		       68		      pla
      0  88f8					      paddr	_setup_screen.background_graphics
      0  88f8					      pword	_setup_screen.background_graphics
      1  88f8					      IF	!FPUSH
      2  88f8		       a9 f8		      lda	#<_setup_screen.background_graphics
      3  88fa		       48		      pha
      4  88fb		       a9 a4		      lda	#>_setup_screen.background_graphics
      5  88fd		       48		      pha
      6  88fe				  -	      ELSE
      7  88fe				  -	      lda	#<_setup_screen.background_graphics
      8  88fe				  -	      ldy	#>_setup_screen.background_graphics
      9  88fe					      ENDIF
      0  88fe					      memcpy
      1  88fe					      IF	!FPULL
      2  88fe		       68		      pla
      3  88ff		       85 fc		      sta	R1
      4  8901		       68		      pla
      5  8902		       85 fb		      sta	R0
      6  8904				  -	      ELSE
      7  8904				  -	      sta	R0
      8  8904				  -	      sty	R1
      9  8904					      ENDIF
     10  8904		       68		      pla
     11  8905		       85 fe		      sta	R3
     12  8907		       68		      pla
     13  8908		       85 fd		      sta	R2
     14  890a		       68		      pla
     15  890b		       85 40		      sta	R5
     16  890d		       68		      pla
     17  890e		       85 3f		      sta	R4
     18  8910		       20 f9 0a 	      jsr	mem_memcpy
      0  8913					      pbyte	#9
      1  8913		       a9 09		      lda	#9
      2  8915					      IF	!FPUSH
      3  8915		       48		      pha
      4  8916					      ENDIF
      0  8916					      pword	#440
      1  8916					      IF	!FPUSH
      2  8916		       a9 b8		      lda	#<#440
      3  8918		       48		      pha
      4  8919		       a9 01		      lda	#>#440
      5  891b		       48		      pha
      6  891c				  -	      ELSE
      7  891c				  -	      lda	#<#440
      8  891c				  -	      ldy	#>#440
      9  891c					      ENDIF
      0  891c					      pword	#55296
      1  891c					      IF	!FPUSH
      2  891c		       a9 00		      lda	#<#55296
      3  891e		       48		      pha
      4  891f		       a9 d8		      lda	#>#55296
      5  8921		       48		      pha
      6  8922				  -	      ELSE
      7  8922				  -	      lda	#<#55296
      8  8922				  -	      ldy	#>#55296
      9  8922					      ENDIF
      0  8922					      pbyte	#200
      1  8922		       a9 c8		      lda	#200
      2  8924					      IF	!FPUSH
      3  8924		       48		      pha
      4  8925					      ENDIF
      0  8925					      btow
      1  8925		       a9 00		      lda	#$00
      2  8927		       48		      pha
      0  8928					      addw
      1  8928		       ba		      tsx
      2  8929		       bd 02 01 	      lda.wx	stack+2
      3  892c		       18		      clc
      4  892d		       7d 04 01 	      adc.wx	stack+4
      5  8930		       9d 04 01 	      sta.wx	stack+4
      6  8933		       68		      pla
      7  8934		       7d 03 01 	      adc.wx	stack+3
      8  8937		       9d 03 01 	      sta.wx	stack+3
      9  893a		       68		      pla
      0  893b					      memset
      1  893b					      IF	!FPULL
      2  893b		       68		      pla
      3  893c		       85 fc		      sta	R1
      4  893e		       68		      pla
      5  893f		       85 fb		      sta	R0
      6  8941				  -	      ELSE
      7  8941				  -	      sta	R0
      8  8941				  -	      sty	R1
      9  8941					      ENDIF
     10  8941		       68		      pla
     11  8942		       85 fe		      sta	R3
     12  8944		       68		      pla
     13  8945		       85 fd		      sta	R2
     14  8947		       68		      pla
     15  8948		       20 de 0a 	      jsr	mem_memset
      0  894b					      pbyte	#2
      1  894b		       a9 02		      lda	#2
      2  894d					      IF	!FPUSH
      3  894d		       48		      pha
      4  894e					      ENDIF
      0  894e					      pbyte	#15
      1  894e		       a9 0f		      lda	#15
      2  8950					      IF	!FPUSH
      3  8950		       48		      pha
      4  8951					      ENDIF
      0  8951					      btow
      1  8951		       a9 00		      lda	#$00
      2  8953		       48		      pha
      0  8954					      pword	#55789
      1  8954					      IF	!FPUSH
      2  8954		       a9 ed		      lda	#<#55789
      3  8956		       48		      pha
      4  8957		       a9 d9		      lda	#>#55789
      5  8959		       48		      pha
      6  895a				  -	      ELSE
      7  895a				  -	      lda	#<#55789
      8  895a				  -	      ldy	#>#55789
      9  895a					      ENDIF
      0  895a					      memset
      1  895a					      IF	!FPULL
      2  895a		       68		      pla
      3  895b		       85 fc		      sta	R1
      4  895d		       68		      pla
      5  895e		       85 fb		      sta	R0
      6  8960				  -	      ELSE
      7  8960				  -	      sta	R0
      8  8960				  -	      sty	R1
      9  8960					      ENDIF
     10  8960		       68		      pla
     11  8961		       85 fe		      sta	R3
     12  8963		       68		      pla
     13  8964		       85 fd		      sta	R2
     14  8966		       68		      pla
     15  8967		       20 de 0a 	      jsr	mem_memset
  13795  896a		       60		      rts
  13796  896b				   _Lsetup_screen.draw_title
      0  896b					      pword	#440
      1  896b					      IF	!FPUSH
      2  896b		       a9 b8		      lda	#<#440
      3  896d		       48		      pha
      4  896e		       a9 01		      lda	#>#440
      5  8970		       48		      pha
      6  8971				  -	      ELSE
      7  8971				  -	      lda	#<#440
      8  8971				  -	      ldy	#>#440
      9  8971					      ENDIF
      0  8971					      pword	#1024
      1  8971					      IF	!FPUSH
      2  8971		       a9 00		      lda	#<#1024
      3  8973		       48		      pha
      4  8974		       a9 04		      lda	#>#1024
      5  8976		       48		      pha
      6  8977				  -	      ELSE
      7  8977				  -	      lda	#<#1024
      8  8977				  -	      ldy	#>#1024
      9  8977					      ENDIF
      0  8977					      pbyte	#200
      1  8977		       a9 c8		      lda	#200
      2  8979					      IF	!FPUSH
      3  8979		       48		      pha
      4  897a					      ENDIF
      0  897a					      btow
      1  897a		       a9 00		      lda	#$00
      2  897c		       48		      pha
      0  897d					      addw
      1  897d		       ba		      tsx
      2  897e		       bd 02 01 	      lda.wx	stack+2
      3  8981		       18		      clc
      4  8982		       7d 04 01 	      adc.wx	stack+4
      5  8985		       9d 04 01 	      sta.wx	stack+4
      6  8988		       68		      pla
      7  8989		       7d 03 01 	      adc.wx	stack+3
      8  898c		       9d 03 01 	      sta.wx	stack+3
      9  898f		       68		      pla
      0  8990					      paddr	_setup_screen.background_title
      0  8990					      pword	_setup_screen.background_title
      1  8990					      IF	!FPUSH
      2  8990		       a9 b0		      lda	#<_setup_screen.background_title
      3  8992		       48		      pha
      4  8993		       a9 a6		      lda	#>_setup_screen.background_title
      5  8995		       48		      pha
      6  8996				  -	      ELSE
      7  8996				  -	      lda	#<_setup_screen.background_title
      8  8996				  -	      ldy	#>_setup_screen.background_title
      9  8996					      ENDIF
      0  8996					      memcpy
      1  8996					      IF	!FPULL
      2  8996		       68		      pla
      3  8997		       85 fc		      sta	R1
      4  8999		       68		      pla
      5  899a		       85 fb		      sta	R0
      6  899c				  -	      ELSE
      7  899c				  -	      sta	R0
      8  899c				  -	      sty	R1
      9  899c					      ENDIF
     10  899c		       68		      pla
     11  899d		       85 fe		      sta	R3
     12  899f		       68		      pla
     13  89a0		       85 fd		      sta	R2
     14  89a2		       68		      pla
     15  89a3		       85 40		      sta	R5
     16  89a5		       68		      pla
     17  89a6		       85 3f		      sta	R4
     18  89a8		       20 f9 0a 	      jsr	mem_memcpy
      0  89ab					      pword	#440
      1  89ab					      IF	!FPUSH
      2  89ab		       a9 b8		      lda	#<#440
      3  89ad		       48		      pha
      4  89ae		       a9 01		      lda	#>#440
      5  89b0		       48		      pha
      6  89b1				  -	      ELSE
      7  89b1				  -	      lda	#<#440
      8  89b1				  -	      ldy	#>#440
      9  89b1					      ENDIF
      0  89b1					      pword	#55296
      1  89b1					      IF	!FPUSH
      2  89b1		       a9 00		      lda	#<#55296
      3  89b3		       48		      pha
      4  89b4		       a9 d8		      lda	#>#55296
      5  89b6		       48		      pha
      6  89b7				  -	      ELSE
      7  89b7				  -	      lda	#<#55296
      8  89b7				  -	      ldy	#>#55296
      9  89b7					      ENDIF
      0  89b7					      pbyte	#200
      1  89b7		       a9 c8		      lda	#200
      2  89b9					      IF	!FPUSH
      3  89b9		       48		      pha
      4  89ba					      ENDIF
      0  89ba					      btow
      1  89ba		       a9 00		      lda	#$00
      2  89bc		       48		      pha
      0  89bd					      addw
      1  89bd		       ba		      tsx
      2  89be		       bd 02 01 	      lda.wx	stack+2
      3  89c1		       18		      clc
      4  89c2		       7d 04 01 	      adc.wx	stack+4
      5  89c5		       9d 04 01 	      sta.wx	stack+4
      6  89c8		       68		      pla
      7  89c9		       7d 03 01 	      adc.wx	stack+3
      8  89cc		       9d 03 01 	      sta.wx	stack+3
      9  89cf		       68		      pla
      0  89d0					      paddr	_setup_screen.background_title_color
      0  89d0					      pword	_setup_screen.background_title_color
      1  89d0					      IF	!FPUSH
      2  89d0		       a9 68		      lda	#<_setup_screen.background_title_color
      3  89d2		       48		      pha
      4  89d3		       a9 a8		      lda	#>_setup_screen.background_title_color
      5  89d5		       48		      pha
      6  89d6				  -	      ELSE
      7  89d6				  -	      lda	#<_setup_screen.background_title_color
      8  89d6				  -	      ldy	#>_setup_screen.background_title_color
      9  89d6					      ENDIF
      0  89d6					      memcpy
      1  89d6					      IF	!FPULL
      2  89d6		       68		      pla
      3  89d7		       85 fc		      sta	R1
      4  89d9		       68		      pla
      5  89da		       85 fb		      sta	R0
      6  89dc				  -	      ELSE
      7  89dc				  -	      sta	R0
      8  89dc				  -	      sty	R1
      9  89dc					      ENDIF
     10  89dc		       68		      pla
     11  89dd		       85 fe		      sta	R3
     12  89df		       68		      pla
     13  89e0		       85 fd		      sta	R2
     14  89e2		       68		      pla
     15  89e3		       85 40		      sta	R5
     16  89e5		       68		      pla
     17  89e6		       85 3f		      sta	R4
     18  89e8		       20 f9 0a 	      jsr	mem_memcpy
  13811  89eb		       60		      rts
  13812  89ec				   _Lsetup_screen.draw_end_title
      0  89ec					      pword	#440
      1  89ec					      IF	!FPUSH
      2  89ec		       a9 b8		      lda	#<#440
      3  89ee		       48		      pha
      4  89ef		       a9 01		      lda	#>#440
      5  89f1		       48		      pha
      6  89f2				  -	      ELSE
      7  89f2				  -	      lda	#<#440
      8  89f2				  -	      ldy	#>#440
      9  89f2					      ENDIF
      0  89f2					      pword	#1024
      1  89f2					      IF	!FPUSH
      2  89f2		       a9 00		      lda	#<#1024
      3  89f4		       48		      pha
      4  89f5		       a9 04		      lda	#>#1024
      5  89f7		       48		      pha
      6  89f8				  -	      ELSE
      7  89f8				  -	      lda	#<#1024
      8  89f8				  -	      ldy	#>#1024
      9  89f8					      ENDIF
      0  89f8					      pbyte	#200
      1  89f8		       a9 c8		      lda	#200
      2  89fa					      IF	!FPUSH
      3  89fa		       48		      pha
      4  89fb					      ENDIF
      0  89fb					      btow
      1  89fb		       a9 00		      lda	#$00
      2  89fd		       48		      pha
      0  89fe					      addw
      1  89fe		       ba		      tsx
      2  89ff		       bd 02 01 	      lda.wx	stack+2
      3  8a02		       18		      clc
      4  8a03		       7d 04 01 	      adc.wx	stack+4
      5  8a06		       9d 04 01 	      sta.wx	stack+4
      6  8a09		       68		      pla
      7  8a0a		       7d 03 01 	      adc.wx	stack+3
      8  8a0d		       9d 03 01 	      sta.wx	stack+3
      9  8a10		       68		      pla
      0  8a11					      paddr	_setup_screen.background_end
      0  8a11					      pword	_setup_screen.background_end
      1  8a11					      IF	!FPUSH
      2  8a11		       a9 20		      lda	#<_setup_screen.background_end
      3  8a13		       48		      pha
      4  8a14		       a9 aa		      lda	#>_setup_screen.background_end
      5  8a16		       48		      pha
      6  8a17				  -	      ELSE
      7  8a17				  -	      lda	#<_setup_screen.background_end
      8  8a17				  -	      ldy	#>_setup_screen.background_end
      9  8a17					      ENDIF
      0  8a17					      memcpy
      1  8a17					      IF	!FPULL
      2  8a17		       68		      pla
      3  8a18		       85 fc		      sta	R1
      4  8a1a		       68		      pla
      5  8a1b		       85 fb		      sta	R0
      6  8a1d				  -	      ELSE
      7  8a1d				  -	      sta	R0
      8  8a1d				  -	      sty	R1
      9  8a1d					      ENDIF
     10  8a1d		       68		      pla
     11  8a1e		       85 fe		      sta	R3
     12  8a20		       68		      pla
     13  8a21		       85 fd		      sta	R2
     14  8a23		       68		      pla
     15  8a24		       85 40		      sta	R5
     16  8a26		       68		      pla
     17  8a27		       85 3f		      sta	R4
     18  8a29		       20 f9 0a 	      jsr	mem_memcpy
      0  8a2c					      pword	#440
      1  8a2c					      IF	!FPUSH
      2  8a2c		       a9 b8		      lda	#<#440
      3  8a2e		       48		      pha
      4  8a2f		       a9 01		      lda	#>#440
      5  8a31		       48		      pha
      6  8a32				  -	      ELSE
      7  8a32				  -	      lda	#<#440
      8  8a32				  -	      ldy	#>#440
      9  8a32					      ENDIF
      0  8a32					      pword	#55296
      1  8a32					      IF	!FPUSH
      2  8a32		       a9 00		      lda	#<#55296
      3  8a34		       48		      pha
      4  8a35		       a9 d8		      lda	#>#55296
      5  8a37		       48		      pha
      6  8a38				  -	      ELSE
      7  8a38				  -	      lda	#<#55296
      8  8a38				  -	      ldy	#>#55296
      9  8a38					      ENDIF
      0  8a38					      pbyte	#200
      1  8a38		       a9 c8		      lda	#200
      2  8a3a					      IF	!FPUSH
      3  8a3a		       48		      pha
      4  8a3b					      ENDIF
      0  8a3b					      btow
      1  8a3b		       a9 00		      lda	#$00
      2  8a3d		       48		      pha
      0  8a3e					      addw
      1  8a3e		       ba		      tsx
      2  8a3f		       bd 02 01 	      lda.wx	stack+2
      3  8a42		       18		      clc
      4  8a43		       7d 04 01 	      adc.wx	stack+4
      5  8a46		       9d 04 01 	      sta.wx	stack+4
      6  8a49		       68		      pla
      7  8a4a		       7d 03 01 	      adc.wx	stack+3
      8  8a4d		       9d 03 01 	      sta.wx	stack+3
      9  8a50		       68		      pla
      0  8a51					      paddr	_setup_screen.background_end_color
      0  8a51					      pword	_setup_screen.background_end_color
      1  8a51					      IF	!FPUSH
      2  8a51		       a9 d8		      lda	#<_setup_screen.background_end_color
      3  8a53		       48		      pha
      4  8a54		       a9 ab		      lda	#>_setup_screen.background_end_color
      5  8a56		       48		      pha
      6  8a57				  -	      ELSE
      7  8a57				  -	      lda	#<_setup_screen.background_end_color
      8  8a57				  -	      ldy	#>_setup_screen.background_end_color
      9  8a57					      ENDIF
      0  8a57					      memcpy
      1  8a57					      IF	!FPULL
      2  8a57		       68		      pla
      3  8a58		       85 fc		      sta	R1
      4  8a5a		       68		      pla
      5  8a5b		       85 fb		      sta	R0
      6  8a5d				  -	      ELSE
      7  8a5d				  -	      sta	R0
      8  8a5d				  -	      sty	R1
      9  8a5d					      ENDIF
     10  8a5d		       68		      pla
     11  8a5e		       85 fe		      sta	R3
     12  8a60		       68		      pla
     13  8a61		       85 fd		      sta	R2
     14  8a63		       68		      pla
     15  8a64		       85 40		      sta	R5
     16  8a66		       68		      pla
     17  8a67		       85 3f		      sta	R4
     18  8a69		       20 f9 0a 	      jsr	mem_memcpy
  13827  8a6c		       60		      rts
  13828  8a6d		       60		      rts
  13829  8a6e				   _Psetup_screen_end
  13830  8a6e
  13831  8a6e
  13832  8a6e
  13833  8a6e
  13834  8a6e
  13835  8a6e
  13836  8a6e
  13837  8a6e				   _Pupdate_radar SUBROUTINE
      0  8a6e					      pbyte_pbyte_cmpbeq_cond	_ufo_count, #0, _EI_36, _EL_36
      1  8a6e
      2  8a6e
      3  8a6e		       ad 39 b6 	      lda	_ufo_count
      4  8a71		       c9 00		      cmp	#0
      5  8a73		       f0 03		      beq	*+5
      6  8a75				  -	      IFCONST	_EL_36
      7  8a75				  -	      jmp	_EL_36
      8  8a75					      ELSE
      9  8a75		       4c b6 8a 	      jmp	_EI_36
     10  8a78					      ENDIF
  13839  8a78				   FPUSH      SET	1
      0  8a78					      opt_pbyte_pbyte_and	_frame_count, #32
      1  8a78
      2  8a78
      3  8a78
      4  8a78
      5  8a78
      6  8a78		       ad 25 b5 	      lda	_frame_count
      7  8a7b		       29 20		      and	#32
      8  8a7d				  -	      IF	!FPUSH
      9  8a7d				  -	      pha
     10  8a7d					      ENDIF
  13841  8a7d				   FPULL      SET	1
  13842  8a7d				   FPUSH      SET	0
      0  8a7d					      rshiftbc	5
      1  8a7d				  -	      IF	!FPULL
      2  8a7d				  -	      pla
      3  8a7d					      ENDIF
      4  8a7d					      REPEAT	5
      5  8a7d		       4a		      lsr
      4  8a7d					      REPEND
      5  8a7e		       4a		      lsr
      4  8a7e					      REPEND
      5  8a7f		       4a		      lsr
      4  8a7f					      REPEND
      5  8a80		       4a		      lsr
      4  8a80					      REPEND
      5  8a81		       4a		      lsr
      6  8a82					      REPEND
      7  8a82					      IF	!FPUSH
      8  8a82		       48		      pha
      9  8a83					      ENDIF
  13844  8a83				   FPULL      SET	0
  13845  8a83				   FPUSH      SET	1
      0  8a83					      pbyte	#5
      1  8a83		       a9 05		      lda	#5
      2  8a85				  -	      IF	!FPUSH
      3  8a85				  -	      pha
      4  8a85					      ENDIF
  13847  8a85				   FPULL      SET	1
  13848  8a85				   FPUSH      SET	0
      0  8a85					      mulb
      1  8a85				  -	      IF	!FPULL
      2  8a85				  -	      pla
      3  8a85					      ENDIF
      4  8a85		       85 fc		      sta	R1
      5  8a87		       68		      pla
      6  8a88		       85 fd		      sta	R2
      7  8a8a		       a9 00		      lda	#$00
      8  8a8c		       f0 05		      beq	.enterLoop
      9  8a8e				   .doAdd
     10  8a8e		       18		      clc
     11  8a8f		       65 fc		      adc	R1
     12  8a91				   .loop
     13  8a91		       06 fc		      asl	R1
     14  8a93				   .enterLoop
     15  8a93		       46 fd		      lsr	R2
     16  8a95		       b0 f7		      bcs	.doAdd
     17  8a97		       d0 f8		      bne	.loop
     18  8a99				   .end
     19  8a99					      IF	!FPUSH
     20  8a99		       48		      pha
     21  8a9a					      ENDIF
  13850  8a9a				   FPULL      SET	0
      0  8a9a					      pbyte	#16
      1  8a9a		       a9 10		      lda	#16
      2  8a9c					      IF	!FPUSH
      3  8a9c		       48		      pha
      4  8a9d					      ENDIF
      0  8a9d					      btow
      1  8a9d		       a9 00		      lda	#$00
      2  8a9f		       48		      pha
      0  8aa0					      pword	#55308
      1  8aa0					      IF	!FPUSH
      2  8aa0		       a9 0c		      lda	#<#55308
      3  8aa2		       48		      pha
      4  8aa3		       a9 d8		      lda	#>#55308
      5  8aa5		       48		      pha
      6  8aa6				  -	      ELSE
      7  8aa6				  -	      lda	#<#55308
      8  8aa6				  -	      ldy	#>#55308
      9  8aa6					      ENDIF
      0  8aa6					      memset
      1  8aa6					      IF	!FPULL
      2  8aa6		       68		      pla
      3  8aa7		       85 fc		      sta	R1
      4  8aa9		       68		      pla
      5  8aaa		       85 fb		      sta	R0
      6  8aac				  -	      ELSE
      7  8aac				  -	      sta	R0
      8  8aac				  -	      sty	R1
      9  8aac					      ENDIF
     10  8aac		       68		      pla
     11  8aad		       85 fe		      sta	R3
     12  8aaf		       68		      pla
     13  8ab0		       85 fd		      sta	R2
     14  8ab2		       68		      pla
     15  8ab3		       20 de 0a 	      jsr	mem_memset
  13855  8ab6				   _EI_36
      0  8ab6					      pbyte	#16
      1  8ab6		       a9 10		      lda	#16
      2  8ab8					      IF	!FPUSH
      3  8ab8		       48		      pha
      4  8ab9					      ENDIF
      0  8ab9					      btow
      1  8ab9		       a9 00		      lda	#$00
      2  8abb		       48		      pha
      0  8abc					      pword	#1116
      1  8abc					      IF	!FPUSH
      2  8abc		       a9 5c		      lda	#<#1116
      3  8abe		       48		      pha
      4  8abf		       a9 04		      lda	#>#1116
      5  8ac1		       48		      pha
      6  8ac2				  -	      ELSE
      7  8ac2				  -	      lda	#<#1116
      8  8ac2				  -	      ldy	#>#1116
      9  8ac2					      ENDIF
      0  8ac2					      paddr	_update_radar.radar_2nd_row
      0  8ac2					      pword	_update_radar.radar_2nd_row
      1  8ac2					      IF	!FPUSH
      2  8ac2		       a9 90		      lda	#<_update_radar.radar_2nd_row
      3  8ac4		       48		      pha
      4  8ac5		       a9 ad		      lda	#>_update_radar.radar_2nd_row
      5  8ac7		       48		      pha
      6  8ac8				  -	      ELSE
      7  8ac8				  -	      lda	#<_update_radar.radar_2nd_row
      8  8ac8				  -	      ldy	#>_update_radar.radar_2nd_row
      9  8ac8					      ENDIF
      0  8ac8					      memcpy
      1  8ac8					      IF	!FPULL
      2  8ac8		       68		      pla
      3  8ac9		       85 fc		      sta	R1
      4  8acb		       68		      pla
      5  8acc		       85 fb		      sta	R0
      6  8ace				  -	      ELSE
      7  8ace				  -	      sta	R0
      8  8ace				  -	      sty	R1
      9  8ace					      ENDIF
     10  8ace		       68		      pla
     11  8acf		       85 fe		      sta	R3
     12  8ad1		       68		      pla
     13  8ad2		       85 fd		      sta	R2
     14  8ad4		       68		      pla
     15  8ad5		       85 40		      sta	R5
     16  8ad7		       68		      pla
     17  8ad8		       85 3f		      sta	R4
     18  8ada		       20 f9 0a 	      jsr	mem_memcpy
      0  8add					      pbyte	#16
      1  8add		       a9 10		      lda	#16
      2  8adf					      IF	!FPUSH
      3  8adf		       48		      pha
      4  8ae0					      ENDIF
      0  8ae0					      btow
      1  8ae0		       a9 00		      lda	#$00
      2  8ae2		       48		      pha
      0  8ae3					      pword	#1156
      1  8ae3					      IF	!FPUSH
      2  8ae3		       a9 84		      lda	#<#1156
      3  8ae5		       48		      pha
      4  8ae6		       a9 04		      lda	#>#1156
      5  8ae8		       48		      pha
      6  8ae9				  -	      ELSE
      7  8ae9				  -	      lda	#<#1156
      8  8ae9				  -	      ldy	#>#1156
      9  8ae9					      ENDIF
      0  8ae9					      paddr	_update_radar.radar_3rd_row
      0  8ae9					      pword	_update_radar.radar_3rd_row
      1  8ae9					      IF	!FPUSH
      2  8ae9		       a9 a0		      lda	#<_update_radar.radar_3rd_row
      3  8aeb		       48		      pha
      4  8aec		       a9 ad		      lda	#>_update_radar.radar_3rd_row
      5  8aee		       48		      pha
      6  8aef				  -	      ELSE
      7  8aef				  -	      lda	#<_update_radar.radar_3rd_row
      8  8aef				  -	      ldy	#>_update_radar.radar_3rd_row
      9  8aef					      ENDIF
      0  8aef					      memcpy
      1  8aef					      IF	!FPULL
      2  8aef		       68		      pla
      3  8af0		       85 fc		      sta	R1
      4  8af2		       68		      pla
      5  8af3		       85 fb		      sta	R0
      6  8af5				  -	      ELSE
      7  8af5				  -	      sta	R0
      8  8af5				  -	      sty	R1
      9  8af5					      ENDIF
     10  8af5		       68		      pla
     11  8af6		       85 fe		      sta	R3
     12  8af8		       68		      pla
     13  8af9		       85 fd		      sta	R2
     14  8afb		       68		      pla
     15  8afc		       85 40		      sta	R5
     16  8afe		       68		      pla
     17  8aff		       85 3f		      sta	R4
     18  8b01		       20 f9 0a 	      jsr	mem_memcpy
  13866  8b01				   FPUSH      SET	1
      0  8b04					      pbyte	#5
      1  8b04		       a9 05		      lda	#5
      2  8b06				  -	      IF	!FPUSH
      3  8b06				  -	      pha
      4  8b06					      ENDIF
  13868  8b06				   FPULL      SET	1
  13869  8b06				   FPUSH      SET	0
      0  8b06					      plb2var	_spr_setposx.spr_no
      1  8b06				  -	      IF	!FPULL
      2  8b06				  -	      pla
      3  8b06					      ENDIF
      4  8b06		       8d fe b4 	      sta	_spr_setposx.spr_no
  13871  8b06				   FPULL      SET	0
      0  8b09					      pwvar	_aircraft_xpos
      1  8b09					      IF	!FPUSH
      2  8b09		       ad 31 b5 	      lda	_aircraft_xpos
      3  8b0c		       48		      pha
      4  8b0d		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  8b10		       48		      pha
      6  8b11				  -	      ELSE
      7  8b11				  -	      lda	_aircraft_xpos
      8  8b11				  -	      ldy	_aircraft_xpos+1
      9  8b11					      ENDIF
      0  8b11					      pbyte	#40
      1  8b11		       a9 28		      lda	#40
      2  8b13					      IF	!FPUSH
      3  8b13		       48		      pha
      4  8b14					      ENDIF
      0  8b14					      btow
      1  8b14		       a9 00		      lda	#$00
      2  8b16		       48		      pha
      0  8b17					      divw
      0  8b17					      plw2var	R0
      1  8b17					      IF	!FPULL
      2  8b17		       68		      pla
      3  8b18		       85 fc		      sta	R0+1
      4  8b1a		       68		      pla
      5  8b1b		       85 fb		      sta	R0
      6  8b1d				  -	      ELSE
      7  8b1d				  -	      sta	R0
      8  8b1d				  -	      sty	R0+1
      9  8b1d					      ENDIF
      0  8b1d					      plw2var	R2
      1  8b1d					      IF	!FPULL
      2  8b1d		       68		      pla
      3  8b1e		       85 fe		      sta	R2+1
      4  8b20		       68		      pla
      5  8b21		       85 fd		      sta	R2
      6  8b23				  -	      ELSE
      7  8b23				  -	      sta	R2
      8  8b23				  -	      sty	R2+1
      9  8b23					      ENDIF
      3  8b23		       a5 fb		      lda	R0
      4  8b25		       d0 0d		      bne	.ok
      5  8b27		       a5 fc		      lda	R1
      6  8b29		       d0 09		      bne	.ok
      7  8b2b		       a9 4d		      lda	#<err_divzero
      8  8b2d		       48		      pha
      9  8b2e		       a9 09		      lda	#>err_divzero
     10  8b30		       48		      pha
     11  8b31		       4c 6f 09 	      jmp	RUNTIME_ERROR
     12  8b34				   .ok
     13  8b34		       20 a3 08 	      jsr	NUCL_DIV16
      0  8b37					      pwvar	R2
      1  8b37					      IF	!FPUSH
      2  8b37		       a5 fd		      lda	R2
      3  8b39		       48		      pha
      4  8b3a		       a5 fe		      lda	R2+1
      5  8b3c		       48		      pha
      6  8b3d				  -	      ELSE
      7  8b3d				  -	      lda	R2
      8  8b3d				  -	      ldy	R2+1
      9  8b3d					      ENDIF
      0  8b3d					      pbyte	#120
      1  8b3d		       a9 78		      lda	#120
      2  8b3f					      IF	!FPUSH
      3  8b3f		       48		      pha
      4  8b40					      ENDIF
      0  8b40					      btow
      1  8b40		       a9 00		      lda	#$00
      2  8b42		       48		      pha
      0  8b43					      addw
      1  8b43		       ba		      tsx
      2  8b44		       bd 02 01 	      lda.wx	stack+2
      3  8b47		       18		      clc
      4  8b48		       7d 04 01 	      adc.wx	stack+4
      5  8b4b		       9d 04 01 	      sta.wx	stack+4
      6  8b4e		       68		      pla
      7  8b4f		       7d 03 01 	      adc.wx	stack+3
      8  8b52		       9d 03 01 	      sta.wx	stack+3
      9  8b55		       68		      pla
      0  8b56					      plw2var	_spr_setposx.x
      1  8b56					      IF	!FPULL
      2  8b56		       68		      pla
      3  8b57		       8d 00 b5 	      sta	_spr_setposx.x+1
      4  8b5a		       68		      pla
      5  8b5b		       8d ff b4 	      sta	_spr_setposx.x
      6  8b5e				  -	      ELSE
      7  8b5e				  -	      sta	_spr_setposx.x
      8  8b5e				  -	      sty	_spr_setposx.x+1
      9  8b5e					      ENDIF
  13880  8b5e		       20 95 71 	      jsr	_Pspr_setposx
  13881  8b5e				   FPUSH      SET	1
      0  8b61					      pbyte	#0
      1  8b61		       a9 00		      lda	#0
      2  8b63				  -	      IF	!FPUSH
      3  8b63				  -	      pha
      4  8b63					      ENDIF
  13883  8b63				   FPULL      SET	1
  13884  8b63				   FPUSH      SET	0
      0  8b63					      plb2var	_update_radar.i
      1  8b63				  -	      IF	!FPULL
      2  8b63				  -	      pla
      3  8b63					      ENDIF
      4  8b63		       8d 65 b6 	      sta	_update_radar.i
  13886  8b63				   FPULL      SET	0
  13887  8b63				   FPUSH      SET	1
      0  8b66					      pbyte	#3
      1  8b66		       a9 03		      lda	#3
      2  8b68				  -	      IF	!FPUSH
      3  8b68				  -	      pha
      4  8b68					      ENDIF
  13889  8b68				   FPULL      SET	1
  13890  8b68				   FPUSH      SET	0
      0  8b68					      plb2var	XFOR_max_9
      1  8b68				  -	      IF	!FPULL
      2  8b68				  -	      pla
      3  8b68					      ENDIF
      4  8b68		       8d 66 b6 	      sta	XFOR_max_9
  13892  8b6b				   _FOR_9
      0  8b6b					      forb	9, _update_radar.i
      1  8b6b
      2  8b6b		       ad 66 b6 	      lda	XFOR_max_9
      3  8b6e		       cd 65 b6 	      cmp	_update_radar.i
      4  8b71		       b0 03		      bcs	.enter
      5  8b73
      6  8b73		       4c 39 8c 	      jmp	_ENDFOR_9
      7  8b76				   .enter
  13894  8b76				   FPULL      SET	0
      0  8b76					      opt_pbyte_pbarray_fast	_update_radar.i, _ufo_on
      1  8b76
      2  8b76
      3  8b76
      4  8b76		       ae 65 b6 	      ldx	_update_radar.i
      5  8b79		       bd 48 b5 	      lda	_ufo_on,x
      6  8b7c					      IF	!FPUSH
      7  8b7c		       48		      pha
      8  8b7d					      ENDIF
  13896  8b7d				   FPUSH      SET	1
      0  8b7d					      pbyte	#1
      1  8b7d		       a9 01		      lda	#1
      2  8b7f				  -	      IF	!FPUSH
      3  8b7f				  -	      pha
      4  8b7f					      ENDIF
  13898  8b7f				   FPULL      SET	1
      0  8b7f					      cmpbeq
      1  8b7f				  -	      IF	!FPULL
      2  8b7f				  -	      pla
      3  8b7f					      ENDIF
      4  8b7f		       85 fc		      sta	R1
      5  8b81		       68		      pla
      6  8b82		       c5 fc		      cmp	R1
      7  8b84		       f0 05		      beq	.pht
      0  8b86					      pzero
      1  8b86		       a9 00		      lda	#$00
      2  8b88				  -	      IF	!FPUSH
      3  8b88				  -	      pha
      4  8b88					      ENDIF
      9  8b88				  -	      IF	!FPUSH
     10  8b88				  -	      jmp	*+6
     11  8b88					      ELSE
     12  8b88		       4c 8d 8b 	      jmp	*+5
     13  8b8b					      ENDIF
      0  8b8b				   .pht       pone
      1  8b8b		       a9 01		      lda	#$01
      2  8b8d				  -	      IF	!FPUSH
      3  8b8d				  -	      pha
      4  8b8d					      ENDIF
  13900  8b8d				   FPUSH      SET	0
      0  8b8d					      cond_stmt	_EI_37, _EL_37
      1  8b8d				  -	      IF	!FPULL
      2  8b8d				  -	      pla
      3  8b8d					      ENDIF
      4  8b8d		       d0 03		      bne	*+5
      5  8b8f				  -	      IFCONST	_EL_37
      6  8b8f				  -	      jmp	_EL_37
      7  8b8f					      ELSE
      8  8b8f		       4c 31 8c 	      jmp	_EI_37
      9  8b92					      ENDIF
  13902  8b92				   FPULL      SET	0
  13903  8b92				   FPUSH      SET	1
      0  8b92					      opt_pbyte_pbarray_fast	_update_radar.i, _ufo_wave_select
      1  8b92
      2  8b92
      3  8b92
      4  8b92		       ae 65 b6 	      ldx	_update_radar.i
      5  8b95		       bd 15 b6 	      lda	_ufo_wave_select,x
      6  8b98				  -	      IF	!FPUSH
      7  8b98				  -	      pha
      8  8b98					      ENDIF
  13905  8b98				   FPULL      SET	1
  13906  8b98				   FPUSH      SET	0
      0  8b98					      plb2var	_update_radar.wave
      1  8b98				  -	      IF	!FPULL
      2  8b98				  -	      pla
      3  8b98					      ENDIF
      4  8b98		       8d 67 b6 	      sta	_update_radar.wave
  13908  8b98				   FPULL      SET	0
  13909  8b98				   FPUSH      SET	1
      0  8b9b					      pbyte	#116
      1  8b9b		       a9 74		      lda	#116
      2  8b9d				  -	      IF	!FPUSH
      3  8b9d				  -	      pha
      4  8b9d					      ENDIF
  13911  8b9d				   FPULL      SET	1
  13912  8b9d				   FPUSH      SET	0
      0  8b9d					      plb2var	_update_radar.char
      1  8b9d				  -	      IF	!FPULL
      2  8b9d				  -	      pla
      3  8b9d					      ENDIF
      4  8b9d		       8d 68 b6 	      sta	_update_radar.char
      0  8ba0					      pbyte_pbyte_cmpbeq_cond	_update_radar.wave, #0, _EI_65549, _EL_65549
      1  8ba0
      2  8ba0
      3  8ba0		       ad 67 b6 	      lda	_update_radar.wave
      4  8ba3		       c9 00		      cmp	#0
      5  8ba5		       f0 03		      beq	*+5
      6  8ba7				  -	      IFCONST	_EL_65549
      7  8ba7				  -	      jmp	_EL_65549
      8  8ba7					      ELSE
      9  8ba7		       4c b0 8b 	      jmp	_EI_65549
     10  8baa					      ENDIF
      0  8baa					      incb	_update_radar.char
      1  8baa		       ee 68 b6 	      inc	_update_radar.char
      0  8bad					      incb	_update_radar.char
      1  8bad		       ee 68 b6 	      inc	_update_radar.char
  13917  8bb0
  13918  8bb0
  13919  8bb0
  13920  8bb0
  13921  8bb0
  13922  8bb0
  13923  8bb0				   _EI_65549
      0  8bb0					      pbyte_pbyte_cmpbeq_cond	_update_radar.wave, #16, _EI_65550, _EL_65550
      1  8bb0
      2  8bb0
      3  8bb0		       ad 67 b6 	      lda	_update_radar.wave
      4  8bb3		       c9 10		      cmp	#16
      5  8bb5		       f0 03		      beq	*+5
      6  8bb7				  -	      IFCONST	_EL_65550
      7  8bb7				  -	      jmp	_EL_65550
      8  8bb7					      ELSE
      9  8bb7		       4c c0 8b 	      jmp	_EI_65550
     10  8bba					      ENDIF
      0  8bba					      incb	_update_radar.char
      1  8bba		       ee 68 b6 	      inc	_update_radar.char
      0  8bbd					      incb	_update_radar.char
      1  8bbd		       ee 68 b6 	      inc	_update_radar.char
  13927  8bc0
  13928  8bc0
  13929  8bc0
  13930  8bc0
  13931  8bc0
  13932  8bc0
  13933  8bc0
  13934  8bc0				   _EI_65550
  13935  8bc0				   FPULL      SET	0
      0  8bc0					      pword	#1116
      1  8bc0					      IF	!FPUSH
      2  8bc0		       a9 5c		      lda	#<#1116
      3  8bc2		       48		      pha
      4  8bc3		       a9 04		      lda	#>#1116
      5  8bc5		       48		      pha
      6  8bc6				  -	      ELSE
      7  8bc6				  -	      lda	#<#1116
      8  8bc6				  -	      ldy	#>#1116
      9  8bc6					      ENDIF
      0  8bc6					      pbvar	_update_radar.wave
      0  8bc6					      pbyte	_update_radar.wave
      1  8bc6		       ad 67 b6 	      lda	_update_radar.wave
      2  8bc9					      IF	!FPUSH
      3  8bc9		       48		      pha
      4  8bca					      ENDIF
      0  8bca					      btow
      1  8bca		       a9 00		      lda	#$00
      2  8bcc		       48		      pha
      0  8bcd					      addw
      1  8bcd		       ba		      tsx
      2  8bce		       bd 02 01 	      lda.wx	stack+2
      3  8bd1		       18		      clc
      4  8bd2		       7d 04 01 	      adc.wx	stack+4
      5  8bd5		       9d 04 01 	      sta.wx	stack+4
      6  8bd8		       68		      pla
      7  8bd9		       7d 03 01 	      adc.wx	stack+3
      8  8bdc		       9d 03 01 	      sta.wx	stack+3
      9  8bdf		       68		      pla
      0  8be0					      plw2var	_update_radar.charpos
      1  8be0					      IF	!FPULL
      2  8be0		       68		      pla
      3  8be1		       8d 6a b6 	      sta	_update_radar.charpos+1
      4  8be4		       68		      pla
      5  8be5		       8d 69 b6 	      sta	_update_radar.charpos
      6  8be8				  -	      ELSE
      7  8be8				  -	      sta	_update_radar.charpos
      8  8be8				  -	      sty	_update_radar.charpos+1
      9  8be8					      ENDIF
      0  8be8					      opt_pbyte_pbarray_fast	_update_radar.i, _ufo_altitude
      1  8be8
      2  8be8
      3  8be8
      4  8be8		       ae 65 b6 	      ldx	_update_radar.i
      5  8beb		       bd 34 b5 	      lda	_ufo_altitude,x
      6  8bee					      IF	!FPUSH
      7  8bee		       48		      pha
      8  8bef					      ENDIF
  13942  8bef				   FPUSH      SET	1
      0  8bef					      pbyte	#160
      1  8bef		       a9 a0		      lda	#160
      2  8bf1				  -	      IF	!FPUSH
      3  8bf1				  -	      pha
      4  8bf1					      ENDIF
  13944  8bf1				   FPULL      SET	1
      0  8bf1					      cmpbgt
      1  8bf1				  -	      IF	!FPULL
      2  8bf1				  -	      pla
      3  8bf1					      ENDIF
      4  8bf1		       85 fc		      sta	R1
      5  8bf3		       68		      pla
      6  8bf4		       c5 fc		      cmp	R1
      7  8bf6		       90 07		      bcc	.phf
      8  8bf8		       f0 05		      beq	.phf
      0  8bfa					      pone
      1  8bfa		       a9 01		      lda	#$01
      2  8bfc				  -	      IF	!FPUSH
      3  8bfc				  -	      pha
      4  8bfc					      ENDIF
     10  8bfc				  -	      IF	!FPUSH
     11  8bfc				  -	      jmp	*+6
     12  8bfc					      ELSE
     13  8bfc		       4c 01 8c 	      jmp	*+5
     14  8bff					      ENDIF
      0  8bff				   .phf       pzero
      1  8bff		       a9 00		      lda	#$00
      2  8c01				  -	      IF	!FPUSH
      3  8c01				  -	      pha
      4  8c01					      ENDIF
  13946  8c01				   FPUSH      SET	0
      0  8c01					      cond_stmt	_EI_65551, _EL_65551
      1  8c01				  -	      IF	!FPULL
      2  8c01				  -	      pla
      3  8c01					      ENDIF
      4  8c01		       d0 03		      bne	*+5
      5  8c03				  -	      IFCONST	_EL_65551
      6  8c03				  -	      jmp	_EL_65551
      7  8c03					      ELSE
      8  8c03		       4c 1d 8c 	      jmp	_EI_65551
      9  8c06					      ENDIF
      0  8c06					      incb	_update_radar.char
      1  8c06		       ee 68 b6 	      inc	_update_radar.char
  13949  8c06				   FPULL      SET	0
  13950  8c06				   FPUSH      SET	1
      0  8c09					      opt_pwvar_pword_add	_update_radar.charpos, #40
      1  8c09
      2  8c09
      3  8c09
      4  8c09		       ad 69 b6 	      lda	_update_radar.charpos
      5  8c0c		       18		      clc
      6  8c0d		       69 28		      adc	<#40
      7  8c0f				  -	      IF	!FPUSH
      8  8c0f				  -	      pha
      9  8c0f					      ELSE
     10  8c0f		       aa		      tax
     11  8c10					      ENDIF
     12  8c10		       ad 6a b6 	      lda	_update_radar.charpos+1
     13  8c13		       69 00		      adc	>#40
     14  8c15				  -	      IF	!FPUSH
     15  8c15				  -	      pha
     16  8c15					      ELSE
     17  8c15		       a8		      tay
     18  8c16		       8a		      txa
     19  8c17					      ENDIF
  13952  8c17				   FPULL      SET	1
  13953  8c17				   FPUSH      SET	0
      0  8c17					      plw2var	_update_radar.charpos
      1  8c17				  -	      IF	!FPULL
      2  8c17				  -	      pla
      3  8c17				  -	      sta	_update_radar.charpos+1
      4  8c17				  -	      pla
      5  8c17				  -	      sta	_update_radar.charpos
      6  8c17					      ELSE
      7  8c17		       8d 69 b6 	      sta	_update_radar.charpos
      8  8c1a		       8c 6a b6 	      sty	_update_radar.charpos+1
      9  8c1d					      ENDIF
  13955  8c1d
  13956  8c1d
  13957  8c1d
  13958  8c1d
  13959  8c1d				   _EI_65551
  13960  8c1d				   FPULL      SET	0
      0  8c1d					      pbvar	_update_radar.char
      0  8c1d					      pbyte	_update_radar.char
      1  8c1d		       ad 68 b6 	      lda	_update_radar.char
      2  8c20					      IF	!FPUSH
      3  8c20		       48		      pha
      4  8c21					      ENDIF
  13962  8c21				   FPUSH      SET	1
      0  8c21					      pwvar	_update_radar.charpos
      1  8c21				  -	      IF	!FPUSH
      2  8c21				  -	      lda	_update_radar.charpos
      3  8c21				  -	      pha
      4  8c21				  -	      lda	_update_radar.charpos+1
      5  8c21				  -	      pha
      6  8c21					      ELSE
      7  8c21		       ad 69 b6 	      lda	_update_radar.charpos
      8  8c24		       ac 6a b6 	      ldy	_update_radar.charpos+1
      9  8c27					      ENDIF
  13964  8c27				   FPULL      SET	1
  13965  8c27				   FPUSH      SET	0
      0  8c27					      pokeb
      1  8c27				  -	      IF	!FPULL
      2  8c27				  -	      pla
      3  8c27				  -	      sta	.selfmod_code+2
      4  8c27				  -	      pla
      5  8c27				  -	      sta	.selfmod_code+1
      6  8c27					      ELSE
      7  8c27		       8d 2f 8c 	      sta	.selfmod_code+1
      8  8c2a		       8c 30 8c 	      sty	.selfmod_code+2
      9  8c2d					      ENDIF
     10  8c2d		       68		      pla
     11  8c2e				   .selfmod_code
     12  8c2e		       8d 00 00 	      sta.w	$0000
  13967  8c31				   _EI_37
      0  8c31					      nextb	9, _update_radar.i
      1  8c31
      2  8c31				  -	      IFCONST	XFOR_step_9
      3  8c31				  -
      4  8c31				  -	      clc
      5  8c31				  -	      lda	XFOR_step_9
      6  8c31				  -	      adc	_update_radar.i
      7  8c31				  -	      sta	_update_radar.i
      8  8c31				  -
      9  8c31				  -	      bcs	_ENDFOR_9
     10  8c31					      ELSE
     11  8c31
     12  8c31		       ee 65 b6 	      inc	_update_radar.i
     13  8c34
     14  8c34		       f0 03		      beq	_ENDFOR_9
     15  8c36					      ENDIF
     16  8c36		       4c 6b 8b 	      jmp	_FOR_9
  13969  8c39
  13970  8c39
  13971  8c39
  13972  8c39
  13973  8c39
  13974  8c39
  13975  8c39
  13976  8c39				   _ENDFOR_9
  13977  8c39		       60		      rts
  13978  8c3a
  13979  8c3a
  13980  8c3a
  13981  8c3a
  13982  8c3a
  13983  8c3a
  13984  8c3a
  13985  8c3a				   _Pupdate_radar_end
  13986  8c3a
  13987  8c3a
  13988  8c3a
  13989  8c3a
  13990  8c3a
  13991  8c3a
  13992  8c3a
  13993  8c3a				   _Pactions  SUBROUTINE
  13994  8c3a				   FPULL      SET	0
  13995  8c3a				   FPUSH      SET	1
      0  8c3a					      pbvar	_aircraft_mode
      0  8c3a					      pbyte	_aircraft_mode
      1  8c3a		       ad 35 b6 	      lda	_aircraft_mode
      2  8c3d				  -	      IF	!FPUSH
      3  8c3d				  -	      pha
      4  8c3d					      ENDIF
  13997  8c3d				   FPULL      SET	1
  13998  8c3d				   FPUSH      SET	0
      0  8c3d					      ongoto	_On_LB2, _On_HB2
      1  8c3d				  -	      IF	!FPULL
      2  8c3d				  -	      pla
      3  8c3d					      ENDIF
      4  8c3d		       aa		      tax
      5  8c3e		       bd f6 ad 	      lda.wx	_On_LB2
      6  8c41		       8d 4b 8c 	      sta	.selfmod_code+1
      7  8c44		       bd fc ad 	      lda.wx	_On_HB2
      8  8c47		       8d 4c 8c 	      sta	.selfmod_code+2
      9  8c4a				   .selfmod_code
     10  8c4a		       4c 00 00 	      jmp	$0000
  14000  8c4d				   _Lactions.taxi
  14001  8c4d				   FPULL      SET	0
      0  8c4d					      pbyte_pbyte_cmpbgt	_fuel, #0
      1  8c4d
      2  8c4d
      3  8c4d
      4  8c4d
      5  8c4d
      6  8c4d		       ad 36 b6 	      lda	_fuel
      7  8c50		       c9 00		      cmp	#0
      8  8c52		       90 08		      bcc	.false
      9  8c54		       f0 06		      beq	.false
      0  8c56					      pone
      1  8c56		       a9 01		      lda	#$01
      2  8c58					      IF	!FPUSH
      3  8c58		       48		      pha
      4  8c59					      ENDIF
     11  8c59					      IF	!FPUSH
     12  8c59		       4c 5f 8c 	      jmp	*+6
     13  8c5c				  -	      ELSE
     14  8c5c				  -	      jmp	*+5
     15  8c5c					      ENDIF
     16  8c5c				   .false
      0  8c5c					      pzero
      1  8c5c		       a9 00		      lda	#$00
      2  8c5e					      IF	!FPUSH
      3  8c5e		       48		      pha
      4  8c5f					      ENDIF
      0  8c5f					      opt_pbyte_pbyte_and	_frame_count, #127
      1  8c5f
      2  8c5f
      3  8c5f
      4  8c5f
      5  8c5f
      6  8c5f		       ad 25 b5 	      lda	_frame_count
      7  8c62		       29 7f		      and	#127
      8  8c64					      IF	!FPUSH
      9  8c64		       48		      pha
     10  8c65					      ENDIF
  14004  8c65				   FPUSH      SET	1
      0  8c65					      pbyte	#0
      1  8c65		       a9 00		      lda	#0
      2  8c67				  -	      IF	!FPUSH
      3  8c67				  -	      pha
      4  8c67					      ENDIF
  14006  8c67				   FPULL      SET	1
      0  8c67					      cmpbeq
      1  8c67				  -	      IF	!FPULL
      2  8c67				  -	      pla
      3  8c67					      ENDIF
      4  8c67		       85 fc		      sta	R1
      5  8c69		       68		      pla
      6  8c6a		       c5 fc		      cmp	R1
      7  8c6c		       f0 05		      beq	.pht
      0  8c6e					      pzero
      1  8c6e		       a9 00		      lda	#$00
      2  8c70				  -	      IF	!FPUSH
      3  8c70				  -	      pha
      4  8c70					      ENDIF
      9  8c70				  -	      IF	!FPUSH
     10  8c70				  -	      jmp	*+6
     11  8c70					      ELSE
     12  8c70		       4c 75 8c 	      jmp	*+5
     13  8c73					      ENDIF
      0  8c73				   .pht       pone
      1  8c73		       a9 01		      lda	#$01
      2  8c75				  -	      IF	!FPUSH
      3  8c75				  -	      pha
      4  8c75					      ENDIF
      0  8c75					      andb
      1  8c75				  -	      IF	!FPULL
      2  8c75				  -	      pla
      3  8c75					      ENDIF
      4  8c75		       85 fc		      sta	R1
      5  8c77		       68		      pla
      6  8c78		       25 fc		      and	R1
      7  8c7a				  -	      IF	!FPUSH
      8  8c7a				  -	      pha
      9  8c7a					      ENDIF
  14009  8c7a				   FPUSH      SET	0
      0  8c7a					      cond_stmt	_EI_38, _EL_38
      1  8c7a				  -	      IF	!FPULL
      2  8c7a				  -	      pla
      3  8c7a					      ENDIF
      4  8c7a		       d0 03		      bne	*+5
      5  8c7c					      IFCONST	_EL_38
      6  8c7c		       4c 88 8c 	      jmp	_EL_38
      7  8c7f				  -	      ELSE
      8  8c7f				  -	      jmp	_EI_38
      9  8c7f					      ENDIF
      0  8c7f					      decb	_fuel
      1  8c7f		       ce 36 b6 	      dec	_fuel
  14012  8c82		       20 23 94 	      jsr	_Lactions.erase_fuel
  14013  8c85		       4c 88 8c 	      jmp	_EI_38
  14014  8c88				   _EL_38
  14015  8c88
  14016  8c88
  14017  8c88
  14018  8c88
  14019  8c88
  14020  8c88
  14021  8c88
  14022  8c88				   _EI_38
  14023  8c88				   FPULL      SET	0
      0  8c88					      pwvar	_aircraft_altitude
      1  8c88					      IF	!FPUSH
      2  8c88		       ad 2f b5 	      lda	_aircraft_altitude
      3  8c8b		       48		      pha
      4  8c8c		       ad 30 b5 	      lda	_aircraft_altitude+1
      5  8c8f		       48		      pha
      6  8c90				  -	      ELSE
      7  8c90				  -	      lda	_aircraft_altitude
      8  8c90				  -	      ldy	_aircraft_altitude+1
      9  8c90					      ENDIF
      0  8c90					      pword	#780
      1  8c90					      IF	!FPUSH
      2  8c90		       a9 0c		      lda	#<#780
      3  8c92		       48		      pha
      4  8c93		       a9 03		      lda	#>#780
      5  8c95		       48		      pha
      6  8c96				  -	      ELSE
      7  8c96				  -	      lda	#<#780
      8  8c96				  -	      ldy	#>#780
      9  8c96					      ENDIF
      0  8c96					      cmpwgte
      1  8c96		       ba		      tsx
      2  8c97		       bd 04 01 	      lda.wx	stack+4
      3  8c9a		       dd 02 01 	      cmp.wx	stack+2
      4  8c9d		       bd 03 01 	      lda.wx	stack+3
      5  8ca0		       fd 01 01 	      sbc.wx	stack+1
      6  8ca3		       10 0b		      bpl	.pht
      7  8ca5		       e8		      inx
      8  8ca6		       e8		      inx
      9  8ca7		       e8		      inx
     10  8ca8		       e8		      inx
     11  8ca9		       9a		      txs
      0  8caa					      pzero
      1  8caa		       a9 00		      lda	#$00
      2  8cac					      IF	!FPUSH
      3  8cac		       48		      pha
      4  8cad					      ENDIF
     13  8cad					      IF	!FPUSH
     14  8cad		       4c b8 8c 	      jmp	*+11
     15  8cb0				  -	      ELSE
     16  8cb0				  -	      jmp	*+10
     17  8cb0					      ENDIF
     18  8cb0		       e8	   .pht       inx
     19  8cb1		       e8		      inx
     20  8cb2		       e8		      inx
     21  8cb3		       e8		      inx
     22  8cb4		       9a		      txs
      0  8cb5					      pone
      1  8cb5		       a9 01		      lda	#$01
      2  8cb7					      IF	!FPUSH
      3  8cb7		       48		      pha
      4  8cb8					      ENDIF
      0  8cb8					      pwvar	_aircraft_altitude
      1  8cb8					      IF	!FPUSH
      2  8cb8		       ad 2f b5 	      lda	_aircraft_altitude
      3  8cbb		       48		      pha
      4  8cbc		       ad 30 b5 	      lda	_aircraft_altitude+1
      5  8cbf		       48		      pha
      6  8cc0				  -	      ELSE
      7  8cc0				  -	      lda	_aircraft_altitude
      8  8cc0				  -	      ldy	_aircraft_altitude+1
      9  8cc0					      ENDIF
      0  8cc0					      pword	#848
      1  8cc0					      IF	!FPUSH
      2  8cc0		       a9 50		      lda	#<#848
      3  8cc2		       48		      pha
      4  8cc3		       a9 03		      lda	#>#848
      5  8cc5		       48		      pha
      6  8cc6				  -	      ELSE
      7  8cc6				  -	      lda	#<#848
      8  8cc6				  -	      ldy	#>#848
      9  8cc6					      ENDIF
  14029  8cc6				   FPUSH      SET	1
      0  8cc6					      cmpwlte
      1  8cc6		       ba		      tsx
      2  8cc7		       bd 02 01 	      lda.wx	stack+2
      3  8cca		       dd 04 01 	      cmp.wx	stack+4
      4  8ccd		       bd 01 01 	      lda.wx	stack+1
      5  8cd0		       fd 03 01 	      sbc.wx	stack+3
      6  8cd3		       30 0a		      bmi	.phf
      7  8cd5		       e8		      inx
      8  8cd6		       e8		      inx
      9  8cd7		       e8		      inx
     10  8cd8		       e8		      inx
     11  8cd9		       9a		      txs
      0  8cda					      pone
      1  8cda		       a9 01		      lda	#$01
      2  8cdc				  -	      IF	!FPUSH
      3  8cdc				  -	      pha
      4  8cdc					      ENDIF
     13  8cdc				  -	      IF	!FPUSH
     14  8cdc				  -	      jmp	*+11
     15  8cdc					      ELSE
     16  8cdc		       4c e6 8c 	      jmp	*+10
     17  8cdf					      ENDIF
     18  8cdf		       e8	   .phf       inx
     19  8ce0		       e8		      inx
     20  8ce1		       e8		      inx
     21  8ce2		       e8		      inx
     22  8ce3		       9a		      txs
      0  8ce4					      pzero
      1  8ce4		       a9 00		      lda	#$00
      2  8ce6				  -	      IF	!FPUSH
      3  8ce6				  -	      pha
      4  8ce6					      ENDIF
  14031  8ce6				   FPULL      SET	1
      0  8ce6					      andb
      1  8ce6				  -	      IF	!FPULL
      2  8ce6				  -	      pla
      3  8ce6					      ENDIF
      4  8ce6		       85 fc		      sta	R1
      5  8ce8		       68		      pla
      6  8ce9		       25 fc		      and	R1
      7  8ceb				  -	      IF	!FPUSH
      8  8ceb				  -	      pha
      9  8ceb					      ENDIF
  14033  8ceb				   FPUSH      SET	0
      0  8ceb					      cond_stmt	_EI_39, _EL_39
      1  8ceb				  -	      IF	!FPULL
      2  8ceb				  -	      pla
      3  8ceb					      ENDIF
      4  8ceb		       d0 03		      bne	*+5
      5  8ced				  -	      IFCONST	_EL_39
      6  8ced				  -	      jmp	_EL_39
      7  8ced					      ELSE
      8  8ced		       4c ef 8d 	      jmp	_EI_39
      9  8cf0					      ENDIF
  14035  8cf0				   FPULL      SET	0
  14036  8cf0				   FPUSH      SET	1
      0  8cf0					      pbyte_pbyte_cmpblt	_speed, #72
      1  8cf0
      2  8cf0
      3  8cf0
      4  8cf0
      5  8cf0
      6  8cf0		       ad 23 b5 	      lda	_speed
      7  8cf3		       c9 48		      cmp	#72
      8  8cf5		       b0 05		      bcs	.false
      0  8cf7					      pone
      1  8cf7		       a9 01		      lda	#$01
      2  8cf9				  -	      IF	!FPUSH
      3  8cf9				  -	      pha
      4  8cf9					      ENDIF
     10  8cf9				  -	      IF	!FPUSH
     11  8cf9				  -	      jmp	*+6
     12  8cf9					      ELSE
     13  8cf9		       4c fe 8c 	      jmp	*+5
     14  8cfc					      ENDIF
     15  8cfc				   .false
      0  8cfc					      pzero
      1  8cfc		       a9 00		      lda	#$00
      2  8cfe				  -	      IF	!FPUSH
      3  8cfe				  -	      pha
      4  8cfe					      ENDIF
  14038  8cfe				   FPULL      SET	1
  14039  8cfe				   FPUSH      SET	0
      0  8cfe					      cond_stmt	_EI_40, _EL_40
      1  8cfe				  -	      IF	!FPULL
      2  8cfe				  -	      pla
      3  8cfe					      ENDIF
      4  8cfe		       d0 03		      bne	*+5
      5  8d00				  -	      IFCONST	_EL_40
      6  8d00				  -	      jmp	_EL_40
      7  8d00					      ELSE
      8  8d00		       4c ef 8d 	      jmp	_EI_40
      9  8d03					      ENDIF
  14041  8d03				   FPULL      SET	0
  14042  8d03				   FPUSH      SET	1
      0  8d03					      pbyte_pbyte_cmpbeq	_dir, #1
      1  8d03
      2  8d03
      3  8d03
      4  8d03
      5  8d03
      6  8d03		       ad 24 b5 	      lda	_dir
      7  8d06		       c9 01		      cmp	#1
      8  8d08		       f0 05		      beq	.true
      0  8d0a					      pzero
      1  8d0a		       a9 00		      lda	#$00
      2  8d0c				  -	      IF	!FPUSH
      3  8d0c				  -	      pha
      4  8d0c					      ENDIF
     10  8d0c				  -	      IF	!FPUSH
     11  8d0c				  -	      jmp	*+6
     12  8d0c					      ELSE
     13  8d0c		       4c 11 8d 	      jmp	*+5
     14  8d0f					      ENDIF
     15  8d0f				   .true
      0  8d0f					      pone
      1  8d0f		       a9 01		      lda	#$01
      2  8d11				  -	      IF	!FPUSH
      3  8d11				  -	      pha
      4  8d11					      ENDIF
  14044  8d11				   FPULL      SET	1
  14045  8d11				   FPUSH      SET	0
      0  8d11					      cond_stmt	_EI_41, _EL_41
      1  8d11				  -	      IF	!FPULL
      2  8d11				  -	      pla
      3  8d11					      ENDIF
      4  8d11		       d0 03		      bne	*+5
      5  8d13					      IFCONST	_EL_41
      6  8d13		       4c 84 8d 	      jmp	_EL_41
      7  8d16				  -	      ELSE
      8  8d16				  -	      jmp	_EI_41
      9  8d16					      ENDIF
  14047  8d16				   FPULL      SET	0
      0  8d16					      pwvar	_aircraft_xpos
      1  8d16					      IF	!FPUSH
      2  8d16		       ad 31 b5 	      lda	_aircraft_xpos
      3  8d19		       48		      pha
      4  8d1a		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  8d1d		       48		      pha
      6  8d1e				  -	      ELSE
      7  8d1e				  -	      lda	_aircraft_xpos
      8  8d1e				  -	      ldy	_aircraft_xpos+1
      9  8d1e					      ENDIF
      0  8d1e					      pword	#2368
      1  8d1e					      IF	!FPUSH
      2  8d1e		       a9 40		      lda	#<#2368
      3  8d20		       48		      pha
      4  8d21		       a9 09		      lda	#>#2368
      5  8d23		       48		      pha
      6  8d24				  -	      ELSE
      7  8d24				  -	      lda	#<#2368
      8  8d24				  -	      ldy	#>#2368
      9  8d24					      ENDIF
      0  8d24					      cmpwgte
      1  8d24		       ba		      tsx
      2  8d25		       bd 04 01 	      lda.wx	stack+4
      3  8d28		       dd 02 01 	      cmp.wx	stack+2
      4  8d2b		       bd 03 01 	      lda.wx	stack+3
      5  8d2e		       fd 01 01 	      sbc.wx	stack+1
      6  8d31		       10 0b		      bpl	.pht
      7  8d33		       e8		      inx
      8  8d34		       e8		      inx
      9  8d35		       e8		      inx
     10  8d36		       e8		      inx
     11  8d37		       9a		      txs
      0  8d38					      pzero
      1  8d38		       a9 00		      lda	#$00
      2  8d3a					      IF	!FPUSH
      3  8d3a		       48		      pha
      4  8d3b					      ENDIF
     13  8d3b					      IF	!FPUSH
     14  8d3b		       4c 46 8d 	      jmp	*+11
     15  8d3e				  -	      ELSE
     16  8d3e				  -	      jmp	*+10
     17  8d3e					      ENDIF
     18  8d3e		       e8	   .pht       inx
     19  8d3f		       e8		      inx
     20  8d40		       e8		      inx
     21  8d41		       e8		      inx
     22  8d42		       9a		      txs
      0  8d43					      pone
      1  8d43		       a9 01		      lda	#$01
      2  8d45					      IF	!FPUSH
      3  8d45		       48		      pha
      4  8d46					      ENDIF
      0  8d46					      pwvar	_aircraft_xpos
      1  8d46					      IF	!FPUSH
      2  8d46		       ad 31 b5 	      lda	_aircraft_xpos
      3  8d49		       48		      pha
      4  8d4a		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  8d4d		       48		      pha
      6  8d4e				  -	      ELSE
      7  8d4e				  -	      lda	_aircraft_xpos
      8  8d4e				  -	      ldy	_aircraft_xpos+1
      9  8d4e					      ENDIF
      0  8d4e					      pword	#2432
      1  8d4e					      IF	!FPUSH
      2  8d4e		       a9 80		      lda	#<#2432
      3  8d50		       48		      pha
      4  8d51		       a9 09		      lda	#>#2432
      5  8d53		       48		      pha
      6  8d54				  -	      ELSE
      7  8d54				  -	      lda	#<#2432
      8  8d54				  -	      ldy	#>#2432
      9  8d54					      ENDIF
  14053  8d54				   FPUSH      SET	1
      0  8d54					      cmpwlte
      1  8d54		       ba		      tsx
      2  8d55		       bd 02 01 	      lda.wx	stack+2
      3  8d58		       dd 04 01 	      cmp.wx	stack+4
      4  8d5b		       bd 01 01 	      lda.wx	stack+1
      5  8d5e		       fd 03 01 	      sbc.wx	stack+3
      6  8d61		       30 0a		      bmi	.phf
      7  8d63		       e8		      inx
      8  8d64		       e8		      inx
      9  8d65		       e8		      inx
     10  8d66		       e8		      inx
     11  8d67		       9a		      txs
      0  8d68					      pone
      1  8d68		       a9 01		      lda	#$01
      2  8d6a				  -	      IF	!FPUSH
      3  8d6a				  -	      pha
      4  8d6a					      ENDIF
     13  8d6a				  -	      IF	!FPUSH
     14  8d6a				  -	      jmp	*+11
     15  8d6a					      ELSE
     16  8d6a		       4c 74 8d 	      jmp	*+10
     17  8d6d					      ENDIF
     18  8d6d		       e8	   .phf       inx
     19  8d6e		       e8		      inx
     20  8d6f		       e8		      inx
     21  8d70		       e8		      inx
     22  8d71		       9a		      txs
      0  8d72					      pzero
      1  8d72		       a9 00		      lda	#$00
      2  8d74				  -	      IF	!FPUSH
      3  8d74				  -	      pha
      4  8d74					      ENDIF
  14055  8d74				   FPULL      SET	1
      0  8d74					      andb
      1  8d74				  -	      IF	!FPULL
      2  8d74				  -	      pla
      3  8d74					      ENDIF
      4  8d74		       85 fc		      sta	R1
      5  8d76		       68		      pla
      6  8d77		       25 fc		      and	R1
      7  8d79				  -	      IF	!FPUSH
      8  8d79				  -	      pha
      9  8d79					      ENDIF
  14057  8d79				   FPUSH      SET	0
      0  8d79					      cond_stmt	_EI_65552, _EL_65552
      1  8d79				  -	      IF	!FPULL
      2  8d79				  -	      pla
      3  8d79					      ENDIF
      4  8d79		       d0 03		      bne	*+5
      5  8d7b				  -	      IFCONST	_EL_65552
      6  8d7b				  -	      jmp	_EL_65552
      7  8d7b					      ELSE
      8  8d7b		       4c 81 8d 	      jmp	_EI_65552
      9  8d7e					      ENDIF
  14059  8d7e		       4c f0 8d 	      jmp	_Lactions.start_landing
  14060  8d81				   _EI_65552
  14061  8d81		       4c ef 8d 	      jmp	_EI_41
  14062  8d84
  14063  8d84
  14064  8d84
  14065  8d84
  14066  8d84
  14067  8d84
  14068  8d84
  14069  8d84				   _EL_41
  14070  8d84				   FPULL      SET	0
      0  8d84					      pwvar	_aircraft_xpos
      1  8d84					      IF	!FPUSH
      2  8d84		       ad 31 b5 	      lda	_aircraft_xpos
      3  8d87		       48		      pha
      4  8d88		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  8d8b		       48		      pha
      6  8d8c				  -	      ELSE
      7  8d8c				  -	      lda	_aircraft_xpos
      8  8d8c				  -	      ldy	_aircraft_xpos+1
      9  8d8c					      ENDIF
      0  8d8c					      pword	#2688
      1  8d8c					      IF	!FPUSH
      2  8d8c		       a9 80		      lda	#<#2688
      3  8d8e		       48		      pha
      4  8d8f		       a9 0a		      lda	#>#2688
      5  8d91		       48		      pha
      6  8d92				  -	      ELSE
      7  8d92				  -	      lda	#<#2688
      8  8d92				  -	      ldy	#>#2688
      9  8d92					      ENDIF
      0  8d92					      cmpwgte
      1  8d92		       ba		      tsx
      2  8d93		       bd 04 01 	      lda.wx	stack+4
      3  8d96		       dd 02 01 	      cmp.wx	stack+2
      4  8d99		       bd 03 01 	      lda.wx	stack+3
      5  8d9c		       fd 01 01 	      sbc.wx	stack+1
      6  8d9f		       10 0b		      bpl	.pht
      7  8da1		       e8		      inx
      8  8da2		       e8		      inx
      9  8da3		       e8		      inx
     10  8da4		       e8		      inx
     11  8da5		       9a		      txs
      0  8da6					      pzero
      1  8da6		       a9 00		      lda	#$00
      2  8da8					      IF	!FPUSH
      3  8da8		       48		      pha
      4  8da9					      ENDIF
     13  8da9					      IF	!FPUSH
     14  8da9		       4c b4 8d 	      jmp	*+11
     15  8dac				  -	      ELSE
     16  8dac				  -	      jmp	*+10
     17  8dac					      ENDIF
     18  8dac		       e8	   .pht       inx
     19  8dad		       e8		      inx
     20  8dae		       e8		      inx
     21  8daf		       e8		      inx
     22  8db0		       9a		      txs
      0  8db1					      pone
      1  8db1		       a9 01		      lda	#$01
      2  8db3					      IF	!FPUSH
      3  8db3		       48		      pha
      4  8db4					      ENDIF
      0  8db4					      pwvar	_aircraft_xpos
      1  8db4					      IF	!FPUSH
      2  8db4		       ad 31 b5 	      lda	_aircraft_xpos
      3  8db7		       48		      pha
      4  8db8		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  8dbb		       48		      pha
      6  8dbc				  -	      ELSE
      7  8dbc				  -	      lda	_aircraft_xpos
      8  8dbc				  -	      ldy	_aircraft_xpos+1
      9  8dbc					      ENDIF
      0  8dbc					      pword	#2752
      1  8dbc					      IF	!FPUSH
      2  8dbc		       a9 c0		      lda	#<#2752
      3  8dbe		       48		      pha
      4  8dbf		       a9 0a		      lda	#>#2752
      5  8dc1		       48		      pha
      6  8dc2				  -	      ELSE
      7  8dc2				  -	      lda	#<#2752
      8  8dc2				  -	      ldy	#>#2752
      9  8dc2					      ENDIF
  14076  8dc2				   FPUSH      SET	1
      0  8dc2					      cmpwlte
      1  8dc2		       ba		      tsx
      2  8dc3		       bd 02 01 	      lda.wx	stack+2
      3  8dc6		       dd 04 01 	      cmp.wx	stack+4
      4  8dc9		       bd 01 01 	      lda.wx	stack+1
      5  8dcc		       fd 03 01 	      sbc.wx	stack+3
      6  8dcf		       30 0a		      bmi	.phf
      7  8dd1		       e8		      inx
      8  8dd2		       e8		      inx
      9  8dd3		       e8		      inx
     10  8dd4		       e8		      inx
     11  8dd5		       9a		      txs
      0  8dd6					      pone
      1  8dd6		       a9 01		      lda	#$01
      2  8dd8				  -	      IF	!FPUSH
      3  8dd8				  -	      pha
      4  8dd8					      ENDIF
     13  8dd8				  -	      IF	!FPUSH
     14  8dd8				  -	      jmp	*+11
     15  8dd8					      ELSE
     16  8dd8		       4c e2 8d 	      jmp	*+10
     17  8ddb					      ENDIF
     18  8ddb		       e8	   .phf       inx
     19  8ddc		       e8		      inx
     20  8ddd		       e8		      inx
     21  8dde		       e8		      inx
     22  8ddf		       9a		      txs
      0  8de0					      pzero
      1  8de0		       a9 00		      lda	#$00
      2  8de2				  -	      IF	!FPUSH
      3  8de2				  -	      pha
      4  8de2					      ENDIF
  14078  8de2				   FPULL      SET	1
      0  8de2					      andb
      1  8de2				  -	      IF	!FPULL
      2  8de2				  -	      pla
      3  8de2					      ENDIF
      4  8de2		       85 fc		      sta	R1
      5  8de4		       68		      pla
      6  8de5		       25 fc		      and	R1
      7  8de7				  -	      IF	!FPUSH
      8  8de7				  -	      pha
      9  8de7					      ENDIF
  14080  8de7				   FPUSH      SET	0
      0  8de7					      cond_stmt	_EI_65553, _EL_65553
      1  8de7				  -	      IF	!FPULL
      2  8de7				  -	      pla
      3  8de7					      ENDIF
      4  8de7		       d0 03		      bne	*+5
      5  8de9				  -	      IFCONST	_EL_65553
      6  8de9				  -	      jmp	_EL_65553
      7  8de9					      ELSE
      8  8de9		       4c ef 8d 	      jmp	_EI_65553
      9  8dec					      ENDIF
  14082  8dec		       4c f0 8d 	      jmp	_Lactions.start_landing
  14083  8def				   _EI_65553
  14084  8def
  14085  8def
  14086  8def
  14087  8def
  14088  8def
  14089  8def
  14090  8def
  14091  8def				   _EI_41
  14092  8def
  14093  8def
  14094  8def
  14095  8def
  14096  8def
  14097  8def
  14098  8def
  14099  8def				   _EI_40
  14100  8def
  14101  8def
  14102  8def
  14103  8def
  14104  8def
  14105  8def
  14106  8def
  14107  8def				   _EI_39
  14108  8def		       60		      rts
  14109  8df0
  14110  8df0
  14111  8df0
  14112  8df0
  14113  8df0
  14114  8df0
  14115  8df0
  14116  8df0				   _Lactions.start_landing
  14117  8df0				   FPULL      SET	0
  14118  8df0				   FPUSH      SET	1
      0  8df0					      pbyte	#0
      1  8df0		       a9 00		      lda	#0
      2  8df2				  -	      IF	!FPUSH
      3  8df2				  -	      pha
      4  8df2					      ENDIF
  14120  8df2				   FPULL      SET	1
  14121  8df2				   FPUSH      SET	0
      0  8df2					      plb2var	_actions.anim_counter
      1  8df2				  -	      IF	!FPULL
      2  8df2				  -	      pla
      3  8df2					      ENDIF
      4  8df2		       8d 6b b6 	      sta	_actions.anim_counter
  14123  8df2				   FPULL      SET	0
  14124  8df2				   FPUSH      SET	1
      0  8df5					      pbyte	#3
      1  8df5		       a9 03		      lda	#3
      2  8df7				  -	      IF	!FPUSH
      3  8df7				  -	      pha
      4  8df7					      ENDIF
  14126  8df7				   FPULL      SET	1
  14127  8df7				   FPUSH      SET	0
      0  8df7					      plb2var	_aircraft_mode
      1  8df7				  -	      IF	!FPULL
      2  8df7				  -	      pla
      3  8df7					      ENDIF
      4  8df7		       8d 35 b6 	      sta	_aircraft_mode
  14129  8df7				   FPULL      SET	0
      0  8dfa					      paddr	_S2
      0  8dfa					      pword	_S2
      1  8dfa					      IF	!FPUSH
      2  8dfa		       a9 02		      lda	#<_S2
      3  8dfc		       48		      pha
      4  8dfd		       a9 ae		      lda	#>_S2
      5  8dff		       48		      pha
      6  8e00				  -	      ELSE
      7  8e00				  -	      lda	#<_S2
      8  8e00				  -	      ldy	#>_S2
      9  8e00					      ENDIF
      0  8e00					      pbyte	#12
      1  8e00		       a9 0c		      lda	#12
      2  8e02					      IF	!FPUSH
      3  8e02		       48		      pha
      4  8e03					      ENDIF
      0  8e03					      btow
      1  8e03		       a9 00		      lda	#$00
      2  8e05		       48		      pha
  14133  8e05				   FPUSH      SET	1
      0  8e06					      pword	#40
      1  8e06				  -	      IF	!FPUSH
      2  8e06				  -	      lda	#<#40
      3  8e06				  -	      pha
      4  8e06				  -	      lda	#>#40
      5  8e06				  -	      pha
      6  8e06					      ELSE
      7  8e06		       a9 28		      lda	#<#40
      8  8e08		       a0 00		      ldy	#>#40
      9  8e0a					      ENDIF
  14135  8e0a				   FPULL      SET	1
  14136  8e0a				   FPUSH      SET	0
      0  8e0a					      mulw
      1  8e0a				  -	      IF	!FPULL
      2  8e0a				  -	      pla
      3  8e0a				  -	      sta	R1
      4  8e0a				  -	      pla
      5  8e0a				  -	      sta	R0
      6  8e0a					      ELSE
      7  8e0a		       85 fb		      sta	R0
      8  8e0c		       84 fc		      sty	R1
      9  8e0e					      ENDIF
     10  8e0e		       68		      pla
     11  8e0f		       85 fe		      sta	R3
     12  8e11		       68		      pla
     13  8e12		       85 fd		      sta	R2
     14  8e14		       20 0d 08 	      jsr	NUCL_SMUL16
     15  8e17					      IF	!FPUSH
     16  8e17		       a5 fb		      lda	R0
     17  8e19		       48		      pha
     18  8e1a		       a5 fc		      lda	R1
     19  8e1c		       48		      pha
     20  8e1d				  -	      ELSE
     21  8e1d				  -	      lda	R0
     22  8e1d				  -	      ldy	R1
     23  8e1d					      ENDIF
  14138  8e1d				   FPULL      SET	0
      0  8e1d					      pbyte	#14
      1  8e1d		       a9 0e		      lda	#14
      2  8e1f					      IF	!FPUSH
      3  8e1f		       48		      pha
      4  8e20					      ENDIF
      0  8e20					      btow
      1  8e20		       a9 00		      lda	#$00
      2  8e22		       48		      pha
      0  8e23					      addw
      1  8e23		       ba		      tsx
      2  8e24		       bd 02 01 	      lda.wx	stack+2
      3  8e27		       18		      clc
      4  8e28		       7d 04 01 	      adc.wx	stack+4
      5  8e2b		       9d 04 01 	      sta.wx	stack+4
      6  8e2e		       68		      pla
      7  8e2f		       7d 03 01 	      adc.wx	stack+3
      8  8e32		       9d 03 01 	      sta.wx	stack+3
      9  8e35		       68		      pla
      0  8e36					      pword	#1024
      1  8e36					      IF	!FPUSH
      2  8e36		       a9 00		      lda	#<#1024
      3  8e38		       48		      pha
      4  8e39		       a9 04		      lda	#>#1024
      5  8e3b		       48		      pha
      6  8e3c				  -	      ELSE
      7  8e3c				  -	      lda	#<#1024
      8  8e3c				  -	      ldy	#>#1024
      9  8e3c					      ENDIF
      0  8e3c					      addw
      1  8e3c		       ba		      tsx
      2  8e3d		       bd 02 01 	      lda.wx	stack+2
      3  8e40		       18		      clc
      4  8e41		       7d 04 01 	      adc.wx	stack+4
      5  8e44		       9d 04 01 	      sta.wx	stack+4
      6  8e47		       68		      pla
      7  8e48		       7d 03 01 	      adc.wx	stack+3
      8  8e4b		       9d 03 01 	      sta.wx	stack+3
      9  8e4e		       68		      pla
      0  8e4f					      textat
      1  8e4f					      IF	!FPULL
      2  8e4f		       68		      pla
      3  8e50		       85 fe		      sta	R3
      4  8e52		       68		      pla
      5  8e53		       85 fd		      sta	R2
      6  8e55				  -	      ELSE
      7  8e55				  -	      sta	R2
      8  8e55				  -	      sty	R3
      9  8e55					      ENDIF
     10  8e55		       68		      pla
     11  8e56		       85 fc		      sta	R1
     12  8e58		       68		      pla
     13  8e59		       85 fb		      sta	R0
     14  8e5b		       a0 00		      ldy	#$00
     15  8e5d				   .loop
     16  8e5d		       b1 fb		      lda	(R0),y
     17  8e5f		       f0 06		      beq	.end
     18  8e61		       91 fd		      sta	(R2),y
     19  8e63		       c8		      iny
     20  8e64		       4c 5d 8e 	      jmp	.loop
     21  8e67				   .end
  14145  8e67		       60		      rts
  14146  8e68				   _Lactions.refuel
  14147  8e68				   FPUSH      SET	1
      0  8e68					      pbyte	#7
      1  8e68		       a9 07		      lda	#7
      2  8e6a				  -	      IF	!FPUSH
      3  8e6a				  -	      pha
      4  8e6a					      ENDIF
  14149  8e6a				   FPULL      SET	1
  14150  8e6a				   FPUSH      SET	0
      0  8e6a					      plb2var	_spr_setshape.spr_no
      1  8e6a				  -	      IF	!FPULL
      2  8e6a				  -	      pla
      3  8e6a					      ENDIF
      4  8e6a		       8d 05 b5 	      sta	_spr_setshape.spr_no
  14152  8e6a				   FPULL      SET	0
      0  8e6d					      pbyte	#194
      1  8e6d		       a9 c2		      lda	#194
      2  8e6f					      IF	!FPUSH
      3  8e6f		       48		      pha
      4  8e70					      ENDIF
      0  8e70					      pbvar	_dir
      0  8e70					      pbyte	_dir
      1  8e70		       ad 24 b5 	      lda	_dir
      2  8e73					      IF	!FPUSH
      3  8e73		       48		      pha
      4  8e74					      ENDIF
  14155  8e74				   FPUSH      SET	1
      0  8e74					      pbyte	#27
      1  8e74		       a9 1b		      lda	#27
      2  8e76				  -	      IF	!FPUSH
      3  8e76				  -	      pha
      4  8e76					      ENDIF
  14157  8e76				   FPULL      SET	1
      0  8e76					      mulb
      1  8e76				  -	      IF	!FPULL
      2  8e76				  -	      pla
      3  8e76					      ENDIF
      4  8e76		       85 fc		      sta	R1
      5  8e78		       68		      pla
      6  8e79		       85 fd		      sta	R2
      7  8e7b		       a9 00		      lda	#$00
      8  8e7d		       f0 05		      beq	.enterLoop
      9  8e7f				   .doAdd
     10  8e7f		       18		      clc
     11  8e80		       65 fc		      adc	R1
     12  8e82				   .loop
     13  8e82		       06 fc		      asl	R1
     14  8e84				   .enterLoop
     15  8e84		       46 fd		      lsr	R2
     16  8e86		       b0 f7		      bcs	.doAdd
     17  8e88		       d0 f8		      bne	.loop
     18  8e8a				   .end
     19  8e8a				  -	      IF	!FPUSH
     20  8e8a				  -	      pha
     21  8e8a					      ENDIF
      0  8e8a					      addb
      1  8e8a				  -	      IF	!FPULL
      2  8e8a				  -	      pla
      3  8e8a					      ENDIF
      4  8e8a		       85 fb		      sta	R0
      5  8e8c		       68		      pla
      6  8e8d		       18		      clc
      7  8e8e		       65 fb		      adc	R0
      8  8e90				  -	      IF	!FPUSH
      9  8e90				  -	      pha
     10  8e90					      ENDIF
  14160  8e90				   FPUSH      SET	0
      0  8e90					      plb2var	_spr_setshape.shape
      1  8e90				  -	      IF	!FPULL
      2  8e90				  -	      pla
      3  8e90					      ENDIF
      4  8e90		       8d 06 b5 	      sta	_spr_setshape.shape
  14162  8e93		       20 e0 71 	      jsr	_Pspr_setshape
  14163  8e93				   FPULL      SET	0
  14164  8e93				   FPUSH      SET	1
      0  8e96					      pbyte	#7
      1  8e96		       a9 07		      lda	#7
      2  8e98				  -	      IF	!FPUSH
      3  8e98				  -	      pha
      4  8e98					      ENDIF
  14166  8e98				   FPULL      SET	1
  14167  8e98				   FPUSH      SET	0
      0  8e98					      plb2var	_spr_enable.spr_no
      1  8e98				  -	      IF	!FPULL
      2  8e98				  -	      pla
      3  8e98					      ENDIF
      4  8e98		       8d fa b4 	      sta	_spr_enable.spr_no
  14169  8e9b		       20 6e 71 	      jsr	_Pspr_enable
  14170  8e9b				   FPULL      SET	0
      0  8e9e					      opt_pbyte_pbyte_and	_frame_count, #7
      1  8e9e
      2  8e9e
      3  8e9e
      4  8e9e
      5  8e9e
      6  8e9e		       ad 25 b5 	      lda	_frame_count
      7  8ea1		       29 07		      and	#7
      8  8ea3					      IF	!FPUSH
      9  8ea3		       48		      pha
     10  8ea4					      ENDIF
  14172  8ea4				   FPUSH      SET	1
      0  8ea4					      pbyte	#0
      1  8ea4		       a9 00		      lda	#0
      2  8ea6				  -	      IF	!FPUSH
      3  8ea6				  -	      pha
      4  8ea6					      ENDIF
  14174  8ea6				   FPULL      SET	1
      0  8ea6					      cmpbeq
      1  8ea6				  -	      IF	!FPULL
      2  8ea6				  -	      pla
      3  8ea6					      ENDIF
      4  8ea6		       85 fc		      sta	R1
      5  8ea8		       68		      pla
      6  8ea9		       c5 fc		      cmp	R1
      7  8eab		       f0 05		      beq	.pht
      0  8ead					      pzero
      1  8ead		       a9 00		      lda	#$00
      2  8eaf				  -	      IF	!FPUSH
      3  8eaf				  -	      pha
      4  8eaf					      ENDIF
      9  8eaf				  -	      IF	!FPUSH
     10  8eaf				  -	      jmp	*+6
     11  8eaf					      ELSE
     12  8eaf		       4c b4 8e 	      jmp	*+5
     13  8eb2					      ENDIF
      0  8eb2				   .pht       pone
      1  8eb2		       a9 01		      lda	#$01
      2  8eb4				  -	      IF	!FPUSH
      3  8eb4				  -	      pha
      4  8eb4					      ENDIF
  14176  8eb4				   FPUSH      SET	0
      0  8eb4					      cond_stmt	_EI_42, _EL_42
      1  8eb4				  -	      IF	!FPULL
      2  8eb4				  -	      pla
      3  8eb4					      ENDIF
      4  8eb4		       d0 03		      bne	*+5
      5  8eb6				  -	      IFCONST	_EL_42
      6  8eb6				  -	      jmp	_EL_42
      7  8eb6					      ELSE
      8  8eb6		       4c 4e 8f 	      jmp	_EI_42
      9  8eb9					      ENDIF
      0  8eb9					      incb	_fuel
      1  8eb9		       ee 36 b6 	      inc	_fuel
  14179  8ebc		       20 e0 93 	      jsr	_Lactions.draw_fuel
  14180  8ebc				   FPULL      SET	0
  14181  8ebc				   FPUSH      SET	1
      0  8ebf					      pbyte_pbyte_cmpbgte	_fuel, #36
      1  8ebf
      2  8ebf
      3  8ebf
      4  8ebf
      5  8ebf
      6  8ebf		       ad 36 b6 	      lda	_fuel
      7  8ec2		       c9 24		      cmp	#36
      8  8ec4		       b0 05		      bcs	.true
      0  8ec6					      pzero
      1  8ec6		       a9 00		      lda	#$00
      2  8ec8				  -	      IF	!FPUSH
      3  8ec8				  -	      pha
      4  8ec8					      ENDIF
     10  8ec8				  -	      IF	!FPUSH
     11  8ec8				  -	      jmp	*+6
     12  8ec8					      ELSE
     13  8ec8		       4c cd 8e 	      jmp	*+5
     14  8ecb					      ENDIF
     15  8ecb				   .true
      0  8ecb					      pone
      1  8ecb		       a9 01		      lda	#$01
      2  8ecd				  -	      IF	!FPUSH
      3  8ecd				  -	      pha
      4  8ecd					      ENDIF
  14183  8ecd				   FPULL      SET	1
  14184  8ecd				   FPUSH      SET	0
      0  8ecd					      cond_stmt	_EI_43, _EL_43
      1  8ecd				  -	      IF	!FPULL
      2  8ecd				  -	      pla
      3  8ecd					      ENDIF
      4  8ecd		       d0 03		      bne	*+5
      5  8ecf				  -	      IFCONST	_EL_43
      6  8ecf				  -	      jmp	_EL_43
      7  8ecf					      ELSE
      8  8ecf		       4c 4e 8f 	      jmp	_EI_43
      9  8ed2					      ENDIF
  14186  8ed2				   FPULL      SET	0
  14187  8ed2				   FPUSH      SET	1
      0  8ed2					      pbyte	#48
      1  8ed2		       a9 30		      lda	#48
      2  8ed4				  -	      IF	!FPUSH
      3  8ed4				  -	      pha
      4  8ed4					      ENDIF
  14189  8ed4				   FPULL      SET	1
  14190  8ed4				   FPUSH      SET	0
      0  8ed4					      plb2var	_speed
      1  8ed4				  -	      IF	!FPULL
      2  8ed4				  -	      pla
      3  8ed4					      ENDIF
      4  8ed4		       8d 23 b5 	      sta	_speed
  14192  8ed4				   FPULL      SET	0
  14193  8ed4				   FPUSH      SET	1
      0  8ed7					      pbyte	#0
      1  8ed7		       a9 00		      lda	#0
      2  8ed9				  -	      IF	!FPUSH
      3  8ed9				  -	      pha
      4  8ed9					      ENDIF
  14195  8ed9				   FPULL      SET	1
  14196  8ed9				   FPUSH      SET	0
      0  8ed9					      plb2var	_actions.anim_counter
      1  8ed9				  -	      IF	!FPULL
      2  8ed9				  -	      pla
      3  8ed9					      ENDIF
      4  8ed9		       8d 6b b6 	      sta	_actions.anim_counter
  14198  8ed9				   FPULL      SET	0
  14199  8ed9				   FPUSH      SET	1
      0  8edc					      pbyte	#2
      1  8edc		       a9 02		      lda	#2
      2  8ede				  -	      IF	!FPUSH
      3  8ede				  -	      pha
      4  8ede					      ENDIF
  14201  8ede				   FPULL      SET	1
  14202  8ede				   FPUSH      SET	0
      0  8ede					      plb2var	_aircraft_mode
      1  8ede				  -	      IF	!FPULL
      2  8ede				  -	      pla
      3  8ede					      ENDIF
      4  8ede		       8d 35 b6 	      sta	_aircraft_mode
  14204  8ede				   FPULL      SET	0
      0  8ee1					      paddr	_S3
      0  8ee1					      pword	_S3
      1  8ee1					      IF	!FPUSH
      2  8ee1		       a9 11		      lda	#<_S3
      3  8ee3		       48		      pha
      4  8ee4		       a9 ae		      lda	#>_S3
      5  8ee6		       48		      pha
      6  8ee7				  -	      ELSE
      7  8ee7				  -	      lda	#<_S3
      8  8ee7				  -	      ldy	#>_S3
      9  8ee7					      ENDIF
      0  8ee7					      pbyte	#12
      1  8ee7		       a9 0c		      lda	#12
      2  8ee9					      IF	!FPUSH
      3  8ee9		       48		      pha
      4  8eea					      ENDIF
      0  8eea					      btow
      1  8eea		       a9 00		      lda	#$00
      2  8eec		       48		      pha
  14208  8eec				   FPUSH      SET	1
      0  8eed					      pword	#40
      1  8eed				  -	      IF	!FPUSH
      2  8eed				  -	      lda	#<#40
      3  8eed				  -	      pha
      4  8eed				  -	      lda	#>#40
      5  8eed				  -	      pha
      6  8eed					      ELSE
      7  8eed		       a9 28		      lda	#<#40
      8  8eef		       a0 00		      ldy	#>#40
      9  8ef1					      ENDIF
  14210  8ef1				   FPULL      SET	1
  14211  8ef1				   FPUSH      SET	0
      0  8ef1					      mulw
      1  8ef1				  -	      IF	!FPULL
      2  8ef1				  -	      pla
      3  8ef1				  -	      sta	R1
      4  8ef1				  -	      pla
      5  8ef1				  -	      sta	R0
      6  8ef1					      ELSE
      7  8ef1		       85 fb		      sta	R0
      8  8ef3		       84 fc		      sty	R1
      9  8ef5					      ENDIF
     10  8ef5		       68		      pla
     11  8ef6		       85 fe		      sta	R3
     12  8ef8		       68		      pla
     13  8ef9		       85 fd		      sta	R2
     14  8efb		       20 0d 08 	      jsr	NUCL_SMUL16
     15  8efe					      IF	!FPUSH
     16  8efe		       a5 fb		      lda	R0
     17  8f00		       48		      pha
     18  8f01		       a5 fc		      lda	R1
     19  8f03		       48		      pha
     20  8f04				  -	      ELSE
     21  8f04				  -	      lda	R0
     22  8f04				  -	      ldy	R1
     23  8f04					      ENDIF
  14213  8f04				   FPULL      SET	0
      0  8f04					      pbyte	#14
      1  8f04		       a9 0e		      lda	#14
      2  8f06					      IF	!FPUSH
      3  8f06		       48		      pha
      4  8f07					      ENDIF
      0  8f07					      btow
      1  8f07		       a9 00		      lda	#$00
      2  8f09		       48		      pha
      0  8f0a					      addw
      1  8f0a		       ba		      tsx
      2  8f0b		       bd 02 01 	      lda.wx	stack+2
      3  8f0e		       18		      clc
      4  8f0f		       7d 04 01 	      adc.wx	stack+4
      5  8f12		       9d 04 01 	      sta.wx	stack+4
      6  8f15		       68		      pla
      7  8f16		       7d 03 01 	      adc.wx	stack+3
      8  8f19		       9d 03 01 	      sta.wx	stack+3
      9  8f1c		       68		      pla
      0  8f1d					      pword	#1024
      1  8f1d					      IF	!FPUSH
      2  8f1d		       a9 00		      lda	#<#1024
      3  8f1f		       48		      pha
      4  8f20		       a9 04		      lda	#>#1024
      5  8f22		       48		      pha
      6  8f23				  -	      ELSE
      7  8f23				  -	      lda	#<#1024
      8  8f23				  -	      ldy	#>#1024
      9  8f23					      ENDIF
      0  8f23					      addw
      1  8f23		       ba		      tsx
      2  8f24		       bd 02 01 	      lda.wx	stack+2
      3  8f27		       18		      clc
      4  8f28		       7d 04 01 	      adc.wx	stack+4
      5  8f2b		       9d 04 01 	      sta.wx	stack+4
      6  8f2e		       68		      pla
      7  8f2f		       7d 03 01 	      adc.wx	stack+3
      8  8f32		       9d 03 01 	      sta.wx	stack+3
      9  8f35		       68		      pla
      0  8f36					      textat
      1  8f36					      IF	!FPULL
      2  8f36		       68		      pla
      3  8f37		       85 fe		      sta	R3
      4  8f39		       68		      pla
      5  8f3a		       85 fd		      sta	R2
      6  8f3c				  -	      ELSE
      7  8f3c				  -	      sta	R2
      8  8f3c				  -	      sty	R3
      9  8f3c					      ENDIF
     10  8f3c		       68		      pla
     11  8f3d		       85 fc		      sta	R1
     12  8f3f		       68		      pla
     13  8f40		       85 fb		      sta	R0
     14  8f42		       a0 00		      ldy	#$00
     15  8f44				   .loop
     16  8f44		       b1 fb		      lda	(R0),y
     17  8f46		       f0 06		      beq	.end
     18  8f48		       91 fd		      sta	(R2),y
     19  8f4a		       c8		      iny
     20  8f4b		       4c 44 8f 	      jmp	.loop
     21  8f4e				   .end
  14220  8f4e				   _EI_43
  14221  8f4e
  14222  8f4e
  14223  8f4e
  14224  8f4e
  14225  8f4e
  14226  8f4e
  14227  8f4e
  14228  8f4e				   _EI_42
  14229  8f4e		       60		      rts
  14230  8f4f
  14231  8f4f
  14232  8f4f
  14233  8f4f
  14234  8f4f
  14235  8f4f
  14236  8f4f
  14237  8f4f				   _Lactions.take_off
      0  8f4f					      incb	_actions.anim_counter
      1  8f4f		       ee 6b b6 	      inc	_actions.anim_counter
  14239  8f4f				   FPUSH      SET	1
      0  8f52					      pbvar	_actions.anim_counter
      0  8f52					      pbyte	_actions.anim_counter
      1  8f52		       ad 6b b6 	      lda	_actions.anim_counter
      2  8f55				  -	      IF	!FPUSH
      3  8f55				  -	      pha
      4  8f55					      ENDIF
  14241  8f55				   FPULL      SET	1
  14242  8f55				   FPUSH      SET	0
      0  8f55					      rshiftbc	2
      1  8f55				  -	      IF	!FPULL
      2  8f55				  -	      pla
      3  8f55					      ENDIF
      4  8f55					      REPEAT	2
      5  8f55		       4a		      lsr
      4  8f55					      REPEND
      5  8f56		       4a		      lsr
      6  8f57					      REPEND
      7  8f57					      IF	!FPUSH
      8  8f57		       48		      pha
      9  8f58					      ENDIF
  14244  8f58				   FPULL      SET	0
  14245  8f58				   FPUSH      SET	1
      0  8f58					      pbyte	#48
      1  8f58		       a9 30		      lda	#48
      2  8f5a				  -	      IF	!FPUSH
      3  8f5a				  -	      pha
      4  8f5a					      ENDIF
  14247  8f5a				   FPULL      SET	1
      0  8f5a					      addb
      1  8f5a				  -	      IF	!FPULL
      2  8f5a				  -	      pla
      3  8f5a					      ENDIF
      4  8f5a		       85 fb		      sta	R0
      5  8f5c		       68		      pla
      6  8f5d		       18		      clc
      7  8f5e		       65 fb		      adc	R0
      8  8f60				  -	      IF	!FPUSH
      9  8f60				  -	      pha
     10  8f60					      ENDIF
  14249  8f60				   FPUSH      SET	0
      0  8f60					      plb2var	_speed
      1  8f60				  -	      IF	!FPULL
      2  8f60				  -	      pla
      3  8f60					      ENDIF
      4  8f60		       8d 23 b5 	      sta	_speed
      0  8f63					      pbyte_pbyte_cmpbeq_cond	_actions.anim_counter, #30, _EI_65554, _EL_65554
      1  8f63
      2  8f63
      3  8f63		       ad 6b b6 	      lda	_actions.anim_counter
      4  8f66		       c9 1e		      cmp	#30
      5  8f68		       f0 03		      beq	*+5
      6  8f6a				  -	      IFCONST	_EL_65554
      7  8f6a				  -	      jmp	_EL_65554
      8  8f6a					      ELSE
      9  8f6a		       4c 9b 8f 	      jmp	_EI_65554
     10  8f6d					      ENDIF
  14252  8f6d				   FPULL      SET	0
  14253  8f6d				   FPUSH      SET	1
      0  8f6d					      pbyte	#7
      1  8f6d		       a9 07		      lda	#7
      2  8f6f				  -	      IF	!FPUSH
      3  8f6f				  -	      pha
      4  8f6f					      ENDIF
  14255  8f6f				   FPULL      SET	1
  14256  8f6f				   FPUSH      SET	0
      0  8f6f					      plb2var	_spr_setshape.spr_no
      1  8f6f				  -	      IF	!FPULL
      2  8f6f				  -	      pla
      3  8f6f					      ENDIF
      4  8f6f		       8d 05 b5 	      sta	_spr_setshape.spr_no
  14258  8f6f				   FPULL      SET	0
      0  8f72					      pbyte	#193
      1  8f72		       a9 c1		      lda	#193
      2  8f74					      IF	!FPUSH
      3  8f74		       48		      pha
      4  8f75					      ENDIF
      0  8f75					      pbvar	_dir
      0  8f75					      pbyte	_dir
      1  8f75		       ad 24 b5 	      lda	_dir
      2  8f78					      IF	!FPUSH
      3  8f78		       48		      pha
      4  8f79					      ENDIF
  14261  8f79				   FPUSH      SET	1
      0  8f79					      pbyte	#27
      1  8f79		       a9 1b		      lda	#27
      2  8f7b				  -	      IF	!FPUSH
      3  8f7b				  -	      pha
      4  8f7b					      ENDIF
  14263  8f7b				   FPULL      SET	1
      0  8f7b					      mulb
      1  8f7b				  -	      IF	!FPULL
      2  8f7b				  -	      pla
      3  8f7b					      ENDIF
      4  8f7b		       85 fc		      sta	R1
      5  8f7d		       68		      pla
      6  8f7e		       85 fd		      sta	R2
      7  8f80		       a9 00		      lda	#$00
      8  8f82		       f0 05		      beq	.enterLoop
      9  8f84				   .doAdd
     10  8f84		       18		      clc
     11  8f85		       65 fc		      adc	R1
     12  8f87				   .loop
     13  8f87		       06 fc		      asl	R1
     14  8f89				   .enterLoop
     15  8f89		       46 fd		      lsr	R2
     16  8f8b		       b0 f7		      bcs	.doAdd
     17  8f8d		       d0 f8		      bne	.loop
     18  8f8f				   .end
     19  8f8f				  -	      IF	!FPUSH
     20  8f8f				  -	      pha
     21  8f8f					      ENDIF
      0  8f8f					      addb
      1  8f8f				  -	      IF	!FPULL
      2  8f8f				  -	      pla
      3  8f8f					      ENDIF
      4  8f8f		       85 fb		      sta	R0
      5  8f91		       68		      pla
      6  8f92		       18		      clc
      7  8f93		       65 fb		      adc	R0
      8  8f95				  -	      IF	!FPUSH
      9  8f95				  -	      pha
     10  8f95					      ENDIF
  14266  8f95				   FPUSH      SET	0
      0  8f95					      plb2var	_spr_setshape.shape
      1  8f95				  -	      IF	!FPULL
      2  8f95				  -	      pla
      3  8f95					      ENDIF
      4  8f95		       8d 06 b5 	      sta	_spr_setshape.shape
  14268  8f98		       20 e0 71 	      jsr	_Pspr_setshape
  14269  8f9b				   _EI_65554
      0  8f9b					      pbyte_pbyte_cmpbeq_cond	_actions.anim_counter, #50, _EI_65555, _EL_65555
      1  8f9b
      2  8f9b
      3  8f9b		       ad 6b b6 	      lda	_actions.anim_counter
      4  8f9e		       c9 32		      cmp	#50
      5  8fa0		       f0 03		      beq	*+5
      6  8fa2				  -	      IFCONST	_EL_65555
      7  8fa2				  -	      jmp	_EL_65555
      8  8fa2					      ELSE
      9  8fa2		       4c d3 8f 	      jmp	_EI_65555
     10  8fa5					      ENDIF
  14271  8fa5				   FPULL      SET	0
  14272  8fa5				   FPUSH      SET	1
      0  8fa5					      pbyte	#7
      1  8fa5		       a9 07		      lda	#7
      2  8fa7				  -	      IF	!FPUSH
      3  8fa7				  -	      pha
      4  8fa7					      ENDIF
  14274  8fa7				   FPULL      SET	1
  14275  8fa7				   FPUSH      SET	0
      0  8fa7					      plb2var	_spr_setshape.spr_no
      1  8fa7				  -	      IF	!FPULL
      2  8fa7				  -	      pla
      3  8fa7					      ENDIF
      4  8fa7		       8d 05 b5 	      sta	_spr_setshape.spr_no
  14277  8fa7				   FPULL      SET	0
      0  8faa					      pbyte	#192
      1  8faa		       a9 c0		      lda	#192
      2  8fac					      IF	!FPUSH
      3  8fac		       48		      pha
      4  8fad					      ENDIF
      0  8fad					      pbvar	_dir
      0  8fad					      pbyte	_dir
      1  8fad		       ad 24 b5 	      lda	_dir
      2  8fb0					      IF	!FPUSH
      3  8fb0		       48		      pha
      4  8fb1					      ENDIF
  14280  8fb1				   FPUSH      SET	1
      0  8fb1					      pbyte	#27
      1  8fb1		       a9 1b		      lda	#27
      2  8fb3				  -	      IF	!FPUSH
      3  8fb3				  -	      pha
      4  8fb3					      ENDIF
  14282  8fb3				   FPULL      SET	1
      0  8fb3					      mulb
      1  8fb3				  -	      IF	!FPULL
      2  8fb3				  -	      pla
      3  8fb3					      ENDIF
      4  8fb3		       85 fc		      sta	R1
      5  8fb5		       68		      pla
      6  8fb6		       85 fd		      sta	R2
      7  8fb8		       a9 00		      lda	#$00
      8  8fba		       f0 05		      beq	.enterLoop
      9  8fbc				   .doAdd
     10  8fbc		       18		      clc
     11  8fbd		       65 fc		      adc	R1
     12  8fbf				   .loop
     13  8fbf		       06 fc		      asl	R1
     14  8fc1				   .enterLoop
     15  8fc1		       46 fd		      lsr	R2
     16  8fc3		       b0 f7		      bcs	.doAdd
     17  8fc5		       d0 f8		      bne	.loop
     18  8fc7				   .end
     19  8fc7				  -	      IF	!FPUSH
     20  8fc7				  -	      pha
     21  8fc7					      ENDIF
      0  8fc7					      addb
      1  8fc7				  -	      IF	!FPULL
      2  8fc7				  -	      pla
      3  8fc7					      ENDIF
      4  8fc7		       85 fb		      sta	R0
      5  8fc9		       68		      pla
      6  8fca		       18		      clc
      7  8fcb		       65 fb		      adc	R0
      8  8fcd				  -	      IF	!FPUSH
      9  8fcd				  -	      pha
     10  8fcd					      ENDIF
  14285  8fcd				   FPUSH      SET	0
      0  8fcd					      plb2var	_spr_setshape.shape
      1  8fcd				  -	      IF	!FPULL
      2  8fcd				  -	      pla
      3  8fcd					      ENDIF
      4  8fcd		       8d 06 b5 	      sta	_spr_setshape.shape
  14287  8fd0		       20 e0 71 	      jsr	_Pspr_setshape
  14288  8fd3				   _EI_65555
      0  8fd3					      pbyte_pbyte_cmpbgt_cond	_actions.anim_counter, #30, _EI_44, _EL_44
      1  8fd3
      2  8fd3
      3  8fd3		       a9 1e		      lda	#30
      4  8fd5		       cd 6b b6 	      cmp	_actions.anim_counter
      5  8fd8		       90 03		      bcc	*+5
      6  8fda				  -	      IFCONST	_EL_44
      7  8fda				  -	      jmp	_EL_44
      8  8fda					      ELSE
      9  8fda		       4c fc 8f 	      jmp	_EI_44
     10  8fdd					      ENDIF
  14290  8fdd				   FPULL      SET	0
  14291  8fdd				   FPUSH      SET	1
      0  8fdd					      pbyte	#1
      1  8fdd		       a9 01		      lda	#1
      2  8fdf				  -	      IF	!FPUSH
      3  8fdf				  -	      pha
      4  8fdf					      ENDIF
  14293  8fdf				   FPULL      SET	1
  14294  8fdf				   FPUSH      SET	0
      0  8fdf					      plb2var	_lifting
      1  8fdf				  -	      IF	!FPULL
      2  8fdf				  -	      pla
      3  8fdf					      ENDIF
      4  8fdf		       8d 2c b5 	      sta	_lifting
      0  8fe2					      decw	_aircraft_altitude
      1  8fe2		       ce 2f b5 	      dec	_aircraft_altitude
      2  8fe5		       a9 ff		      lda	#$ff
      3  8fe7		       cd 2f b5 	      cmp	_aircraft_altitude
      4  8fea		       d0 03		      bne	.skip
      5  8fec		       ce 30 b5 	      dec	_aircraft_altitude+1
      6  8fef				   .skip
      0  8fef					      decw	_aircraft_altitude
      1  8fef		       ce 2f b5 	      dec	_aircraft_altitude
      2  8ff2		       a9 ff		      lda	#$ff
      3  8ff4		       cd 2f b5 	      cmp	_aircraft_altitude
      4  8ff7		       d0 03		      bne	.skip
      5  8ff9		       ce 30 b5 	      dec	_aircraft_altitude+1
      6  8ffc				   .skip
  14298  8ffc				   _EI_44
      0  8ffc					      pbyte_pbyte_cmpbgte_cond	_actions.anim_counter, #70, _EI_45, _EL_45
      1  8ffc
      2  8ffc
      3  8ffc		       ad 6b b6 	      lda	_actions.anim_counter
      4  8fff		       c9 46		      cmp	#70
      5  9001		       b0 03		      bcs	*+5
      6  9003				  -	      IFCONST	_EL_45
      7  9003				  -	      jmp	_EL_45
      8  9003					      ELSE
      9  9003		       4c 4a 90 	      jmp	_EI_45
     10  9006					      ENDIF
  14300  9006				   FPULL      SET	0
      0  9006					      pbyte	#32
      1  9006		       a9 20		      lda	#32
      2  9008					      IF	!FPUSH
      3  9008		       48		      pha
      4  9009					      ENDIF
      0  9009					      pbyte	#14
      1  9009		       a9 0e		      lda	#14
      2  900b					      IF	!FPUSH
      3  900b		       48		      pha
      4  900c					      ENDIF
      0  900c					      btow
      1  900c		       a9 00		      lda	#$00
      2  900e		       48		      pha
      0  900f					      pword	#1517
      1  900f					      IF	!FPUSH
      2  900f		       a9 ed		      lda	#<#1517
      3  9011		       48		      pha
      4  9012		       a9 05		      lda	#>#1517
      5  9014		       48		      pha
      6  9015				  -	      ELSE
      7  9015				  -	      lda	#<#1517
      8  9015				  -	      ldy	#>#1517
      9  9015					      ENDIF
      0  9015					      memset
      1  9015					      IF	!FPULL
      2  9015		       68		      pla
      3  9016		       85 fc		      sta	R1
      4  9018		       68		      pla
      5  9019		       85 fb		      sta	R0
      6  901b				  -	      ELSE
      7  901b				  -	      sta	R0
      8  901b				  -	      sty	R1
      9  901b					      ENDIF
     10  901b		       68		      pla
     11  901c		       85 fe		      sta	R3
     12  901e		       68		      pla
     13  901f		       85 fd		      sta	R2
     14  9021		       68		      pla
     15  9022		       20 de 0a 	      jsr	mem_memset
  14306  9022				   FPUSH      SET	1
      0  9025					      pword	#53279
      1  9025				  -	      IF	!FPUSH
      2  9025				  -	      lda	#<#53279
      3  9025				  -	      pha
      4  9025				  -	      lda	#>#53279
      5  9025				  -	      pha
      6  9025					      ELSE
      7  9025		       a9 1f		      lda	#<#53279
      8  9027		       a0 d0		      ldy	#>#53279
      9  9029					      ENDIF
  14308  9029				   FPULL      SET	1
      0  9029					      peekb
      1  9029				  -	      IF	!FPULL
      2  9029				  -	      pla
      3  9029				  -	      sta	.selfmod_code+2
      4  9029				  -	      pla
      5  9029				  -	      sta	.selfmod_code+1
      6  9029					      ELSE
      7  9029		       8d 30 90 	      sta	.selfmod_code+1
      8  902c		       8c 31 90 	      sty	.selfmod_code+2
      9  902f					      ENDIF
     10  902f				   .selfmod_code
     11  902f		       ad 00 00 	      lda.w	$0000
     12  9032				  -	      IF	!FPUSH
     13  9032				  -	      pha
     14  9032					      ENDIF
  14310  9032				   FPUSH      SET	0
      0  9032					      plb2var	_actions.x
      1  9032				  -	      IF	!FPULL
      2  9032				  -	      pla
      3  9032					      ENDIF
      4  9032		       8d 6e b6 	      sta	_actions.x
  14312  9032				   FPULL      SET	0
  14313  9032				   FPUSH      SET	1
      0  9035					      pword	#53278
      1  9035				  -	      IF	!FPUSH
      2  9035				  -	      lda	#<#53278
      3  9035				  -	      pha
      4  9035				  -	      lda	#>#53278
      5  9035				  -	      pha
      6  9035					      ELSE
      7  9035		       a9 1e		      lda	#<#53278
      8  9037		       a0 d0		      ldy	#>#53278
      9  9039					      ENDIF
  14315  9039				   FPULL      SET	1
      0  9039					      peekb
      1  9039				  -	      IF	!FPULL
      2  9039				  -	      pla
      3  9039				  -	      sta	.selfmod_code+2
      4  9039				  -	      pla
      5  9039				  -	      sta	.selfmod_code+1
      6  9039					      ELSE
      7  9039		       8d 40 90 	      sta	.selfmod_code+1
      8  903c		       8c 41 90 	      sty	.selfmod_code+2
      9  903f					      ENDIF
     10  903f				   .selfmod_code
     11  903f		       ad 00 00 	      lda.w	$0000
     12  9042				  -	      IF	!FPUSH
     13  9042				  -	      pha
     14  9042					      ENDIF
  14317  9042				   FPUSH      SET	0
      0  9042					      plb2var	_actions.x
      1  9042				  -	      IF	!FPULL
      2  9042				  -	      pla
      3  9042					      ENDIF
      4  9042		       8d 6e b6 	      sta	_actions.x
  14319  9042				   FPULL      SET	0
  14320  9042				   FPUSH      SET	1
      0  9045					      pbyte	#0
      1  9045		       a9 00		      lda	#0
      2  9047				  -	      IF	!FPUSH
      3  9047				  -	      pha
      4  9047					      ENDIF
  14322  9047				   FPULL      SET	1
  14323  9047				   FPUSH      SET	0
      0  9047					      plb2var	_aircraft_mode
      1  9047				  -	      IF	!FPULL
      2  9047				  -	      pla
      3  9047					      ENDIF
      4  9047		       8d 35 b6 	      sta	_aircraft_mode
  14325  904a				   _EI_45
  14326  904a		       60		      rts
  14327  904b
  14328  904b
  14329  904b
  14330  904b
  14331  904b
  14332  904b
  14333  904b
  14334  904b				   _Lactions.landing
  14335  904b				   FPULL      SET	0
      0  904b					      opt_pwvar_pword_sub	_aircraft_xpos, #2560
      1  904b
      2  904b
      3  904b
      4  904b		       ad 31 b5 	      lda	_aircraft_xpos
      5  904e		       38		      sec
      6  904f		       e9 00		      sbc	<#2560
      7  9051					      IF	!FPUSH
      8  9051		       48		      pha
      9  9052				  -	      ELSE
     10  9052				  -	      tax
     11  9052					      ENDIF
     12  9052		       ad 32 b5 	      lda	_aircraft_xpos+1
     13  9055		       e9 0a		      sbc	>#2560
     14  9057					      IF	!FPUSH
     15  9057		       48		      pha
     16  9058				  -	      ELSE
     17  9058				  -	      tay
     18  9058				  -	      txa
     19  9058					      ENDIF
      0  9058					      absw
      1  9058		       ba		      tsx
      2  9059		       bd 01 01 	      lda.wx	stack+1
      3  905c		       10 15		      bpl	.skip
      4  905e		       49 ff		      eor	#$ff
      5  9060		       9d 01 01 	      sta.wx	stack+1
      6  9063		       bd 02 01 	      lda.wx	stack+2
      7  9066		       49 ff		      eor	#$ff
      8  9068		       18		      clc
      9  9069		       69 01		      adc	#$01
     10  906b		       9d 02 01 	      sta.wx	stack+2
     11  906e		       d0 03		      bne	.skip
     12  9070		       fe 01 01 	      inc.wx	stack+1
     13  9073				   .skip
      0  9073					      pbyte	#8
      1  9073		       a9 08		      lda	#8
      2  9075					      IF	!FPUSH
      3  9075		       48		      pha
      4  9076					      ENDIF
      0  9076					      btow
      1  9076		       a9 00		      lda	#$00
      2  9078		       48		      pha
  14340  9078				   FPUSH      SET	1
      0  9079					      cmpwgt
      1  9079		       ba		      tsx
      2  907a		       bd 02 01 	      lda.wx	stack+2
      3  907d		       dd 04 01 	      cmp.wx	stack+4
      4  9080		       bd 01 01 	      lda.wx	stack+1
      5  9083		       fd 03 01 	      sbc.wx	stack+3
      6  9086		       30 0a		      bmi	.pht
      7  9088		       e8		      inx
      8  9089		       e8		      inx
      9  908a		       e8		      inx
     10  908b		       e8		      inx
     11  908c		       9a		      txs
      0  908d					      pzero
      1  908d		       a9 00		      lda	#$00
      2  908f				  -	      IF	!FPUSH
      3  908f				  -	      pha
      4  908f					      ENDIF
     13  908f				  -	      IF	!FPUSH
     14  908f				  -	      jmp	*+11
     15  908f					      ELSE
     16  908f		       4c 99 90 	      jmp	*+10
     17  9092					      ENDIF
     18  9092		       e8	   .pht       inx
     19  9093		       e8		      inx
     20  9094		       e8		      inx
     21  9095		       e8		      inx
     22  9096		       9a		      txs
      0  9097					      pone
      1  9097		       a9 01		      lda	#$01
      2  9099				  -	      IF	!FPUSH
      3  9099				  -	      pha
      4  9099					      ENDIF
  14342  9099				   FPULL      SET	1
  14343  9099				   FPUSH      SET	0
      0  9099					      cond_stmt	_EI_46, _EL_46
      1  9099				  -	      IF	!FPULL
      2  9099				  -	      pla
      3  9099					      ENDIF
      4  9099		       d0 03		      bne	*+5
      5  909b					      IFCONST	_EL_46
      6  909b		       4c 5b 91 	      jmp	_EL_46
      7  909e				  -	      ELSE
      8  909e				  -	      jmp	_EI_46
      9  909e					      ENDIF
  14345  909e				   FPULL      SET	0
  14346  909e				   FPUSH      SET	1
      0  909e					      pbyte	#7
      1  909e		       a9 07		      lda	#7
      2  90a0				  -	      IF	!FPUSH
      3  90a0				  -	      pha
      4  90a0					      ENDIF
  14348  90a0				   FPULL      SET	1
  14349  90a0				   FPUSH      SET	0
      0  90a0					      plb2var	_spr_setshape.spr_no
      1  90a0				  -	      IF	!FPULL
      2  90a0				  -	      pla
      3  90a0					      ENDIF
      4  90a0		       8d 05 b5 	      sta	_spr_setshape.spr_no
  14351  90a0				   FPULL      SET	0
      0  90a3					      pbyte	#193
      1  90a3		       a9 c1		      lda	#193
      2  90a5					      IF	!FPUSH
      3  90a5		       48		      pha
      4  90a6					      ENDIF
      0  90a6					      pbvar	_dir
      0  90a6					      pbyte	_dir
      1  90a6		       ad 24 b5 	      lda	_dir
      2  90a9					      IF	!FPUSH
      3  90a9		       48		      pha
      4  90aa					      ENDIF
  14354  90aa				   FPUSH      SET	1
      0  90aa					      pbyte	#27
      1  90aa		       a9 1b		      lda	#27
      2  90ac				  -	      IF	!FPUSH
      3  90ac				  -	      pha
      4  90ac					      ENDIF
  14356  90ac				   FPULL      SET	1
      0  90ac					      mulb
      1  90ac				  -	      IF	!FPULL
      2  90ac				  -	      pla
      3  90ac					      ENDIF
      4  90ac		       85 fc		      sta	R1
      5  90ae		       68		      pla
      6  90af		       85 fd		      sta	R2
      7  90b1		       a9 00		      lda	#$00
      8  90b3		       f0 05		      beq	.enterLoop
      9  90b5				   .doAdd
     10  90b5		       18		      clc
     11  90b6		       65 fc		      adc	R1
     12  90b8				   .loop
     13  90b8		       06 fc		      asl	R1
     14  90ba				   .enterLoop
     15  90ba		       46 fd		      lsr	R2
     16  90bc		       b0 f7		      bcs	.doAdd
     17  90be		       d0 f8		      bne	.loop
     18  90c0				   .end
     19  90c0				  -	      IF	!FPUSH
     20  90c0				  -	      pha
     21  90c0					      ENDIF
      0  90c0					      addb
      1  90c0				  -	      IF	!FPULL
      2  90c0				  -	      pla
      3  90c0					      ENDIF
      4  90c0		       85 fb		      sta	R0
      5  90c2		       68		      pla
      6  90c3		       18		      clc
      7  90c4		       65 fb		      adc	R0
      8  90c6				  -	      IF	!FPUSH
      9  90c6				  -	      pha
     10  90c6					      ENDIF
  14359  90c6				   FPUSH      SET	0
      0  90c6					      plb2var	_spr_setshape.shape
      1  90c6				  -	      IF	!FPULL
      2  90c6				  -	      pla
      3  90c6					      ENDIF
      4  90c6		       8d 06 b5 	      sta	_spr_setshape.shape
  14361  90c9		       20 e0 71 	      jsr	_Pspr_setshape
  14362  90c9				   FPULL      SET	0
  14363  90c9				   FPUSH      SET	1
      0  90cc					      pbyte_pbyte_cmpbgt	_speed, #48
      1  90cc
      2  90cc
      3  90cc
      4  90cc
      5  90cc
      6  90cc		       ad 23 b5 	      lda	_speed
      7  90cf		       c9 30		      cmp	#48
      8  90d1		       90 07		      bcc	.false
      9  90d3		       f0 05		      beq	.false
      0  90d5					      pone
      1  90d5		       a9 01		      lda	#$01
      2  90d7				  -	      IF	!FPUSH
      3  90d7				  -	      pha
      4  90d7					      ENDIF
     11  90d7				  -	      IF	!FPUSH
     12  90d7				  -	      jmp	*+6
     13  90d7					      ELSE
     14  90d7		       4c dc 90 	      jmp	*+5
     15  90da					      ENDIF
     16  90da				   .false
      0  90da					      pzero
      1  90da		       a9 00		      lda	#$00
      2  90dc				  -	      IF	!FPUSH
      3  90dc				  -	      pha
      4  90dc					      ENDIF
  14365  90dc				   FPULL      SET	1
  14366  90dc				   FPUSH      SET	0
      0  90dc					      cond_stmt	_EI_65556, _EL_65556
      1  90dc				  -	      IF	!FPULL
      2  90dc				  -	      pla
      3  90dc					      ENDIF
      4  90dc		       d0 03		      bne	*+5
      5  90de				  -	      IFCONST	_EL_65556
      6  90de				  -	      jmp	_EL_65556
      7  90de					      ELSE
      8  90de		       4c e4 90 	      jmp	_EI_65556
      9  90e1					      ENDIF
      0  90e1					      decb	_speed
      1  90e1		       ce 23 b5 	      dec	_speed
  14369  90e4
  14370  90e4
  14371  90e4
  14372  90e4
  14373  90e4				   _EI_65556
  14374  90e4				   FPULL      SET	0
      0  90e4					      pwvar	_aircraft_altitude
      1  90e4					      IF	!FPUSH
      2  90e4		       ad 2f b5 	      lda	_aircraft_altitude
      3  90e7		       48		      pha
      4  90e8		       ad 30 b5 	      lda	_aircraft_altitude+1
      5  90eb		       48		      pha
      6  90ec				  -	      ELSE
      7  90ec				  -	      lda	_aircraft_altitude
      8  90ec				  -	      ldy	_aircraft_altitude+1
      9  90ec					      ENDIF
      0  90ec					      pword	#848
      1  90ec					      IF	!FPUSH
      2  90ec		       a9 50		      lda	#<#848
      3  90ee		       48		      pha
      4  90ef		       a9 03		      lda	#>#848
      5  90f1		       48		      pha
      6  90f2				  -	      ELSE
      7  90f2				  -	      lda	#<#848
      8  90f2				  -	      ldy	#>#848
      9  90f2					      ENDIF
  14377  90f2				   FPUSH      SET	1
      0  90f2					      cmpwlt
      1  90f2		       ba		      tsx
      2  90f3		       bd 04 01 	      lda.wx	stack+4
      3  90f6		       dd 02 01 	      cmp.wx	stack+2
      4  90f9		       bd 03 01 	      lda.wx	stack+3
      5  90fc		       fd 01 01 	      sbc.wx	stack+1
      6  90ff		       10 0a		      bpl	.phf
      7  9101		       e8		      inx
      8  9102		       e8		      inx
      9  9103		       e8		      inx
     10  9104		       e8		      inx
     11  9105		       9a		      txs
      0  9106					      pone
      1  9106		       a9 01		      lda	#$01
      2  9108				  -	      IF	!FPUSH
      3  9108				  -	      pha
      4  9108					      ENDIF
     13  9108				  -	      IF	!FPUSH
     14  9108				  -	      jmp	*+11
     15  9108					      ELSE
     16  9108		       4c 12 91 	      jmp	*+10
     17  910b					      ENDIF
     18  910b		       e8	   .phf       inx
     19  910c		       e8		      inx
     20  910d		       e8		      inx
     21  910e		       e8		      inx
     22  910f		       9a		      txs
      0  9110					      pzero
      1  9110		       a9 00		      lda	#$00
      2  9112				  -	      IF	!FPUSH
      3  9112				  -	      pha
      4  9112					      ENDIF
  14379  9112				   FPULL      SET	1
  14380  9112				   FPUSH      SET	0
      0  9112					      cond_stmt	_EI_65557, _EL_65557
      1  9112				  -	      IF	!FPULL
      2  9112				  -	      pla
      3  9112					      ENDIF
      4  9112		       d0 03		      bne	*+5
      5  9114					      IFCONST	_EL_65557
      6  9114		       4c 2a 91 	      jmp	_EL_65557
      7  9117				  -	      ELSE
      8  9117				  -	      jmp	_EI_65557
      9  9117					      ENDIF
      0  9117					      incw	_aircraft_altitude
      1  9117		       ee 2f b5 	      inc	_aircraft_altitude
      2  911a		       d0 03		      bne	.skip
      3  911c		       ee 30 b5 	      inc	_aircraft_altitude+1
      4  911f				   .skip
      0  911f					      incw	_aircraft_altitude
      1  911f		       ee 2f b5 	      inc	_aircraft_altitude
      2  9122		       d0 03		      bne	.skip
      3  9124		       ee 30 b5 	      inc	_aircraft_altitude+1
      4  9127				   .skip
  14384  9127		       4c 58 91 	      jmp	_EI_65557
  14385  912a				   _EL_65557
  14386  912a				   FPULL      SET	0
  14387  912a				   FPUSH      SET	1
      0  912a					      pbyte	#7
      1  912a		       a9 07		      lda	#7
      2  912c				  -	      IF	!FPUSH
      3  912c				  -	      pha
      4  912c					      ENDIF
  14389  912c				   FPULL      SET	1
  14390  912c				   FPUSH      SET	0
      0  912c					      plb2var	_spr_setshape.spr_no
      1  912c				  -	      IF	!FPULL
      2  912c				  -	      pla
      3  912c					      ENDIF
      4  912c		       8d 05 b5 	      sta	_spr_setshape.spr_no
  14392  912c				   FPULL      SET	0
      0  912f					      pbyte	#194
      1  912f		       a9 c2		      lda	#194
      2  9131					      IF	!FPUSH
      3  9131		       48		      pha
      4  9132					      ENDIF
      0  9132					      pbvar	_dir
      0  9132					      pbyte	_dir
      1  9132		       ad 24 b5 	      lda	_dir
      2  9135					      IF	!FPUSH
      3  9135		       48		      pha
      4  9136					      ENDIF
  14395  9136				   FPUSH      SET	1
      0  9136					      pbyte	#27
      1  9136		       a9 1b		      lda	#27
      2  9138				  -	      IF	!FPUSH
      3  9138				  -	      pha
      4  9138					      ENDIF
  14397  9138				   FPULL      SET	1
      0  9138					      mulb
      1  9138				  -	      IF	!FPULL
      2  9138				  -	      pla
      3  9138					      ENDIF
      4  9138		       85 fc		      sta	R1
      5  913a		       68		      pla
      6  913b		       85 fd		      sta	R2
      7  913d		       a9 00		      lda	#$00
      8  913f		       f0 05		      beq	.enterLoop
      9  9141				   .doAdd
     10  9141		       18		      clc
     11  9142		       65 fc		      adc	R1
     12  9144				   .loop
     13  9144		       06 fc		      asl	R1
     14  9146				   .enterLoop
     15  9146		       46 fd		      lsr	R2
     16  9148		       b0 f7		      bcs	.doAdd
     17  914a		       d0 f8		      bne	.loop
     18  914c				   .end
     19  914c				  -	      IF	!FPUSH
     20  914c				  -	      pha
     21  914c					      ENDIF
      0  914c					      addb
      1  914c				  -	      IF	!FPULL
      2  914c				  -	      pla
      3  914c					      ENDIF
      4  914c		       85 fb		      sta	R0
      5  914e		       68		      pla
      6  914f		       18		      clc
      7  9150		       65 fb		      adc	R0
      8  9152				  -	      IF	!FPUSH
      9  9152				  -	      pha
     10  9152					      ENDIF
  14400  9152				   FPUSH      SET	0
      0  9152					      plb2var	_spr_setshape.shape
      1  9152				  -	      IF	!FPULL
      2  9152				  -	      pla
      3  9152					      ENDIF
      4  9152		       8d 06 b5 	      sta	_spr_setshape.shape
  14402  9155		       20 e0 71 	      jsr	_Pspr_setshape
  14403  9158				   _EI_65557
  14404  9158		       4c a0 92 	      jmp	_EI_46
  14405  915b
  14406  915b
  14407  915b
  14408  915b
  14409  915b
  14410  915b
  14411  915b
  14412  915b				   _EL_46
  14413  915b				   FPULL      SET	0
  14414  915b				   FPUSH      SET	1
      0  915b					      pbyte	#0
      1  915b		       a9 00		      lda	#0
      2  915d				  -	      IF	!FPUSH
      3  915d				  -	      pha
      4  915d					      ENDIF
  14416  915d				   FPULL      SET	1
  14417  915d				   FPUSH      SET	0
      0  915d					      plb2var	_speed
      1  915d				  -	      IF	!FPULL
      2  915d				  -	      pla
      3  915d					      ENDIF
      4  915d		       8d 23 b5 	      sta	_speed
  14419  915d				   FPULL      SET	0
  14420  915d				   FPUSH      SET	1
      0  9160					      opt_pwvar_pword_add	_score, #2
      1  9160
      2  9160
      3  9160
      4  9160		       ad 27 b5 	      lda	_score
      5  9163		       18		      clc
      6  9164		       69 02		      adc	<#2
      7  9166				  -	      IF	!FPUSH
      8  9166				  -	      pha
      9  9166					      ELSE
     10  9166		       aa		      tax
     11  9167					      ENDIF
     12  9167		       ad 28 b5 	      lda	_score+1
     13  916a		       69 00		      adc	>#2
     14  916c				  -	      IF	!FPUSH
     15  916c				  -	      pha
     16  916c					      ELSE
     17  916c		       a8		      tay
     18  916d		       8a		      txa
     19  916e					      ENDIF
  14422  916e				   FPULL      SET	1
  14423  916e				   FPUSH      SET	0
      0  916e					      plw2var	_score
      1  916e				  -	      IF	!FPULL
      2  916e				  -	      pla
      3  916e				  -	      sta	_score+1
      4  916e				  -	      pla
      5  916e				  -	      sta	_score
      6  916e					      ELSE
      7  916e		       8d 27 b5 	      sta	_score
      8  9171		       8c 28 b5 	      sty	_score+1
      9  9174					      ENDIF
      0  9174					      pbyte_pbyte_cmpbeq_cond	_ufo_count, #0, _EI_47, _EL_47
      1  9174
      2  9174
      3  9174		       ad 39 b6 	      lda	_ufo_count
      4  9177		       c9 00		      cmp	#0
      5  9179		       f0 03		      beq	*+5
      6  917b					      IFCONST	_EL_47
      7  917b		       4c 26 92 	      jmp	_EL_47
      8  917e				  -	      ELSE
      9  917e				  -	      jmp	_EI_47
     10  917e					      ENDIF
  14426  917e				   FPULL      SET	0
  14427  917e				   FPUSH      SET	1
      0  917e					      opt_pwvar_pword_add	_score, #5
      1  917e
      2  917e
      3  917e
      4  917e		       ad 27 b5 	      lda	_score
      5  9181		       18		      clc
      6  9182		       69 05		      adc	<#5
      7  9184				  -	      IF	!FPUSH
      8  9184				  -	      pha
      9  9184					      ELSE
     10  9184		       aa		      tax
     11  9185					      ENDIF
     12  9185		       ad 28 b5 	      lda	_score+1
     13  9188		       69 00		      adc	>#5
     14  918a				  -	      IF	!FPUSH
     15  918a				  -	      pha
     16  918a					      ELSE
     17  918a		       a8		      tay
     18  918b		       8a		      txa
     19  918c					      ENDIF
  14429  918c				   FPULL      SET	1
  14430  918c				   FPUSH      SET	0
      0  918c					      plw2var	_score
      1  918c				  -	      IF	!FPULL
      2  918c				  -	      pla
      3  918c				  -	      sta	_score+1
      4  918c				  -	      pla
      5  918c				  -	      sta	_score
      6  918c					      ELSE
      7  918c		       8d 27 b5 	      sta	_score
      8  918f		       8c 28 b5 	      sty	_score+1
      9  9192					      ENDIF
      0  9192					      pbyte_pbyte_cmpbeq_cond	_fleet_at_start, _fleet, _EI_65558, _EL_65558
      1  9192
      2  9192
      3  9192		       ad 38 b6 	      lda	_fleet_at_start
      4  9195		       cd 37 b6 	      cmp	_fleet
      5  9198		       f0 03		      beq	*+5
      6  919a				  -	      IFCONST	_EL_65558
      7  919a				  -	      jmp	_EL_65558
      8  919a					      ELSE
      9  919a		       4c b1 91 	      jmp	_EI_65558
     10  919d					      ENDIF
  14433  919d				   FPULL      SET	0
  14434  919d				   FPUSH      SET	1
      0  919d					      opt_pwvar_pword_add	_score, #5
      1  919d
      2  919d
      3  919d
      4  919d		       ad 27 b5 	      lda	_score
      5  91a0		       18		      clc
      6  91a1		       69 05		      adc	<#5
      7  91a3				  -	      IF	!FPUSH
      8  91a3				  -	      pha
      9  91a3					      ELSE
     10  91a3		       aa		      tax
     11  91a4					      ENDIF
     12  91a4		       ad 28 b5 	      lda	_score+1
     13  91a7		       69 00		      adc	>#5
     14  91a9				  -	      IF	!FPUSH
     15  91a9				  -	      pha
     16  91a9					      ELSE
     17  91a9		       a8		      tay
     18  91aa		       8a		      txa
     19  91ab					      ENDIF
  14436  91ab				   FPULL      SET	1
  14437  91ab				   FPUSH      SET	0
      0  91ab					      plw2var	_score
      1  91ab				  -	      IF	!FPULL
      2  91ab				  -	      pla
      3  91ab				  -	      sta	_score+1
      4  91ab				  -	      pla
      5  91ab				  -	      sta	_score
      6  91ab					      ELSE
      7  91ab		       8d 27 b5 	      sta	_score
      8  91ae		       8c 28 b5 	      sty	_score+1
      9  91b1					      ENDIF
  14439  91b1
  14440  91b1
  14441  91b1
  14442  91b1
  14443  91b1
  14444  91b1
  14445  91b1				   _EI_65558
  14446  91b1				   FPULL      SET	0
      0  91b1					      paddr	_S4
      0  91b1					      pword	_S4
      1  91b1					      IF	!FPUSH
      2  91b1		       a9 20		      lda	#<_S4
      3  91b3		       48		      pha
      4  91b4		       a9 ae		      lda	#>_S4
      5  91b6		       48		      pha
      6  91b7				  -	      ELSE
      7  91b7				  -	      lda	#<_S4
      8  91b7				  -	      ldy	#>_S4
      9  91b7					      ENDIF
      0  91b7					      pbyte	#12
      1  91b7		       a9 0c		      lda	#12
      2  91b9					      IF	!FPUSH
      3  91b9		       48		      pha
      4  91ba					      ENDIF
      0  91ba					      btow
      1  91ba		       a9 00		      lda	#$00
      2  91bc		       48		      pha
  14450  91bc				   FPUSH      SET	1
      0  91bd					      pword	#40
      1  91bd				  -	      IF	!FPUSH
      2  91bd				  -	      lda	#<#40
      3  91bd				  -	      pha
      4  91bd				  -	      lda	#>#40
      5  91bd				  -	      pha
      6  91bd					      ELSE
      7  91bd		       a9 28		      lda	#<#40
      8  91bf		       a0 00		      ldy	#>#40
      9  91c1					      ENDIF
  14452  91c1				   FPULL      SET	1
  14453  91c1				   FPUSH      SET	0
      0  91c1					      mulw
      1  91c1				  -	      IF	!FPULL
      2  91c1				  -	      pla
      3  91c1				  -	      sta	R1
      4  91c1				  -	      pla
      5  91c1				  -	      sta	R0
      6  91c1					      ELSE
      7  91c1		       85 fb		      sta	R0
      8  91c3		       84 fc		      sty	R1
      9  91c5					      ENDIF
     10  91c5		       68		      pla
     11  91c6		       85 fe		      sta	R3
     12  91c8		       68		      pla
     13  91c9		       85 fd		      sta	R2
     14  91cb		       20 0d 08 	      jsr	NUCL_SMUL16
     15  91ce					      IF	!FPUSH
     16  91ce		       a5 fb		      lda	R0
     17  91d0		       48		      pha
     18  91d1		       a5 fc		      lda	R1
     19  91d3		       48		      pha
     20  91d4				  -	      ELSE
     21  91d4				  -	      lda	R0
     22  91d4				  -	      ldy	R1
     23  91d4					      ENDIF
  14455  91d4				   FPULL      SET	0
      0  91d4					      pbyte	#14
      1  91d4		       a9 0e		      lda	#14
      2  91d6					      IF	!FPUSH
      3  91d6		       48		      pha
      4  91d7					      ENDIF
      0  91d7					      btow
      1  91d7		       a9 00		      lda	#$00
      2  91d9		       48		      pha
      0  91da					      addw
      1  91da		       ba		      tsx
      2  91db		       bd 02 01 	      lda.wx	stack+2
      3  91de		       18		      clc
      4  91df		       7d 04 01 	      adc.wx	stack+4
      5  91e2		       9d 04 01 	      sta.wx	stack+4
      6  91e5		       68		      pla
      7  91e6		       7d 03 01 	      adc.wx	stack+3
      8  91e9		       9d 03 01 	      sta.wx	stack+3
      9  91ec		       68		      pla
      0  91ed					      pword	#1024
      1  91ed					      IF	!FPUSH
      2  91ed		       a9 00		      lda	#<#1024
      3  91ef		       48		      pha
      4  91f0		       a9 04		      lda	#>#1024
      5  91f2		       48		      pha
      6  91f3				  -	      ELSE
      7  91f3				  -	      lda	#<#1024
      8  91f3				  -	      ldy	#>#1024
      9  91f3					      ENDIF
      0  91f3					      addw
      1  91f3		       ba		      tsx
      2  91f4		       bd 02 01 	      lda.wx	stack+2
      3  91f7		       18		      clc
      4  91f8		       7d 04 01 	      adc.wx	stack+4
      5  91fb		       9d 04 01 	      sta.wx	stack+4
      6  91fe		       68		      pla
      7  91ff		       7d 03 01 	      adc.wx	stack+3
      8  9202		       9d 03 01 	      sta.wx	stack+3
      9  9205		       68		      pla
      0  9206					      textat
      1  9206					      IF	!FPULL
      2  9206		       68		      pla
      3  9207		       85 fe		      sta	R3
      4  9209		       68		      pla
      5  920a		       85 fd		      sta	R2
      6  920c				  -	      ELSE
      7  920c				  -	      sta	R2
      8  920c				  -	      sty	R3
      9  920c					      ENDIF
     10  920c		       68		      pla
     11  920d		       85 fc		      sta	R1
     12  920f		       68		      pla
     13  9210		       85 fb		      sta	R0
     14  9212		       a0 00		      ldy	#$00
     15  9214				   .loop
     16  9214		       b1 fb		      lda	(R0),y
     17  9216		       f0 06		      beq	.end
     18  9218		       91 fd		      sta	(R2),y
     19  921a		       c8		      iny
     20  921b		       4c 14 92 	      jmp	.loop
     21  921e				   .end
  14462  921e				   FPUSH      SET	1
      0  921e					      pbyte	#1
      1  921e		       a9 01		      lda	#1
      2  9220				  -	      IF	!FPUSH
      3  9220				  -	      pha
      4  9220					      ENDIF
  14464  9220				   FPULL      SET	1
  14465  9220				   FPUSH      SET	0
      0  9220					      plb2var	_level_done
      1  9220				  -	      IF	!FPULL
      2  9220				  -	      pla
      3  9220					      ENDIF
      4  9220		       8d 3c b6 	      sta	_level_done
  14467  9223		       4c a0 92 	      jmp	_EI_47
  14468  9226				   _EL_47
  14469  9226				   FPULL      SET	0
  14470  9226				   FPUSH      SET	1
      0  9226					      pbyte	#1
      1  9226		       a9 01		      lda	#1
      2  9228				  -	      IF	!FPUSH
      3  9228				  -	      pha
      4  9228					      ENDIF
  14472  9228				   FPULL      SET	1
  14473  9228				   FPUSH      SET	0
      0  9228					      plb2var	_aircraft_mode
      1  9228				  -	      IF	!FPULL
      2  9228				  -	      pla
      3  9228					      ENDIF
      4  9228		       8d 35 b6 	      sta	_aircraft_mode
  14475  9228				   FPULL      SET	0
  14476  9228				   FPUSH      SET	1
      0  922b					      pbyte	#1
      1  922b		       a9 01		      lda	#1
      2  922d				  -	      IF	!FPUSH
      3  922d				  -	      pha
      4  922d					      ENDIF
  14478  922d				   FPULL      SET	1
  14479  922d				   FPUSH      SET	0
      0  922d					      plb2var	_sfx_start.effect_no
      1  922d				  -	      IF	!FPULL
      2  922d				  -	      pla
      3  922d					      ENDIF
      4  922d		       8d 21 b5 	      sta	_sfx_start.effect_no
  14481  9230		       20 48 75 	      jsr	_Psfx_start
  14482  9230				   FPULL      SET	0
      0  9233					      paddr	_S5
      0  9233					      pword	_S5
      1  9233					      IF	!FPUSH
      2  9233		       a9 2f		      lda	#<_S5
      3  9235		       48		      pha
      4  9236		       a9 ae		      lda	#>_S5
      5  9238		       48		      pha
      6  9239				  -	      ELSE
      7  9239				  -	      lda	#<_S5
      8  9239				  -	      ldy	#>_S5
      9  9239					      ENDIF
      0  9239					      pbyte	#12
      1  9239		       a9 0c		      lda	#12
      2  923b					      IF	!FPUSH
      3  923b		       48		      pha
      4  923c					      ENDIF
      0  923c					      btow
      1  923c		       a9 00		      lda	#$00
      2  923e		       48		      pha
  14486  923e				   FPUSH      SET	1
      0  923f					      pword	#40
      1  923f				  -	      IF	!FPUSH
      2  923f				  -	      lda	#<#40
      3  923f				  -	      pha
      4  923f				  -	      lda	#>#40
      5  923f				  -	      pha
      6  923f					      ELSE
      7  923f		       a9 28		      lda	#<#40
      8  9241		       a0 00		      ldy	#>#40
      9  9243					      ENDIF
  14488  9243				   FPULL      SET	1
  14489  9243				   FPUSH      SET	0
      0  9243					      mulw
      1  9243				  -	      IF	!FPULL
      2  9243				  -	      pla
      3  9243				  -	      sta	R1
      4  9243				  -	      pla
      5  9243				  -	      sta	R0
      6  9243					      ELSE
      7  9243		       85 fb		      sta	R0
      8  9245		       84 fc		      sty	R1
      9  9247					      ENDIF
     10  9247		       68		      pla
     11  9248		       85 fe		      sta	R3
     12  924a		       68		      pla
     13  924b		       85 fd		      sta	R2
     14  924d		       20 0d 08 	      jsr	NUCL_SMUL16
     15  9250					      IF	!FPUSH
     16  9250		       a5 fb		      lda	R0
     17  9252		       48		      pha
     18  9253		       a5 fc		      lda	R1
     19  9255		       48		      pha
     20  9256				  -	      ELSE
     21  9256				  -	      lda	R0
     22  9256				  -	      ldy	R1
     23  9256					      ENDIF
  14491  9256				   FPULL      SET	0
      0  9256					      pbyte	#14
      1  9256		       a9 0e		      lda	#14
      2  9258					      IF	!FPUSH
      3  9258		       48		      pha
      4  9259					      ENDIF
      0  9259					      btow
      1  9259		       a9 00		      lda	#$00
      2  925b		       48		      pha
      0  925c					      addw
      1  925c		       ba		      tsx
      2  925d		       bd 02 01 	      lda.wx	stack+2
      3  9260		       18		      clc
      4  9261		       7d 04 01 	      adc.wx	stack+4
      5  9264		       9d 04 01 	      sta.wx	stack+4
      6  9267		       68		      pla
      7  9268		       7d 03 01 	      adc.wx	stack+3
      8  926b		       9d 03 01 	      sta.wx	stack+3
      9  926e		       68		      pla
      0  926f					      pword	#1024
      1  926f					      IF	!FPUSH
      2  926f		       a9 00		      lda	#<#1024
      3  9271		       48		      pha
      4  9272		       a9 04		      lda	#>#1024
      5  9274		       48		      pha
      6  9275				  -	      ELSE
      7  9275				  -	      lda	#<#1024
      8  9275				  -	      ldy	#>#1024
      9  9275					      ENDIF
      0  9275					      addw
      1  9275		       ba		      tsx
      2  9276		       bd 02 01 	      lda.wx	stack+2
      3  9279		       18		      clc
      4  927a		       7d 04 01 	      adc.wx	stack+4
      5  927d		       9d 04 01 	      sta.wx	stack+4
      6  9280		       68		      pla
      7  9281		       7d 03 01 	      adc.wx	stack+3
      8  9284		       9d 03 01 	      sta.wx	stack+3
      9  9287		       68		      pla
      0  9288					      textat
      1  9288					      IF	!FPULL
      2  9288		       68		      pla
      3  9289		       85 fe		      sta	R3
      4  928b		       68		      pla
      5  928c		       85 fd		      sta	R2
      6  928e				  -	      ELSE
      7  928e				  -	      sta	R2
      8  928e				  -	      sty	R3
      9  928e					      ENDIF
     10  928e		       68		      pla
     11  928f		       85 fc		      sta	R1
     12  9291		       68		      pla
     13  9292		       85 fb		      sta	R0
     14  9294		       a0 00		      ldy	#$00
     15  9296				   .loop
     16  9296		       b1 fb		      lda	(R0),y
     17  9298		       f0 06		      beq	.end
     18  929a		       91 fd		      sta	(R2),y
     19  929c		       c8		      iny
     20  929d		       4c 96 92 	      jmp	.loop
     21  92a0				   .end
  14498  92a0				   _EI_47
  14499  92a0
  14500  92a0
  14501  92a0
  14502  92a0
  14503  92a0
  14504  92a0
  14505  92a0
  14506  92a0				   _EI_46
  14507  92a0		       60		      rts
  14508  92a1
  14509  92a1
  14510  92a1
  14511  92a1
  14512  92a1
  14513  92a1
  14514  92a1
  14515  92a1				   _Lactions.nosediving
      0  92a1					      opt_pbyte_pbyte_and	_frame_count, #3
      1  92a1
      2  92a1
      3  92a1
      4  92a1
      5  92a1
      6  92a1		       ad 25 b5 	      lda	_frame_count
      7  92a4		       29 03		      and	#3
      8  92a6					      IF	!FPUSH
      9  92a6		       48		      pha
     10  92a7					      ENDIF
  14517  92a7				   FPUSH      SET	1
      0  92a7					      pbyte	#1
      1  92a7		       a9 01		      lda	#1
      2  92a9				  -	      IF	!FPUSH
      3  92a9				  -	      pha
      4  92a9					      ENDIF
  14519  92a9				   FPULL      SET	1
      0  92a9					      cmpbeq
      1  92a9				  -	      IF	!FPULL
      2  92a9				  -	      pla
      3  92a9					      ENDIF
      4  92a9		       85 fc		      sta	R1
      5  92ab		       68		      pla
      6  92ac		       c5 fc		      cmp	R1
      7  92ae		       f0 05		      beq	.pht
      0  92b0					      pzero
      1  92b0		       a9 00		      lda	#$00
      2  92b2				  -	      IF	!FPUSH
      3  92b2				  -	      pha
      4  92b2					      ENDIF
      9  92b2				  -	      IF	!FPUSH
     10  92b2				  -	      jmp	*+6
     11  92b2					      ELSE
     12  92b2		       4c b7 92 	      jmp	*+5
     13  92b5					      ENDIF
      0  92b5				   .pht       pone
      1  92b5		       a9 01		      lda	#$01
      2  92b7				  -	      IF	!FPUSH
      3  92b7				  -	      pha
      4  92b7					      ENDIF
  14521  92b7				   FPUSH      SET	0
      0  92b7					      cond_stmt	_EI_48, _EL_48
      1  92b7				  -	      IF	!FPULL
      2  92b7				  -	      pla
      3  92b7					      ENDIF
      4  92b7		       d0 03		      bne	*+5
      5  92b9				  -	      IFCONST	_EL_48
      6  92b9				  -	      jmp	_EL_48
      7  92b9					      ELSE
      8  92b9		       4c 63 93 	      jmp	_EI_48
      9  92bc					      ENDIF
  14523  92bc				   FPULL      SET	0
  14524  92bc				   FPUSH      SET	1
      0  92bc					      pbyte	#7
      1  92bc		       a9 07		      lda	#7
      2  92be				  -	      IF	!FPUSH
      3  92be				  -	      pha
      4  92be					      ENDIF
  14526  92be				   FPULL      SET	1
  14527  92be				   FPUSH      SET	0
      0  92be					      plb2var	_spr_setshape.spr_no
      1  92be				  -	      IF	!FPULL
      2  92be				  -	      pla
      3  92be					      ENDIF
      4  92be		       8d 05 b5 	      sta	_spr_setshape.spr_no
  14529  92be				   FPULL      SET	0
  14530  92be				   FPUSH      SET	1
      0  92c1					      pbvar	_turn_phase
      0  92c1					      pbyte	_turn_phase
      1  92c1		       ad 2d b5 	      lda	_turn_phase
      2  92c4				  -	      IF	!FPUSH
      3  92c4				  -	      pha
      4  92c4					      ENDIF
  14532  92c4				   FPULL      SET	1
  14533  92c4				   FPUSH      SET	0
      0  92c4					      plb2var	_spr_setshape.shape
      1  92c4				  -	      IF	!FPULL
      2  92c4				  -	      pla
      3  92c4					      ENDIF
      4  92c4		       8d 06 b5 	      sta	_spr_setshape.shape
  14535  92c7		       20 e0 71 	      jsr	_Pspr_setshape
      0  92ca					      incb	_turn_phase
      1  92ca		       ee 2d b5 	      inc	_turn_phase
      0  92cd					      incb	_turn_phase_count
      1  92cd		       ee 2e b5 	      inc	_turn_phase_count
      0  92d0					      pbyte_pbyte_cmpbeq_cond	_turn_phase_count, #6, _EI_49, _EL_49
      1  92d0
      2  92d0
      3  92d0		       ad 2e b5 	      lda	_turn_phase_count
      4  92d3		       c9 06		      cmp	#6
      5  92d5		       f0 03		      beq	*+5
      6  92d7				  -	      IFCONST	_EL_49
      7  92d7				  -	      jmp	_EL_49
      8  92d7					      ELSE
      9  92d7		       4c e7 92 	      jmp	_EI_49
     10  92da					      ENDIF
  14539  92da				   FPULL      SET	0
  14540  92da				   FPUSH      SET	1
      0  92da					      pbyte	#7
      1  92da		       a9 07		      lda	#7
      2  92dc				  -	      IF	!FPUSH
      3  92dc				  -	      pha
      4  92dc					      ENDIF
  14542  92dc				   FPULL      SET	1
  14543  92dc				   FPUSH      SET	0
      0  92dc					      plb2var	_spr_disable.spr_no
      1  92dc				  -	      IF	!FPULL
      2  92dc				  -	      pla
      3  92dc					      ENDIF
      4  92dc		       8d fb b4 	      sta	_spr_disable.spr_no
  14545  92df		       20 7b 71 	      jsr	_Pspr_disable
  14546  92df				   FPULL      SET	0
  14547  92df				   FPUSH      SET	1
      0  92e2					      pbyte	#0
      1  92e2		       a9 00		      lda	#0
      2  92e4				  -	      IF	!FPUSH
      3  92e4				  -	      pha
      4  92e4					      ENDIF
  14549  92e4				   FPULL      SET	1
  14550  92e4				   FPUSH      SET	0
      0  92e4					      plb2var	_speed
      1  92e4				  -	      IF	!FPULL
      2  92e4				  -	      pla
      3  92e4					      ENDIF
      4  92e4		       8d 23 b5 	      sta	_speed
  14552  92e7				   _EI_49
      0  92e7					      pbyte_pbyte_cmpbeq_cond	_turn_phase_count, #24, _EI_50, _EL_50
      1  92e7
      2  92e7
      3  92e7		       ad 2e b5 	      lda	_turn_phase_count
      4  92ea		       c9 18		      cmp	#24
      5  92ec		       f0 03		      beq	*+5
      6  92ee				  -	      IFCONST	_EL_50
      7  92ee				  -	      jmp	_EL_50
      8  92ee					      ELSE
      9  92ee		       4c 63 93 	      jmp	_EI_50
     10  92f1					      ENDIF
  14554  92f1				   FPULL      SET	0
  14555  92f1				   FPUSH      SET	1
      0  92f1					      pbyte	#2
      1  92f1		       a9 02		      lda	#2
      2  92f3				  -	      IF	!FPUSH
      3  92f3				  -	      pha
      4  92f3					      ENDIF
  14557  92f3				   FPULL      SET	1
  14558  92f3				   FPUSH      SET	0
      0  92f3					      plb2var	_level_done
      1  92f3				  -	      IF	!FPULL
      2  92f3				  -	      pla
      3  92f3					      ENDIF
      4  92f3		       8d 3c b6 	      sta	_level_done
  14560  92f3				   FPULL      SET	0
      0  92f6					      paddr	_S6
      0  92f6					      pword	_S6
      1  92f6					      IF	!FPUSH
      2  92f6		       a9 3e		      lda	#<_S6
      3  92f8		       48		      pha
      4  92f9		       a9 ae		      lda	#>_S6
      5  92fb		       48		      pha
      6  92fc				  -	      ELSE
      7  92fc				  -	      lda	#<_S6
      8  92fc				  -	      ldy	#>_S6
      9  92fc					      ENDIF
      0  92fc					      pbyte	#12
      1  92fc		       a9 0c		      lda	#12
      2  92fe					      IF	!FPUSH
      3  92fe		       48		      pha
      4  92ff					      ENDIF
      0  92ff					      btow
      1  92ff		       a9 00		      lda	#$00
      2  9301		       48		      pha
  14564  9301				   FPUSH      SET	1
      0  9302					      pword	#40
      1  9302				  -	      IF	!FPUSH
      2  9302				  -	      lda	#<#40
      3  9302				  -	      pha
      4  9302				  -	      lda	#>#40
      5  9302				  -	      pha
      6  9302					      ELSE
      7  9302		       a9 28		      lda	#<#40
      8  9304		       a0 00		      ldy	#>#40
      9  9306					      ENDIF
  14566  9306				   FPULL      SET	1
  14567  9306				   FPUSH      SET	0
      0  9306					      mulw
      1  9306				  -	      IF	!FPULL
      2  9306				  -	      pla
      3  9306				  -	      sta	R1
      4  9306				  -	      pla
      5  9306				  -	      sta	R0
      6  9306					      ELSE
      7  9306		       85 fb		      sta	R0
      8  9308		       84 fc		      sty	R1
      9  930a					      ENDIF
     10  930a		       68		      pla
     11  930b		       85 fe		      sta	R3
     12  930d		       68		      pla
     13  930e		       85 fd		      sta	R2
     14  9310		       20 0d 08 	      jsr	NUCL_SMUL16
     15  9313					      IF	!FPUSH
     16  9313		       a5 fb		      lda	R0
     17  9315		       48		      pha
     18  9316		       a5 fc		      lda	R1
     19  9318		       48		      pha
     20  9319				  -	      ELSE
     21  9319				  -	      lda	R0
     22  9319				  -	      ldy	R1
     23  9319					      ENDIF
  14569  9319				   FPULL      SET	0
      0  9319					      pbyte	#12
      1  9319		       a9 0c		      lda	#12
      2  931b					      IF	!FPUSH
      3  931b		       48		      pha
      4  931c					      ENDIF
      0  931c					      btow
      1  931c		       a9 00		      lda	#$00
      2  931e		       48		      pha
      0  931f					      addw
      1  931f		       ba		      tsx
      2  9320		       bd 02 01 	      lda.wx	stack+2
      3  9323		       18		      clc
      4  9324		       7d 04 01 	      adc.wx	stack+4
      5  9327		       9d 04 01 	      sta.wx	stack+4
      6  932a		       68		      pla
      7  932b		       7d 03 01 	      adc.wx	stack+3
      8  932e		       9d 03 01 	      sta.wx	stack+3
      9  9331		       68		      pla
      0  9332					      pword	#1024
      1  9332					      IF	!FPUSH
      2  9332		       a9 00		      lda	#<#1024
      3  9334		       48		      pha
      4  9335		       a9 04		      lda	#>#1024
      5  9337		       48		      pha
      6  9338				  -	      ELSE
      7  9338				  -	      lda	#<#1024
      8  9338				  -	      ldy	#>#1024
      9  9338					      ENDIF
      0  9338					      addw
      1  9338		       ba		      tsx
      2  9339		       bd 02 01 	      lda.wx	stack+2
      3  933c		       18		      clc
      4  933d		       7d 04 01 	      adc.wx	stack+4
      5  9340		       9d 04 01 	      sta.wx	stack+4
      6  9343		       68		      pla
      7  9344		       7d 03 01 	      adc.wx	stack+3
      8  9347		       9d 03 01 	      sta.wx	stack+3
      9  934a		       68		      pla
      0  934b					      textat
      1  934b					      IF	!FPULL
      2  934b		       68		      pla
      3  934c		       85 fe		      sta	R3
      4  934e		       68		      pla
      5  934f		       85 fd		      sta	R2
      6  9351				  -	      ELSE
      7  9351				  -	      sta	R2
      8  9351				  -	      sty	R3
      9  9351					      ENDIF
     10  9351		       68		      pla
     11  9352		       85 fc		      sta	R1
     12  9354		       68		      pla
     13  9355		       85 fb		      sta	R0
     14  9357		       a0 00		      ldy	#$00
     15  9359				   .loop
     16  9359		       b1 fb		      lda	(R0),y
     17  935b		       f0 06		      beq	.end
     18  935d		       91 fd		      sta	(R2),y
     19  935f		       c8		      iny
     20  9360		       4c 59 93 	      jmp	.loop
     21  9363				   .end
  14576  9363				   _EI_50
  14577  9363
  14578  9363
  14579  9363
  14580  9363
  14581  9363
  14582  9363
  14583  9363
  14584  9363				   _EI_48
  14585  9363				   FPUSH      SET	1
      0  9363					      opt_pwvar_pword_add	_aircraft_altitude, #4
      1  9363
      2  9363
      3  9363
      4  9363		       ad 2f b5 	      lda	_aircraft_altitude
      5  9366		       18		      clc
      6  9367		       69 04		      adc	<#4
      7  9369				  -	      IF	!FPUSH
      8  9369				  -	      pha
      9  9369					      ELSE
     10  9369		       aa		      tax
     11  936a					      ENDIF
     12  936a		       ad 30 b5 	      lda	_aircraft_altitude+1
     13  936d		       69 00		      adc	>#4
     14  936f				  -	      IF	!FPUSH
     15  936f				  -	      pha
     16  936f					      ELSE
     17  936f		       a8		      tay
     18  9370		       8a		      txa
     19  9371					      ENDIF
  14587  9371				   FPULL      SET	1
  14588  9371				   FPUSH      SET	0
      0  9371					      plw2var	_aircraft_altitude
      1  9371				  -	      IF	!FPULL
      2  9371				  -	      pla
      3  9371				  -	      sta	_aircraft_altitude+1
      4  9371				  -	      pla
      5  9371				  -	      sta	_aircraft_altitude
      6  9371					      ELSE
      7  9371		       8d 2f b5 	      sta	_aircraft_altitude
      8  9374		       8c 30 b5 	      sty	_aircraft_altitude+1
      9  9377					      ENDIF
  14590  9377		       60		      rts
  14591  9378
  14592  9378
  14593  9378
  14594  9378
  14595  9378
  14596  9378
  14597  9378
  14598  9378				   _Lactions.scrolling_to_ufo
      0  9378					      pbyte_pbyte_cmpblt_cond	_speed, #128, _EI_65559, _EL_65559
      1  9378
      2  9378
      3  9378		       ad 23 b5 	      lda	_speed
      4  937b		       c9 80		      cmp	#128
      5  937d		       90 03		      bcc	*+5
      6  937f				  -	      IFCONST	_EL_65559
      7  937f				  -	      jmp	_EL_65559
      8  937f					      ELSE
      9  937f		       4c 85 93 	      jmp	_EI_65559
     10  9382					      ENDIF
      0  9382					      incb	_speed
      1  9382		       ee 23 b5 	      inc	_speed
  14601  9385
  14602  9385
  14603  9385
  14604  9385
  14605  9385
  14606  9385
  14607  9385
  14608  9385				   _EI_65559
  14609  9385				   FPULL      SET	0
      0  9385					      opt_pwvar_pwvar_sub	_aircraft_xpos, _sav_ufo_xpos
      1  9385
      2  9385
      3  9385		       ad 31 b5 	      lda	_aircraft_xpos
      4  9388		       38		      sec
      5  9389		       ed 3f b6 	      sbc	_sav_ufo_xpos
      6  938c					      IF	!FPUSH
      7  938c		       48		      pha
      8  938d				  -	      ELSE
      9  938d				  -	      tax
     10  938d					      ENDIF
     11  938d		       ad 32 b5 	      lda	_aircraft_xpos+1
     12  9390		       ed 40 b6 	      sbc	_sav_ufo_xpos+1
     13  9393					      IF	!FPUSH
     14  9393		       48		      pha
     15  9394				  -	      ELSE
     16  9394				  -	      tay
     17  9394				  -	      txa
     18  9394					      ENDIF
      0  9394					      absw
      1  9394		       ba		      tsx
      2  9395		       bd 01 01 	      lda.wx	stack+1
      3  9398		       10 15		      bpl	.skip
      4  939a		       49 ff		      eor	#$ff
      5  939c		       9d 01 01 	      sta.wx	stack+1
      6  939f		       bd 02 01 	      lda.wx	stack+2
      7  93a2		       49 ff		      eor	#$ff
      8  93a4		       18		      clc
      9  93a5		       69 01		      adc	#$01
     10  93a7		       9d 02 01 	      sta.wx	stack+2
     11  93aa		       d0 03		      bne	.skip
     12  93ac		       fe 01 01 	      inc.wx	stack+1
     13  93af				   .skip
      0  93af					      pbyte	#8
      1  93af		       a9 08		      lda	#8
      2  93b1					      IF	!FPUSH
      3  93b1		       48		      pha
      4  93b2					      ENDIF
      0  93b2					      btow
      1  93b2		       a9 00		      lda	#$00
      2  93b4		       48		      pha
  14614  93b4				   FPUSH      SET	1
      0  93b5					      cmpwlt
      1  93b5		       ba		      tsx
      2  93b6		       bd 04 01 	      lda.wx	stack+4
      3  93b9		       dd 02 01 	      cmp.wx	stack+2
      4  93bc		       bd 03 01 	      lda.wx	stack+3
      5  93bf		       fd 01 01 	      sbc.wx	stack+1
      6  93c2		       10 0a		      bpl	.phf
      7  93c4		       e8		      inx
      8  93c5		       e8		      inx
      9  93c6		       e8		      inx
     10  93c7		       e8		      inx
     11  93c8		       9a		      txs
      0  93c9					      pone
      1  93c9		       a9 01		      lda	#$01
      2  93cb				  -	      IF	!FPUSH
      3  93cb				  -	      pha
      4  93cb					      ENDIF
     13  93cb				  -	      IF	!FPUSH
     14  93cb				  -	      jmp	*+11
     15  93cb					      ELSE
     16  93cb		       4c d5 93 	      jmp	*+10
     17  93ce					      ENDIF
     18  93ce		       e8	   .phf       inx
     19  93cf		       e8		      inx
     20  93d0		       e8		      inx
     21  93d1		       e8		      inx
     22  93d2		       9a		      txs
      0  93d3					      pzero
      1  93d3		       a9 00		      lda	#$00
      2  93d5				  -	      IF	!FPUSH
      3  93d5				  -	      pha
      4  93d5					      ENDIF
  14616  93d5				   FPULL      SET	1
  14617  93d5				   FPUSH      SET	0
      0  93d5					      cond_stmt	_EI_65560, _EL_65560
      1  93d5				  -	      IF	!FPULL
      2  93d5				  -	      pla
      3  93d5					      ENDIF
      4  93d5		       d0 03		      bne	*+5
      5  93d7				  -	      IFCONST	_EL_65560
      6  93d7				  -	      jmp	_EL_65560
      7  93d7					      ELSE
      8  93d7		       4c df 93 	      jmp	_EI_65560
      9  93da					      ENDIF
  14619  93da				   FPULL      SET	0
  14620  93da				   FPUSH      SET	1
      0  93da					      pbyte	#3
      1  93da		       a9 03		      lda	#3
      2  93dc				  -	      IF	!FPUSH
      3  93dc				  -	      pha
      4  93dc					      ENDIF
  14622  93dc				   FPULL      SET	1
  14623  93dc				   FPUSH      SET	0
      0  93dc					      plb2var	_level_done
      1  93dc				  -	      IF	!FPULL
      2  93dc				  -	      pla
      3  93dc					      ENDIF
      4  93dc		       8d 3c b6 	      sta	_level_done
  14625  93df				   _EI_65560
  14626  93df		       60		      rts
  14627  93e0
  14628  93e0
  14629  93e0
  14630  93e0
  14631  93e0
  14632  93e0
  14633  93e0
  14634  93e0				   _Lactions.draw_fuel
  14635  93e0				   FPULL      SET	0
  14636  93e0				   FPUSH      SET	1
      0  93e0					      pbvar	_fuel
      0  93e0					      pbyte	_fuel
      1  93e0		       ad 36 b6 	      lda	_fuel
      2  93e3				  -	      IF	!FPUSH
      3  93e3				  -	      pha
      4  93e3					      ENDIF
  14638  93e3				   FPULL      SET	1
      0  93e3					      rshiftbc	2
      1  93e3				  -	      IF	!FPULL
      2  93e3				  -	      pla
      3  93e3					      ENDIF
      4  93e3					      REPEAT	2
      5  93e3		       4a		      lsr
      4  93e3					      REPEND
      5  93e4		       4a		      lsr
      6  93e5					      REPEND
      7  93e5				  -	      IF	!FPUSH
      8  93e5				  -	      pha
      9  93e5					      ENDIF
  14640  93e5				   FPUSH      SET	0
      0  93e5					      plb2var	_actions.offset
      1  93e5				  -	      IF	!FPULL
      2  93e5				  -	      pla
      3  93e5					      ENDIF
      4  93e5		       8d 6f b6 	      sta	_actions.offset
      0  93e8					      pbyte_pbyte_cmpbeq_cond	_actions.offset, #0, _EI_65561, _EL_65561
      1  93e8
      2  93e8
      3  93e8		       ad 6f b6 	      lda	_actions.offset
      4  93eb		       c9 00		      cmp	#0
      5  93ed		       f0 03		      beq	*+5
      6  93ef				  -	      IFCONST	_EL_65561
      7  93ef				  -	      jmp	_EL_65561
      8  93ef					      ELSE
      9  93ef		       4c f3 93 	      jmp	_EI_65561
     10  93f2					      ENDIF
  14643  93f2		       60		      rts
  14644  93f3
  14645  93f3
  14646  93f3
  14647  93f3
  14648  93f3
  14649  93f3
  14650  93f3				   _EI_65561
  14651  93f3				   FPULL      SET	0
      0  93f3					      pbyte	#160
      1  93f3		       a9 a0		      lda	#160
      2  93f5					      IF	!FPUSH
      3  93f5		       48		      pha
      4  93f6					      ENDIF
      0  93f6					      pword	#1065
      1  93f6					      IF	!FPUSH
      2  93f6		       a9 29		      lda	#<#1065
      3  93f8		       48		      pha
      4  93f9		       a9 04		      lda	#>#1065
      5  93fb		       48		      pha
      6  93fc				  -	      ELSE
      7  93fc				  -	      lda	#<#1065
      8  93fc				  -	      ldy	#>#1065
      9  93fc					      ENDIF
      0  93fc					      pbvar	_actions.offset
      0  93fc					      pbyte	_actions.offset
      1  93fc		       ad 6f b6 	      lda	_actions.offset
      2  93ff					      IF	!FPUSH
      3  93ff		       48		      pha
      4  9400					      ENDIF
      0  9400					      btow
      1  9400		       a9 00		      lda	#$00
      2  9402		       48		      pha
      0  9403					      addw
      1  9403		       ba		      tsx
      2  9404		       bd 02 01 	      lda.wx	stack+2
      3  9407		       18		      clc
      4  9408		       7d 04 01 	      adc.wx	stack+4
      5  940b		       9d 04 01 	      sta.wx	stack+4
      6  940e		       68		      pla
      7  940f		       7d 03 01 	      adc.wx	stack+3
      8  9412		       9d 03 01 	      sta.wx	stack+3
      9  9415		       68		      pla
      0  9416					      pokeb
      1  9416					      IF	!FPULL
      2  9416		       68		      pla
      3  9417		       8d 21 94 	      sta	.selfmod_code+2
      4  941a		       68		      pla
      5  941b		       8d 20 94 	      sta	.selfmod_code+1
      6  941e				  -	      ELSE
      7  941e				  -	      sta	.selfmod_code+1
      8  941e				  -	      sty	.selfmod_code+2
      9  941e					      ENDIF
     10  941e		       68		      pla
     11  941f				   .selfmod_code
     12  941f		       8d 00 00 	      sta.w	$0000
  14658  9422		       60		      rts
  14659  9423				   _Lactions.erase_fuel
  14660  9423				   FPUSH      SET	1
      0  9423					      pbvar	_fuel
      0  9423					      pbyte	_fuel
      1  9423		       ad 36 b6 	      lda	_fuel
      2  9426				  -	      IF	!FPUSH
      3  9426				  -	      pha
      4  9426					      ENDIF
  14662  9426				   FPULL      SET	1
      0  9426					      rshiftbc	2
      1  9426				  -	      IF	!FPULL
      2  9426				  -	      pla
      3  9426					      ENDIF
      4  9426					      REPEAT	2
      5  9426		       4a		      lsr
      4  9426					      REPEND
      5  9427		       4a		      lsr
      6  9428					      REPEND
      7  9428				  -	      IF	!FPUSH
      8  9428				  -	      pha
      9  9428					      ENDIF
  14664  9428				   FPUSH      SET	0
      0  9428					      plb2var	_actions.offset
      1  9428				  -	      IF	!FPULL
      2  9428				  -	      pla
      3  9428					      ENDIF
      4  9428		       8d 6f b6 	      sta	_actions.offset
  14666  9428				   FPULL      SET	0
      0  942b					      pbyte	#32
      1  942b		       a9 20		      lda	#32
      2  942d					      IF	!FPUSH
      3  942d		       48		      pha
      4  942e					      ENDIF
      0  942e					      pword	#1066
      1  942e					      IF	!FPUSH
      2  942e		       a9 2a		      lda	#<#1066
      3  9430		       48		      pha
      4  9431		       a9 04		      lda	#>#1066
      5  9433		       48		      pha
      6  9434				  -	      ELSE
      7  9434				  -	      lda	#<#1066
      8  9434				  -	      ldy	#>#1066
      9  9434					      ENDIF
      0  9434					      pbvar	_actions.offset
      0  9434					      pbyte	_actions.offset
      1  9434		       ad 6f b6 	      lda	_actions.offset
      2  9437					      IF	!FPUSH
      3  9437		       48		      pha
      4  9438					      ENDIF
      0  9438					      btow
      1  9438		       a9 00		      lda	#$00
      2  943a		       48		      pha
      0  943b					      addw
      1  943b		       ba		      tsx
      2  943c		       bd 02 01 	      lda.wx	stack+2
      3  943f		       18		      clc
      4  9440		       7d 04 01 	      adc.wx	stack+4
      5  9443		       9d 04 01 	      sta.wx	stack+4
      6  9446		       68		      pla
      7  9447		       7d 03 01 	      adc.wx	stack+3
      8  944a		       9d 03 01 	      sta.wx	stack+3
      9  944d		       68		      pla
      0  944e					      pokeb
      1  944e					      IF	!FPULL
      2  944e		       68		      pla
      3  944f		       8d 59 94 	      sta	.selfmod_code+2
      4  9452		       68		      pla
      5  9453		       8d 58 94 	      sta	.selfmod_code+1
      6  9456				  -	      ELSE
      7  9456				  -	      sta	.selfmod_code+1
      8  9456				  -	      sty	.selfmod_code+2
      9  9456					      ENDIF
     10  9456		       68		      pla
     11  9457				   .selfmod_code
     12  9457		       8d 00 00 	      sta.w	$0000
  14673  945a		       60		      rts
  14674  945b		       60		      rts
  14675  945c				   _Pactions_end
  14676  945c
  14677  945c
  14678  945c
  14679  945c
  14680  945c
  14681  945c
  14682  945c
  14683  945c				   _Pmove_ufos SUBROUTINE
      0  945c					      pbyte_pbyte_cmpbneq_cond	_aircraft_mode, #0, _EI_65562, _EL_65562
      1  945c
      2  945c
      3  945c		       ad 35 b6 	      lda	_aircraft_mode
      4  945f		       c9 00		      cmp	#0
      5  9461		       d0 03		      bne	*+5
      6  9463				  -	      IFCONST	_EL_65562
      7  9463				  -	      jmp	_EL_65562
      8  9463					      ELSE
      9  9463		       4c 67 94 	      jmp	_EI_65562
     10  9466					      ENDIF
  14685  9466		       60		      rts
  14686  9467
  14687  9467
  14688  9467
  14689  9467
  14690  9467
  14691  9467
  14692  9467
  14693  9467				   _EI_65562
      0  9467					      opt_pbyte_pbyte_and	_frame_count, #127
      1  9467
      2  9467
      3  9467
      4  9467
      5  9467
      6  9467		       ad 25 b5 	      lda	_frame_count
      7  946a		       29 7f		      and	#127
      8  946c					      IF	!FPUSH
      9  946c		       48		      pha
     10  946d					      ENDIF
  14695  946d				   FPUSH      SET	1
      0  946d					      pbyte	#0
      1  946d		       a9 00		      lda	#0
      2  946f				  -	      IF	!FPUSH
      3  946f				  -	      pha
      4  946f					      ENDIF
  14697  946f				   FPULL      SET	1
      0  946f					      cmpbeq
      1  946f				  -	      IF	!FPULL
      2  946f				  -	      pla
      3  946f					      ENDIF
      4  946f		       85 fc		      sta	R1
      5  9471		       68		      pla
      6  9472		       c5 fc		      cmp	R1
      7  9474		       f0 05		      beq	.pht
      0  9476					      pzero
      1  9476		       a9 00		      lda	#$00
      2  9478				  -	      IF	!FPUSH
      3  9478				  -	      pha
      4  9478					      ENDIF
      9  9478				  -	      IF	!FPUSH
     10  9478				  -	      jmp	*+6
     11  9478					      ELSE
     12  9478		       4c 7d 94 	      jmp	*+5
     13  947b					      ENDIF
      0  947b				   .pht       pone
      1  947b		       a9 01		      lda	#$01
      2  947d				  -	      IF	!FPUSH
      3  947d				  -	      pha
      4  947d					      ENDIF
  14699  947d				   FPUSH      SET	0
      0  947d					      cond_stmt	_EI_51, _EL_51
      1  947d				  -	      IF	!FPULL
      2  947d				  -	      pla
      3  947d					      ENDIF
      4  947d		       d0 03		      bne	*+5
      5  947f				  -	      IFCONST	_EL_51
      6  947f				  -	      jmp	_EL_51
      7  947f					      ELSE
      8  947f		       4c a7 96 	      jmp	_EI_51
      9  9482					      ENDIF
  14701  9482				   FPULL      SET	0
      0  9482					      pbvar	_wave_countdown
      0  9482					      pbyte	_wave_countdown
      1  9482		       ad 14 b6 	      lda	_wave_countdown
      2  9485					      IF	!FPUSH
      3  9485		       48		      pha
      4  9486					      ENDIF
      0  9486					      btow
      1  9486		       a9 00		      lda	#$00
      2  9488		       48		      pha
      0  9489					      dblw
      1  9489		       ba		      tsx
      2  948a		       1e 02 01 	      asl.wx	stack+2
      3  948d		       3e 01 01 	      rol.wx	stack+1
  14705  948d				   FPUSH      SET	1
      0  9490					      pwarray	_move_ufos.xspeed_table
      1  9490					      IF	!FPULL
      2  9490		       68		      pla
      3  9491		       85 fc		      sta	R1
      4  9493		       68		      pla
      5  9494		       85 fb		      sta	R0
      6  9496				  -	      ELSE
      7  9496				  -	      sta	R0
      8  9496				  -	      sty	R1
      9  9496					      ENDIF
     10  9496		       a9 b0		      lda	#<_move_ufos.xspeed_table
     11  9498		       18		      clc
     12  9499		       65 fb		      adc	R0
     13  949b		       85 fb		      sta	R0
     14  949d		       a9 ad		      lda	#>_move_ufos.xspeed_table
     15  949f		       65 fc		      adc	R1
     16  94a1		       85 fc		      sta	R1
     17  94a3				  -	      IF	!FPUSH
     18  94a3				  -	      ldy	#$00
     19  94a3				  -	      lda	(R0),y
     20  94a3				  -	      pha
     21  94a3				  -	      iny
     22  94a3				  -	      lda	(R0),y
     23  94a3				  -	      pha
     24  94a3					      ELSE
     25  94a3		       a0 00		      ldy	#$00
     26  94a5		       b1 fb		      lda	(R0),y
     27  94a7		       aa		      tax
     28  94a8		       c8		      iny
     29  94a9		       b1 fb		      lda	(R0),y
     30  94ab		       a8		      tay
     31  94ac		       8a		      txa
     32  94ad					      ENDIF
  14707  94ad				   FPULL      SET	1
  14708  94ad				   FPUSH      SET	0
      0  94ad					      plw2var	_move_ufos.xspeed
      1  94ad				  -	      IF	!FPULL
      2  94ad				  -	      pla
      3  94ad				  -	      sta	_move_ufos.xspeed+1
      4  94ad				  -	      pla
      5  94ad				  -	      sta	_move_ufos.xspeed
      6  94ad					      ELSE
      7  94ad		       8d 70 b6 	      sta	_move_ufos.xspeed
      8  94b0		       8c 71 b6 	      sty	_move_ufos.xspeed+1
      9  94b3					      ENDIF
  14710  94b3				   FPULL      SET	0
  14711  94b3				   FPUSH      SET	1
      0  94b3					      opt_pbyte_pbarray_fast	_wave_countdown, _move_ufos.yspeed_table
      1  94b3
      2  94b3
      3  94b3
      4  94b3		       ae 14 b6 	      ldx	_wave_countdown
      5  94b6		       bd c0 ad 	      lda	_move_ufos.yspeed_table,x
      6  94b9				  -	      IF	!FPUSH
      7  94b9				  -	      pha
      8  94b9					      ENDIF
  14713  94b9				   FPULL      SET	1
  14714  94b9				   FPUSH      SET	0
      0  94b9					      plb2var	_move_ufos.yspeed
      1  94b9				  -	      IF	!FPULL
      2  94b9				  -	      pla
      3  94b9					      ENDIF
      4  94b9		       8d 72 b6 	      sta	_move_ufos.yspeed
      0  94bc					      pbyte_pbyte_cmpbgt_cond	_wave_countdown, #0, _EI_65563, _EL_65563
      1  94bc
      2  94bc
      3  94bc		       a9 00		      lda	#0
      4  94be		       cd 14 b6 	      cmp	_wave_countdown
      5  94c1		       90 03		      bcc	*+5
      6  94c3				  -	      IFCONST	_EL_65563
      7  94c3				  -	      jmp	_EL_65563
      8  94c3					      ELSE
      9  94c3		       4c c9 94 	      jmp	_EI_65563
     10  94c6					      ENDIF
      0  94c6					      decb	_wave_countdown
      1  94c6		       ce 14 b6 	      dec	_wave_countdown
  14718  94c9
  14719  94c9
  14720  94c9
  14721  94c9
  14722  94c9
  14723  94c9
  14724  94c9				   _EI_65563
      0  94c9					      pbyte_pbyte_cmpbeq_cond	_no_of_ufos_in_this_wave, #0, _EI_52, _EL_52
      1  94c9
      2  94c9
      3  94c9		       ad 28 b6 	      lda	_no_of_ufos_in_this_wave
      4  94cc		       c9 00		      cmp	#0
      5  94ce		       f0 03		      beq	*+5
      6  94d0				  -	      IFCONST	_EL_52
      7  94d0				  -	      jmp	_EL_52
      8  94d0					      ELSE
      9  94d0		       4c 4c 96 	      jmp	_EI_52
     10  94d3					      ENDIF
  14726  94d3				   FPULL      SET	0
      0  94d3					      pbyte_pbyte_cmpbeq	_wave_countdown, #0
      1  94d3
      2  94d3
      3  94d3
      4  94d3
      5  94d3
      6  94d3		       ad 14 b6 	      lda	_wave_countdown
      7  94d6		       c9 00		      cmp	#0
      8  94d8		       f0 06		      beq	.true
      0  94da					      pzero
      1  94da		       a9 00		      lda	#$00
      2  94dc					      IF	!FPUSH
      3  94dc		       48		      pha
      4  94dd					      ENDIF
     10  94dd					      IF	!FPUSH
     11  94dd		       4c e3 94 	      jmp	*+6
     12  94e0				  -	      ELSE
     13  94e0				  -	      jmp	*+5
     14  94e0					      ENDIF
     15  94e0				   .true
      0  94e0					      pone
      1  94e0		       a9 01		      lda	#$01
      2  94e2					      IF	!FPUSH
      3  94e2		       48		      pha
      4  94e3					      ENDIF
  14728  94e3				   FPUSH      SET	1
      0  94e3					      pbyte_pbyte_cmpbneq	_no_of_waves, #0
      1  94e3
      2  94e3
      3  94e3
      4  94e3
      5  94e3
      6  94e3		       ad 27 b6 	      lda	_no_of_waves
      7  94e6		       c9 00		      cmp	#0
      8  94e8		       d0 05		      bne	.true
      0  94ea					      pzero
      1  94ea		       a9 00		      lda	#$00
      2  94ec				  -	      IF	!FPUSH
      3  94ec				  -	      pha
      4  94ec					      ENDIF
     10  94ec				  -	      IF	!FPUSH
     11  94ec				  -	      jmp	*+6
     12  94ec					      ELSE
     13  94ec		       4c f1 94 	      jmp	*+5
     14  94ef					      ENDIF
     15  94ef				   .true
      0  94ef					      pone
      1  94ef		       a9 01		      lda	#$01
      2  94f1				  -	      IF	!FPUSH
      3  94f1				  -	      pha
      4  94f1					      ENDIF
  14730  94f1				   FPULL      SET	1
      0  94f1					      andb
      1  94f1				  -	      IF	!FPULL
      2  94f1				  -	      pla
      3  94f1					      ENDIF
      4  94f1		       85 fc		      sta	R1
      5  94f3		       68		      pla
      6  94f4		       25 fc		      and	R1
      7  94f6				  -	      IF	!FPUSH
      8  94f6				  -	      pha
      9  94f6					      ENDIF
  14732  94f6				   FPUSH      SET	0
      0  94f6					      cond_stmt	_EI_53, _EL_53
      1  94f6				  -	      IF	!FPULL
      2  94f6				  -	      pla
      3  94f6					      ENDIF
      4  94f6		       d0 03		      bne	*+5
      5  94f8				  -	      IFCONST	_EL_53
      6  94f8				  -	      jmp	_EL_53
      7  94f8					      ELSE
      8  94f8		       4c 4c 96 	      jmp	_EI_53
      9  94fb					      ENDIF
      0  94fb					      decb	_no_of_waves
      1  94fb		       ce 27 b6 	      dec	_no_of_waves
  14735  94fb				   FPULL      SET	0
  14736  94fb				   FPUSH      SET	1
      0  94fe					      pbyte	#8
      1  94fe		       a9 08		      lda	#8
      2  9500				  -	      IF	!FPUSH
      3  9500				  -	      pha
      4  9500					      ENDIF
  14738  9500				   FPULL      SET	1
  14739  9500				   FPUSH      SET	0
      0  9500					      plb2var	_sfx_start.effect_no
      1  9500				  -	      IF	!FPULL
      2  9500				  -	      pla
      3  9500					      ENDIF
      4  9500		       8d 21 b5 	      sta	_sfx_start.effect_no
  14741  9503		       20 48 75 	      jsr	_Psfx_start
  14742  9503				   FPULL      SET	0
  14743  9503				   FPUSH      SET	1
      0  9506					      pbyte	#0
      1  9506		       a9 00		      lda	#0
      2  9508				  -	      IF	!FPUSH
      3  9508				  -	      pha
      4  9508					      ENDIF
  14745  9508				   FPULL      SET	1
  14746  9508				   FPUSH      SET	0
      0  9508					      plb2var	_no_of_ufos_in_this_wave
      1  9508				  -	      IF	!FPULL
      2  9508				  -	      pla
      3  9508					      ENDIF
      4  9508		       8d 28 b6 	      sta	_no_of_ufos_in_this_wave
  14748  9508				   FPULL      SET	0
  14749  9508				   FPUSH      SET	1
      0  950b					      pbyte	#0
      1  950b		       a9 00		      lda	#0
      2  950d				  -	      IF	!FPUSH
      3  950d				  -	      pha
      4  950d					      ENDIF
  14751  950d				   FPULL      SET	1
  14752  950d				   FPUSH      SET	0
      0  950d					      plb2var	_move_ufos.j
      1  950d				  -	      IF	!FPULL
      2  950d				  -	      pla
      3  950d					      ENDIF
      4  950d		       8d 73 b6 	      sta	_move_ufos.j
  14754  950d				   FPULL      SET	0
  14755  950d				   FPUSH      SET	1
      0  9510					      pbyte	#3
      1  9510		       a9 03		      lda	#3
      2  9512				  -	      IF	!FPUSH
      3  9512				  -	      pha
      4  9512					      ENDIF
  14757  9512				   FPULL      SET	1
  14758  9512				   FPUSH      SET	0
      0  9512					      plb2var	XFOR_max_10
      1  9512				  -	      IF	!FPULL
      2  9512				  -	      pla
      3  9512					      ENDIF
      4  9512		       8d 74 b6 	      sta	XFOR_max_10
  14760  9515				   _FOR_10
      0  9515					      forb	10, _move_ufos.j
      1  9515
      2  9515		       ad 74 b6 	      lda	XFOR_max_10
      3  9518		       cd 73 b6 	      cmp	_move_ufos.j
      4  951b		       b0 03		      bcs	.enter
      5  951d
      6  951d		       4c 47 96 	      jmp	_ENDFOR_10
      7  9520				   .enter
  14762  9520				   FPULL      SET	0
  14763  9520				   FPUSH      SET	1
      0  9520					      pwvar	_attack_wave_index
      1  9520				  -	      IF	!FPUSH
      2  9520				  -	      lda	_attack_wave_index
      3  9520				  -	      pha
      4  9520				  -	      lda	_attack_wave_index+1
      5  9520				  -	      pha
      6  9520					      ELSE
      7  9520		       ad 25 b6 	      lda	_attack_wave_index
      8  9523		       ac 26 b6 	      ldy	_attack_wave_index+1
      9  9526					      ENDIF
  14765  9526				   FPULL      SET	1
      0  9526					      pbarray	_levels
      1  9526				  -	      IF	!FPULL
      2  9526				  -	      pla
      3  9526				  -	      sta	R1
      4  9526				  -	      pla
      5  9526				  -	      sta	R0
      6  9526					      ELSE
      7  9526		       85 fb		      sta	R0
      8  9528		       84 fc		      sty	R1
      9  952a					      ENDIF
     10  952a		       a9 70		      lda	#<_levels
     11  952c		       18		      clc
     12  952d		       65 fb		      adc	R0
     13  952f		       85 fb		      sta	R0
     14  9531		       a9 a3		      lda	#>_levels
     15  9533		       65 fc		      adc	R1
     16  9535		       85 fc		      sta	R1
     17  9537		       a0 00		      ldy	#$00
     18  9539		       b1 fb		      lda	(R0),y
     19  953b				  -	      IF	!FPUSH
     20  953b				  -	      pha
     21  953b					      ENDIF
  14767  953b				   FPUSH      SET	0
      0  953b					      plb2var	_move_ufos.wave_no
      1  953b				  -	      IF	!FPULL
      2  953b				  -	      pla
      3  953b					      ENDIF
      4  953b		       8d 75 b6 	      sta	_move_ufos.wave_no
  14769  953b				   FPULL      SET	0
      0  953e					      pbvar	_move_ufos.wave_no
      0  953e					      pbyte	_move_ufos.wave_no
      1  953e		       ad 75 b6 	      lda	_move_ufos.wave_no
      2  9541					      IF	!FPUSH
      3  9541		       48		      pha
      4  9542					      ENDIF
  14771  9542				   FPUSH      SET	1
      0  9542					      pbvar	_move_ufos.j
      0  9542					      pbyte	_move_ufos.j
      1  9542		       ad 73 b6 	      lda	_move_ufos.j
      2  9545				  -	      IF	!FPUSH
      3  9545				  -	      pha
      4  9545					      ENDIF
  14773  9545				   FPULL      SET	1
  14774  9545				   FPUSH      SET	0
      0  9545					      plbarray_fast	_ufo_wave_select
      1  9545				  -	      IF	!FPULL
      2  9545				  -	      pla
      3  9545					      ENDIF
      4  9545		       aa		      tax
      5  9546		       68		      pla
      6  9547		       9d 15 b6 	      sta	_ufo_wave_select,x
  14776  9547				   FPULL      SET	0
  14777  9547				   FPUSH      SET	1
      0  954a					      pbyte_pbyte_cmpbneq	_move_ufos.wave_no, #255
      1  954a
      2  954a
      3  954a
      4  954a
      5  954a
      6  954a		       ad 75 b6 	      lda	_move_ufos.wave_no
      7  954d		       c9 ff		      cmp	#255
      8  954f		       d0 05		      bne	.true
      0  9551					      pzero
      1  9551		       a9 00		      lda	#$00
      2  9553				  -	      IF	!FPUSH
      3  9553				  -	      pha
      4  9553					      ENDIF
     10  9553				  -	      IF	!FPUSH
     11  9553				  -	      jmp	*+6
     12  9553					      ELSE
     13  9553		       4c 58 95 	      jmp	*+5
     14  9556					      ENDIF
     15  9556				   .true
      0  9556					      pone
      1  9556		       a9 01		      lda	#$01
      2  9558				  -	      IF	!FPUSH
      3  9558				  -	      pha
      4  9558					      ENDIF
  14779  9558				   FPULL      SET	1
  14780  9558				   FPUSH      SET	0
      0  9558					      cond_stmt	_EI_54, _EL_54
      1  9558				  -	      IF	!FPULL
      2  9558				  -	      pla
      3  9558					      ENDIF
      4  9558		       d0 03		      bne	*+5
      5  955a					      IFCONST	_EL_54
      6  955a		       4c 21 96 	      jmp	_EL_54
      7  955d				  -	      ELSE
      8  955d				  -	      jmp	_EI_54
      9  955d					      ENDIF
      0  955d					      incb	_no_of_ufos_in_this_wave
      1  955d		       ee 28 b6 	      inc	_no_of_ufos_in_this_wave
  14783  955d				   FPULL      SET	0
      0  9560					      pbyte	#1
      1  9560		       a9 01		      lda	#1
      2  9562					      IF	!FPUSH
      3  9562		       48		      pha
      4  9563					      ENDIF
  14785  9563				   FPUSH      SET	1
      0  9563					      pbvar	_move_ufos.j
      0  9563					      pbyte	_move_ufos.j
      1  9563		       ad 73 b6 	      lda	_move_ufos.j
      2  9566				  -	      IF	!FPUSH
      3  9566				  -	      pha
      4  9566					      ENDIF
  14787  9566				   FPULL      SET	1
  14788  9566				   FPUSH      SET	0
      0  9566					      plbarray_fast	_ufo_on
      1  9566				  -	      IF	!FPULL
      2  9566				  -	      pla
      3  9566					      ENDIF
      4  9566		       aa		      tax
      5  9567		       68		      pla
      6  9568		       9d 48 b5 	      sta	_ufo_on,x
  14790  9568				   FPULL      SET	0
      0  956b					      pbvar	_move_ufos.wave_no
      0  956b					      pbyte	_move_ufos.wave_no
      1  956b		       ad 75 b6 	      lda	_move_ufos.wave_no
      2  956e					      IF	!FPUSH
      3  956e		       48		      pha
      4  956f					      ENDIF
      0  956f					      btow
      1  956f		       a9 00		      lda	#$00
      2  9571		       48		      pha
      0  9572					      dblw
      1  9572		       ba		      tsx
      2  9573		       1e 02 01 	      asl.wx	stack+2
      3  9576		       3e 01 01 	      rol.wx	stack+1
      0  9579					      pwarray	_initial_ufo_posx
      1  9579					      IF	!FPULL
      2  9579		       68		      pla
      3  957a		       85 fc		      sta	R1
      4  957c		       68		      pla
      5  957d		       85 fb		      sta	R0
      6  957f				  -	      ELSE
      7  957f				  -	      sta	R0
      8  957f				  -	      sty	R1
      9  957f					      ENDIF
     10  957f		       a9 20		      lda	#<_initial_ufo_posx
     11  9581		       18		      clc
     12  9582		       65 fb		      adc	R0
     13  9584		       85 fb		      sta	R0
     14  9586		       a9 a3		      lda	#>_initial_ufo_posx
     15  9588		       65 fc		      adc	R1
     16  958a		       85 fc		      sta	R1
     17  958c					      IF	!FPUSH
     18  958c		       a0 00		      ldy	#$00
     19  958e		       b1 fb		      lda	(R0),y
     20  9590		       48		      pha
     21  9591		       c8		      iny
     22  9592		       b1 fb		      lda	(R0),y
     23  9594		       48		      pha
     24  9595				  -	      ELSE
     25  9595				  -	      ldy	#$00
     26  9595				  -	      lda	(R0),y
     27  9595				  -	      tax
     28  9595				  -	      iny
     29  9595				  -	      lda	(R0),y
     30  9595				  -	      tay
     31  9595				  -	      txa
     32  9595					      ENDIF
      0  9595					      pbvar	_move_ufos.j
      0  9595					      pbyte	_move_ufos.j
      1  9595		       ad 73 b6 	      lda	_move_ufos.j
      2  9598					      IF	!FPUSH
      3  9598		       48		      pha
      4  9599					      ENDIF
      0  9599					      btow
      1  9599		       a9 00		      lda	#$00
      2  959b		       48		      pha
      0  959c					      dblw
      1  959c		       ba		      tsx
      2  959d		       1e 02 01 	      asl.wx	stack+2
      3  95a0		       3e 01 01 	      rol.wx	stack+1
      0  95a3					      plwarray	_ufo_xpos
      1  95a3					      IF	!FPULL
      2  95a3		       68		      pla
      3  95a4		       85 fc		      sta	R1
      4  95a6		       68		      pla
      5  95a7		       85 fb		      sta	R0
      6  95a9				  -	      ELSE
      7  95a9				  -	      sta	R0
      8  95a9				  -	      sty	R1
      9  95a9					      ENDIF
     10  95a9		       a9 38		      lda	#<_ufo_xpos
     11  95ab		       18		      clc
     12  95ac		       65 fb		      adc	R0
     13  95ae		       85 fb		      sta	R0
     14  95b0		       a9 b5		      lda	#>_ufo_xpos
     15  95b2		       65 fc		      adc	R1
     16  95b4		       85 fc		      sta	R1
     17  95b6		       a0 01		      ldy	#$01
     18  95b8		       68		      pla
     19  95b9		       91 fb		      sta	(R0),y
     20  95bb		       88		      dey
     21  95bc		       68		      pla
     22  95bd		       91 fb		      sta	(R0),y
      0  95bf					      pbvar	_move_ufos.j
      0  95bf					      pbyte	_move_ufos.j
      1  95bf		       ad 73 b6 	      lda	_move_ufos.j
      2  95c2					      IF	!FPUSH
      3  95c2		       48		      pha
      4  95c3					      ENDIF
      0  95c3					      btow
      1  95c3		       a9 00		      lda	#$00
      2  95c5		       48		      pha
      0  95c6					      dblw
      1  95c6		       ba		      tsx
      2  95c7		       1e 02 01 	      asl.wx	stack+2
      3  95ca		       3e 01 01 	      rol.wx	stack+1
      0  95cd					      pwarray	_ufo_xpos
      1  95cd					      IF	!FPULL
      2  95cd		       68		      pla
      3  95ce		       85 fc		      sta	R1
      4  95d0		       68		      pla
      5  95d1		       85 fb		      sta	R0
      6  95d3				  -	      ELSE
      7  95d3				  -	      sta	R0
      8  95d3				  -	      sty	R1
      9  95d3					      ENDIF
     10  95d3		       a9 38		      lda	#<_ufo_xpos
     11  95d5		       18		      clc
     12  95d6		       65 fb		      adc	R0
     13  95d8		       85 fb		      sta	R0
     14  95da		       a9 b5		      lda	#>_ufo_xpos
     15  95dc		       65 fc		      adc	R1
     16  95de		       85 fc		      sta	R1
     17  95e0					      IF	!FPUSH
     18  95e0		       a0 00		      ldy	#$00
     19  95e2		       b1 fb		      lda	(R0),y
     20  95e4		       48		      pha
     21  95e5		       c8		      iny
     22  95e6		       b1 fb		      lda	(R0),y
     23  95e8		       48		      pha
     24  95e9				  -	      ELSE
     25  95e9				  -	      ldy	#$00
     26  95e9				  -	      lda	(R0),y
     27  95e9				  -	      tax
     28  95e9				  -	      iny
     29  95e9				  -	      lda	(R0),y
     30  95e9				  -	      tay
     31  95e9				  -	      txa
     32  95e9					      ENDIF
      0  95e9					      pbvar	_move_ufos.j
      0  95e9					      pbyte	_move_ufos.j
      1  95e9		       ad 73 b6 	      lda	_move_ufos.j
      2  95ec					      IF	!FPUSH
      3  95ec		       48		      pha
      4  95ed					      ENDIF
      0  95ed					      btow
      1  95ed		       a9 00		      lda	#$00
      2  95ef		       48		      pha
      0  95f0					      dblw
      1  95f0		       ba		      tsx
      2  95f1		       1e 02 01 	      asl.wx	stack+2
      3  95f4		       3e 01 01 	      rol.wx	stack+1
      0  95f7					      plwarray	_ufo_initial_xpos
      1  95f7					      IF	!FPULL
      2  95f7		       68		      pla
      3  95f8		       85 fc		      sta	R1
      4  95fa		       68		      pla
      5  95fb		       85 fb		      sta	R0
      6  95fd				  -	      ELSE
      7  95fd				  -	      sta	R0
      8  95fd				  -	      sty	R1
      9  95fd					      ENDIF
     10  95fd		       a9 40		      lda	#<_ufo_initial_xpos
     11  95ff		       18		      clc
     12  9600		       65 fb		      adc	R0
     13  9602		       85 fb		      sta	R0
     14  9604		       a9 b5		      lda	#>_ufo_initial_xpos
     15  9606		       65 fc		      adc	R1
     16  9608		       85 fc		      sta	R1
     17  960a		       a0 01		      ldy	#$01
     18  960c		       68		      pla
     19  960d		       91 fb		      sta	(R0),y
     20  960f		       88		      dey
     21  9610		       68		      pla
     22  9611		       91 fb		      sta	(R0),y
      0  9613					      pbyte	#81
      1  9613		       a9 51		      lda	#81
      2  9615					      IF	!FPUSH
      3  9615		       48		      pha
      4  9616					      ENDIF
  14808  9616				   FPUSH      SET	1
      0  9616					      pbvar	_move_ufos.j
      0  9616					      pbyte	_move_ufos.j
      1  9616		       ad 73 b6 	      lda	_move_ufos.j
      2  9619				  -	      IF	!FPUSH
      3  9619				  -	      pha
      4  9619					      ENDIF
  14810  9619				   FPULL      SET	1
  14811  9619				   FPUSH      SET	0
      0  9619					      plbarray_fast	_ufo_altitude
      1  9619				  -	      IF	!FPULL
      2  9619				  -	      pla
      3  9619					      ENDIF
      4  9619		       aa		      tax
      5  961a		       68		      pla
      6  961b		       9d 34 b5 	      sta	_ufo_altitude,x
  14813  961e		       4c 2c 96 	      jmp	_EI_54
  14814  9621				   _EL_54
  14815  9621				   FPULL      SET	0
      0  9621					      pbyte	#0
      1  9621		       a9 00		      lda	#0
      2  9623					      IF	!FPUSH
      3  9623		       48		      pha
      4  9624					      ENDIF
  14817  9624				   FPUSH      SET	1
      0  9624					      pbvar	_move_ufos.j
      0  9624					      pbyte	_move_ufos.j
      1  9624		       ad 73 b6 	      lda	_move_ufos.j
      2  9627				  -	      IF	!FPUSH
      3  9627				  -	      pha
      4  9627					      ENDIF
  14819  9627				   FPULL      SET	1
  14820  9627				   FPUSH      SET	0
      0  9627					      plbarray_fast	_move_ufos.ufo_on
      1  9627				  -	      IF	!FPULL
      2  9627				  -	      pla
      3  9627					      ENDIF
      4  9627		       aa		      tax
      5  9628		       68		      pla
      6  9629		       9d 76 b6 	      sta	_move_ufos.ufo_on,x
  14822  962c				   _EI_54
  14823  962c				   FPULL      SET	0
      0  962c					      pbyte	#0
      1  962c		       a9 00		      lda	#0
      2  962e					      IF	!FPUSH
      3  962e		       48		      pha
      4  962f					      ENDIF
  14825  962f				   FPUSH      SET	1
      0  962f					      pbvar	_move_ufos.j
      0  962f					      pbyte	_move_ufos.j
      1  962f		       ad 73 b6 	      lda	_move_ufos.j
      2  9632				  -	      IF	!FPUSH
      3  9632				  -	      pha
      4  9632					      ENDIF
  14827  9632				   FPULL      SET	1
  14828  9632				   FPUSH      SET	0
      0  9632					      plbarray_fast	_move_ufos.ufo_hit
      1  9632				  -	      IF	!FPULL
      2  9632				  -	      pla
      3  9632					      ENDIF
      4  9632		       aa		      tax
      5  9633		       68		      pla
      6  9634		       9d 77 b6 	      sta	_move_ufos.ufo_hit,x
      0  9637					      incw	_attack_wave_index
      1  9637		       ee 25 b6 	      inc	_attack_wave_index
      2  963a		       d0 03		      bne	.skip
      3  963c		       ee 26 b6 	      inc	_attack_wave_index+1
      4  963f				   .skip
      0  963f					      nextb	10, _move_ufos.j
      1  963f
      2  963f				  -	      IFCONST	XFOR_step_10
      3  963f				  -
      4  963f				  -	      clc
      5  963f				  -	      lda	XFOR_step_10
      6  963f				  -	      adc	_move_ufos.j
      7  963f				  -	      sta	_move_ufos.j
      8  963f				  -
      9  963f				  -	      bcs	_ENDFOR_10
     10  963f					      ELSE
     11  963f
     12  963f		       ee 73 b6 	      inc	_move_ufos.j
     13  9642
     14  9642		       f0 03		      beq	_ENDFOR_10
     15  9644					      ENDIF
     16  9644		       4c 15 95 	      jmp	_FOR_10
  14832  9647				   _ENDFOR_10
  14833  9647				   FPULL      SET	0
  14834  9647				   FPUSH      SET	1
      0  9647					      pbyte	#7
      1  9647		       a9 07		      lda	#7
      2  9649				  -	      IF	!FPUSH
      3  9649				  -	      pha
      4  9649					      ENDIF
  14836  9649				   FPULL      SET	1
  14837  9649				   FPUSH      SET	0
      0  9649					      plb2var	_wave_countdown
      1  9649				  -	      IF	!FPULL
      2  9649				  -	      pla
      3  9649					      ENDIF
      4  9649		       8d 14 b6 	      sta	_wave_countdown
  14839  964c				   _EI_53
  14840  964c
  14841  964c
  14842  964c
  14843  964c
  14844  964c
  14845  964c
  14846  964c
  14847  964c				   _EI_52
  14848  964c				   FPULL      SET	0
  14849  964c				   FPUSH      SET	1
      0  964c					      pbyte	#0
      1  964c		       a9 00		      lda	#0
      2  964e				  -	      IF	!FPUSH
      3  964e				  -	      pha
      4  964e					      ENDIF
  14851  964e				   FPULL      SET	1
  14852  964e				   FPUSH      SET	0
      0  964e					      plb2var	_move_ufos.j
      1  964e				  -	      IF	!FPULL
      2  964e				  -	      pla
      3  964e					      ENDIF
      4  964e		       8d 73 b6 	      sta	_move_ufos.j
  14854  964e				   FPULL      SET	0
  14855  964e				   FPUSH      SET	1
      0  9651					      pbyte	#3
      1  9651		       a9 03		      lda	#3
      2  9653				  -	      IF	!FPUSH
      3  9653				  -	      pha
      4  9653					      ENDIF
  14857  9653				   FPULL      SET	1
  14858  9653				   FPUSH      SET	0
      0  9653					      plb2var	XFOR_max_11
      1  9653				  -	      IF	!FPULL
      2  9653				  -	      pla
      3  9653					      ENDIF
      4  9653		       8d 78 b6 	      sta	XFOR_max_11
  14860  9656				   _FOR_11
      0  9656					      forb	11, _move_ufos.j
      1  9656
      2  9656		       ad 78 b6 	      lda	XFOR_max_11
      3  9659		       cd 73 b6 	      cmp	_move_ufos.j
      4  965c		       b0 03		      bcs	.enter
      5  965e
      6  965e		       4c a7 96 	      jmp	_ENDFOR_11
      7  9661				   .enter
  14862  9661				   FPULL      SET	0
      0  9661					      pwvar	_move_ufos.xspeed
      1  9661					      IF	!FPUSH
      2  9661		       ad 70 b6 	      lda	_move_ufos.xspeed
      3  9664		       48		      pha
      4  9665		       ad 71 b6 	      lda	_move_ufos.xspeed+1
      5  9668		       48		      pha
      6  9669				  -	      ELSE
      7  9669				  -	      lda	_move_ufos.xspeed
      8  9669				  -	      ldy	_move_ufos.xspeed+1
      9  9669					      ENDIF
      0  9669					      pbvar	_move_ufos.j
      0  9669					      pbyte	_move_ufos.j
      1  9669		       ad 73 b6 	      lda	_move_ufos.j
      2  966c					      IF	!FPUSH
      3  966c		       48		      pha
      4  966d					      ENDIF
      0  966d					      btow
      1  966d		       a9 00		      lda	#$00
      2  966f		       48		      pha
      0  9670					      dblw
      1  9670		       ba		      tsx
      2  9671		       1e 02 01 	      asl.wx	stack+2
      3  9674		       3e 01 01 	      rol.wx	stack+1
      0  9677					      plwarray	_ufo_current_xspeed
      1  9677					      IF	!FPULL
      2  9677		       68		      pla
      3  9678		       85 fc		      sta	R1
      4  967a		       68		      pla
      5  967b		       85 fb		      sta	R0
      6  967d				  -	      ELSE
      7  967d				  -	      sta	R0
      8  967d				  -	      sty	R1
      9  967d					      ENDIF
     10  967d		       a9 19		      lda	#<_ufo_current_xspeed
     11  967f		       18		      clc
     12  9680		       65 fb		      adc	R0
     13  9682		       85 fb		      sta	R0
     14  9684		       a9 b6		      lda	#>_ufo_current_xspeed
     15  9686		       65 fc		      adc	R1
     16  9688		       85 fc		      sta	R1
     17  968a		       a0 01		      ldy	#$01
     18  968c		       68		      pla
     19  968d		       91 fb		      sta	(R0),y
     20  968f		       88		      dey
     21  9690		       68		      pla
     22  9691		       91 fb		      sta	(R0),y
      0  9693					      pbvar	_move_ufos.yspeed
      0  9693					      pbyte	_move_ufos.yspeed
      1  9693		       ad 72 b6 	      lda	_move_ufos.yspeed
      2  9696					      IF	!FPUSH
      3  9696		       48		      pha
      4  9697					      ENDIF
  14869  9697				   FPUSH      SET	1
      0  9697					      pbvar	_move_ufos.j
      0  9697					      pbyte	_move_ufos.j
      1  9697		       ad 73 b6 	      lda	_move_ufos.j
      2  969a				  -	      IF	!FPUSH
      3  969a				  -	      pha
      4  969a					      ENDIF
  14871  969a				   FPULL      SET	1
  14872  969a				   FPUSH      SET	0
      0  969a					      plbarray_fast	_ufo_current_yspeed
      1  969a				  -	      IF	!FPULL
      2  969a				  -	      pla
      3  969a					      ENDIF
      4  969a		       aa		      tax
      5  969b		       68		      pla
      6  969c		       9d 21 b6 	      sta	_ufo_current_yspeed,x
      0  969f					      nextb	11, _move_ufos.j
      1  969f
      2  969f				  -	      IFCONST	XFOR_step_11
      3  969f				  -
      4  969f				  -	      clc
      5  969f				  -	      lda	XFOR_step_11
      6  969f				  -	      adc	_move_ufos.j
      7  969f				  -	      sta	_move_ufos.j
      8  969f				  -
      9  969f				  -	      bcs	_ENDFOR_11
     10  969f					      ELSE
     11  969f
     12  969f		       ee 73 b6 	      inc	_move_ufos.j
     13  96a2
     14  96a2		       f0 03		      beq	_ENDFOR_11
     15  96a4					      ENDIF
     16  96a4		       4c 56 96 	      jmp	_FOR_11
  14875  96a7				   _ENDFOR_11
  14876  96a7
  14877  96a7
  14878  96a7
  14879  96a7
  14880  96a7
  14881  96a7
  14882  96a7
  14883  96a7				   _EI_51
  14884  96a7				   FPULL      SET	0
      0  96a7					      opt_pbyte_pbyte_and	_frame_count, #3
      1  96a7
      2  96a7
      3  96a7
      4  96a7
      5  96a7
      6  96a7		       ad 25 b5 	      lda	_frame_count
      7  96aa		       29 03		      and	#3
      8  96ac					      IF	!FPUSH
      9  96ac		       48		      pha
     10  96ad					      ENDIF
  14886  96ad				   FPUSH      SET	1
      0  96ad					      pbyte	#0
      1  96ad		       a9 00		      lda	#0
      2  96af				  -	      IF	!FPUSH
      3  96af				  -	      pha
      4  96af					      ENDIF
  14888  96af				   FPULL      SET	1
      0  96af					      cmpbeq
      1  96af				  -	      IF	!FPULL
      2  96af				  -	      pla
      3  96af					      ENDIF
      4  96af		       85 fc		      sta	R1
      5  96b1		       68		      pla
      6  96b2		       c5 fc		      cmp	R1
      7  96b4		       f0 05		      beq	.pht
      0  96b6					      pzero
      1  96b6		       a9 00		      lda	#$00
      2  96b8				  -	      IF	!FPUSH
      3  96b8				  -	      pha
      4  96b8					      ENDIF
      9  96b8				  -	      IF	!FPUSH
     10  96b8				  -	      jmp	*+6
     11  96b8					      ELSE
     12  96b8		       4c bd 96 	      jmp	*+5
     13  96bb					      ENDIF
      0  96bb				   .pht       pone
      1  96bb		       a9 01		      lda	#$01
      2  96bd				  -	      IF	!FPUSH
      3  96bd				  -	      pha
      4  96bd					      ENDIF
  14890  96bd				   FPUSH      SET	0
      0  96bd					      cond_stmt	_EI_55, _EL_55
      1  96bd				  -	      IF	!FPULL
      2  96bd				  -	      pla
      3  96bd					      ENDIF
      4  96bd		       d0 03		      bne	*+5
      5  96bf				  -	      IFCONST	_EL_55
      6  96bf				  -	      jmp	_EL_55
      7  96bf					      ELSE
      8  96bf		       4c dd 98 	      jmp	_EI_55
      9  96c2					      ENDIF
  14892  96c2				   FPULL      SET	0
  14893  96c2				   FPUSH      SET	1
      0  96c2					      pbyte	#0
      1  96c2		       a9 00		      lda	#0
      2  96c4				  -	      IF	!FPUSH
      3  96c4				  -	      pha
      4  96c4					      ENDIF
  14895  96c4				   FPULL      SET	1
  14896  96c4				   FPUSH      SET	0
      0  96c4					      plb2var	_move_ufos.i
      1  96c4				  -	      IF	!FPULL
      2  96c4				  -	      pla
      3  96c4					      ENDIF
      4  96c4		       8d 79 b6 	      sta	_move_ufos.i
  14898  96c4				   FPULL      SET	0
  14899  96c4				   FPUSH      SET	1
      0  96c7					      pbyte	#3
      1  96c7		       a9 03		      lda	#3
      2  96c9				  -	      IF	!FPUSH
      3  96c9				  -	      pha
      4  96c9					      ENDIF
  14901  96c9				   FPULL      SET	1
  14902  96c9				   FPUSH      SET	0
      0  96c9					      plb2var	XFOR_max_12
      1  96c9				  -	      IF	!FPULL
      2  96c9				  -	      pla
      3  96c9					      ENDIF
      4  96c9		       8d 7a b6 	      sta	XFOR_max_12
  14904  96cc				   _FOR_12
      0  96cc					      forb	12, _move_ufos.i
      1  96cc
      2  96cc		       ad 7a b6 	      lda	XFOR_max_12
      3  96cf		       cd 79 b6 	      cmp	_move_ufos.i
      4  96d2		       b0 03		      bcs	.enter
      5  96d4
      6  96d4		       4c dd 98 	      jmp	_ENDFOR_12
      7  96d7				   .enter
  14906  96d7				   FPULL      SET	0
      0  96d7					      opt_pbyte_pbarray_fast	_move_ufos.i, _ufo_on
      1  96d7
      2  96d7
      3  96d7
      4  96d7		       ae 79 b6 	      ldx	_move_ufos.i
      5  96da		       bd 48 b5 	      lda	_ufo_on,x
      6  96dd					      IF	!FPUSH
      7  96dd		       48		      pha
      8  96de					      ENDIF
  14908  96de				   FPUSH      SET	1
      0  96de					      pbyte	#1
      1  96de		       a9 01		      lda	#1
      2  96e0				  -	      IF	!FPUSH
      3  96e0				  -	      pha
      4  96e0					      ENDIF
  14910  96e0				   FPULL      SET	1
      0  96e0					      cmpbeq
      1  96e0				  -	      IF	!FPULL
      2  96e0				  -	      pla
      3  96e0					      ENDIF
      4  96e0		       85 fc		      sta	R1
      5  96e2		       68		      pla
      6  96e3		       c5 fc		      cmp	R1
      7  96e5		       f0 05		      beq	.pht
      0  96e7					      pzero
      1  96e7		       a9 00		      lda	#$00
      2  96e9				  -	      IF	!FPUSH
      3  96e9				  -	      pha
      4  96e9					      ENDIF
      9  96e9				  -	      IF	!FPUSH
     10  96e9				  -	      jmp	*+6
     11  96e9					      ELSE
     12  96e9		       4c ee 96 	      jmp	*+5
     13  96ec					      ENDIF
      0  96ec				   .pht       pone
      1  96ec		       a9 01		      lda	#$01
      2  96ee				  -	      IF	!FPUSH
      3  96ee				  -	      pha
      4  96ee					      ENDIF
  14912  96ee				   FPUSH      SET	0
      0  96ee					      cond_stmt	_EI_56, _EL_56
      1  96ee				  -	      IF	!FPULL
      2  96ee				  -	      pla
      3  96ee					      ENDIF
      4  96ee		       d0 03		      bne	*+5
      5  96f0				  -	      IFCONST	_EL_56
      6  96f0				  -	      jmp	_EL_56
      7  96f0					      ELSE
      8  96f0		       4c d5 98 	      jmp	_EI_56
      9  96f3					      ENDIF
  14914  96f3				   FPULL      SET	0
      0  96f3					      pbvar	_move_ufos.i
      0  96f3					      pbyte	_move_ufos.i
      1  96f3		       ad 79 b6 	      lda	_move_ufos.i
      2  96f6					      IF	!FPUSH
      3  96f6		       48		      pha
      4  96f7					      ENDIF
      0  96f7					      btow
      1  96f7		       a9 00		      lda	#$00
      2  96f9		       48		      pha
      0  96fa					      dblw
      1  96fa		       ba		      tsx
      2  96fb		       1e 02 01 	      asl.wx	stack+2
      3  96fe		       3e 01 01 	      rol.wx	stack+1
      0  9701					      pwarray	_ufo_xpos
      1  9701					      IF	!FPULL
      2  9701		       68		      pla
      3  9702		       85 fc		      sta	R1
      4  9704		       68		      pla
      5  9705		       85 fb		      sta	R0
      6  9707				  -	      ELSE
      7  9707				  -	      sta	R0
      8  9707				  -	      sty	R1
      9  9707					      ENDIF
     10  9707		       a9 38		      lda	#<_ufo_xpos
     11  9709		       18		      clc
     12  970a		       65 fb		      adc	R0
     13  970c		       85 fb		      sta	R0
     14  970e		       a9 b5		      lda	#>_ufo_xpos
     15  9710		       65 fc		      adc	R1
     16  9712		       85 fc		      sta	R1
     17  9714					      IF	!FPUSH
     18  9714		       a0 00		      ldy	#$00
     19  9716		       b1 fb		      lda	(R0),y
     20  9718		       48		      pha
     21  9719		       c8		      iny
     22  971a		       b1 fb		      lda	(R0),y
     23  971c		       48		      pha
     24  971d				  -	      ELSE
     25  971d				  -	      ldy	#$00
     26  971d				  -	      lda	(R0),y
     27  971d				  -	      tax
     28  971d				  -	      iny
     29  971d				  -	      lda	(R0),y
     30  971d				  -	      tay
     31  971d				  -	      txa
     32  971d					      ENDIF
      0  971d					      pbvar	_move_ufos.i
      0  971d					      pbyte	_move_ufos.i
      1  971d		       ad 79 b6 	      lda	_move_ufos.i
      2  9720					      IF	!FPUSH
      3  9720		       48		      pha
      4  9721					      ENDIF
      0  9721					      btow
      1  9721		       a9 00		      lda	#$00
      2  9723		       48		      pha
      0  9724					      dblw
      1  9724		       ba		      tsx
      2  9725		       1e 02 01 	      asl.wx	stack+2
      3  9728		       3e 01 01 	      rol.wx	stack+1
      0  972b					      pwarray	_ufo_current_xspeed
      1  972b					      IF	!FPULL
      2  972b		       68		      pla
      3  972c		       85 fc		      sta	R1
      4  972e		       68		      pla
      5  972f		       85 fb		      sta	R0
      6  9731				  -	      ELSE
      7  9731				  -	      sta	R0
      8  9731				  -	      sty	R1
      9  9731					      ENDIF
     10  9731		       a9 19		      lda	#<_ufo_current_xspeed
     11  9733		       18		      clc
     12  9734		       65 fb		      adc	R0
     13  9736		       85 fb		      sta	R0
     14  9738		       a9 b6		      lda	#>_ufo_current_xspeed
     15  973a		       65 fc		      adc	R1
     16  973c		       85 fc		      sta	R1
     17  973e					      IF	!FPUSH
     18  973e		       a0 00		      ldy	#$00
     19  9740		       b1 fb		      lda	(R0),y
     20  9742		       48		      pha
     21  9743		       c8		      iny
     22  9744		       b1 fb		      lda	(R0),y
     23  9746		       48		      pha
     24  9747				  -	      ELSE
     25  9747				  -	      ldy	#$00
     26  9747				  -	      lda	(R0),y
     27  9747				  -	      tax
     28  9747				  -	      iny
     29  9747				  -	      lda	(R0),y
     30  9747				  -	      tay
     31  9747				  -	      txa
     32  9747					      ENDIF
      0  9747					      addw
      1  9747		       ba		      tsx
      2  9748		       bd 02 01 	      lda.wx	stack+2
      3  974b		       18		      clc
      4  974c		       7d 04 01 	      adc.wx	stack+4
      5  974f		       9d 04 01 	      sta.wx	stack+4
      6  9752		       68		      pla
      7  9753		       7d 03 01 	      adc.wx	stack+3
      8  9756		       9d 03 01 	      sta.wx	stack+3
      9  9759		       68		      pla
      0  975a					      pbvar	_move_ufos.i
      0  975a					      pbyte	_move_ufos.i
      1  975a		       ad 79 b6 	      lda	_move_ufos.i
      2  975d					      IF	!FPUSH
      3  975d		       48		      pha
      4  975e					      ENDIF
      0  975e					      btow
      1  975e		       a9 00		      lda	#$00
      2  9760		       48		      pha
      0  9761					      dblw
      1  9761		       ba		      tsx
      2  9762		       1e 02 01 	      asl.wx	stack+2
      3  9765		       3e 01 01 	      rol.wx	stack+1
      0  9768					      plwarray	_ufo_xpos
      1  9768					      IF	!FPULL
      2  9768		       68		      pla
      3  9769		       85 fc		      sta	R1
      4  976b		       68		      pla
      5  976c		       85 fb		      sta	R0
      6  976e				  -	      ELSE
      7  976e				  -	      sta	R0
      8  976e				  -	      sty	R1
      9  976e					      ENDIF
     10  976e		       a9 38		      lda	#<_ufo_xpos
     11  9770		       18		      clc
     12  9771		       65 fb		      adc	R0
     13  9773		       85 fb		      sta	R0
     14  9775		       a9 b5		      lda	#>_ufo_xpos
     15  9777		       65 fc		      adc	R1
     16  9779		       85 fc		      sta	R1
     17  977b		       a0 01		      ldy	#$01
     18  977d		       68		      pla
     19  977e		       91 fb		      sta	(R0),y
     20  9780		       88		      dey
     21  9781		       68		      pla
     22  9782		       91 fb		      sta	(R0),y
      0  9784					      opt_pbyte_pbarray_fast	_move_ufos.i, _ufo_altitude
      1  9784
      2  9784
      3  9784
      4  9784		       ae 79 b6 	      ldx	_move_ufos.i
      5  9787		       bd 34 b5 	      lda	_ufo_altitude,x
      6  978a					      IF	!FPUSH
      7  978a		       48		      pha
      8  978b					      ENDIF
  14929  978b				   FPUSH      SET	1
      0  978b					      opt_pbyte_pbarray_fast	_move_ufos.i, _ufo_current_yspeed
      1  978b
      2  978b
      3  978b
      4  978b		       ae 79 b6 	      ldx	_move_ufos.i
      5  978e		       bd 21 b6 	      lda	_ufo_current_yspeed,x
      6  9791				  -	      IF	!FPUSH
      7  9791				  -	      pha
      8  9791					      ENDIF
  14931  9791				   FPULL      SET	1
  14932  9791				   FPUSH      SET	0
      0  9791					      addb
      1  9791				  -	      IF	!FPULL
      2  9791				  -	      pla
      3  9791					      ENDIF
      4  9791		       85 fb		      sta	R0
      5  9793		       68		      pla
      6  9794		       18		      clc
      7  9795		       65 fb		      adc	R0
      8  9797					      IF	!FPUSH
      9  9797		       48		      pha
     10  9798					      ENDIF
  14934  9798				   FPULL      SET	0
  14935  9798				   FPUSH      SET	1
      0  9798					      pbvar	_move_ufos.i
      0  9798					      pbyte	_move_ufos.i
      1  9798		       ad 79 b6 	      lda	_move_ufos.i
      2  979b				  -	      IF	!FPUSH
      3  979b				  -	      pha
      4  979b					      ENDIF
  14937  979b				   FPULL      SET	1
  14938  979b				   FPUSH      SET	0
      0  979b					      plbarray_fast	_ufo_altitude
      1  979b				  -	      IF	!FPULL
      2  979b				  -	      pla
      3  979b					      ENDIF
      4  979b		       aa		      tax
      5  979c		       68		      pla
      6  979d		       9d 34 b5 	      sta	_ufo_altitude,x
  14940  979d				   FPULL      SET	0
      0  97a0					      opt_pbyte_pbarray_fast	_move_ufos.i, _ufo_altitude
      1  97a0
      2  97a0
      3  97a0
      4  97a0		       ae 79 b6 	      ldx	_move_ufos.i
      5  97a3		       bd 34 b5 	      lda	_ufo_altitude,x
      6  97a6					      IF	!FPUSH
      7  97a6		       48		      pha
      8  97a7					      ENDIF
  14942  97a7				   FPUSH      SET	1
      0  97a7					      pbyte	#234
      1  97a7		       a9 ea		      lda	#234
      2  97a9				  -	      IF	!FPUSH
      3  97a9				  -	      pha
      4  97a9					      ENDIF
  14944  97a9				   FPULL      SET	1
      0  97a9					      cmpbgte
      1  97a9				  -	      IF	!FPULL
      2  97a9				  -	      pla
      3  97a9					      ENDIF
      4  97a9		       85 fc		      sta	R1
      5  97ab		       68		      pla
      6  97ac		       c5 fc		      cmp	R1
      7  97ae		       b0 05		      bcs	.pht
      0  97b0					      pzero
      1  97b0		       a9 00		      lda	#$00
      2  97b2				  -	      IF	!FPUSH
      3  97b2				  -	      pha
      4  97b2					      ENDIF
      9  97b2				  -	      IF	!FPUSH
     10  97b2				  -	      jmp	*+6
     11  97b2					      ELSE
     12  97b2		       4c b7 97 	      jmp	*+5
     13  97b5					      ENDIF
      0  97b5				   .pht       pone
      1  97b5		       a9 01		      lda	#$01
      2  97b7				  -	      IF	!FPUSH
      3  97b7				  -	      pha
      4  97b7					      ENDIF
  14946  97b7				   FPUSH      SET	0
      0  97b7					      cond_stmt	_EI_57, _EL_57
      1  97b7				  -	      IF	!FPULL
      2  97b7				  -	      pla
      3  97b7					      ENDIF
      4  97b7		       d0 03		      bne	*+5
      5  97b9				  -	      IFCONST	_EL_57
      6  97b9				  -	      jmp	_EL_57
      7  97b9					      ELSE
      8  97b9		       4c d5 98 	      jmp	_EI_57
      9  97bc					      ENDIF
  14948  97bc				   FPULL      SET	0
      0  97bc					      pbvar	_move_ufos.i
      0  97bc					      pbyte	_move_ufos.i
      1  97bc		       ad 79 b6 	      lda	_move_ufos.i
      2  97bf					      IF	!FPUSH
      3  97bf		       48		      pha
      4  97c0					      ENDIF
      0  97c0					      btow
      1  97c0		       a9 00		      lda	#$00
      2  97c2		       48		      pha
      0  97c3					      dblw
      1  97c3		       ba		      tsx
      2  97c4		       1e 02 01 	      asl.wx	stack+2
      3  97c7		       3e 01 01 	      rol.wx	stack+1
      0  97ca					      pwarray	_ufo_xpos
      1  97ca					      IF	!FPULL
      2  97ca		       68		      pla
      3  97cb		       85 fc		      sta	R1
      4  97cd		       68		      pla
      5  97ce		       85 fb		      sta	R0
      6  97d0				  -	      ELSE
      7  97d0				  -	      sta	R0
      8  97d0				  -	      sty	R1
      9  97d0					      ENDIF
     10  97d0		       a9 38		      lda	#<_ufo_xpos
     11  97d2		       18		      clc
     12  97d3		       65 fb		      adc	R0
     13  97d5		       85 fb		      sta	R0
     14  97d7		       a9 b5		      lda	#>_ufo_xpos
     15  97d9		       65 fc		      adc	R1
     16  97db		       85 fc		      sta	R1
     17  97dd					      IF	!FPUSH
     18  97dd		       a0 00		      ldy	#$00
     19  97df		       b1 fb		      lda	(R0),y
     20  97e1		       48		      pha
     21  97e2		       c8		      iny
     22  97e3		       b1 fb		      lda	(R0),y
     23  97e5		       48		      pha
     24  97e6				  -	      ELSE
     25  97e6				  -	      ldy	#$00
     26  97e6				  -	      lda	(R0),y
     27  97e6				  -	      tax
     28  97e6				  -	      iny
     29  97e6				  -	      lda	(R0),y
     30  97e6				  -	      tay
     31  97e6				  -	      txa
     32  97e6					      ENDIF
      0  97e6					      pwvar	_aircraft_xpos
      1  97e6					      IF	!FPUSH
      2  97e6		       ad 31 b5 	      lda	_aircraft_xpos
      3  97e9		       48		      pha
      4  97ea		       ad 32 b5 	      lda	_aircraft_xpos+1
      5  97ed		       48		      pha
      6  97ee				  -	      ELSE
      7  97ee				  -	      lda	_aircraft_xpos
      8  97ee				  -	      ldy	_aircraft_xpos+1
      9  97ee					      ENDIF
  14954  97ee				   FPUSH      SET	1
      0  97ee					      cmpwlte
      1  97ee		       ba		      tsx
      2  97ef		       bd 02 01 	      lda.wx	stack+2
      3  97f2		       dd 04 01 	      cmp.wx	stack+4
      4  97f5		       bd 01 01 	      lda.wx	stack+1
      5  97f8		       fd 03 01 	      sbc.wx	stack+3
      6  97fb		       30 0a		      bmi	.phf
      7  97fd		       e8		      inx
      8  97fe		       e8		      inx
      9  97ff		       e8		      inx
     10  9800		       e8		      inx
     11  9801		       9a		      txs
      0  9802					      pone
      1  9802		       a9 01		      lda	#$01
      2  9804				  -	      IF	!FPUSH
      3  9804				  -	      pha
      4  9804					      ENDIF
     13  9804				  -	      IF	!FPUSH
     14  9804				  -	      jmp	*+11
     15  9804					      ELSE
     16  9804		       4c 0e 98 	      jmp	*+10
     17  9807					      ENDIF
     18  9807		       e8	   .phf       inx
     19  9808		       e8		      inx
     20  9809		       e8		      inx
     21  980a		       e8		      inx
     22  980b		       9a		      txs
      0  980c					      pzero
      1  980c		       a9 00		      lda	#$00
      2  980e				  -	      IF	!FPUSH
      3  980e				  -	      pha
      4  980e					      ENDIF
  14956  980e				   FPULL      SET	1
  14957  980e				   FPUSH      SET	0
      0  980e					      cond_stmt	_EI_65564, _EL_65564
      1  980e				  -	      IF	!FPULL
      2  980e				  -	      pla
      3  980e					      ENDIF
      4  980e		       d0 03		      bne	*+5
      5  9810					      IFCONST	_EL_65564
      6  9810		       4c 1b 98 	      jmp	_EL_65564
      7  9813				  -	      ELSE
      8  9813				  -	      jmp	_EI_65564
      9  9813					      ENDIF
  14959  9813				   FPULL      SET	0
  14960  9813				   FPUSH      SET	1
      0  9813					      pbyte	#0
      1  9813		       a9 00		      lda	#0
      2  9815				  -	      IF	!FPUSH
      3  9815				  -	      pha
      4  9815					      ENDIF
  14962  9815				   FPULL      SET	1
  14963  9815				   FPUSH      SET	0
      0  9815					      plb2var	_dir
      1  9815				  -	      IF	!FPULL
      2  9815				  -	      pla
      3  9815					      ENDIF
      4  9815		       8d 24 b5 	      sta	_dir
  14965  9818		       4c 20 98 	      jmp	_EI_65564
  14966  981b				   _EL_65564
  14967  981b				   FPULL      SET	0
  14968  981b				   FPUSH      SET	1
      0  981b					      pbyte	#1
      1  981b		       a9 01		      lda	#1
      2  981d				  -	      IF	!FPUSH
      3  981d				  -	      pha
      4  981d					      ENDIF
  14970  981d				   FPULL      SET	1
  14971  981d				   FPUSH      SET	0
      0  981d					      plb2var	_dir
      1  981d				  -	      IF	!FPULL
      2  981d				  -	      pla
      3  981d					      ENDIF
      4  981d		       8d 24 b5 	      sta	_dir
  14973  9820				   _EI_65564
  14974  9820				   FPULL      SET	0
      0  9820					      pbvar	_move_ufos.i
      0  9820					      pbyte	_move_ufos.i
      1  9820		       ad 79 b6 	      lda	_move_ufos.i
      2  9823					      IF	!FPUSH
      3  9823		       48		      pha
      4  9824					      ENDIF
      0  9824					      btow
      1  9824		       a9 00		      lda	#$00
      2  9826		       48		      pha
      0  9827					      dblw
      1  9827		       ba		      tsx
      2  9828		       1e 02 01 	      asl.wx	stack+2
      3  982b		       3e 01 01 	      rol.wx	stack+1
  14978  982b				   FPUSH      SET	1
      0  982e					      pwarray	_ufo_xpos
      1  982e					      IF	!FPULL
      2  982e		       68		      pla
      3  982f		       85 fc		      sta	R1
      4  9831		       68		      pla
      5  9832		       85 fb		      sta	R0
      6  9834				  -	      ELSE
      7  9834				  -	      sta	R0
      8  9834				  -	      sty	R1
      9  9834					      ENDIF
     10  9834		       a9 38		      lda	#<_ufo_xpos
     11  9836		       18		      clc
     12  9837		       65 fb		      adc	R0
     13  9839		       85 fb		      sta	R0
     14  983b		       a9 b5		      lda	#>_ufo_xpos
     15  983d		       65 fc		      adc	R1
     16  983f		       85 fc		      sta	R1
     17  9841				  -	      IF	!FPUSH
     18  9841				  -	      ldy	#$00
     19  9841				  -	      lda	(R0),y
     20  9841				  -	      pha
     21  9841				  -	      iny
     22  9841				  -	      lda	(R0),y
     23  9841				  -	      pha
     24  9841					      ELSE
     25  9841		       a0 00		      ldy	#$00
     26  9843		       b1 fb		      lda	(R0),y
     27  9845		       aa		      tax
     28  9846		       c8		      iny
     29  9847		       b1 fb		      lda	(R0),y
     30  9849		       a8		      tay
     31  984a		       8a		      txa
     32  984b					      ENDIF
  14980  984b				   FPULL      SET	1
  14981  984b				   FPUSH      SET	0
      0  984b					      plw2var	_sav_ufo_xpos
      1  984b				  -	      IF	!FPULL
      2  984b				  -	      pla
      3  984b				  -	      sta	_sav_ufo_xpos+1
      4  984b				  -	      pla
      5  984b				  -	      sta	_sav_ufo_xpos
      6  984b					      ELSE
      7  984b		       8d 3f b6 	      sta	_sav_ufo_xpos
      8  984e		       8c 40 b6 	      sty	_sav_ufo_xpos+1
      9  9851					      ENDIF
  14983  9851				   FPULL      SET	0
  14984  9851				   FPUSH      SET	1
      0  9851					      pbyte	#7
      1  9851		       a9 07		      lda	#7
      2  9853				  -	      IF	!FPUSH
      3  9853				  -	      pha
      4  9853					      ENDIF
  14986  9853				   FPULL      SET	1
  14987  9853				   FPUSH      SET	0
      0  9853					      plb2var	_spr_disable.spr_no
      1  9853				  -	      IF	!FPULL
      2  9853				  -	      pla
      3  9853					      ENDIF
      4  9853		       8d fb b4 	      sta	_spr_disable.spr_no
  14989  9856		       20 7b 71 	      jsr	_Pspr_disable
  14990  9856				   FPULL      SET	0
  14991  9856				   FPUSH      SET	1
      0  9859					      pbyte	#0
      1  9859		       a9 00		      lda	#0
      2  985b				  -	      IF	!FPUSH
      3  985b				  -	      pha
      4  985b					      ENDIF
  14993  985b				   FPULL      SET	1
  14994  985b				   FPUSH      SET	0
      0  985b					      plb2var	_turning
      1  985b				  -	      IF	!FPULL
      2  985b				  -	      pla
      3  985b					      ENDIF
      4  985b		       8d 2b b5 	      sta	_turning
  14996  985b				   FPULL      SET	0
  14997  985b				   FPUSH      SET	1
      0  985e					      pbyte	#128
      1  985e		       a9 80		      lda	#128
      2  9860				  -	      IF	!FPUSH
      3  9860				  -	      pha
      4  9860					      ENDIF
  14999  9860				   FPULL      SET	1
  15000  9860				   FPUSH      SET	0
      0  9860					      pokeb_const_addr	#54290
      1  9860
      2  9860
      3  9860
      4  9860		       d4 12	   .ad	      EQU	#54290
      5  9860				  -	      IF	!FPULL
      6  9860				  -	      pla
      7  9860					      ENDIF
      8  9860		       8d 12 d4 	      sta	.ad
  15002  9860				   FPULL      SET	0
  15003  9860				   FPUSH      SET	1
      0  9863					      pbyte	#5
      1  9863		       a9 05		      lda	#5
      2  9865				  -	      IF	!FPUSH
      3  9865				  -	      pha
      4  9865					      ENDIF
  15005  9865				   FPULL      SET	1
  15006  9865				   FPUSH      SET	0
      0  9865					      plb2var	_aircraft_mode
      1  9865				  -	      IF	!FPULL
      2  9865				  -	      pla
      3  9865					      ENDIF
      4  9865		       8d 35 b6 	      sta	_aircraft_mode
  15008  9865				   FPULL      SET	0
      0  9868					      paddr	_S7
      0  9868					      pword	_S7
      1  9868					      IF	!FPUSH
      2  9868		       a9 4e		      lda	#<_S7
      3  986a		       48		      pha
      4  986b		       a9 ae		      lda	#>_S7
      5  986d		       48		      pha
      6  986e				  -	      ELSE
      7  986e				  -	      lda	#<_S7
      8  986e				  -	      ldy	#>_S7
      9  986e					      ENDIF
      0  986e					      pbyte	#12
      1  986e		       a9 0c		      lda	#12
      2  9870					      IF	!FPUSH
      3  9870		       48		      pha
      4  9871					      ENDIF
      0  9871					      btow
      1  9871		       a9 00		      lda	#$00
      2  9873		       48		      pha
  15012  9873				   FPUSH      SET	1
      0  9874					      pword	#40
      1  9874				  -	      IF	!FPUSH
      2  9874				  -	      lda	#<#40
      3  9874				  -	      pha
      4  9874				  -	      lda	#>#40
      5  9874				  -	      pha
      6  9874					      ELSE
      7  9874		       a9 28		      lda	#<#40
      8  9876		       a0 00		      ldy	#>#40
      9  9878					      ENDIF
  15014  9878				   FPULL      SET	1
  15015  9878				   FPUSH      SET	0
      0  9878					      mulw
      1  9878				  -	      IF	!FPULL
      2  9878				  -	      pla
      3  9878				  -	      sta	R1
      4  9878				  -	      pla
      5  9878				  -	      sta	R0
      6  9878					      ELSE
      7  9878		       85 fb		      sta	R0
      8  987a		       84 fc		      sty	R1
      9  987c					      ENDIF
     10  987c		       68		      pla
     11  987d		       85 fe		      sta	R3
     12  987f		       68		      pla
     13  9880		       85 fd		      sta	R2
     14  9882		       20 0d 08 	      jsr	NUCL_SMUL16
     15  9885					      IF	!FPUSH
     16  9885		       a5 fb		      lda	R0
     17  9887		       48		      pha
     18  9888		       a5 fc		      lda	R1
     19  988a		       48		      pha
     20  988b				  -	      ELSE
     21  988b				  -	      lda	R0
     22  988b				  -	      ldy	R1
     23  988b					      ENDIF
  15017  988b				   FPULL      SET	0
      0  988b					      pbyte	#12
      1  988b		       a9 0c		      lda	#12
      2  988d					      IF	!FPUSH
      3  988d		       48		      pha
      4  988e					      ENDIF
      0  988e					      btow
      1  988e		       a9 00		      lda	#$00
      2  9890		       48		      pha
      0  9891					      addw
      1  9891		       ba		      tsx
      2  9892		       bd 02 01 	      lda.wx	stack+2
      3  9895		       18		      clc
      4  9896		       7d 04 01 	      adc.wx	stack+4
      5  9899		       9d 04 01 	      sta.wx	stack+4
      6  989c		       68		      pla
      7  989d		       7d 03 01 	      adc.wx	stack+3
      8  98a0		       9d 03 01 	      sta.wx	stack+3
      9  98a3		       68		      pla
      0  98a4					      pword	#1024
      1  98a4					      IF	!FPUSH
      2  98a4		       a9 00		      lda	#<#1024
      3  98a6		       48		      pha
      4  98a7		       a9 04		      lda	#>#1024
      5  98a9		       48		      pha
      6  98aa				  -	      ELSE
      7  98aa				  -	      lda	#<#1024
      8  98aa				  -	      ldy	#>#1024
      9  98aa					      ENDIF
      0  98aa					      addw
      1  98aa		       ba		      tsx
      2  98ab		       bd 02 01 	      lda.wx	stack+2
      3  98ae		       18		      clc
      4  98af		       7d 04 01 	      adc.wx	stack+4
      5  98b2		       9d 04 01 	      sta.wx	stack+4
      6  98b5		       68		      pla
      7  98b6		       7d 03 01 	      adc.wx	stack+3
      8  98b9		       9d 03 01 	      sta.wx	stack+3
      9  98bc		       68		      pla
      0  98bd					      textat
      1  98bd					      IF	!FPULL
      2  98bd		       68		      pla
      3  98be		       85 fe		      sta	R3
      4  98c0		       68		      pla
      5  98c1		       85 fd		      sta	R2
      6  98c3				  -	      ELSE
      7  98c3				  -	      sta	R2
      8  98c3				  -	      sty	R3
      9  98c3					      ENDIF
     10  98c3		       68		      pla
     11  98c4		       85 fc		      sta	R1
     12  98c6		       68		      pla
     13  98c7		       85 fb		      sta	R0
     14  98c9		       a0 00		      ldy	#$00
     15  98cb				   .loop
     16  98cb		       b1 fb		      lda	(R0),y
     17  98cd		       f0 06		      beq	.end
     18  98cf		       91 fd		      sta	(R2),y
     19  98d1		       c8		      iny
     20  98d2		       4c cb 98 	      jmp	.loop
     21  98d5				   .end
  15024  98d5				   _EI_57
  15025  98d5
  15026  98d5
  15027  98d5
  15028  98d5
  15029  98d5
  15030  98d5
  15031  98d5
  15032  98d5				   _EI_56
      0  98d5					      nextb	12, _move_ufos.i
      1  98d5
      2  98d5				  -	      IFCONST	XFOR_step_12
      3  98d5				  -
      4  98d5				  -	      clc
      5  98d5				  -	      lda	XFOR_step_12
      6  98d5				  -	      adc	_move_ufos.i
      7  98d5				  -	      sta	_move_ufos.i
      8  98d5				  -
      9  98d5				  -	      bcs	_ENDFOR_12
     10  98d5					      ELSE
     11  98d5
     12  98d5		       ee 79 b6 	      inc	_move_ufos.i
     13  98d8
     14  98d8		       f0 03		      beq	_ENDFOR_12
     15  98da					      ENDIF
     16  98da		       4c cc 96 	      jmp	_FOR_12
  15034  98dd
  15035  98dd
  15036  98dd
  15037  98dd
  15038  98dd
  15039  98dd
  15040  98dd
  15041  98dd				   _ENDFOR_12
  15042  98dd
  15043  98dd
  15044  98dd
  15045  98dd
  15046  98dd
  15047  98dd
  15048  98dd
  15049  98dd				   _EI_55
  15050  98dd		       60		      rts
  15051  98de
  15052  98de
  15053  98de
  15054  98de
  15055  98de
  15056  98de
  15057  98de
  15058  98de				   _Pmove_ufos_end
  15059  98de
  15060  98de
  15061  98de
  15062  98de
  15063  98de
  15064  98de
  15065  98de
  15066  98de				   _Plogo     SUBROUTINE
  15067  98de		       78		      sei
  15068  98de				   FPUSH      SET	1
      0  98df					      pbyte	#204
      1  98df		       a9 cc		      lda	#204
      2  98e1				  -	      IF	!FPUSH
      3  98e1				  -	      pha
      4  98e1					      ENDIF
  15070  98e1				   FPULL      SET	1
  15071  98e1				   FPUSH      SET	0
      0  98e1					      pokeb_const_addr	#53270
      1  98e1
      2  98e1
      3  98e1
      4  98e1		       d0 16	   .ad	      EQU	#53270
      5  98e1				  -	      IF	!FPULL
      6  98e1				  -	      pla
      7  98e1					      ENDIF
      8  98e1		       8d 16 d0 	      sta	.ad
  15073  98e1				   FPULL      SET	0
      0  98e4					      pbyte	#32
      1  98e4		       a9 20		      lda	#32
      2  98e6					      IF	!FPUSH
      3  98e6		       48		      pha
      4  98e7					      ENDIF
      0  98e7					      pword	#1000
      1  98e7					      IF	!FPUSH
      2  98e7		       a9 e8		      lda	#<#1000
      3  98e9		       48		      pha
      4  98ea		       a9 03		      lda	#>#1000
      5  98ec		       48		      pha
      6  98ed				  -	      ELSE
      7  98ed				  -	      lda	#<#1000
      8  98ed				  -	      ldy	#>#1000
      9  98ed					      ENDIF
      0  98ed					      pword	#1024
      1  98ed					      IF	!FPUSH
      2  98ed		       a9 00		      lda	#<#1024
      3  98ef		       48		      pha
      4  98f0		       a9 04		      lda	#>#1024
      5  98f2		       48		      pha
      6  98f3				  -	      ELSE
      7  98f3				  -	      lda	#<#1024
      8  98f3				  -	      ldy	#>#1024
      9  98f3					      ENDIF
      0  98f3					      memset
      1  98f3					      IF	!FPULL
      2  98f3		       68		      pla
      3  98f4		       85 fc		      sta	R1
      4  98f6		       68		      pla
      5  98f7		       85 fb		      sta	R0
      6  98f9				  -	      ELSE
      7  98f9				  -	      sta	R0
      8  98f9				  -	      sty	R1
      9  98f9					      ENDIF
     10  98f9		       68		      pla
     11  98fa		       85 fe		      sta	R3
     12  98fc		       68		      pla
     13  98fd		       85 fd		      sta	R2
     14  98ff		       68		      pla
     15  9900		       20 de 0a 	      jsr	mem_memset
      0  9903					      pbyte	#15
      1  9903		       a9 0f		      lda	#15
      2  9905					      IF	!FPUSH
      3  9905		       48		      pha
      4  9906					      ENDIF
      0  9906					      pword	#1000
      1  9906					      IF	!FPUSH
      2  9906		       a9 e8		      lda	#<#1000
      3  9908		       48		      pha
      4  9909		       a9 03		      lda	#>#1000
      5  990b		       48		      pha
      6  990c				  -	      ELSE
      7  990c				  -	      lda	#<#1000
      8  990c				  -	      ldy	#>#1000
      9  990c					      ENDIF
      0  990c					      pword	#55296
      1  990c					      IF	!FPUSH
      2  990c		       a9 00		      lda	#<#55296
      3  990e		       48		      pha
      4  990f		       a9 d8		      lda	#>#55296
      5  9911		       48		      pha
      6  9912				  -	      ELSE
      7  9912				  -	      lda	#<#55296
      8  9912				  -	      ldy	#>#55296
      9  9912					      ENDIF
      0  9912					      memset
      1  9912					      IF	!FPULL
      2  9912		       68		      pla
      3  9913		       85 fc		      sta	R1
      4  9915		       68		      pla
      5  9916		       85 fb		      sta	R0
      6  9918				  -	      ELSE
      7  9918				  -	      sta	R0
      8  9918				  -	      sty	R1
      9  9918					      ENDIF
     10  9918		       68		      pla
     11  9919		       85 fe		      sta	R3
     12  991b		       68		      pla
     13  991c		       85 fd		      sta	R2
     14  991e		       68		      pla
     15  991f		       20 de 0a 	      jsr	mem_memset
      0  9922					      pword	#448
      1  9922					      IF	!FPUSH
      2  9922		       a9 c0		      lda	#<#448
      3  9924		       48		      pha
      4  9925		       a9 01		      lda	#>#448
      5  9927		       48		      pha
      6  9928				  -	      ELSE
      7  9928				  -	      lda	#<#448
      8  9928				  -	      ldy	#>#448
      9  9928					      ENDIF
      0  9928					      pword	#52736
      1  9928					      IF	!FPUSH
      2  9928		       a9 00		      lda	#<#52736
      3  992a		       48		      pha
      4  992b		       a9 ce		      lda	#>#52736
      5  992d		       48		      pha
      6  992e				  -	      ELSE
      7  992e				  -	      lda	#<#52736
      8  992e				  -	      ldy	#>#52736
      9  992e					      ENDIF
      0  992e					      pword	#10240
      1  992e					      IF	!FPUSH
      2  992e		       a9 00		      lda	#<#10240
      3  9930		       48		      pha
      4  9931		       a9 28		      lda	#>#10240
      5  9933		       48		      pha
      6  9934				  -	      ELSE
      7  9934				  -	      lda	#<#10240
      8  9934				  -	      ldy	#>#10240
      9  9934					      ENDIF
      0  9934					      memcpy
      1  9934					      IF	!FPULL
      2  9934		       68		      pla
      3  9935		       85 fc		      sta	R1
      4  9937		       68		      pla
      5  9938		       85 fb		      sta	R0
      6  993a				  -	      ELSE
      7  993a				  -	      sta	R0
      8  993a				  -	      sty	R1
      9  993a					      ENDIF
     10  993a		       68		      pla
     11  993b		       85 fe		      sta	R3
     12  993d		       68		      pla
     13  993e		       85 fd		      sta	R2
     14  9940		       68		      pla
     15  9941		       85 40		      sta	R5
     16  9943		       68		      pla
     17  9944		       85 3f		      sta	R4
     18  9946		       20 f9 0a 	      jsr	mem_memcpy
      0  9949					      pword	#448
      1  9949					      IF	!FPUSH
      2  9949		       a9 c0		      lda	#<#448
      3  994b		       48		      pha
      4  994c		       a9 01		      lda	#>#448
      5  994e		       48		      pha
      6  994f				  -	      ELSE
      7  994f				  -	      lda	#<#448
      8  994f				  -	      ldy	#>#448
      9  994f					      ENDIF
      0  994f					      pword	#10240
      1  994f					      IF	!FPUSH
      2  994f		       a9 00		      lda	#<#10240
      3  9951		       48		      pha
      4  9952		       a9 28		      lda	#>#10240
      5  9954		       48		      pha
      6  9955				  -	      ELSE
      7  9955				  -	      lda	#<#10240
      8  9955				  -	      ldy	#>#10240
      9  9955					      ENDIF
      0  9955					      pword	#7680
      1  9955					      IF	!FPUSH
      2  9955		       a9 00		      lda	#<#7680
      3  9957		       48		      pha
      4  9958		       a9 1e		      lda	#>#7680
      5  995a		       48		      pha
      6  995b				  -	      ELSE
      7  995b				  -	      lda	#<#7680
      8  995b				  -	      ldy	#>#7680
      9  995b					      ENDIF
      0  995b					      memcpy
      1  995b					      IF	!FPULL
      2  995b		       68		      pla
      3  995c		       85 fc		      sta	R1
      4  995e		       68		      pla
      5  995f		       85 fb		      sta	R0
      6  9961				  -	      ELSE
      7  9961				  -	      sta	R0
      8  9961				  -	      sty	R1
      9  9961					      ENDIF
     10  9961		       68		      pla
     11  9962		       85 fe		      sta	R3
     12  9964		       68		      pla
     13  9965		       85 fd		      sta	R2
     14  9967		       68		      pla
     15  9968		       85 40		      sta	R5
     16  996a		       68		      pla
     17  996b		       85 3f		      sta	R4
     18  996d		       20 f9 0a 	      jsr	mem_memcpy
  15090  996d				   FPUSH      SET	1
      0  9970					      pbyte	#0
      1  9970		       a9 00		      lda	#0
      2  9972				  -	      IF	!FPUSH
      3  9972				  -	      pha
      4  9972					      ENDIF
  15092  9972				   FPULL      SET	1
  15093  9972				   FPUSH      SET	0
      0  9972					      plb2var	_spr_setshape.spr_no
      1  9972				  -	      IF	!FPULL
      2  9972				  -	      pla
      3  9972					      ENDIF
      4  9972		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15095  9972				   FPULL      SET	0
  15096  9972				   FPUSH      SET	1
      0  9975					      pbyte	#160
      1  9975		       a9 a0		      lda	#160
      2  9977				  -	      IF	!FPUSH
      3  9977				  -	      pha
      4  9977					      ENDIF
  15098  9977				   FPULL      SET	1
  15099  9977				   FPUSH      SET	0
      0  9977					      plb2var	_spr_setshape.shape
      1  9977				  -	      IF	!FPULL
      2  9977				  -	      pla
      3  9977					      ENDIF
      4  9977		       8d 06 b5 	      sta	_spr_setshape.shape
  15101  997a		       20 e0 71 	      jsr	_Pspr_setshape
  15102  997a				   FPULL      SET	0
  15103  997a				   FPUSH      SET	1
      0  997d					      pbyte	#0
      1  997d		       a9 00		      lda	#0
      2  997f				  -	      IF	!FPUSH
      3  997f				  -	      pha
      4  997f					      ENDIF
  15105  997f				   FPULL      SET	1
  15106  997f				   FPUSH      SET	0
      0  997f					      plb2var	_spr_sethires.spr_no
      1  997f				  -	      IF	!FPULL
      2  997f				  -	      pla
      3  997f					      ENDIF
      4  997f		       8d 08 b5 	      sta	_spr_sethires.spr_no
  15108  9982		       20 f7 71 	      jsr	_Pspr_sethires
  15109  9982				   FPULL      SET	0
  15110  9982				   FPUSH      SET	1
      0  9985					      pbyte	#0
      1  9985		       a9 00		      lda	#0
      2  9987				  -	      IF	!FPUSH
      3  9987				  -	      pha
      4  9987					      ENDIF
  15112  9987				   FPULL      SET	1
  15113  9987				   FPUSH      SET	0
      0  9987					      plb2var	_spr_setpos.spr_no
      1  9987				  -	      IF	!FPULL
      2  9987				  -	      pla
      3  9987					      ENDIF
      4  9987		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15115  9987				   FPULL      SET	0
      0  998a					      pbyte	#130
      1  998a		       a9 82		      lda	#130
      2  998c					      IF	!FPUSH
      3  998c		       48		      pha
      4  998d					      ENDIF
      0  998d					      btow
      1  998d		       a9 00		      lda	#$00
      2  998f		       48		      pha
      0  9990					      plw2var	_spr_setpos.x
      1  9990					      IF	!FPULL
      2  9990		       68		      pla
      3  9991		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9994		       68		      pla
      5  9995		       8d 02 b5 	      sta	_spr_setpos.x
      6  9998				  -	      ELSE
      7  9998				  -	      sta	_spr_setpos.x
      8  9998				  -	      sty	_spr_setpos.x+1
      9  9998					      ENDIF
  15119  9998				   FPUSH      SET	1
      0  9998					      pbyte	#124
      1  9998		       a9 7c		      lda	#124
      2  999a				  -	      IF	!FPUSH
      3  999a				  -	      pha
      4  999a					      ENDIF
  15121  999a				   FPULL      SET	1
  15122  999a				   FPUSH      SET	0
      0  999a					      plb2var	_spr_setpos.y
      1  999a				  -	      IF	!FPULL
      2  999a				  -	      pla
      3  999a					      ENDIF
      4  999a		       8d 04 b5 	      sta	_spr_setpos.y
  15124  999d		       20 bb 71 	      jsr	_Pspr_setpos
  15125  999d				   FPULL      SET	0
  15126  999d				   FPUSH      SET	1
      0  99a0					      pbyte	#0
      1  99a0		       a9 00		      lda	#0
      2  99a2				  -	      IF	!FPUSH
      3  99a2				  -	      pha
      4  99a2					      ENDIF
  15128  99a2				   FPULL      SET	1
  15129  99a2				   FPUSH      SET	0
      0  99a2					      plb2var	_spr_setcolor.spr_no
      1  99a2				  -	      IF	!FPULL
      2  99a2				  -	      pla
      3  99a2					      ENDIF
      4  99a2		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15131  99a2				   FPULL      SET	0
  15132  99a2				   FPUSH      SET	1
      0  99a5					      pbyte	#1
      1  99a5		       a9 01		      lda	#1
      2  99a7				  -	      IF	!FPUSH
      3  99a7				  -	      pha
      4  99a7					      ENDIF
  15134  99a7				   FPULL      SET	1
  15135  99a7				   FPUSH      SET	0
      0  99a7					      plb2var	_spr_setcolor.color
      1  99a7				  -	      IF	!FPULL
      2  99a7				  -	      pla
      3  99a7					      ENDIF
      4  99a7		       8d 0a b5 	      sta	_spr_setcolor.color
  15137  99aa		       20 04 72 	      jsr	_Pspr_setcolor
  15138  99aa				   FPULL      SET	0
  15139  99aa				   FPUSH      SET	1
      0  99ad					      pbyte	#1
      1  99ad		       a9 01		      lda	#1
      2  99af				  -	      IF	!FPUSH
      3  99af				  -	      pha
      4  99af					      ENDIF
  15141  99af				   FPULL      SET	1
  15142  99af				   FPUSH      SET	0
      0  99af					      plb2var	_spr_setshape.spr_no
      1  99af				  -	      IF	!FPULL
      2  99af				  -	      pla
      3  99af					      ENDIF
      4  99af		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15144  99af				   FPULL      SET	0
  15145  99af				   FPUSH      SET	1
      0  99b2					      pbyte	#161
      1  99b2		       a9 a1		      lda	#161
      2  99b4				  -	      IF	!FPUSH
      3  99b4				  -	      pha
      4  99b4					      ENDIF
  15147  99b4				   FPULL      SET	1
  15148  99b4				   FPUSH      SET	0
      0  99b4					      plb2var	_spr_setshape.shape
      1  99b4				  -	      IF	!FPULL
      2  99b4				  -	      pla
      3  99b4					      ENDIF
      4  99b4		       8d 06 b5 	      sta	_spr_setshape.shape
  15150  99b7		       20 e0 71 	      jsr	_Pspr_setshape
  15151  99b7				   FPULL      SET	0
  15152  99b7				   FPUSH      SET	1
      0  99ba					      pbyte	#1
      1  99ba		       a9 01		      lda	#1
      2  99bc				  -	      IF	!FPUSH
      3  99bc				  -	      pha
      4  99bc					      ENDIF
  15154  99bc				   FPULL      SET	1
  15155  99bc				   FPUSH      SET	0
      0  99bc					      plb2var	_spr_sethires.spr_no
      1  99bc				  -	      IF	!FPULL
      2  99bc				  -	      pla
      3  99bc					      ENDIF
      4  99bc		       8d 08 b5 	      sta	_spr_sethires.spr_no
  15157  99bf		       20 f7 71 	      jsr	_Pspr_sethires
  15158  99bf				   FPULL      SET	0
  15159  99bf				   FPUSH      SET	1
      0  99c2					      pbyte	#1
      1  99c2		       a9 01		      lda	#1
      2  99c4				  -	      IF	!FPUSH
      3  99c4				  -	      pha
      4  99c4					      ENDIF
  15161  99c4				   FPULL      SET	1
  15162  99c4				   FPUSH      SET	0
      0  99c4					      plb2var	_spr_setpos.spr_no
      1  99c4				  -	      IF	!FPULL
      2  99c4				  -	      pla
      3  99c4					      ENDIF
      4  99c4		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15164  99c4				   FPULL      SET	0
      0  99c7					      pbyte	#154
      1  99c7		       a9 9a		      lda	#154
      2  99c9					      IF	!FPUSH
      3  99c9		       48		      pha
      4  99ca					      ENDIF
      0  99ca					      btow
      1  99ca		       a9 00		      lda	#$00
      2  99cc		       48		      pha
      0  99cd					      plw2var	_spr_setpos.x
      1  99cd					      IF	!FPULL
      2  99cd		       68		      pla
      3  99ce		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  99d1		       68		      pla
      5  99d2		       8d 02 b5 	      sta	_spr_setpos.x
      6  99d5				  -	      ELSE
      7  99d5				  -	      sta	_spr_setpos.x
      8  99d5				  -	      sty	_spr_setpos.x+1
      9  99d5					      ENDIF
  15168  99d5				   FPUSH      SET	1
      0  99d5					      pbyte	#124
      1  99d5		       a9 7c		      lda	#124
      2  99d7				  -	      IF	!FPUSH
      3  99d7				  -	      pha
      4  99d7					      ENDIF
  15170  99d7				   FPULL      SET	1
  15171  99d7				   FPUSH      SET	0
      0  99d7					      plb2var	_spr_setpos.y
      1  99d7				  -	      IF	!FPULL
      2  99d7				  -	      pla
      3  99d7					      ENDIF
      4  99d7		       8d 04 b5 	      sta	_spr_setpos.y
  15173  99da		       20 bb 71 	      jsr	_Pspr_setpos
  15174  99da				   FPULL      SET	0
  15175  99da				   FPUSH      SET	1
      0  99dd					      pbyte	#1
      1  99dd		       a9 01		      lda	#1
      2  99df				  -	      IF	!FPUSH
      3  99df				  -	      pha
      4  99df					      ENDIF
  15177  99df				   FPULL      SET	1
  15178  99df				   FPUSH      SET	0
      0  99df					      plb2var	_spr_setcolor.spr_no
      1  99df				  -	      IF	!FPULL
      2  99df				  -	      pla
      3  99df					      ENDIF
      4  99df		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15180  99df				   FPULL      SET	0
  15181  99df				   FPUSH      SET	1
      0  99e2					      pbyte	#1
      1  99e2		       a9 01		      lda	#1
      2  99e4				  -	      IF	!FPUSH
      3  99e4				  -	      pha
      4  99e4					      ENDIF
  15183  99e4				   FPULL      SET	1
  15184  99e4				   FPUSH      SET	0
      0  99e4					      plb2var	_spr_setcolor.color
      1  99e4				  -	      IF	!FPULL
      2  99e4				  -	      pla
      3  99e4					      ENDIF
      4  99e4		       8d 0a b5 	      sta	_spr_setcolor.color
  15186  99e7		       20 04 72 	      jsr	_Pspr_setcolor
  15187  99e7				   FPULL      SET	0
  15188  99e7				   FPUSH      SET	1
      0  99ea					      pbyte	#2
      1  99ea		       a9 02		      lda	#2
      2  99ec				  -	      IF	!FPUSH
      3  99ec				  -	      pha
      4  99ec					      ENDIF
  15190  99ec				   FPULL      SET	1
  15191  99ec				   FPUSH      SET	0
      0  99ec					      plb2var	_spr_setshape.spr_no
      1  99ec				  -	      IF	!FPULL
      2  99ec				  -	      pla
      3  99ec					      ENDIF
      4  99ec		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15193  99ec				   FPULL      SET	0
  15194  99ec				   FPUSH      SET	1
      0  99ef					      pbyte	#165
      1  99ef		       a9 a5		      lda	#165
      2  99f1				  -	      IF	!FPUSH
      3  99f1				  -	      pha
      4  99f1					      ENDIF
  15196  99f1				   FPULL      SET	1
  15197  99f1				   FPUSH      SET	0
      0  99f1					      plb2var	_spr_setshape.shape
      1  99f1				  -	      IF	!FPULL
      2  99f1				  -	      pla
      3  99f1					      ENDIF
      4  99f1		       8d 06 b5 	      sta	_spr_setshape.shape
  15199  99f4		       20 e0 71 	      jsr	_Pspr_setshape
  15200  99f4				   FPULL      SET	0
  15201  99f4				   FPUSH      SET	1
      0  99f7					      pbyte	#2
      1  99f7		       a9 02		      lda	#2
      2  99f9				  -	      IF	!FPUSH
      3  99f9				  -	      pha
      4  99f9					      ENDIF
  15203  99f9				   FPULL      SET	1
  15204  99f9				   FPUSH      SET	0
      0  99f9					      plb2var	_spr_sethires.spr_no
      1  99f9				  -	      IF	!FPULL
      2  99f9				  -	      pla
      3  99f9					      ENDIF
      4  99f9		       8d 08 b5 	      sta	_spr_sethires.spr_no
  15206  99fc		       20 f7 71 	      jsr	_Pspr_sethires
  15207  99fc				   FPULL      SET	0
  15208  99fc				   FPUSH      SET	1
      0  99ff					      pbyte	#2
      1  99ff		       a9 02		      lda	#2
      2  9a01				  -	      IF	!FPUSH
      3  9a01				  -	      pha
      4  9a01					      ENDIF
  15210  9a01				   FPULL      SET	1
  15211  9a01				   FPUSH      SET	0
      0  9a01					      plb2var	_spr_setpos.spr_no
      1  9a01				  -	      IF	!FPULL
      2  9a01				  -	      pla
      3  9a01					      ENDIF
      4  9a01		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15213  9a01				   FPULL      SET	0
      0  9a04					      pbyte	#184
      1  9a04		       a9 b8		      lda	#184
      2  9a06					      IF	!FPUSH
      3  9a06		       48		      pha
      4  9a07					      ENDIF
      0  9a07					      btow
      1  9a07		       a9 00		      lda	#$00
      2  9a09		       48		      pha
      0  9a0a					      plw2var	_spr_setpos.x
      1  9a0a					      IF	!FPULL
      2  9a0a		       68		      pla
      3  9a0b		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9a0e		       68		      pla
      5  9a0f		       8d 02 b5 	      sta	_spr_setpos.x
      6  9a12				  -	      ELSE
      7  9a12				  -	      sta	_spr_setpos.x
      8  9a12				  -	      sty	_spr_setpos.x+1
      9  9a12					      ENDIF
  15217  9a12				   FPUSH      SET	1
      0  9a12					      pbyte	#124
      1  9a12		       a9 7c		      lda	#124
      2  9a14				  -	      IF	!FPUSH
      3  9a14				  -	      pha
      4  9a14					      ENDIF
  15219  9a14				   FPULL      SET	1
  15220  9a14				   FPUSH      SET	0
      0  9a14					      plb2var	_spr_setpos.y
      1  9a14				  -	      IF	!FPULL
      2  9a14				  -	      pla
      3  9a14					      ENDIF
      4  9a14		       8d 04 b5 	      sta	_spr_setpos.y
  15222  9a17		       20 bb 71 	      jsr	_Pspr_setpos
  15223  9a17				   FPULL      SET	0
  15224  9a17				   FPUSH      SET	1
      0  9a1a					      pbyte	#2
      1  9a1a		       a9 02		      lda	#2
      2  9a1c				  -	      IF	!FPUSH
      3  9a1c				  -	      pha
      4  9a1c					      ENDIF
  15226  9a1c				   FPULL      SET	1
  15227  9a1c				   FPUSH      SET	0
      0  9a1c					      plb2var	_spr_setcolor.spr_no
      1  9a1c				  -	      IF	!FPULL
      2  9a1c				  -	      pla
      3  9a1c					      ENDIF
      4  9a1c		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15229  9a1c				   FPULL      SET	0
  15230  9a1c				   FPUSH      SET	1
      0  9a1f					      pbyte	#1
      1  9a1f		       a9 01		      lda	#1
      2  9a21				  -	      IF	!FPUSH
      3  9a21				  -	      pha
      4  9a21					      ENDIF
  15232  9a21				   FPULL      SET	1
  15233  9a21				   FPUSH      SET	0
      0  9a21					      plb2var	_spr_setcolor.color
      1  9a21				  -	      IF	!FPULL
      2  9a21				  -	      pla
      3  9a21					      ENDIF
      4  9a21		       8d 0a b5 	      sta	_spr_setcolor.color
  15235  9a24		       20 04 72 	      jsr	_Pspr_setcolor
  15236  9a24				   FPULL      SET	0
  15237  9a24				   FPUSH      SET	1
      0  9a27					      pbyte	#3
      1  9a27		       a9 03		      lda	#3
      2  9a29				  -	      IF	!FPUSH
      3  9a29				  -	      pha
      4  9a29					      ENDIF
  15239  9a29				   FPULL      SET	1
  15240  9a29				   FPUSH      SET	0
      0  9a29					      plb2var	_spr_setshape.spr_no
      1  9a29				  -	      IF	!FPULL
      2  9a29				  -	      pla
      3  9a29					      ENDIF
      4  9a29		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15242  9a29				   FPULL      SET	0
  15243  9a29				   FPUSH      SET	1
      0  9a2c					      pbyte	#162
      1  9a2c		       a9 a2		      lda	#162
      2  9a2e				  -	      IF	!FPUSH
      3  9a2e				  -	      pha
      4  9a2e					      ENDIF
  15245  9a2e				   FPULL      SET	1
  15246  9a2e				   FPUSH      SET	0
      0  9a2e					      plb2var	_spr_setshape.shape
      1  9a2e				  -	      IF	!FPULL
      2  9a2e				  -	      pla
      3  9a2e					      ENDIF
      4  9a2e		       8d 06 b5 	      sta	_spr_setshape.shape
  15248  9a31		       20 e0 71 	      jsr	_Pspr_setshape
  15249  9a31				   FPULL      SET	0
  15250  9a31				   FPUSH      SET	1
      0  9a34					      pbyte	#3
      1  9a34		       a9 03		      lda	#3
      2  9a36				  -	      IF	!FPUSH
      3  9a36				  -	      pha
      4  9a36					      ENDIF
  15252  9a36				   FPULL      SET	1
  15253  9a36				   FPUSH      SET	0
      0  9a36					      plb2var	_spr_sethires.spr_no
      1  9a36				  -	      IF	!FPULL
      2  9a36				  -	      pla
      3  9a36					      ENDIF
      4  9a36		       8d 08 b5 	      sta	_spr_sethires.spr_no
  15255  9a39		       20 f7 71 	      jsr	_Pspr_sethires
  15256  9a39				   FPULL      SET	0
  15257  9a39				   FPUSH      SET	1
      0  9a3c					      pbyte	#3
      1  9a3c		       a9 03		      lda	#3
      2  9a3e				  -	      IF	!FPUSH
      3  9a3e				  -	      pha
      4  9a3e					      ENDIF
  15259  9a3e				   FPULL      SET	1
  15260  9a3e				   FPUSH      SET	0
      0  9a3e					      plb2var	_spr_setpos.spr_no
      1  9a3e				  -	      IF	!FPULL
      2  9a3e				  -	      pla
      3  9a3e					      ENDIF
      4  9a3e		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15262  9a3e				   FPULL      SET	0
      0  9a41					      pbyte	#194
      1  9a41		       a9 c2		      lda	#194
      2  9a43					      IF	!FPUSH
      3  9a43		       48		      pha
      4  9a44					      ENDIF
      0  9a44					      btow
      1  9a44		       a9 00		      lda	#$00
      2  9a46		       48		      pha
      0  9a47					      plw2var	_spr_setpos.x
      1  9a47					      IF	!FPULL
      2  9a47		       68		      pla
      3  9a48		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9a4b		       68		      pla
      5  9a4c		       8d 02 b5 	      sta	_spr_setpos.x
      6  9a4f				  -	      ELSE
      7  9a4f				  -	      sta	_spr_setpos.x
      8  9a4f				  -	      sty	_spr_setpos.x+1
      9  9a4f					      ENDIF
  15266  9a4f				   FPUSH      SET	1
      0  9a4f					      pbyte	#124
      1  9a4f		       a9 7c		      lda	#124
      2  9a51				  -	      IF	!FPUSH
      3  9a51				  -	      pha
      4  9a51					      ENDIF
  15268  9a51				   FPULL      SET	1
  15269  9a51				   FPUSH      SET	0
      0  9a51					      plb2var	_spr_setpos.y
      1  9a51				  -	      IF	!FPULL
      2  9a51				  -	      pla
      3  9a51					      ENDIF
      4  9a51		       8d 04 b5 	      sta	_spr_setpos.y
  15271  9a54		       20 bb 71 	      jsr	_Pspr_setpos
  15272  9a54				   FPULL      SET	0
  15273  9a54				   FPUSH      SET	1
      0  9a57					      pbyte	#3
      1  9a57		       a9 03		      lda	#3
      2  9a59				  -	      IF	!FPUSH
      3  9a59				  -	      pha
      4  9a59					      ENDIF
  15275  9a59				   FPULL      SET	1
  15276  9a59				   FPUSH      SET	0
      0  9a59					      plb2var	_spr_setcolor.spr_no
      1  9a59				  -	      IF	!FPULL
      2  9a59				  -	      pla
      3  9a59					      ENDIF
      4  9a59		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15278  9a59				   FPULL      SET	0
  15279  9a59				   FPUSH      SET	1
      0  9a5c					      pbyte	#6
      1  9a5c		       a9 06		      lda	#6
      2  9a5e				  -	      IF	!FPUSH
      3  9a5e				  -	      pha
      4  9a5e					      ENDIF
  15281  9a5e				   FPULL      SET	1
  15282  9a5e				   FPUSH      SET	0
      0  9a5e					      plb2var	_spr_setcolor.color
      1  9a5e				  -	      IF	!FPULL
      2  9a5e				  -	      pla
      3  9a5e					      ENDIF
      4  9a5e		       8d 0a b5 	      sta	_spr_setcolor.color
  15284  9a61		       20 04 72 	      jsr	_Pspr_setcolor
  15285  9a61				   FPULL      SET	0
  15286  9a61				   FPUSH      SET	1
      0  9a64					      pbyte	#4
      1  9a64		       a9 04		      lda	#4
      2  9a66				  -	      IF	!FPUSH
      3  9a66				  -	      pha
      4  9a66					      ENDIF
  15288  9a66				   FPULL      SET	1
  15289  9a66				   FPUSH      SET	0
      0  9a66					      plb2var	_spr_setshape.spr_no
      1  9a66				  -	      IF	!FPULL
      2  9a66				  -	      pla
      3  9a66					      ENDIF
      4  9a66		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15291  9a66				   FPULL      SET	0
  15292  9a66				   FPUSH      SET	1
      0  9a69					      pbyte	#163
      1  9a69		       a9 a3		      lda	#163
      2  9a6b				  -	      IF	!FPUSH
      3  9a6b				  -	      pha
      4  9a6b					      ENDIF
  15294  9a6b				   FPULL      SET	1
  15295  9a6b				   FPUSH      SET	0
      0  9a6b					      plb2var	_spr_setshape.shape
      1  9a6b				  -	      IF	!FPULL
      2  9a6b				  -	      pla
      3  9a6b					      ENDIF
      4  9a6b		       8d 06 b5 	      sta	_spr_setshape.shape
  15297  9a6e		       20 e0 71 	      jsr	_Pspr_setshape
  15298  9a6e				   FPULL      SET	0
  15299  9a6e				   FPUSH      SET	1
      0  9a71					      pbyte	#4
      1  9a71		       a9 04		      lda	#4
      2  9a73				  -	      IF	!FPUSH
      3  9a73				  -	      pha
      4  9a73					      ENDIF
  15301  9a73				   FPULL      SET	1
  15302  9a73				   FPUSH      SET	0
      0  9a73					      plb2var	_spr_sethires.spr_no
      1  9a73				  -	      IF	!FPULL
      2  9a73				  -	      pla
      3  9a73					      ENDIF
      4  9a73		       8d 08 b5 	      sta	_spr_sethires.spr_no
  15304  9a76		       20 f7 71 	      jsr	_Pspr_sethires
  15305  9a76				   FPULL      SET	0
  15306  9a76				   FPUSH      SET	1
      0  9a79					      pbyte	#4
      1  9a79		       a9 04		      lda	#4
      2  9a7b				  -	      IF	!FPUSH
      3  9a7b				  -	      pha
      4  9a7b					      ENDIF
  15308  9a7b				   FPULL      SET	1
  15309  9a7b				   FPUSH      SET	0
      0  9a7b					      plb2var	_spr_setpos.spr_no
      1  9a7b				  -	      IF	!FPULL
      2  9a7b				  -	      pla
      3  9a7b					      ENDIF
      4  9a7b		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15311  9a7b				   FPULL      SET	0
      0  9a7e					      pbyte	#194
      1  9a7e		       a9 c2		      lda	#194
      2  9a80					      IF	!FPUSH
      3  9a80		       48		      pha
      4  9a81					      ENDIF
      0  9a81					      btow
      1  9a81		       a9 00		      lda	#$00
      2  9a83		       48		      pha
      0  9a84					      plw2var	_spr_setpos.x
      1  9a84					      IF	!FPULL
      2  9a84		       68		      pla
      3  9a85		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9a88		       68		      pla
      5  9a89		       8d 02 b5 	      sta	_spr_setpos.x
      6  9a8c				  -	      ELSE
      7  9a8c				  -	      sta	_spr_setpos.x
      8  9a8c				  -	      sty	_spr_setpos.x+1
      9  9a8c					      ENDIF
  15315  9a8c				   FPUSH      SET	1
      0  9a8c					      pbyte	#124
      1  9a8c		       a9 7c		      lda	#124
      2  9a8e				  -	      IF	!FPUSH
      3  9a8e				  -	      pha
      4  9a8e					      ENDIF
  15317  9a8e				   FPULL      SET	1
  15318  9a8e				   FPUSH      SET	0
      0  9a8e					      plb2var	_spr_setpos.y
      1  9a8e				  -	      IF	!FPULL
      2  9a8e				  -	      pla
      3  9a8e					      ENDIF
      4  9a8e		       8d 04 b5 	      sta	_spr_setpos.y
  15320  9a91		       20 bb 71 	      jsr	_Pspr_setpos
  15321  9a91				   FPULL      SET	0
  15322  9a91				   FPUSH      SET	1
      0  9a94					      pbyte	#4
      1  9a94		       a9 04		      lda	#4
      2  9a96				  -	      IF	!FPUSH
      3  9a96				  -	      pha
      4  9a96					      ENDIF
  15324  9a96				   FPULL      SET	1
  15325  9a96				   FPUSH      SET	0
      0  9a96					      plb2var	_spr_setcolor.spr_no
      1  9a96				  -	      IF	!FPULL
      2  9a96				  -	      pla
      3  9a96					      ENDIF
      4  9a96		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15327  9a96				   FPULL      SET	0
  15328  9a96				   FPUSH      SET	1
      0  9a99					      pbyte	#1
      1  9a99		       a9 01		      lda	#1
      2  9a9b				  -	      IF	!FPUSH
      3  9a9b				  -	      pha
      4  9a9b					      ENDIF
  15330  9a9b				   FPULL      SET	1
  15331  9a9b				   FPUSH      SET	0
      0  9a9b					      plb2var	_spr_setcolor.color
      1  9a9b				  -	      IF	!FPULL
      2  9a9b				  -	      pla
      3  9a9b					      ENDIF
      4  9a9b		       8d 0a b5 	      sta	_spr_setcolor.color
  15333  9a9e		       20 04 72 	      jsr	_Pspr_setcolor
  15334  9a9e				   FPULL      SET	0
  15335  9a9e				   FPUSH      SET	1
      0  9aa1					      pbyte	#5
      1  9aa1		       a9 05		      lda	#5
      2  9aa3				  -	      IF	!FPUSH
      3  9aa3				  -	      pha
      4  9aa3					      ENDIF
  15337  9aa3				   FPULL      SET	1
  15338  9aa3				   FPUSH      SET	0
      0  9aa3					      plb2var	_spr_setshape.spr_no
      1  9aa3				  -	      IF	!FPULL
      2  9aa3				  -	      pla
      3  9aa3					      ENDIF
      4  9aa3		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15340  9aa3				   FPULL      SET	0
  15341  9aa3				   FPUSH      SET	1
      0  9aa6					      pbyte	#164
      1  9aa6		       a9 a4		      lda	#164
      2  9aa8				  -	      IF	!FPUSH
      3  9aa8				  -	      pha
      4  9aa8					      ENDIF
  15343  9aa8				   FPULL      SET	1
  15344  9aa8				   FPUSH      SET	0
      0  9aa8					      plb2var	_spr_setshape.shape
      1  9aa8				  -	      IF	!FPULL
      2  9aa8				  -	      pla
      3  9aa8					      ENDIF
      4  9aa8		       8d 06 b5 	      sta	_spr_setshape.shape
  15346  9aab		       20 e0 71 	      jsr	_Pspr_setshape
  15347  9aab				   FPULL      SET	0
  15348  9aab				   FPUSH      SET	1
      0  9aae					      pbyte	#5
      1  9aae		       a9 05		      lda	#5
      2  9ab0				  -	      IF	!FPUSH
      3  9ab0				  -	      pha
      4  9ab0					      ENDIF
  15350  9ab0				   FPULL      SET	1
  15351  9ab0				   FPUSH      SET	0
      0  9ab0					      plb2var	_spr_sethires.spr_no
      1  9ab0				  -	      IF	!FPULL
      2  9ab0				  -	      pla
      3  9ab0					      ENDIF
      4  9ab0		       8d 08 b5 	      sta	_spr_sethires.spr_no
  15353  9ab3		       20 f7 71 	      jsr	_Pspr_sethires
  15354  9ab3				   FPULL      SET	0
  15355  9ab3				   FPUSH      SET	1
      0  9ab6					      pbyte	#5
      1  9ab6		       a9 05		      lda	#5
      2  9ab8				  -	      IF	!FPUSH
      3  9ab8				  -	      pha
      4  9ab8					      ENDIF
  15357  9ab8				   FPULL      SET	1
  15358  9ab8				   FPUSH      SET	0
      0  9ab8					      plb2var	_spr_setpos.spr_no
      1  9ab8				  -	      IF	!FPULL
      2  9ab8				  -	      pla
      3  9ab8					      ENDIF
      4  9ab8		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15360  9ab8				   FPULL      SET	0
      0  9abb					      pbyte	#194
      1  9abb		       a9 c2		      lda	#194
      2  9abd					      IF	!FPUSH
      3  9abd		       48		      pha
      4  9abe					      ENDIF
      0  9abe					      btow
      1  9abe		       a9 00		      lda	#$00
      2  9ac0		       48		      pha
      0  9ac1					      plw2var	_spr_setpos.x
      1  9ac1					      IF	!FPULL
      2  9ac1		       68		      pla
      3  9ac2		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9ac5		       68		      pla
      5  9ac6		       8d 02 b5 	      sta	_spr_setpos.x
      6  9ac9				  -	      ELSE
      7  9ac9				  -	      sta	_spr_setpos.x
      8  9ac9				  -	      sty	_spr_setpos.x+1
      9  9ac9					      ENDIF
  15364  9ac9				   FPUSH      SET	1
      0  9ac9					      pbyte	#124
      1  9ac9		       a9 7c		      lda	#124
      2  9acb				  -	      IF	!FPUSH
      3  9acb				  -	      pha
      4  9acb					      ENDIF
  15366  9acb				   FPULL      SET	1
  15367  9acb				   FPUSH      SET	0
      0  9acb					      plb2var	_spr_setpos.y
      1  9acb				  -	      IF	!FPULL
      2  9acb				  -	      pla
      3  9acb					      ENDIF
      4  9acb		       8d 04 b5 	      sta	_spr_setpos.y
  15369  9ace		       20 bb 71 	      jsr	_Pspr_setpos
  15370  9ace				   FPULL      SET	0
  15371  9ace				   FPUSH      SET	1
      0  9ad1					      pbyte	#5
      1  9ad1		       a9 05		      lda	#5
      2  9ad3				  -	      IF	!FPUSH
      3  9ad3				  -	      pha
      4  9ad3					      ENDIF
  15373  9ad3				   FPULL      SET	1
  15374  9ad3				   FPUSH      SET	0
      0  9ad3					      plb2var	_spr_setcolor.spr_no
      1  9ad3				  -	      IF	!FPULL
      2  9ad3				  -	      pla
      3  9ad3					      ENDIF
      4  9ad3		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15376  9ad3				   FPULL      SET	0
  15377  9ad3				   FPUSH      SET	1
      0  9ad6					      pbyte	#14
      1  9ad6		       a9 0e		      lda	#14
      2  9ad8				  -	      IF	!FPUSH
      3  9ad8				  -	      pha
      4  9ad8					      ENDIF
  15379  9ad8				   FPULL      SET	1
  15380  9ad8				   FPUSH      SET	0
      0  9ad8					      plb2var	_spr_setcolor.color
      1  9ad8				  -	      IF	!FPULL
      2  9ad8				  -	      pla
      3  9ad8					      ENDIF
      4  9ad8		       8d 0a b5 	      sta	_spr_setcolor.color
  15382  9adb		       20 04 72 	      jsr	_Pspr_setcolor
  15383  9adb				   FPULL      SET	0
  15384  9adb				   FPUSH      SET	1
      0  9ade					      pbyte	#6
      1  9ade		       a9 06		      lda	#6
      2  9ae0				  -	      IF	!FPUSH
      3  9ae0				  -	      pha
      4  9ae0					      ENDIF
  15386  9ae0				   FPULL      SET	1
  15387  9ae0				   FPUSH      SET	0
      0  9ae0					      plb2var	_spr_setshape.spr_no
      1  9ae0				  -	      IF	!FPULL
      2  9ae0				  -	      pla
      3  9ae0					      ENDIF
      4  9ae0		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15389  9ae0				   FPULL      SET	0
  15390  9ae0				   FPUSH      SET	1
      0  9ae3					      pbyte	#166
      1  9ae3		       a9 a6		      lda	#166
      2  9ae5				  -	      IF	!FPUSH
      3  9ae5				  -	      pha
      4  9ae5					      ENDIF
  15392  9ae5				   FPULL      SET	1
  15393  9ae5				   FPUSH      SET	0
      0  9ae5					      plb2var	_spr_setshape.shape
      1  9ae5				  -	      IF	!FPULL
      2  9ae5				  -	      pla
      3  9ae5					      ENDIF
      4  9ae5		       8d 06 b5 	      sta	_spr_setshape.shape
  15395  9ae8		       20 e0 71 	      jsr	_Pspr_setshape
  15396  9ae8				   FPULL      SET	0
  15397  9ae8				   FPUSH      SET	1
      0  9aeb					      pbyte	#6
      1  9aeb		       a9 06		      lda	#6
      2  9aed				  -	      IF	!FPUSH
      3  9aed				  -	      pha
      4  9aed					      ENDIF
  15399  9aed				   FPULL      SET	1
  15400  9aed				   FPUSH      SET	0
      0  9aed					      plb2var	_spr_sethires.spr_no
      1  9aed				  -	      IF	!FPULL
      2  9aed				  -	      pla
      3  9aed					      ENDIF
      4  9aed		       8d 08 b5 	      sta	_spr_sethires.spr_no
  15402  9af0		       20 f7 71 	      jsr	_Pspr_sethires
  15403  9af0				   FPULL      SET	0
  15404  9af0				   FPUSH      SET	1
      0  9af3					      pbyte	#6
      1  9af3		       a9 06		      lda	#6
      2  9af5				  -	      IF	!FPUSH
      3  9af5				  -	      pha
      4  9af5					      ENDIF
  15406  9af5				   FPULL      SET	1
  15407  9af5				   FPUSH      SET	0
      0  9af5					      plb2var	_spr_setpos.spr_no
      1  9af5				  -	      IF	!FPULL
      2  9af5				  -	      pla
      3  9af5					      ENDIF
      4  9af5		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15409  9af5				   FPULL      SET	0
      0  9af8					      pbyte	#217
      1  9af8		       a9 d9		      lda	#217
      2  9afa					      IF	!FPUSH
      3  9afa		       48		      pha
      4  9afb					      ENDIF
      0  9afb					      btow
      1  9afb		       a9 00		      lda	#$00
      2  9afd		       48		      pha
      0  9afe					      plw2var	_spr_setpos.x
      1  9afe					      IF	!FPULL
      2  9afe		       68		      pla
      3  9aff		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9b02		       68		      pla
      5  9b03		       8d 02 b5 	      sta	_spr_setpos.x
      6  9b06				  -	      ELSE
      7  9b06				  -	      sta	_spr_setpos.x
      8  9b06				  -	      sty	_spr_setpos.x+1
      9  9b06					      ENDIF
  15413  9b06				   FPUSH      SET	1
      0  9b06					      pbyte	#124
      1  9b06		       a9 7c		      lda	#124
      2  9b08				  -	      IF	!FPUSH
      3  9b08				  -	      pha
      4  9b08					      ENDIF
  15415  9b08				   FPULL      SET	1
  15416  9b08				   FPUSH      SET	0
      0  9b08					      plb2var	_spr_setpos.y
      1  9b08				  -	      IF	!FPULL
      2  9b08				  -	      pla
      3  9b08					      ENDIF
      4  9b08		       8d 04 b5 	      sta	_spr_setpos.y
  15418  9b0b		       20 bb 71 	      jsr	_Pspr_setpos
  15419  9b0b				   FPULL      SET	0
  15420  9b0b				   FPUSH      SET	1
      0  9b0e					      pbyte	#6
      1  9b0e		       a9 06		      lda	#6
      2  9b10				  -	      IF	!FPUSH
      3  9b10				  -	      pha
      4  9b10					      ENDIF
  15422  9b10				   FPULL      SET	1
  15423  9b10				   FPUSH      SET	0
      0  9b10					      plb2var	_spr_setcolor.spr_no
      1  9b10				  -	      IF	!FPULL
      2  9b10				  -	      pla
      3  9b10					      ENDIF
      4  9b10		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15425  9b10				   FPULL      SET	0
  15426  9b10				   FPUSH      SET	1
      0  9b13					      pbyte	#1
      1  9b13		       a9 01		      lda	#1
      2  9b15				  -	      IF	!FPUSH
      3  9b15				  -	      pha
      4  9b15					      ENDIF
  15428  9b15				   FPULL      SET	1
  15429  9b15				   FPUSH      SET	0
      0  9b15					      plb2var	_spr_setcolor.color
      1  9b15				  -	      IF	!FPULL
      2  9b15				  -	      pla
      3  9b15					      ENDIF
      4  9b15		       8d 0a b5 	      sta	_spr_setcolor.color
  15431  9b18		       20 04 72 	      jsr	_Pspr_setcolor
  15432  9b18				   FPULL      SET	0
  15433  9b18				   FPUSH      SET	1
      0  9b1b					      pbyte	#0
      1  9b1b		       a9 00		      lda	#0
      2  9b1d				  -	      IF	!FPUSH
      3  9b1d				  -	      pha
      4  9b1d					      ENDIF
  15435  9b1d				   FPULL      SET	1
  15436  9b1d				   FPUSH      SET	0
      0  9b1d					      plb2var	_logo.j
      1  9b1d				  -	      IF	!FPULL
      2  9b1d				  -	      pla
      3  9b1d					      ENDIF
      4  9b1d		       8d 7b b6 	      sta	_logo.j
  15438  9b1d				   FPULL      SET	0
  15439  9b1d				   FPUSH      SET	1
      0  9b20					      pbyte	#6
      1  9b20		       a9 06		      lda	#6
      2  9b22				  -	      IF	!FPUSH
      3  9b22				  -	      pha
      4  9b22					      ENDIF
  15441  9b22				   FPULL      SET	1
  15442  9b22				   FPUSH      SET	0
      0  9b22					      plb2var	XFOR_max_13
      1  9b22				  -	      IF	!FPULL
      2  9b22				  -	      pla
      3  9b22					      ENDIF
      4  9b22		       8d 7c b6 	      sta	XFOR_max_13
  15444  9b25				   _FOR_13
      0  9b25					      forb	13, _logo.j
      1  9b25
      2  9b25		       ad 7c b6 	      lda	XFOR_max_13
      3  9b28		       cd 7b b6 	      cmp	_logo.j
      4  9b2b		       b0 03		      bcs	.enter
      5  9b2d
      6  9b2d		       4c 41 9b 	      jmp	_ENDFOR_13
      7  9b30				   .enter
  15446  9b30				   FPULL      SET	0
  15447  9b30				   FPUSH      SET	1
      0  9b30					      pbvar	_logo.j
      0  9b30					      pbyte	_logo.j
      1  9b30		       ad 7b b6 	      lda	_logo.j
      2  9b33				  -	      IF	!FPUSH
      3  9b33				  -	      pha
      4  9b33					      ENDIF
  15449  9b33				   FPULL      SET	1
  15450  9b33				   FPUSH      SET	0
      0  9b33					      plb2var	_spr_enable.spr_no
      1  9b33				  -	      IF	!FPULL
      2  9b33				  -	      pla
      3  9b33					      ENDIF
      4  9b33		       8d fa b4 	      sta	_spr_enable.spr_no
  15452  9b36		       20 6e 71 	      jsr	_Pspr_enable
      0  9b39					      nextb	13, _logo.j
      1  9b39
      2  9b39				  -	      IFCONST	XFOR_step_13
      3  9b39				  -
      4  9b39				  -	      clc
      5  9b39				  -	      lda	XFOR_step_13
      6  9b39				  -	      adc	_logo.j
      7  9b39				  -	      sta	_logo.j
      8  9b39				  -
      9  9b39				  -	      bcs	_ENDFOR_13
     10  9b39					      ELSE
     11  9b39
     12  9b39		       ee 7b b6 	      inc	_logo.j
     13  9b3c
     14  9b3c		       f0 03		      beq	_ENDFOR_13
     15  9b3e					      ENDIF
     16  9b3e		       4c 25 9b 	      jmp	_FOR_13
  15454  9b41				   _ENDFOR_13
  15455  9b41				   FPULL      SET	0
      0  9b41					      paddr	_S8
      0  9b41					      pword	_S8
      1  9b41					      IF	!FPUSH
      2  9b41		       a9 5e		      lda	#<_S8
      3  9b43		       48		      pha
      4  9b44		       a9 ae		      lda	#>_S8
      5  9b46		       48		      pha
      6  9b47				  -	      ELSE
      7  9b47				  -	      lda	#<_S8
      8  9b47				  -	      ldy	#>_S8
      9  9b47					      ENDIF
      0  9b47					      pbyte	#13
      1  9b47		       a9 0d		      lda	#13
      2  9b49					      IF	!FPUSH
      3  9b49		       48		      pha
      4  9b4a					      ENDIF
      0  9b4a					      btow
      1  9b4a		       a9 00		      lda	#$00
      2  9b4c		       48		      pha
  15459  9b4c				   FPUSH      SET	1
      0  9b4d					      pword	#40
      1  9b4d				  -	      IF	!FPUSH
      2  9b4d				  -	      lda	#<#40
      3  9b4d				  -	      pha
      4  9b4d				  -	      lda	#>#40
      5  9b4d				  -	      pha
      6  9b4d					      ELSE
      7  9b4d		       a9 28		      lda	#<#40
      8  9b4f		       a0 00		      ldy	#>#40
      9  9b51					      ENDIF
  15461  9b51				   FPULL      SET	1
  15462  9b51				   FPUSH      SET	0
      0  9b51					      mulw
      1  9b51				  -	      IF	!FPULL
      2  9b51				  -	      pla
      3  9b51				  -	      sta	R1
      4  9b51				  -	      pla
      5  9b51				  -	      sta	R0
      6  9b51					      ELSE
      7  9b51		       85 fb		      sta	R0
      8  9b53		       84 fc		      sty	R1
      9  9b55					      ENDIF
     10  9b55		       68		      pla
     11  9b56		       85 fe		      sta	R3
     12  9b58		       68		      pla
     13  9b59		       85 fd		      sta	R2
     14  9b5b		       20 0d 08 	      jsr	NUCL_SMUL16
     15  9b5e					      IF	!FPUSH
     16  9b5e		       a5 fb		      lda	R0
     17  9b60		       48		      pha
     18  9b61		       a5 fc		      lda	R1
     19  9b63		       48		      pha
     20  9b64				  -	      ELSE
     21  9b64				  -	      lda	R0
     22  9b64				  -	      ldy	R1
     23  9b64					      ENDIF
  15464  9b64				   FPULL      SET	0
      0  9b64					      pbyte	#16
      1  9b64		       a9 10		      lda	#16
      2  9b66					      IF	!FPUSH
      3  9b66		       48		      pha
      4  9b67					      ENDIF
      0  9b67					      btow
      1  9b67		       a9 00		      lda	#$00
      2  9b69		       48		      pha
      0  9b6a					      addw
      1  9b6a		       ba		      tsx
      2  9b6b		       bd 02 01 	      lda.wx	stack+2
      3  9b6e		       18		      clc
      4  9b6f		       7d 04 01 	      adc.wx	stack+4
      5  9b72		       9d 04 01 	      sta.wx	stack+4
      6  9b75		       68		      pla
      7  9b76		       7d 03 01 	      adc.wx	stack+3
      8  9b79		       9d 03 01 	      sta.wx	stack+3
      9  9b7c		       68		      pla
      0  9b7d					      pword	#1024
      1  9b7d					      IF	!FPUSH
      2  9b7d		       a9 00		      lda	#<#1024
      3  9b7f		       48		      pha
      4  9b80		       a9 04		      lda	#>#1024
      5  9b82		       48		      pha
      6  9b83				  -	      ELSE
      7  9b83				  -	      lda	#<#1024
      8  9b83				  -	      ldy	#>#1024
      9  9b83					      ENDIF
      0  9b83					      addw
      1  9b83		       ba		      tsx
      2  9b84		       bd 02 01 	      lda.wx	stack+2
      3  9b87		       18		      clc
      4  9b88		       7d 04 01 	      adc.wx	stack+4
      5  9b8b		       9d 04 01 	      sta.wx	stack+4
      6  9b8e		       68		      pla
      7  9b8f		       7d 03 01 	      adc.wx	stack+3
      8  9b92		       9d 03 01 	      sta.wx	stack+3
      9  9b95		       68		      pla
      0  9b96					      textat
      1  9b96					      IF	!FPULL
      2  9b96		       68		      pla
      3  9b97		       85 fe		      sta	R3
      4  9b99		       68		      pla
      5  9b9a		       85 fd		      sta	R2
      6  9b9c				  -	      ELSE
      7  9b9c				  -	      sta	R2
      8  9b9c				  -	      sty	R3
      9  9b9c					      ENDIF
     10  9b9c		       68		      pla
     11  9b9d		       85 fc		      sta	R1
     12  9b9f		       68		      pla
     13  9ba0		       85 fb		      sta	R0
     14  9ba2		       a0 00		      ldy	#$00
     15  9ba4				   .loop
     16  9ba4		       b1 fb		      lda	(R0),y
     17  9ba6		       f0 06		      beq	.end
     18  9ba8		       91 fd		      sta	(R2),y
     19  9baa		       c8		      iny
     20  9bab		       4c a4 9b 	      jmp	.loop
     21  9bae				   .end
  15471  9bae				   FPUSH      SET	1
      0  9bae					      pword	#21571
      1  9bae				  -	      IF	!FPUSH
      2  9bae				  -	      lda	#<#21571
      3  9bae				  -	      pha
      4  9bae				  -	      lda	#>#21571
      5  9bae				  -	      pha
      6  9bae					      ELSE
      7  9bae		       a9 43		      lda	#<#21571
      8  9bb0		       a0 54		      ldy	#>#21571
      9  9bb2					      ENDIF
  15473  9bb2				   FPULL      SET	1
  15474  9bb2				   FPUSH      SET	0
      0  9bb2					      sys
      1  9bb2				  -	      IF	!FPULL
      2  9bb2				  -	      pla
      3  9bb2				  -	      sta	.selfmod+2
      4  9bb2				  -	      pla
      5  9bb2				  -	      sta	.selfmod+1
      6  9bb2					      ELSE
      7  9bb2		       8d b9 9b 	      sta	.selfmod+1
      8  9bb5		       8c ba 9b 	      sty	.selfmod+2
      9  9bb8					      ENDIF
     10  9bb8				   .selfmod
     11  9bb8		       20 00 00 	      jsr	$0000
  15476  9bb8				   FPULL      SET	0
  15477  9bb8				   FPUSH      SET	1
      0  9bbb					      pbyte	#1
      1  9bbb		       a9 01		      lda	#1
      2  9bbd				  -	      IF	!FPUSH
      3  9bbd				  -	      pha
      4  9bbd					      ENDIF
  15479  9bbd				   FPULL      SET	1
  15480  9bbd				   FPUSH      SET	0
      0  9bbd					      plb2var	_ri_isr_count
      1  9bbd				  -	      IF	!FPULL
      2  9bbd				  -	      pla
      3  9bbd					      ENDIF
      4  9bbd		       8d 15 b5 	      sta	_ri_isr_count
  15482  9bc0		       20 a9 74 	      jsr	_Pri_syshandler_off
  15483  9bc0				   FPULL      SET	0
  15484  9bc0				   FPUSH      SET	1
      0  9bc3					      pbyte	#0
      1  9bc3		       a9 00		      lda	#0
      2  9bc5				  -	      IF	!FPUSH
      3  9bc5				  -	      pha
      4  9bc5					      ENDIF
  15486  9bc5				   FPULL      SET	1
  15487  9bc5				   FPUSH      SET	0
      0  9bc5					      plb2var	_ri_set_isr.isr_no
      1  9bc5				  -	      IF	!FPULL
      2  9bc5				  -	      pla
      3  9bc5					      ENDIF
      4  9bc5		       8d 19 b5 	      sta	_ri_set_isr.isr_no
  15489  9bc5				   FPULL      SET	0
  15490  9bc5				   FPUSH      SET	1
      0  9bc8					      paddr	_Pmusic_player
      0  9bc8					      pword	_Pmusic_player
      1  9bc8				  -	      IF	!FPUSH
      2  9bc8				  -	      lda	#<_Pmusic_player
      3  9bc8				  -	      pha
      4  9bc8				  -	      lda	#>_Pmusic_player
      5  9bc8				  -	      pha
      6  9bc8					      ELSE
      7  9bc8		       a9 43		      lda	#<_Pmusic_player
      8  9bca		       a0 71		      ldy	#>_Pmusic_player
      9  9bcc					      ENDIF
  15492  9bcc				   FPULL      SET	1
  15493  9bcc				   FPUSH      SET	0
      0  9bcc					      plw2var	_ri_set_isr.isr_addr
      1  9bcc				  -	      IF	!FPULL
      2  9bcc				  -	      pla
      3  9bcc				  -	      sta	_ri_set_isr.isr_addr+1
      4  9bcc				  -	      pla
      5  9bcc				  -	      sta	_ri_set_isr.isr_addr
      6  9bcc					      ELSE
      7  9bcc		       8d 1a b5 	      sta	_ri_set_isr.isr_addr
      8  9bcf		       8c 1b b5 	      sty	_ri_set_isr.isr_addr+1
      9  9bd2					      ENDIF
  15495  9bd2				   FPULL      SET	0
      0  9bd2					      pbyte	#250
      1  9bd2		       a9 fa		      lda	#250
      2  9bd4					      IF	!FPUSH
      3  9bd4		       48		      pha
      4  9bd5					      ENDIF
      0  9bd5					      btow
      1  9bd5		       a9 00		      lda	#$00
      2  9bd7		       48		      pha
      0  9bd8					      plw2var	_ri_set_isr.raster_line
      1  9bd8					      IF	!FPULL
      2  9bd8		       68		      pla
      3  9bd9		       8d 1d b5 	      sta	_ri_set_isr.raster_line+1
      4  9bdc		       68		      pla
      5  9bdd		       8d 1c b5 	      sta	_ri_set_isr.raster_line
      6  9be0				  -	      ELSE
      7  9be0				  -	      sta	_ri_set_isr.raster_line
      8  9be0				  -	      sty	_ri_set_isr.raster_line+1
      9  9be0					      ENDIF
  15499  9be0		       20 82 74 	      jsr	_Pri_set_isr
  15500  9be3		       20 25 74 	      jsr	_Pri_on
      0  9be6					      pbyte	#0
      1  9be6		       a9 00		      lda	#0
      2  9be8					      IF	!FPUSH
      3  9be8		       48		      pha
      4  9be9					      ENDIF
      0  9be9					      btow
      1  9be9		       a9 00		      lda	#$00
      2  9beb		       48		      pha
      0  9bec					      plw2var	_logo.i
      1  9bec					      IF	!FPULL
      2  9bec		       68		      pla
      3  9bed		       8d 7e b6 	      sta	_logo.i+1
      4  9bf0		       68		      pla
      5  9bf1		       8d 7d b6 	      sta	_logo.i
      6  9bf4				  -	      ELSE
      7  9bf4				  -	      sta	_logo.i
      8  9bf4				  -	      sty	_logo.i+1
      9  9bf4					      ENDIF
  15504  9bf4				   FPUSH      SET	1
      0  9bf4					      pwvar	_frameskip1
      1  9bf4				  -	      IF	!FPUSH
      2  9bf4				  -	      lda	_frameskip1
      3  9bf4				  -	      pha
      4  9bf4				  -	      lda	_frameskip1+1
      5  9bf4				  -	      pha
      6  9bf4					      ELSE
      7  9bf4		       ad f5 b4 	      lda	_frameskip1
      8  9bf7		       ac f6 b4 	      ldy	_frameskip1+1
      9  9bfa					      ENDIF
  15506  9bfa				   FPULL      SET	1
  15507  9bfa				   FPUSH      SET	0
      0  9bfa					      plw2var	XFOR_max_14
      1  9bfa				  -	      IF	!FPULL
      2  9bfa				  -	      pla
      3  9bfa				  -	      sta	XFOR_max_14+1
      4  9bfa				  -	      pla
      5  9bfa				  -	      sta	XFOR_max_14
      6  9bfa					      ELSE
      7  9bfa		       8d 7f b6 	      sta	XFOR_max_14
      8  9bfd		       8c 80 b6 	      sty	XFOR_max_14+1
      9  9c00					      ENDIF
  15509  9c00				   _FOR_14
      0  9c00					      forw	14, _logo.i
      1  9c00				  -	      IFCONST	XFOR_step_14
      2  9c00				  -
      3  9c00				  -	      lda	XFOR_step_14 + 1
      4  9c00				  -
      5  9c00				  -	      bpl	.cmp
      6  9c00				  -.neg
      7  9c00				  -
      8  9c00				  -	      lda	_logo.i
      9  9c00				  -	      cmp	XFOR_max_14
     10  9c00				  -	      lda	_logo.i+1
     11  9c00				  -	      sbc	XFOR_max_14+1
     12  9c00				  -	      bpl	.enter
     13  9c00				  -	      jmp	_ENDFOR_14
     14  9c00					      ENDIF
     15  9c00				   .cmp
     16  9c00
     17  9c00		       ad 7f b6 	      lda	XFOR_max_14
     18  9c03		       cd 7d b6 	      cmp	_logo.i
     19  9c06		       ad 80 b6 	      lda	XFOR_max_14+1
     20  9c09		       ed 7e b6 	      sbc	_logo.i+1
     21  9c0c		       10 03		      bpl	.enter
     22  9c0e		       4c 23 9c 	      jmp	_ENDFOR_14
     23  9c11				   .enter
  15511  9c11				   FPULL      SET	0
  15512  9c11				   FPUSH      SET	1
      0  9c11					      pbyte	#170
      1  9c11		       a9 aa		      lda	#170
      2  9c13				  -	      IF	!FPUSH
      3  9c13				  -	      pha
      4  9c13					      ENDIF
  15514  9c13				   FPULL      SET	1
  15515  9c13				   FPUSH      SET	0
      0  9c13					      watchc	53266
      1  9c13				  -	      IF	!FPULL
      2  9c13				  -	      pla
      3  9c13					      ENDIF
      4  9c13				   .again
      5  9c13		       cd 12 d0 	      cmp	53266
      6  9c16		       d0 fb		      bne	.again
      0  9c18					      nextw	14, _logo.i
      1  9c18
      2  9c18				  -	      IFCONST	XFOR_step_14
      3  9c18				  -
      4  9c18				  -	      clc
      5  9c18				  -	      lda	XFOR_step_14
      6  9c18				  -	      adc	_logo.i
      7  9c18				  -	      sta	_logo.i
      8  9c18				  -	      lda	XFOR_step_14+1
      9  9c18				  -	      adc	_logo.i+1
     10  9c18				  -	      sta	_logo.i+1
     11  9c18					      ELSE
     12  9c18
     13  9c18		       ee 7d b6 	      inc	_logo.i
     14  9c1b		       d0 03		      bne	.skip
     15  9c1d		       ee 7e b6 	      inc	_logo.i+1
     16  9c20					      ENDIF
     17  9c20				   .skip
     18  9c20
     19  9c20		       4c 00 9c 	      jmp	_FOR_14
  15518  9c23				   _ENDFOR_14
  15519  9c23				   FPULL      SET	0
  15520  9c23				   FPUSH      SET	1
      0  9c23					      pbyte	#0
      1  9c23		       a9 00		      lda	#0
      2  9c25				  -	      IF	!FPUSH
      3  9c25				  -	      pha
      4  9c25					      ENDIF
  15522  9c25				   FPULL      SET	1
  15523  9c25				   FPUSH      SET	0
      0  9c25					      plb2var	_logo.j
      1  9c25				  -	      IF	!FPULL
      2  9c25				  -	      pla
      3  9c25					      ENDIF
      4  9c25		       8d 7b b6 	      sta	_logo.j
  15525  9c25				   FPULL      SET	0
  15526  9c25				   FPUSH      SET	1
      0  9c28					      pbyte	#6
      1  9c28		       a9 06		      lda	#6
      2  9c2a				  -	      IF	!FPUSH
      3  9c2a				  -	      pha
      4  9c2a					      ENDIF
  15528  9c2a				   FPULL      SET	1
  15529  9c2a				   FPUSH      SET	0
      0  9c2a					      plb2var	XFOR_max_15
      1  9c2a				  -	      IF	!FPULL
      2  9c2a				  -	      pla
      3  9c2a					      ENDIF
      4  9c2a		       8d 81 b6 	      sta	XFOR_max_15
  15531  9c2d				   _FOR_15
      0  9c2d					      forb	15, _logo.j
      1  9c2d
      2  9c2d		       ad 81 b6 	      lda	XFOR_max_15
      3  9c30		       cd 7b b6 	      cmp	_logo.j
      4  9c33		       b0 03		      bcs	.enter
      5  9c35
      6  9c35		       4c 49 9c 	      jmp	_ENDFOR_15
      7  9c38				   .enter
  15533  9c38				   FPULL      SET	0
  15534  9c38				   FPUSH      SET	1
      0  9c38					      pbvar	_logo.j
      0  9c38					      pbyte	_logo.j
      1  9c38		       ad 7b b6 	      lda	_logo.j
      2  9c3b				  -	      IF	!FPUSH
      3  9c3b				  -	      pha
      4  9c3b					      ENDIF
  15536  9c3b				   FPULL      SET	1
  15537  9c3b				   FPUSH      SET	0
      0  9c3b					      plb2var	_spr_disable.spr_no
      1  9c3b				  -	      IF	!FPULL
      2  9c3b				  -	      pla
      3  9c3b					      ENDIF
      4  9c3b		       8d fb b4 	      sta	_spr_disable.spr_no
  15539  9c3e		       20 7b 71 	      jsr	_Pspr_disable
      0  9c41					      nextb	15, _logo.j
      1  9c41
      2  9c41				  -	      IFCONST	XFOR_step_15
      3  9c41				  -
      4  9c41				  -	      clc
      5  9c41				  -	      lda	XFOR_step_15
      6  9c41				  -	      adc	_logo.j
      7  9c41				  -	      sta	_logo.j
      8  9c41				  -
      9  9c41				  -	      bcs	_ENDFOR_15
     10  9c41					      ELSE
     11  9c41
     12  9c41		       ee 7b b6 	      inc	_logo.j
     13  9c44
     14  9c44		       f0 03		      beq	_ENDFOR_15
     15  9c46					      ENDIF
     16  9c46		       4c 2d 9c 	      jmp	_FOR_15
  15541  9c49				   _ENDFOR_15
  15542  9c49				   FPULL      SET	0
  15543  9c49				   FPUSH      SET	1
      0  9c49					      pbyte	#200
      1  9c49		       a9 c8		      lda	#200
      2  9c4b				  -	      IF	!FPUSH
      3  9c4b				  -	      pha
      4  9c4b					      ENDIF
  15545  9c4b				   FPULL      SET	1
  15546  9c4b				   FPUSH      SET	0
      0  9c4b					      pokeb_const_addr	#53270
      1  9c4b
      2  9c4b
      3  9c4b
      4  9c4b		       d0 16	   .ad	      EQU	#53270
      5  9c4b				  -	      IF	!FPULL
      6  9c4b				  -	      pla
      7  9c4b					      ENDIF
      8  9c4b		       8d 16 d0 	      sta	.ad
  15548  9c4b				   FPULL      SET	0
      0  9c4e					      paddr	_S9
      0  9c4e					      pword	_S9
      1  9c4e					      IF	!FPUSH
      2  9c4e		       a9 66		      lda	#<_S9
      3  9c50		       48		      pha
      4  9c51		       a9 ae		      lda	#>_S9
      5  9c53		       48		      pha
      6  9c54				  -	      ELSE
      7  9c54				  -	      lda	#<_S9
      8  9c54				  -	      ldy	#>_S9
      9  9c54					      ENDIF
      0  9c54					      pbyte	#13
      1  9c54		       a9 0d		      lda	#13
      2  9c56					      IF	!FPUSH
      3  9c56		       48		      pha
      4  9c57					      ENDIF
      0  9c57					      btow
      1  9c57		       a9 00		      lda	#$00
      2  9c59		       48		      pha
  15552  9c59				   FPUSH      SET	1
      0  9c5a					      pword	#40
      1  9c5a				  -	      IF	!FPUSH
      2  9c5a				  -	      lda	#<#40
      3  9c5a				  -	      pha
      4  9c5a				  -	      lda	#>#40
      5  9c5a				  -	      pha
      6  9c5a					      ELSE
      7  9c5a		       a9 28		      lda	#<#40
      8  9c5c		       a0 00		      ldy	#>#40
      9  9c5e					      ENDIF
  15554  9c5e				   FPULL      SET	1
  15555  9c5e				   FPUSH      SET	0
      0  9c5e					      mulw
      1  9c5e				  -	      IF	!FPULL
      2  9c5e				  -	      pla
      3  9c5e				  -	      sta	R1
      4  9c5e				  -	      pla
      5  9c5e				  -	      sta	R0
      6  9c5e					      ELSE
      7  9c5e		       85 fb		      sta	R0
      8  9c60		       84 fc		      sty	R1
      9  9c62					      ENDIF
     10  9c62		       68		      pla
     11  9c63		       85 fe		      sta	R3
     12  9c65		       68		      pla
     13  9c66		       85 fd		      sta	R2
     14  9c68		       20 0d 08 	      jsr	NUCL_SMUL16
     15  9c6b					      IF	!FPUSH
     16  9c6b		       a5 fb		      lda	R0
     17  9c6d		       48		      pha
     18  9c6e		       a5 fc		      lda	R1
     19  9c70		       48		      pha
     20  9c71				  -	      ELSE
     21  9c71				  -	      lda	R0
     22  9c71				  -	      ldy	R1
     23  9c71					      ENDIF
  15557  9c71				   FPULL      SET	0
      0  9c71					      pbyte	#16
      1  9c71		       a9 10		      lda	#16
      2  9c73					      IF	!FPUSH
      3  9c73		       48		      pha
      4  9c74					      ENDIF
      0  9c74					      btow
      1  9c74		       a9 00		      lda	#$00
      2  9c76		       48		      pha
      0  9c77					      addw
      1  9c77		       ba		      tsx
      2  9c78		       bd 02 01 	      lda.wx	stack+2
      3  9c7b		       18		      clc
      4  9c7c		       7d 04 01 	      adc.wx	stack+4
      5  9c7f		       9d 04 01 	      sta.wx	stack+4
      6  9c82		       68		      pla
      7  9c83		       7d 03 01 	      adc.wx	stack+3
      8  9c86		       9d 03 01 	      sta.wx	stack+3
      9  9c89		       68		      pla
      0  9c8a					      pword	#1024
      1  9c8a					      IF	!FPUSH
      2  9c8a		       a9 00		      lda	#<#1024
      3  9c8c		       48		      pha
      4  9c8d		       a9 04		      lda	#>#1024
      5  9c8f		       48		      pha
      6  9c90				  -	      ELSE
      7  9c90				  -	      lda	#<#1024
      8  9c90				  -	      ldy	#>#1024
      9  9c90					      ENDIF
      0  9c90					      addw
      1  9c90		       ba		      tsx
      2  9c91		       bd 02 01 	      lda.wx	stack+2
      3  9c94		       18		      clc
      4  9c95		       7d 04 01 	      adc.wx	stack+4
      5  9c98		       9d 04 01 	      sta.wx	stack+4
      6  9c9b		       68		      pla
      7  9c9c		       7d 03 01 	      adc.wx	stack+3
      8  9c9f		       9d 03 01 	      sta.wx	stack+3
      9  9ca2		       68		      pla
      0  9ca3					      textat
      1  9ca3					      IF	!FPULL
      2  9ca3		       68		      pla
      3  9ca4		       85 fe		      sta	R3
      4  9ca6		       68		      pla
      5  9ca7		       85 fd		      sta	R2
      6  9ca9				  -	      ELSE
      7  9ca9				  -	      sta	R2
      8  9ca9				  -	      sty	R3
      9  9ca9					      ENDIF
     10  9ca9		       68		      pla
     11  9caa		       85 fc		      sta	R1
     12  9cac		       68		      pla
     13  9cad		       85 fb		      sta	R0
     14  9caf		       a0 00		      ldy	#$00
     15  9cb1				   .loop
     16  9cb1		       b1 fb		      lda	(R0),y
     17  9cb3		       f0 06		      beq	.end
     18  9cb5		       91 fd		      sta	(R2),y
     19  9cb7		       c8		      iny
     20  9cb8		       4c b1 9c 	      jmp	.loop
     21  9cbb				   .end
      0  9cbb					      paddr	_S10
      0  9cbb					      pword	_S10
      1  9cbb					      IF	!FPUSH
      2  9cbb		       a9 6e		      lda	#<_S10
      3  9cbd		       48		      pha
      4  9cbe		       a9 ae		      lda	#>_S10
      5  9cc0		       48		      pha
      6  9cc1				  -	      ELSE
      7  9cc1				  -	      lda	#<_S10
      8  9cc1				  -	      ldy	#>_S10
      9  9cc1					      ENDIF
      0  9cc1					      pbyte	#10
      1  9cc1		       a9 0a		      lda	#10
      2  9cc3					      IF	!FPUSH
      3  9cc3		       48		      pha
      4  9cc4					      ENDIF
      0  9cc4					      btow
      1  9cc4		       a9 00		      lda	#$00
      2  9cc6		       48		      pha
  15567  9cc6				   FPUSH      SET	1
      0  9cc7					      pword	#40
      1  9cc7				  -	      IF	!FPUSH
      2  9cc7				  -	      lda	#<#40
      3  9cc7				  -	      pha
      4  9cc7				  -	      lda	#>#40
      5  9cc7				  -	      pha
      6  9cc7					      ELSE
      7  9cc7		       a9 28		      lda	#<#40
      8  9cc9		       a0 00		      ldy	#>#40
      9  9ccb					      ENDIF
  15569  9ccb				   FPULL      SET	1
  15570  9ccb				   FPUSH      SET	0
      0  9ccb					      mulw
      1  9ccb				  -	      IF	!FPULL
      2  9ccb				  -	      pla
      3  9ccb				  -	      sta	R1
      4  9ccb				  -	      pla
      5  9ccb				  -	      sta	R0
      6  9ccb					      ELSE
      7  9ccb		       85 fb		      sta	R0
      8  9ccd		       84 fc		      sty	R1
      9  9ccf					      ENDIF
     10  9ccf		       68		      pla
     11  9cd0		       85 fe		      sta	R3
     12  9cd2		       68		      pla
     13  9cd3		       85 fd		      sta	R2
     14  9cd5		       20 0d 08 	      jsr	NUCL_SMUL16
     15  9cd8					      IF	!FPUSH
     16  9cd8		       a5 fb		      lda	R0
     17  9cda		       48		      pha
     18  9cdb		       a5 fc		      lda	R1
     19  9cdd		       48		      pha
     20  9cde				  -	      ELSE
     21  9cde				  -	      lda	R0
     22  9cde				  -	      ldy	R1
     23  9cde					      ENDIF
  15572  9cde				   FPULL      SET	0
      0  9cde					      pbyte	#14
      1  9cde		       a9 0e		      lda	#14
      2  9ce0					      IF	!FPUSH
      3  9ce0		       48		      pha
      4  9ce1					      ENDIF
      0  9ce1					      btow
      1  9ce1		       a9 00		      lda	#$00
      2  9ce3		       48		      pha
      0  9ce4					      addw
      1  9ce4		       ba		      tsx
      2  9ce5		       bd 02 01 	      lda.wx	stack+2
      3  9ce8		       18		      clc
      4  9ce9		       7d 04 01 	      adc.wx	stack+4
      5  9cec		       9d 04 01 	      sta.wx	stack+4
      6  9cef		       68		      pla
      7  9cf0		       7d 03 01 	      adc.wx	stack+3
      8  9cf3		       9d 03 01 	      sta.wx	stack+3
      9  9cf6		       68		      pla
      0  9cf7					      pword	#1024
      1  9cf7					      IF	!FPUSH
      2  9cf7		       a9 00		      lda	#<#1024
      3  9cf9		       48		      pha
      4  9cfa		       a9 04		      lda	#>#1024
      5  9cfc		       48		      pha
      6  9cfd				  -	      ELSE
      7  9cfd				  -	      lda	#<#1024
      8  9cfd				  -	      ldy	#>#1024
      9  9cfd					      ENDIF
      0  9cfd					      addw
      1  9cfd		       ba		      tsx
      2  9cfe		       bd 02 01 	      lda.wx	stack+2
      3  9d01		       18		      clc
      4  9d02		       7d 04 01 	      adc.wx	stack+4
      5  9d05		       9d 04 01 	      sta.wx	stack+4
      6  9d08		       68		      pla
      7  9d09		       7d 03 01 	      adc.wx	stack+3
      8  9d0c		       9d 03 01 	      sta.wx	stack+3
      9  9d0f		       68		      pla
      0  9d10					      textat
      1  9d10					      IF	!FPULL
      2  9d10		       68		      pla
      3  9d11		       85 fe		      sta	R3
      4  9d13		       68		      pla
      5  9d14		       85 fd		      sta	R2
      6  9d16				  -	      ELSE
      7  9d16				  -	      sta	R2
      8  9d16				  -	      sty	R3
      9  9d16					      ENDIF
     10  9d16		       68		      pla
     11  9d17		       85 fc		      sta	R1
     12  9d19		       68		      pla
     13  9d1a		       85 fb		      sta	R0
     14  9d1c		       a0 00		      ldy	#$00
     15  9d1e				   .loop
     16  9d1e		       b1 fb		      lda	(R0),y
     17  9d20		       f0 06		      beq	.end
     18  9d22		       91 fd		      sta	(R2),y
     19  9d24		       c8		      iny
     20  9d25		       4c 1e 9d 	      jmp	.loop
     21  9d28				   .end
      0  9d28					      paddr	_S11
      0  9d28					      pword	_S11
      1  9d28					      IF	!FPUSH
      2  9d28		       a9 7a		      lda	#<_S11
      3  9d2a		       48		      pha
      4  9d2b		       a9 ae		      lda	#>_S11
      5  9d2d		       48		      pha
      6  9d2e				  -	      ELSE
      7  9d2e				  -	      lda	#<_S11
      8  9d2e				  -	      ldy	#>_S11
      9  9d2e					      ENDIF
      0  9d2e					      pbyte	#12
      1  9d2e		       a9 0c		      lda	#12
      2  9d30					      IF	!FPUSH
      3  9d30		       48		      pha
      4  9d31					      ENDIF
      0  9d31					      btow
      1  9d31		       a9 00		      lda	#$00
      2  9d33		       48		      pha
  15582  9d33				   FPUSH      SET	1
      0  9d34					      pword	#40
      1  9d34				  -	      IF	!FPUSH
      2  9d34				  -	      lda	#<#40
      3  9d34				  -	      pha
      4  9d34				  -	      lda	#>#40
      5  9d34				  -	      pha
      6  9d34					      ELSE
      7  9d34		       a9 28		      lda	#<#40
      8  9d36		       a0 00		      ldy	#>#40
      9  9d38					      ENDIF
  15584  9d38				   FPULL      SET	1
  15585  9d38				   FPUSH      SET	0
      0  9d38					      mulw
      1  9d38				  -	      IF	!FPULL
      2  9d38				  -	      pla
      3  9d38				  -	      sta	R1
      4  9d38				  -	      pla
      5  9d38				  -	      sta	R0
      6  9d38					      ELSE
      7  9d38		       85 fb		      sta	R0
      8  9d3a		       84 fc		      sty	R1
      9  9d3c					      ENDIF
     10  9d3c		       68		      pla
     11  9d3d		       85 fe		      sta	R3
     12  9d3f		       68		      pla
     13  9d40		       85 fd		      sta	R2
     14  9d42		       20 0d 08 	      jsr	NUCL_SMUL16
     15  9d45					      IF	!FPUSH
     16  9d45		       a5 fb		      lda	R0
     17  9d47		       48		      pha
     18  9d48		       a5 fc		      lda	R1
     19  9d4a		       48		      pha
     20  9d4b				  -	      ELSE
     21  9d4b				  -	      lda	R0
     22  9d4b				  -	      ldy	R1
     23  9d4b					      ENDIF
  15587  9d4b				   FPULL      SET	0
      0  9d4b					      pbyte	#16
      1  9d4b		       a9 10		      lda	#16
      2  9d4d					      IF	!FPUSH
      3  9d4d		       48		      pha
      4  9d4e					      ENDIF
      0  9d4e					      btow
      1  9d4e		       a9 00		      lda	#$00
      2  9d50		       48		      pha
      0  9d51					      addw
      1  9d51		       ba		      tsx
      2  9d52		       bd 02 01 	      lda.wx	stack+2
      3  9d55		       18		      clc
      4  9d56		       7d 04 01 	      adc.wx	stack+4
      5  9d59		       9d 04 01 	      sta.wx	stack+4
      6  9d5c		       68		      pla
      7  9d5d		       7d 03 01 	      adc.wx	stack+3
      8  9d60		       9d 03 01 	      sta.wx	stack+3
      9  9d63		       68		      pla
      0  9d64					      pword	#1024
      1  9d64					      IF	!FPUSH
      2  9d64		       a9 00		      lda	#<#1024
      3  9d66		       48		      pha
      4  9d67		       a9 04		      lda	#>#1024
      5  9d69		       48		      pha
      6  9d6a				  -	      ELSE
      7  9d6a				  -	      lda	#<#1024
      8  9d6a				  -	      ldy	#>#1024
      9  9d6a					      ENDIF
      0  9d6a					      addw
      1  9d6a		       ba		      tsx
      2  9d6b		       bd 02 01 	      lda.wx	stack+2
      3  9d6e		       18		      clc
      4  9d6f		       7d 04 01 	      adc.wx	stack+4
      5  9d72		       9d 04 01 	      sta.wx	stack+4
      6  9d75		       68		      pla
      7  9d76		       7d 03 01 	      adc.wx	stack+3
      8  9d79		       9d 03 01 	      sta.wx	stack+3
      9  9d7c		       68		      pla
      0  9d7d					      textat
      1  9d7d					      IF	!FPULL
      2  9d7d		       68		      pla
      3  9d7e		       85 fe		      sta	R3
      4  9d80		       68		      pla
      5  9d81		       85 fd		      sta	R2
      6  9d83				  -	      ELSE
      7  9d83				  -	      sta	R2
      8  9d83				  -	      sty	R3
      9  9d83					      ENDIF
     10  9d83		       68		      pla
     11  9d84		       85 fc		      sta	R1
     12  9d86		       68		      pla
     13  9d87		       85 fb		      sta	R0
     14  9d89		       a0 00		      ldy	#$00
     15  9d8b				   .loop
     16  9d8b		       b1 fb		      lda	(R0),y
     17  9d8d		       f0 06		      beq	.end
     18  9d8f		       91 fd		      sta	(R2),y
     19  9d91		       c8		      iny
     20  9d92		       4c 8b 9d 	      jmp	.loop
     21  9d95				   .end
      0  9d95					      pbyte	#0
      1  9d95		       a9 00		      lda	#0
      2  9d97					      IF	!FPUSH
      3  9d97		       48		      pha
      4  9d98					      ENDIF
      0  9d98					      btow
      1  9d98		       a9 00		      lda	#$00
      2  9d9a		       48		      pha
      0  9d9b					      plw2var	_logo.i
      1  9d9b					      IF	!FPULL
      2  9d9b		       68		      pla
      3  9d9c		       8d 7e b6 	      sta	_logo.i+1
      4  9d9f		       68		      pla
      5  9da0		       8d 7d b6 	      sta	_logo.i
      6  9da3				  -	      ELSE
      7  9da3				  -	      sta	_logo.i
      8  9da3				  -	      sty	_logo.i+1
      9  9da3					      ENDIF
  15597  9da3				   FPUSH      SET	1
      0  9da3					      pwvar	_frameskip2
      1  9da3				  -	      IF	!FPUSH
      2  9da3				  -	      lda	_frameskip2
      3  9da3				  -	      pha
      4  9da3				  -	      lda	_frameskip2+1
      5  9da3				  -	      pha
      6  9da3					      ELSE
      7  9da3		       ad f7 b4 	      lda	_frameskip2
      8  9da6		       ac f8 b4 	      ldy	_frameskip2+1
      9  9da9					      ENDIF
  15599  9da9				   FPULL      SET	1
  15600  9da9				   FPUSH      SET	0
      0  9da9					      plw2var	XFOR_max_16
      1  9da9				  -	      IF	!FPULL
      2  9da9				  -	      pla
      3  9da9				  -	      sta	XFOR_max_16+1
      4  9da9				  -	      pla
      5  9da9				  -	      sta	XFOR_max_16
      6  9da9					      ELSE
      7  9da9		       8d 82 b6 	      sta	XFOR_max_16
      8  9dac		       8c 83 b6 	      sty	XFOR_max_16+1
      9  9daf					      ENDIF
  15602  9daf				   _FOR_16
      0  9daf					      forw	16, _logo.i
      1  9daf				  -	      IFCONST	XFOR_step_16
      2  9daf				  -
      3  9daf				  -	      lda	XFOR_step_16 + 1
      4  9daf				  -
      5  9daf				  -	      bpl	.cmp
      6  9daf				  -.neg
      7  9daf				  -
      8  9daf				  -	      lda	_logo.i
      9  9daf				  -	      cmp	XFOR_max_16
     10  9daf				  -	      lda	_logo.i+1
     11  9daf				  -	      sbc	XFOR_max_16+1
     12  9daf				  -	      bpl	.enter
     13  9daf				  -	      jmp	_ENDFOR_16
     14  9daf					      ENDIF
     15  9daf				   .cmp
     16  9daf
     17  9daf		       ad 82 b6 	      lda	XFOR_max_16
     18  9db2		       cd 7d b6 	      cmp	_logo.i
     19  9db5		       ad 83 b6 	      lda	XFOR_max_16+1
     20  9db8		       ed 7e b6 	      sbc	_logo.i+1
     21  9dbb		       10 03		      bpl	.enter
     22  9dbd		       4c d2 9d 	      jmp	_ENDFOR_16
     23  9dc0				   .enter
  15604  9dc0				   FPULL      SET	0
  15605  9dc0				   FPUSH      SET	1
      0  9dc0					      pbyte	#170
      1  9dc0		       a9 aa		      lda	#170
      2  9dc2				  -	      IF	!FPUSH
      3  9dc2				  -	      pha
      4  9dc2					      ENDIF
  15607  9dc2				   FPULL      SET	1
  15608  9dc2				   FPUSH      SET	0
      0  9dc2					      watchc	53266
      1  9dc2				  -	      IF	!FPULL
      2  9dc2				  -	      pla
      3  9dc2					      ENDIF
      4  9dc2				   .again
      5  9dc2		       cd 12 d0 	      cmp	53266
      6  9dc5		       d0 fb		      bne	.again
      0  9dc7					      nextw	16, _logo.i
      1  9dc7
      2  9dc7				  -	      IFCONST	XFOR_step_16
      3  9dc7				  -
      4  9dc7				  -	      clc
      5  9dc7				  -	      lda	XFOR_step_16
      6  9dc7				  -	      adc	_logo.i
      7  9dc7				  -	      sta	_logo.i
      8  9dc7				  -	      lda	XFOR_step_16+1
      9  9dc7				  -	      adc	_logo.i+1
     10  9dc7				  -	      sta	_logo.i+1
     11  9dc7					      ELSE
     12  9dc7
     13  9dc7		       ee 7d b6 	      inc	_logo.i
     14  9dca		       d0 03		      bne	.skip
     15  9dcc		       ee 7e b6 	      inc	_logo.i+1
     16  9dcf					      ENDIF
     17  9dcf				   .skip
     18  9dcf
     19  9dcf		       4c af 9d 	      jmp	_FOR_16
  15611  9dd2				   _ENDFOR_16
  15612  9dd2				   FPULL      SET	0
      0  9dd2					      pword	#448
      1  9dd2					      IF	!FPUSH
      2  9dd2		       a9 c0		      lda	#<#448
      3  9dd4		       48		      pha
      4  9dd5		       a9 01		      lda	#>#448
      5  9dd7		       48		      pha
      6  9dd8				  -	      ELSE
      7  9dd8				  -	      lda	#<#448
      8  9dd8				  -	      ldy	#>#448
      9  9dd8					      ENDIF
      0  9dd8					      pword	#10240
      1  9dd8					      IF	!FPUSH
      2  9dd8		       a9 00		      lda	#<#10240
      3  9dda		       48		      pha
      4  9ddb		       a9 28		      lda	#>#10240
      5  9ddd		       48		      pha
      6  9dde				  -	      ELSE
      7  9dde				  -	      lda	#<#10240
      8  9dde				  -	      ldy	#>#10240
      9  9dde					      ENDIF
      0  9dde					      pword	#52736
      1  9dde					      IF	!FPUSH
      2  9dde		       a9 00		      lda	#<#52736
      3  9de0		       48		      pha
      4  9de1		       a9 ce		      lda	#>#52736
      5  9de3		       48		      pha
      6  9de4				  -	      ELSE
      7  9de4				  -	      lda	#<#52736
      8  9de4				  -	      ldy	#>#52736
      9  9de4					      ENDIF
      0  9de4					      memcpy
      1  9de4					      IF	!FPULL
      2  9de4		       68		      pla
      3  9de5		       85 fc		      sta	R1
      4  9de7		       68		      pla
      5  9de8		       85 fb		      sta	R0
      6  9dea				  -	      ELSE
      7  9dea				  -	      sta	R0
      8  9dea				  -	      sty	R1
      9  9dea					      ENDIF
     10  9dea		       68		      pla
     11  9deb		       85 fe		      sta	R3
     12  9ded		       68		      pla
     13  9dee		       85 fd		      sta	R2
     14  9df0		       68		      pla
     15  9df1		       85 40		      sta	R5
     16  9df3		       68		      pla
     17  9df4		       85 3f		      sta	R4
     18  9df6		       20 f9 0a 	      jsr	mem_memcpy
  15617  9df9		       58		      cli
  15618  9dfa		       60		      rts
  15619  9dfb		       60		      rts
  15620  9dfc				   _Plogo_end
  15621  9dfc
  15622  9dfc
  15623  9dfc
  15624  9dfc
  15625  9dfc
  15626  9dfc
  15627  9dfc
  15628  9dfc				   _Pintro    SUBROUTINE
      0  9dfc					      pbyte_pbyte_cmpbeq	_first_run, #1
      1  9dfc
      2  9dfc
      3  9dfc
      4  9dfc
      5  9dfc
      6  9dfc		       ad 22 b5 	      lda	_first_run
      7  9dff		       c9 01		      cmp	#1
      8  9e01		       f0 06		      beq	.true
      0  9e03					      pzero
      1  9e03		       a9 00		      lda	#$00
      2  9e05					      IF	!FPUSH
      3  9e05		       48		      pha
      4  9e06					      ENDIF
     10  9e06					      IF	!FPUSH
     11  9e06		       4c 0c 9e 	      jmp	*+6
     12  9e09				  -	      ELSE
     13  9e09				  -	      jmp	*+5
     14  9e09					      ENDIF
     15  9e09				   .true
      0  9e09					      pone
      1  9e09		       a9 01		      lda	#$01
      2  9e0b					      IF	!FPUSH
      3  9e0b		       48		      pha
      4  9e0c					      ENDIF
  15630  9e0c				   FPUSH      SET	1
      0  9e0c					      pbyte_pbyte_cmpbeq	_debug, #0
      1  9e0c
      2  9e0c
      3  9e0c
      4  9e0c
      5  9e0c
      6  9e0c		       ad f3 b4 	      lda	_debug
      7  9e0f		       c9 00		      cmp	#0
      8  9e11		       f0 05		      beq	.true
      0  9e13					      pzero
      1  9e13		       a9 00		      lda	#$00
      2  9e15				  -	      IF	!FPUSH
      3  9e15				  -	      pha
      4  9e15					      ENDIF
     10  9e15				  -	      IF	!FPUSH
     11  9e15				  -	      jmp	*+6
     12  9e15					      ELSE
     13  9e15		       4c 1a 9e 	      jmp	*+5
     14  9e18					      ENDIF
     15  9e18				   .true
      0  9e18					      pone
      1  9e18		       a9 01		      lda	#$01
      2  9e1a				  -	      IF	!FPUSH
      3  9e1a				  -	      pha
      4  9e1a					      ENDIF
  15632  9e1a				   FPULL      SET	1
      0  9e1a					      andb
      1  9e1a				  -	      IF	!FPULL
      2  9e1a				  -	      pla
      3  9e1a					      ENDIF
      4  9e1a		       85 fc		      sta	R1
      5  9e1c		       68		      pla
      6  9e1d		       25 fc		      and	R1
      7  9e1f				  -	      IF	!FPUSH
      8  9e1f				  -	      pha
      9  9e1f					      ENDIF
  15634  9e1f				   FPUSH      SET	0
      0  9e1f					      cond_stmt	_EI_58, _EL_58
      1  9e1f				  -	      IF	!FPULL
      2  9e1f				  -	      pla
      3  9e1f					      ENDIF
      4  9e1f		       d0 03		      bne	*+5
      5  9e21				  -	      IFCONST	_EL_58
      6  9e21				  -	      jmp	_EL_58
      7  9e21					      ELSE
      8  9e21		       4c 27 9e 	      jmp	_EI_58
      9  9e24					      ENDIF
  15636  9e24		       20 de 98 	      jsr	_Plogo
  15637  9e27
  15638  9e27
  15639  9e27
  15640  9e27
  15641  9e27				   _EI_58
  15642  9e27		       20 b4 76 	      jsr	_Pconfigure_sprites
  15643  9e27				   FPULL      SET	0
  15644  9e27				   FPUSH      SET	1
      0  9e2a					      pbyte	#0
      1  9e2a		       a9 00		      lda	#0
      2  9e2c				  -	      IF	!FPUSH
      3  9e2c				  -	      pha
      4  9e2c					      ENDIF
  15646  9e2c				   FPULL      SET	1
  15647  9e2c				   FPUSH      SET	0
      0  9e2c					      plb2var	_first_run
      1  9e2c				  -	      IF	!FPULL
      2  9e2c				  -	      pla
      3  9e2c					      ENDIF
      4  9e2c		       8d 22 b5 	      sta	_first_run
  15649  9e2c				   FPULL      SET	0
      0  9e2f					      peekb_const_addr	#53265
      1  9e2f
      2  9e2f
      3  9e2f
      4  9e2f		       d0 11	   .ad	      EQU	#53265
      5  9e2f		       ad 11 d0 	      lda	.ad
      6  9e32					      IF	!FPUSH
      7  9e32		       48		      pha
      8  9e33					      ENDIF
  15651  9e33				   FPUSH      SET	1
      0  9e33					      pbyte	#239
      1  9e33		       a9 ef		      lda	#239
      2  9e35				  -	      IF	!FPUSH
      3  9e35				  -	      pha
      4  9e35					      ENDIF
  15653  9e35				   FPULL      SET	1
      0  9e35					      andb
      1  9e35				  -	      IF	!FPULL
      2  9e35				  -	      pla
      3  9e35					      ENDIF
      4  9e35		       85 fc		      sta	R1
      5  9e37		       68		      pla
      6  9e38		       25 fc		      and	R1
      7  9e3a				  -	      IF	!FPUSH
      8  9e3a				  -	      pha
      9  9e3a					      ENDIF
  15655  9e3a				   FPUSH      SET	0
      0  9e3a					      pokeb_const_addr	#53265
      1  9e3a
      2  9e3a
      3  9e3a
      4  9e3a		       d0 11	   .ad	      EQU	#53265
      5  9e3a				  -	      IF	!FPULL
      6  9e3a				  -	      pla
      7  9e3a					      ENDIF
      8  9e3a		       8d 11 d0 	      sta	.ad
  15657  9e3a				   FPULL      SET	0
  15658  9e3a				   FPUSH      SET	1
      0  9e3d					      pbyte	#208
      1  9e3d		       a9 d0		      lda	#208
      2  9e3f				  -	      IF	!FPUSH
      3  9e3f				  -	      pha
      4  9e3f					      ENDIF
  15660  9e3f				   FPULL      SET	1
  15661  9e3f				   FPUSH      SET	0
      0  9e3f					      pokeb_const_addr	#53270
      1  9e3f
      2  9e3f
      3  9e3f
      4  9e3f		       d0 16	   .ad	      EQU	#53270
      5  9e3f				  -	      IF	!FPULL
      6  9e3f				  -	      pla
      7  9e3f					      ENDIF
      8  9e3f		       8d 16 d0 	      sta	.ad
  15663  9e3f				   FPULL      SET	0
  15664  9e3f				   FPUSH      SET	1
      0  9e42					      pbyte	#1
      1  9e42		       a9 01		      lda	#1
      2  9e44				  -	      IF	!FPUSH
      3  9e44				  -	      pha
      4  9e44					      ENDIF
  15666  9e44				   FPULL      SET	1
  15667  9e44				   FPUSH      SET	0
      0  9e44					      plb2var	_setup_screen.draw_title
      1  9e44				  -	      IF	!FPULL
      2  9e44				  -	      pla
      3  9e44					      ENDIF
      4  9e44		       8d 5a b6 	      sta	_setup_screen.draw_title
  15669  9e47		       20 0e 86 	      jsr	_Psetup_screen
      0  9e4a					      pbyte_pbyte_cmpbeq_cond	_ntsc_pal, #1, _EI_65565, _EL_65565
      1  9e4a
      2  9e4a
      3  9e4a		       ad f4 b4 	      lda	_ntsc_pal
      4  9e4d		       c9 01		      cmp	#1
      5  9e4f		       f0 03		      beq	*+5
      6  9e51				  -	      IFCONST	_EL_65565
      7  9e51				  -	      jmp	_EL_65565
      8  9e51					      ELSE
      9  9e51		       4c 62 9e 	      jmp	_EI_65565
     10  9e54					      ENDIF
  15671  9e54				   FPULL      SET	0
      0  9e54					      peekb_const_addr	#53265
      1  9e54
      2  9e54
      3  9e54
      4  9e54		       d0 11	   .ad	      EQU	#53265
      5  9e54		       ad 11 d0 	      lda	.ad
      6  9e57					      IF	!FPUSH
      7  9e57		       48		      pha
      8  9e58					      ENDIF
  15673  9e58				   FPUSH      SET	1
      0  9e58					      pbyte	#16
      1  9e58		       a9 10		      lda	#16
      2  9e5a				  -	      IF	!FPUSH
      3  9e5a				  -	      pha
      4  9e5a					      ENDIF
  15675  9e5a				   FPULL      SET	1
      0  9e5a					      orb
      1  9e5a				  -	      IF	!FPULL
      2  9e5a				  -	      pla
      3  9e5a					      ENDIF
      4  9e5a		       85 fc		      sta	R1
      5  9e5c		       68		      pla
      6  9e5d		       05 fc		      ora	R1
      7  9e5f				  -	      IF	!FPUSH
      8  9e5f				  -	      pha
      9  9e5f					      ENDIF
  15677  9e5f				   FPUSH      SET	0
      0  9e5f					      pokeb_const_addr	#53265
      1  9e5f
      2  9e5f
      3  9e5f
      4  9e5f		       d0 11	   .ad	      EQU	#53265
      5  9e5f				  -	      IF	!FPULL
      6  9e5f				  -	      pla
      7  9e5f					      ENDIF
      8  9e5f		       8d 11 d0 	      sta	.ad
  15679  9e62
  15680  9e62
  15681  9e62
  15682  9e62
  15683  9e62				   _EI_65565
  15684  9e62				   FPULL      SET	0
  15685  9e62				   FPUSH      SET	1
      0  9e62					      pbyte	#0
      1  9e62		       a9 00		      lda	#0
      2  9e64				  -	      IF	!FPUSH
      3  9e64				  -	      pha
      4  9e64					      ENDIF
  15687  9e64				   FPULL      SET	1
  15688  9e64				   FPUSH      SET	0
      0  9e64					      plb2var	_intro.animphase
      1  9e64				  -	      IF	!FPULL
      2  9e64				  -	      pla
      3  9e64					      ENDIF
      4  9e64		       8d 84 b6 	      sta	_intro.animphase
  15690  9e64				   FPULL      SET	0
  15691  9e64				   FPUSH      SET	1
      0  9e67					      pbyte	#0
      1  9e67		       a9 00		      lda	#0
      2  9e69				  -	      IF	!FPUSH
      3  9e69				  -	      pha
      4  9e69					      ENDIF
  15693  9e69				   FPULL      SET	1
  15694  9e69				   FPUSH      SET	0
      0  9e69					      plb2var	_intro.landing_bacon_animphase
      1  9e69				  -	      IF	!FPULL
      2  9e69				  -	      pla
      3  9e69					      ENDIF
      4  9e69		       8d 85 b6 	      sta	_intro.landing_bacon_animphase
  15696  9e69				   FPULL      SET	0
  15697  9e69				   FPUSH      SET	1
      0  9e6c					      pbyte	#0
      1  9e6c		       a9 00		      lda	#0
      2  9e6e				  -	      IF	!FPUSH
      3  9e6e				  -	      pha
      4  9e6e					      ENDIF
  15699  9e6e				   FPULL      SET	1
  15700  9e6e				   FPUSH      SET	0
      0  9e6e					      plb2var	_intro.helicopter_animphase
      1  9e6e				  -	      IF	!FPULL
      2  9e6e				  -	      pla
      3  9e6e					      ENDIF
      4  9e6e		       8d 86 b6 	      sta	_intro.helicopter_animphase
  15702  9e6e				   FPULL      SET	0
      0  9e71					      pbyte	#134
      1  9e71		       a9 86		      lda	#134
      2  9e73					      IF	!FPUSH
      3  9e73		       48		      pha
      4  9e74					      ENDIF
      0  9e74					      btow
      1  9e74		       a9 00		      lda	#$00
      2  9e76		       48		      pha
      0  9e77					      plw2var	_intro.aircraft_posx
      1  9e77					      IF	!FPULL
      2  9e77		       68		      pla
      3  9e78		       8d 88 b6 	      sta	_intro.aircraft_posx+1
      4  9e7b		       68		      pla
      5  9e7c		       8d 87 b6 	      sta	_intro.aircraft_posx
      6  9e7f				  -	      ELSE
      7  9e7f				  -	      sta	_intro.aircraft_posx
      8  9e7f				  -	      sty	_intro.aircraft_posx+1
      9  9e7f					      ENDIF
  15706  9e7f				   FPUSH      SET	1
      0  9e7f					      pbyte	#222
      1  9e7f		       a9 de		      lda	#222
      2  9e81				  -	      IF	!FPUSH
      3  9e81				  -	      pha
      4  9e81					      ENDIF
  15708  9e81				   FPULL      SET	1
  15709  9e81				   FPUSH      SET	0
      0  9e81					      plb2var	_intro.aircraft_posy
      1  9e81				  -	      IF	!FPULL
      2  9e81				  -	      pla
      3  9e81					      ENDIF
      4  9e81		       8d 89 b6 	      sta	_intro.aircraft_posy
  15711  9e81				   FPULL      SET	0
      0  9e84					      pbyte	#0
      1  9e84		       a9 00		      lda	#0
      2  9e86					      IF	!FPUSH
      3  9e86		       48		      pha
      4  9e87					      ENDIF
      0  9e87					      btow
      1  9e87		       a9 00		      lda	#$00
      2  9e89		       48		      pha
      0  9e8a					      plw2var	_intro.aircraft_dir
      1  9e8a					      IF	!FPULL
      2  9e8a		       68		      pla
      3  9e8b		       8d 8b b6 	      sta	_intro.aircraft_dir+1
      4  9e8e		       68		      pla
      5  9e8f		       8d 8a b6 	      sta	_intro.aircraft_dir
      6  9e92				  -	      ELSE
      7  9e92				  -	      sta	_intro.aircraft_dir
      8  9e92				  -	      sty	_intro.aircraft_dir+1
      9  9e92					      ENDIF
  15715  9e92				   FPUSH      SET	1
      0  9e92					      pword	#320
      1  9e92				  -	      IF	!FPUSH
      2  9e92				  -	      lda	#<#320
      3  9e92				  -	      pha
      4  9e92				  -	      lda	#>#320
      5  9e92				  -	      pha
      6  9e92					      ELSE
      7  9e92		       a9 40		      lda	#<#320
      8  9e94		       a0 01		      ldy	#>#320
      9  9e96					      ENDIF
  15717  9e96				   FPULL      SET	1
  15718  9e96				   FPUSH      SET	0
      0  9e96					      plw2var	_intro.helicopter_posx
      1  9e96				  -	      IF	!FPULL
      2  9e96				  -	      pla
      3  9e96				  -	      sta	_intro.helicopter_posx+1
      4  9e96				  -	      pla
      5  9e96				  -	      sta	_intro.helicopter_posx
      6  9e96					      ELSE
      7  9e96		       8d 8c b6 	      sta	_intro.helicopter_posx
      8  9e99		       8c 8d b6 	      sty	_intro.helicopter_posx+1
      9  9e9c					      ENDIF
  15720  9e9c				   FPULL      SET	0
  15721  9e9c				   FPUSH      SET	1
      0  9e9c					      pbyte	#2
      1  9e9c		       a9 02		      lda	#2
      2  9e9e				  -	      IF	!FPUSH
      3  9e9e				  -	      pha
      4  9e9e					      ENDIF
  15723  9e9e				   FPULL      SET	1
  15724  9e9e				   FPUSH      SET	0
      0  9e9e					      plb2var	_spr_setmulti.spr_no
      1  9e9e				  -	      IF	!FPULL
      2  9e9e				  -	      pla
      3  9e9e					      ENDIF
      4  9e9e		       8d 07 b5 	      sta	_spr_setmulti.spr_no
  15726  9ea1		       20 ea 71 	      jsr	_Pspr_setmulti
  15727  9ea1				   FPULL      SET	0
  15728  9ea1				   FPUSH      SET	1
      0  9ea4					      pbyte	#2
      1  9ea4		       a9 02		      lda	#2
      2  9ea6				  -	      IF	!FPUSH
      3  9ea6				  -	      pha
      4  9ea6					      ENDIF
  15730  9ea6				   FPULL      SET	1
  15731  9ea6				   FPUSH      SET	0
      0  9ea6					      plb2var	_spr_setcolor.spr_no
      1  9ea6				  -	      IF	!FPULL
      2  9ea6				  -	      pla
      3  9ea6					      ENDIF
      4  9ea6		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15733  9ea6				   FPULL      SET	0
  15734  9ea6				   FPUSH      SET	1
      0  9ea9					      pbyte	#5
      1  9ea9		       a9 05		      lda	#5
      2  9eab				  -	      IF	!FPUSH
      3  9eab				  -	      pha
      4  9eab					      ENDIF
  15736  9eab				   FPULL      SET	1
  15737  9eab				   FPUSH      SET	0
      0  9eab					      plb2var	_spr_setcolor.color
      1  9eab				  -	      IF	!FPULL
      2  9eab				  -	      pla
      3  9eab					      ENDIF
      4  9eab		       8d 0a b5 	      sta	_spr_setcolor.color
  15739  9eae		       20 04 72 	      jsr	_Pspr_setcolor
  15740  9eae				   FPULL      SET	0
  15741  9eae				   FPUSH      SET	1
      0  9eb1					      pbyte	#2
      1  9eb1		       a9 02		      lda	#2
      2  9eb3				  -	      IF	!FPUSH
      3  9eb3				  -	      pha
      4  9eb3					      ENDIF
  15743  9eb3				   FPULL      SET	1
  15744  9eb3				   FPUSH      SET	0
      0  9eb3					      plb2var	_spr_setshape.spr_no
      1  9eb3				  -	      IF	!FPULL
      2  9eb3				  -	      pla
      3  9eb3					      ENDIF
      4  9eb3		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15746  9eb3				   FPULL      SET	0
  15747  9eb3				   FPUSH      SET	1
      0  9eb6					      pbyte	#236
      1  9eb6		       a9 ec		      lda	#236
      2  9eb8				  -	      IF	!FPUSH
      3  9eb8				  -	      pha
      4  9eb8					      ENDIF
  15749  9eb8				   FPULL      SET	1
  15750  9eb8				   FPUSH      SET	0
      0  9eb8					      plb2var	_spr_setshape.shape
      1  9eb8				  -	      IF	!FPULL
      2  9eb8				  -	      pla
      3  9eb8					      ENDIF
      4  9eb8		       8d 06 b5 	      sta	_spr_setshape.shape
  15752  9ebb		       20 e0 71 	      jsr	_Pspr_setshape
  15753  9ebb				   FPULL      SET	0
  15754  9ebb				   FPUSH      SET	1
      0  9ebe					      pbyte	#2
      1  9ebe		       a9 02		      lda	#2
      2  9ec0				  -	      IF	!FPUSH
      3  9ec0				  -	      pha
      4  9ec0					      ENDIF
  15756  9ec0				   FPULL      SET	1
  15757  9ec0				   FPUSH      SET	0
      0  9ec0					      plb2var	_spr_enable.spr_no
      1  9ec0				  -	      IF	!FPULL
      2  9ec0				  -	      pla
      3  9ec0					      ENDIF
      4  9ec0		       8d fa b4 	      sta	_spr_enable.spr_no
  15759  9ec3		       20 6e 71 	      jsr	_Pspr_enable
  15760  9ec3				   FPULL      SET	0
  15761  9ec3				   FPUSH      SET	1
      0  9ec6					      pbyte	#2
      1  9ec6		       a9 02		      lda	#2
      2  9ec8				  -	      IF	!FPUSH
      3  9ec8				  -	      pha
      4  9ec8					      ENDIF
  15763  9ec8				   FPULL      SET	1
  15764  9ec8				   FPUSH      SET	0
      0  9ec8					      plb2var	_spr_setpos.spr_no
      1  9ec8				  -	      IF	!FPULL
      2  9ec8				  -	      pla
      3  9ec8					      ENDIF
      4  9ec8		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15766  9ec8				   FPULL      SET	0
  15767  9ec8				   FPUSH      SET	1
      0  9ecb					      pwvar	_intro.helicopter_posx
      1  9ecb				  -	      IF	!FPUSH
      2  9ecb				  -	      lda	_intro.helicopter_posx
      3  9ecb				  -	      pha
      4  9ecb				  -	      lda	_intro.helicopter_posx+1
      5  9ecb				  -	      pha
      6  9ecb					      ELSE
      7  9ecb		       ad 8c b6 	      lda	_intro.helicopter_posx
      8  9ece		       ac 8d b6 	      ldy	_intro.helicopter_posx+1
      9  9ed1					      ENDIF
  15769  9ed1				   FPULL      SET	1
  15770  9ed1				   FPUSH      SET	0
      0  9ed1					      plw2var	_spr_setpos.x
      1  9ed1				  -	      IF	!FPULL
      2  9ed1				  -	      pla
      3  9ed1				  -	      sta	_spr_setpos.x+1
      4  9ed1				  -	      pla
      5  9ed1				  -	      sta	_spr_setpos.x
      6  9ed1					      ELSE
      7  9ed1		       8d 02 b5 	      sta	_spr_setpos.x
      8  9ed4		       8c 03 b5 	      sty	_spr_setpos.x+1
      9  9ed7					      ENDIF
  15772  9ed7				   FPULL      SET	0
  15773  9ed7				   FPUSH      SET	1
      0  9ed7					      pbyte	#166
      1  9ed7		       a9 a6		      lda	#166
      2  9ed9				  -	      IF	!FPUSH
      3  9ed9				  -	      pha
      4  9ed9					      ENDIF
  15775  9ed9				   FPULL      SET	1
  15776  9ed9				   FPUSH      SET	0
      0  9ed9					      plb2var	_spr_setpos.y
      1  9ed9				  -	      IF	!FPULL
      2  9ed9				  -	      pla
      3  9ed9					      ENDIF
      4  9ed9		       8d 04 b5 	      sta	_spr_setpos.y
  15778  9edc		       20 bb 71 	      jsr	_Pspr_setpos
  15779  9edc				   FPULL      SET	0
  15780  9edc				   FPUSH      SET	1
      0  9edf					      pbyte	#6
      1  9edf		       a9 06		      lda	#6
      2  9ee1				  -	      IF	!FPUSH
      3  9ee1				  -	      pha
      4  9ee1					      ENDIF
  15782  9ee1				   FPULL      SET	1
  15783  9ee1				   FPUSH      SET	0
      0  9ee1					      plb2var	_spr_setmulti.spr_no
      1  9ee1				  -	      IF	!FPULL
      2  9ee1				  -	      pla
      3  9ee1					      ENDIF
      4  9ee1		       8d 07 b5 	      sta	_spr_setmulti.spr_no
  15785  9ee4		       20 ea 71 	      jsr	_Pspr_setmulti
  15786  9ee4				   FPULL      SET	0
  15787  9ee4				   FPUSH      SET	1
      0  9ee7					      pbyte	#6
      1  9ee7		       a9 06		      lda	#6
      2  9ee9				  -	      IF	!FPUSH
      3  9ee9				  -	      pha
      4  9ee9					      ENDIF
  15789  9ee9				   FPULL      SET	1
  15790  9ee9				   FPUSH      SET	0
      0  9ee9					      plb2var	_spr_setcolor.spr_no
      1  9ee9				  -	      IF	!FPULL
      2  9ee9				  -	      pla
      3  9ee9					      ENDIF
      4  9ee9		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15792  9ee9				   FPULL      SET	0
  15793  9ee9				   FPUSH      SET	1
      0  9eec					      pbyte	#5
      1  9eec		       a9 05		      lda	#5
      2  9eee				  -	      IF	!FPUSH
      3  9eee				  -	      pha
      4  9eee					      ENDIF
  15795  9eee				   FPULL      SET	1
  15796  9eee				   FPUSH      SET	0
      0  9eee					      plb2var	_spr_setcolor.color
      1  9eee				  -	      IF	!FPULL
      2  9eee				  -	      pla
      3  9eee					      ENDIF
      4  9eee		       8d 0a b5 	      sta	_spr_setcolor.color
  15798  9ef1		       20 04 72 	      jsr	_Pspr_setcolor
  15799  9ef1				   FPULL      SET	0
  15800  9ef1				   FPUSH      SET	1
      0  9ef4					      pbyte	#6
      1  9ef4		       a9 06		      lda	#6
      2  9ef6				  -	      IF	!FPUSH
      3  9ef6				  -	      pha
      4  9ef6					      ENDIF
  15802  9ef6				   FPULL      SET	1
  15803  9ef6				   FPUSH      SET	0
      0  9ef6					      plb2var	_spr_setshape.spr_no
      1  9ef6				  -	      IF	!FPULL
      2  9ef6				  -	      pla
      3  9ef6					      ENDIF
      4  9ef6		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15805  9ef6				   FPULL      SET	0
  15806  9ef6				   FPUSH      SET	1
      0  9ef9					      pbyte	#232
      1  9ef9		       a9 e8		      lda	#232
      2  9efb				  -	      IF	!FPUSH
      3  9efb				  -	      pha
      4  9efb					      ENDIF
  15808  9efb				   FPULL      SET	1
  15809  9efb				   FPUSH      SET	0
      0  9efb					      plb2var	_spr_setshape.shape
      1  9efb				  -	      IF	!FPULL
      2  9efb				  -	      pla
      3  9efb					      ENDIF
      4  9efb		       8d 06 b5 	      sta	_spr_setshape.shape
  15811  9efe		       20 e0 71 	      jsr	_Pspr_setshape
  15812  9efe				   FPULL      SET	0
  15813  9efe				   FPUSH      SET	1
      0  9f01					      pbyte	#6
      1  9f01		       a9 06		      lda	#6
      2  9f03				  -	      IF	!FPUSH
      3  9f03				  -	      pha
      4  9f03					      ENDIF
  15815  9f03				   FPULL      SET	1
  15816  9f03				   FPUSH      SET	0
      0  9f03					      plb2var	_spr_enable.spr_no
      1  9f03				  -	      IF	!FPULL
      2  9f03				  -	      pla
      3  9f03					      ENDIF
      4  9f03		       8d fa b4 	      sta	_spr_enable.spr_no
  15818  9f06		       20 6e 71 	      jsr	_Pspr_enable
  15819  9f06				   FPULL      SET	0
  15820  9f06				   FPUSH      SET	1
      0  9f09					      pbyte	#6
      1  9f09		       a9 06		      lda	#6
      2  9f0b				  -	      IF	!FPUSH
      3  9f0b				  -	      pha
      4  9f0b					      ENDIF
  15822  9f0b				   FPULL      SET	1
  15823  9f0b				   FPUSH      SET	0
      0  9f0b					      plb2var	_spr_setpos.spr_no
      1  9f0b				  -	      IF	!FPULL
      2  9f0b				  -	      pla
      3  9f0b					      ENDIF
      4  9f0b		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15825  9f0b				   FPULL      SET	0
      0  9f0e					      pbyte	#196
      1  9f0e		       a9 c4		      lda	#196
      2  9f10					      IF	!FPUSH
      3  9f10		       48		      pha
      4  9f11					      ENDIF
      0  9f11					      btow
      1  9f11		       a9 00		      lda	#$00
      2  9f13		       48		      pha
      0  9f14					      plw2var	_spr_setpos.x
      1  9f14					      IF	!FPULL
      2  9f14		       68		      pla
      3  9f15		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9f18		       68		      pla
      5  9f19		       8d 02 b5 	      sta	_spr_setpos.x
      6  9f1c				  -	      ELSE
      7  9f1c				  -	      sta	_spr_setpos.x
      8  9f1c				  -	      sty	_spr_setpos.x+1
      9  9f1c					      ENDIF
  15829  9f1c				   FPUSH      SET	1
      0  9f1c					      pbyte	#205
      1  9f1c		       a9 cd		      lda	#205
      2  9f1e				  -	      IF	!FPUSH
      3  9f1e				  -	      pha
      4  9f1e					      ENDIF
  15831  9f1e				   FPULL      SET	1
  15832  9f1e				   FPUSH      SET	0
      0  9f1e					      plb2var	_spr_setpos.y
      1  9f1e				  -	      IF	!FPULL
      2  9f1e				  -	      pla
      3  9f1e					      ENDIF
      4  9f1e		       8d 04 b5 	      sta	_spr_setpos.y
  15834  9f21		       20 bb 71 	      jsr	_Pspr_setpos
  15835  9f21				   FPULL      SET	0
  15836  9f21				   FPUSH      SET	1
      0  9f24					      pbyte	#7
      1  9f24		       a9 07		      lda	#7
      2  9f26				  -	      IF	!FPUSH
      3  9f26				  -	      pha
      4  9f26					      ENDIF
  15838  9f26				   FPULL      SET	1
  15839  9f26				   FPUSH      SET	0
      0  9f26					      plb2var	_spr_setshape.spr_no
      1  9f26				  -	      IF	!FPULL
      2  9f26				  -	      pla
      3  9f26					      ENDIF
      4  9f26		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15841  9f26				   FPULL      SET	0
  15842  9f26				   FPUSH      SET	1
      0  9f29					      pbyte	#221
      1  9f29		       a9 dd		      lda	#221
      2  9f2b				  -	      IF	!FPUSH
      3  9f2b				  -	      pha
      4  9f2b					      ENDIF
  15844  9f2b				   FPULL      SET	1
  15845  9f2b				   FPUSH      SET	0
      0  9f2b					      plb2var	_spr_setshape.shape
      1  9f2b				  -	      IF	!FPULL
      2  9f2b				  -	      pla
      3  9f2b					      ENDIF
      4  9f2b		       8d 06 b5 	      sta	_spr_setshape.shape
  15847  9f2e		       20 e0 71 	      jsr	_Pspr_setshape
  15848  9f2e				   FPULL      SET	0
  15849  9f2e				   FPUSH      SET	1
      0  9f31					      pbyte	#7
      1  9f31		       a9 07		      lda	#7
      2  9f33				  -	      IF	!FPUSH
      3  9f33				  -	      pha
      4  9f33					      ENDIF
  15851  9f33				   FPULL      SET	1
  15852  9f33				   FPUSH      SET	0
      0  9f33					      plb2var	_spr_setposx.spr_no
      1  9f33				  -	      IF	!FPULL
      2  9f33				  -	      pla
      3  9f33					      ENDIF
      4  9f33		       8d fe b4 	      sta	_spr_setposx.spr_no
  15854  9f33				   FPULL      SET	0
  15855  9f33				   FPUSH      SET	1
      0  9f36					      pwvar	_intro.aircraft_posx
      1  9f36				  -	      IF	!FPUSH
      2  9f36				  -	      lda	_intro.aircraft_posx
      3  9f36				  -	      pha
      4  9f36				  -	      lda	_intro.aircraft_posx+1
      5  9f36				  -	      pha
      6  9f36					      ELSE
      7  9f36		       ad 87 b6 	      lda	_intro.aircraft_posx
      8  9f39		       ac 88 b6 	      ldy	_intro.aircraft_posx+1
      9  9f3c					      ENDIF
  15857  9f3c				   FPULL      SET	1
  15858  9f3c				   FPUSH      SET	0
      0  9f3c					      plw2var	_spr_setposx.x
      1  9f3c				  -	      IF	!FPULL
      2  9f3c				  -	      pla
      3  9f3c				  -	      sta	_spr_setposx.x+1
      4  9f3c				  -	      pla
      5  9f3c				  -	      sta	_spr_setposx.x
      6  9f3c					      ELSE
      7  9f3c		       8d ff b4 	      sta	_spr_setposx.x
      8  9f3f		       8c 00 b5 	      sty	_spr_setposx.x+1
      9  9f42					      ENDIF
  15860  9f42		       20 95 71 	      jsr	_Pspr_setposx
  15861  9f42				   FPULL      SET	0
  15862  9f42				   FPUSH      SET	1
      0  9f45					      pbyte	#7
      1  9f45		       a9 07		      lda	#7
      2  9f47				  -	      IF	!FPUSH
      3  9f47				  -	      pha
      4  9f47					      ENDIF
  15864  9f47				   FPULL      SET	1
  15865  9f47				   FPUSH      SET	0
      0  9f47					      plb2var	_spr_setposy.spr_no
      1  9f47				  -	      IF	!FPULL
      2  9f47				  -	      pla
      3  9f47					      ENDIF
      4  9f47		       8d fc b4 	      sta	_spr_setposy.spr_no
  15867  9f47				   FPULL      SET	0
  15868  9f47				   FPUSH      SET	1
      0  9f4a					      pbvar	_intro.aircraft_posy
      0  9f4a					      pbyte	_intro.aircraft_posy
      1  9f4a		       ad 89 b6 	      lda	_intro.aircraft_posy
      2  9f4d				  -	      IF	!FPUSH
      3  9f4d				  -	      pha
      4  9f4d					      ENDIF
  15870  9f4d				   FPULL      SET	1
  15871  9f4d				   FPUSH      SET	0
      0  9f4d					      plb2var	_spr_setposy.y
      1  9f4d				  -	      IF	!FPULL
      2  9f4d				  -	      pla
      3  9f4d					      ENDIF
      4  9f4d		       8d fd b4 	      sta	_spr_setposy.y
  15873  9f50		       20 88 71 	      jsr	_Pspr_setposy
  15874  9f50				   FPULL      SET	0
  15875  9f50				   FPUSH      SET	1
      0  9f53					      pbyte	#7
      1  9f53		       a9 07		      lda	#7
      2  9f55				  -	      IF	!FPUSH
      3  9f55				  -	      pha
      4  9f55					      ENDIF
  15877  9f55				   FPULL      SET	1
  15878  9f55				   FPUSH      SET	0
      0  9f55					      plb2var	_spr_behindbg.spr_no
      1  9f55				  -	      IF	!FPULL
      2  9f55				  -	      pla
      3  9f55					      ENDIF
      4  9f55		       8d 0f b5 	      sta	_spr_behindbg.spr_no
  15880  9f58		       20 42 72 	      jsr	_Pspr_behindbg
  15881  9f58				   FPULL      SET	0
  15882  9f58				   FPUSH      SET	1
      0  9f5b					      pbyte	#7
      1  9f5b		       a9 07		      lda	#7
      2  9f5d				  -	      IF	!FPUSH
      3  9f5d				  -	      pha
      4  9f5d					      ENDIF
  15884  9f5d				   FPULL      SET	1
  15885  9f5d				   FPUSH      SET	0
      0  9f5d					      plb2var	_spr_enable.spr_no
      1  9f5d				  -	      IF	!FPULL
      2  9f5d				  -	      pla
      3  9f5d					      ENDIF
      4  9f5d		       8d fa b4 	      sta	_spr_enable.spr_no
  15887  9f60		       20 6e 71 	      jsr	_Pspr_enable
  15888  9f60				   FPULL      SET	0
  15889  9f60				   FPUSH      SET	1
      0  9f63					      pbyte	#0
      1  9f63		       a9 00		      lda	#0
      2  9f65				  -	      IF	!FPUSH
      3  9f65				  -	      pha
      4  9f65					      ENDIF
  15891  9f65				   FPULL      SET	1
  15892  9f65				   FPUSH      SET	0
      0  9f65					      plb2var	_spr_setmulti.spr_no
      1  9f65				  -	      IF	!FPULL
      2  9f65				  -	      pla
      3  9f65					      ENDIF
      4  9f65		       8d 07 b5 	      sta	_spr_setmulti.spr_no
  15894  9f68		       20 ea 71 	      jsr	_Pspr_setmulti
  15895  9f68				   FPULL      SET	0
  15896  9f68				   FPUSH      SET	1
      0  9f6b					      pbyte	#0
      1  9f6b		       a9 00		      lda	#0
      2  9f6d				  -	      IF	!FPUSH
      3  9f6d				  -	      pha
      4  9f6d					      ENDIF
  15898  9f6d				   FPULL      SET	1
  15899  9f6d				   FPUSH      SET	0
      0  9f6d					      plb2var	_spr_setcolor.spr_no
      1  9f6d				  -	      IF	!FPULL
      2  9f6d				  -	      pla
      3  9f6d					      ENDIF
      4  9f6d		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15901  9f6d				   FPULL      SET	0
  15902  9f6d				   FPUSH      SET	1
      0  9f70					      pbyte	#5
      1  9f70		       a9 05		      lda	#5
      2  9f72				  -	      IF	!FPUSH
      3  9f72				  -	      pha
      4  9f72					      ENDIF
  15904  9f72				   FPULL      SET	1
  15905  9f72				   FPUSH      SET	0
      0  9f72					      plb2var	_spr_setcolor.color
      1  9f72				  -	      IF	!FPULL
      2  9f72				  -	      pla
      3  9f72					      ENDIF
      4  9f72		       8d 0a b5 	      sta	_spr_setcolor.color
  15907  9f75		       20 04 72 	      jsr	_Pspr_setcolor
  15908  9f75				   FPULL      SET	0
  15909  9f75				   FPUSH      SET	1
      0  9f78					      pbyte	#0
      1  9f78		       a9 00		      lda	#0
      2  9f7a				  -	      IF	!FPUSH
      3  9f7a				  -	      pha
      4  9f7a					      ENDIF
  15911  9f7a				   FPULL      SET	1
  15912  9f7a				   FPUSH      SET	0
      0  9f7a					      plb2var	_spr_setshape.spr_no
      1  9f7a				  -	      IF	!FPULL
      2  9f7a				  -	      pla
      3  9f7a					      ENDIF
      4  9f7a		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15914  9f7a				   FPULL      SET	0
  15915  9f7a				   FPUSH      SET	1
      0  9f7d					      pbyte	#234
      1  9f7d		       a9 ea		      lda	#234
      2  9f7f				  -	      IF	!FPUSH
      3  9f7f				  -	      pha
      4  9f7f					      ENDIF
  15917  9f7f				   FPULL      SET	1
  15918  9f7f				   FPUSH      SET	0
      0  9f7f					      plb2var	_spr_setshape.shape
      1  9f7f				  -	      IF	!FPULL
      2  9f7f				  -	      pla
      3  9f7f					      ENDIF
      4  9f7f		       8d 06 b5 	      sta	_spr_setshape.shape
  15920  9f82		       20 e0 71 	      jsr	_Pspr_setshape
  15921  9f82				   FPULL      SET	0
  15922  9f82				   FPUSH      SET	1
      0  9f85					      pbyte	#0
      1  9f85		       a9 00		      lda	#0
      2  9f87				  -	      IF	!FPUSH
      3  9f87				  -	      pha
      4  9f87					      ENDIF
  15924  9f87				   FPULL      SET	1
  15925  9f87				   FPUSH      SET	0
      0  9f87					      plb2var	_spr_enable.spr_no
      1  9f87				  -	      IF	!FPULL
      2  9f87				  -	      pla
      3  9f87					      ENDIF
      4  9f87		       8d fa b4 	      sta	_spr_enable.spr_no
  15927  9f8a		       20 6e 71 	      jsr	_Pspr_enable
  15928  9f8a				   FPULL      SET	0
  15929  9f8a				   FPUSH      SET	1
      0  9f8d					      pbyte	#0
      1  9f8d		       a9 00		      lda	#0
      2  9f8f				  -	      IF	!FPUSH
      3  9f8f				  -	      pha
      4  9f8f					      ENDIF
  15931  9f8f				   FPULL      SET	1
  15932  9f8f				   FPUSH      SET	0
      0  9f8f					      plb2var	_spr_setpos.spr_no
      1  9f8f				  -	      IF	!FPULL
      2  9f8f				  -	      pla
      3  9f8f					      ENDIF
      4  9f8f		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15934  9f8f				   FPULL      SET	0
      0  9f92					      pbyte	#120
      1  9f92		       a9 78		      lda	#120
      2  9f94					      IF	!FPUSH
      3  9f94		       48		      pha
      4  9f95					      ENDIF
      0  9f95					      btow
      1  9f95		       a9 00		      lda	#$00
      2  9f97		       48		      pha
      0  9f98					      plw2var	_spr_setpos.x
      1  9f98					      IF	!FPULL
      2  9f98		       68		      pla
      3  9f99		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9f9c		       68		      pla
      5  9f9d		       8d 02 b5 	      sta	_spr_setpos.x
      6  9fa0				  -	      ELSE
      7  9fa0				  -	      sta	_spr_setpos.x
      8  9fa0				  -	      sty	_spr_setpos.x+1
      9  9fa0					      ENDIF
  15938  9fa0				   FPUSH      SET	1
      0  9fa0					      pbyte	#189
      1  9fa0		       a9 bd		      lda	#189
      2  9fa2				  -	      IF	!FPUSH
      3  9fa2				  -	      pha
      4  9fa2					      ENDIF
  15940  9fa2				   FPULL      SET	1
  15941  9fa2				   FPUSH      SET	0
      0  9fa2					      plb2var	_spr_setpos.y
      1  9fa2				  -	      IF	!FPULL
      2  9fa2				  -	      pla
      3  9fa2					      ENDIF
      4  9fa2		       8d 04 b5 	      sta	_spr_setpos.y
  15943  9fa5		       20 bb 71 	      jsr	_Pspr_setpos
  15944  9fa5				   FPULL      SET	0
  15945  9fa5				   FPUSH      SET	1
      0  9fa8					      pbyte	#1
      1  9fa8		       a9 01		      lda	#1
      2  9faa				  -	      IF	!FPUSH
      3  9faa				  -	      pha
      4  9faa					      ENDIF
  15947  9faa				   FPULL      SET	1
  15948  9faa				   FPUSH      SET	0
      0  9faa					      plb2var	_spr_setmulti.spr_no
      1  9faa				  -	      IF	!FPULL
      2  9faa				  -	      pla
      3  9faa					      ENDIF
      4  9faa		       8d 07 b5 	      sta	_spr_setmulti.spr_no
  15950  9fad		       20 ea 71 	      jsr	_Pspr_setmulti
  15951  9fad				   FPULL      SET	0
  15952  9fad				   FPUSH      SET	1
      0  9fb0					      pbyte	#1
      1  9fb0		       a9 01		      lda	#1
      2  9fb2				  -	      IF	!FPUSH
      3  9fb2				  -	      pha
      4  9fb2					      ENDIF
  15954  9fb2				   FPULL      SET	1
  15955  9fb2				   FPUSH      SET	0
      0  9fb2					      plb2var	_spr_setcolor.spr_no
      1  9fb2				  -	      IF	!FPULL
      2  9fb2				  -	      pla
      3  9fb2					      ENDIF
      4  9fb2		       8d 09 b5 	      sta	_spr_setcolor.spr_no
  15957  9fb2				   FPULL      SET	0
  15958  9fb2				   FPUSH      SET	1
      0  9fb5					      pbyte	#5
      1  9fb5		       a9 05		      lda	#5
      2  9fb7				  -	      IF	!FPUSH
      3  9fb7				  -	      pha
      4  9fb7					      ENDIF
  15960  9fb7				   FPULL      SET	1
  15961  9fb7				   FPUSH      SET	0
      0  9fb7					      plb2var	_spr_setcolor.color
      1  9fb7				  -	      IF	!FPULL
      2  9fb7				  -	      pla
      3  9fb7					      ENDIF
      4  9fb7		       8d 0a b5 	      sta	_spr_setcolor.color
  15963  9fba		       20 04 72 	      jsr	_Pspr_setcolor
  15964  9fba				   FPULL      SET	0
  15965  9fba				   FPUSH      SET	1
      0  9fbd					      pbyte	#1
      1  9fbd		       a9 01		      lda	#1
      2  9fbf				  -	      IF	!FPUSH
      3  9fbf				  -	      pha
      4  9fbf					      ENDIF
  15967  9fbf				   FPULL      SET	1
  15968  9fbf				   FPUSH      SET	0
      0  9fbf					      plb2var	_spr_setshape.spr_no
      1  9fbf				  -	      IF	!FPULL
      2  9fbf				  -	      pla
      3  9fbf					      ENDIF
      4  9fbf		       8d 05 b5 	      sta	_spr_setshape.spr_no
  15970  9fbf				   FPULL      SET	0
  15971  9fbf				   FPUSH      SET	1
      0  9fc2					      pbyte	#234
      1  9fc2		       a9 ea		      lda	#234
      2  9fc4				  -	      IF	!FPUSH
      3  9fc4				  -	      pha
      4  9fc4					      ENDIF
  15973  9fc4				   FPULL      SET	1
  15974  9fc4				   FPUSH      SET	0
      0  9fc4					      plb2var	_spr_setshape.shape
      1  9fc4				  -	      IF	!FPULL
      2  9fc4				  -	      pla
      3  9fc4					      ENDIF
      4  9fc4		       8d 06 b5 	      sta	_spr_setshape.shape
  15976  9fc7		       20 e0 71 	      jsr	_Pspr_setshape
  15977  9fc7				   FPULL      SET	0
  15978  9fc7				   FPUSH      SET	1
      0  9fca					      pbyte	#1
      1  9fca		       a9 01		      lda	#1
      2  9fcc				  -	      IF	!FPUSH
      3  9fcc				  -	      pha
      4  9fcc					      ENDIF
  15980  9fcc				   FPULL      SET	1
  15981  9fcc				   FPUSH      SET	0
      0  9fcc					      plb2var	_spr_enable.spr_no
      1  9fcc				  -	      IF	!FPULL
      2  9fcc				  -	      pla
      3  9fcc					      ENDIF
      4  9fcc		       8d fa b4 	      sta	_spr_enable.spr_no
  15983  9fcf		       20 6e 71 	      jsr	_Pspr_enable
  15984  9fcf				   FPULL      SET	0
  15985  9fcf				   FPUSH      SET	1
      0  9fd2					      pbyte	#1
      1  9fd2		       a9 01		      lda	#1
      2  9fd4				  -	      IF	!FPUSH
      3  9fd4				  -	      pha
      4  9fd4					      ENDIF
  15987  9fd4				   FPULL      SET	1
  15988  9fd4				   FPUSH      SET	0
      0  9fd4					      plb2var	_spr_setpos.spr_no
      1  9fd4				  -	      IF	!FPULL
      2  9fd4				  -	      pla
      3  9fd4					      ENDIF
      4  9fd4		       8d 01 b5 	      sta	_spr_setpos.spr_no
  15990  9fd4				   FPULL      SET	0
      0  9fd7					      pbyte	#72
      1  9fd7		       a9 48		      lda	#72
      2  9fd9					      IF	!FPUSH
      3  9fd9		       48		      pha
      4  9fda					      ENDIF
      0  9fda					      btow
      1  9fda		       a9 00		      lda	#$00
      2  9fdc		       48		      pha
      0  9fdd					      plw2var	_spr_setpos.x
      1  9fdd					      IF	!FPULL
      2  9fdd		       68		      pla
      3  9fde		       8d 03 b5 	      sta	_spr_setpos.x+1
      4  9fe1		       68		      pla
      5  9fe2		       8d 02 b5 	      sta	_spr_setpos.x
      6  9fe5				  -	      ELSE
      7  9fe5				  -	      sta	_spr_setpos.x
      8  9fe5				  -	      sty	_spr_setpos.x+1
      9  9fe5					      ENDIF
  15994  9fe5				   FPUSH      SET	1
      0  9fe5					      pbyte	#197
      1  9fe5		       a9 c5		      lda	#197
      2  9fe7				  -	      IF	!FPUSH
      3  9fe7				  -	      pha
      4  9fe7					      ENDIF
  15996  9fe7				   FPULL      SET	1
  15997  9fe7				   FPUSH      SET	0
      0  9fe7					      plb2var	_spr_setpos.y
      1  9fe7				  -	      IF	!FPULL
      2  9fe7				  -	      pla
      3  9fe7					      ENDIF
      4  9fe7		       8d 04 b5 	      sta	_spr_setpos.y
  15999  9fea		       20 bb 71 	      jsr	_Pspr_setpos
  16000  9fed				   _Lintro.wait_loop
  16001  9fed				   FPULL      SET	0
  16002  9fed				   FPUSH      SET	1
      0  9fed					      pbyte	#96
      1  9fed		       a9 60		      lda	#96
      2  9fef				  -	      IF	!FPUSH
      3  9fef				  -	      pha
      4  9fef					      ENDIF
  16004  9fef				   FPULL      SET	1
  16005  9fef				   FPUSH      SET	0
      0  9fef					      watchc	53266
      1  9fef				  -	      IF	!FPULL
      2  9fef				  -	      pla
      3  9fef					      ENDIF
      4  9fef				   .again
      5  9fef		       cd 12 d0 	      cmp	53266
      6  9ff2		       d0 fb		      bne	.again
  16007  9ff2				   FPULL      SET	0
  16008  9ff2				   FPUSH      SET	1
      0  9ff4					      pbyte	#15
      1  9ff4		       a9 0f		      lda	#15
      2  9ff6				  -	      IF	!FPUSH
      3  9ff6				  -	      pha
      4  9ff6					      ENDIF
  16010  9ff6				   FPULL      SET	1
  16011  9ff6				   FPUSH      SET	0
      0  9ff6					      pokeb_const_addr	#53282
      1  9ff6
      2  9ff6
      3  9ff6
      4  9ff6		       d0 22	   .ad	      EQU	#53282
      5  9ff6				  -	      IF	!FPULL
      6  9ff6				  -	      pla
      7  9ff6					      ENDIF
      8  9ff6		       8d 22 d0 	      sta	.ad
  16013  9ff6				   FPULL      SET	0
  16014  9ff6				   FPUSH      SET	1
      0  9ff9					      pbyte	#12
      1  9ff9		       a9 0c		      lda	#12
      2  9ffb				  -	      IF	!FPUSH
      3  9ffb				  -	      pha
      4  9ffb					      ENDIF
  16016  9ffb				   FPULL      SET	1
  16017  9ffb				   FPUSH      SET	0
      0  9ffb					      pokeb_const_addr	#53283
      1  9ffb
      2  9ffb
      3  9ffb
      4  9ffb		       d0 23	   .ad	      EQU	#53283
      5  9ffb				  -	      IF	!FPULL
      6  9ffb				  -	      pla
      7  9ffb					      ENDIF
      8  9ffb		       8d 23 d0 	      sta	.ad
  16019  9ffb				   FPULL      SET	0
  16020  9ffb				   FPUSH      SET	1
      0  9ffe					      pbyte	#176
      1  9ffe		       a9 b0		      lda	#176
      2  a000				  -	      IF	!FPUSH
      3  a000				  -	      pha
      4  a000					      ENDIF
  16022  a000				   FPULL      SET	1
  16023  a000				   FPUSH      SET	0
      0  a000					      watchc	53266
      1  a000				  -	      IF	!FPULL
      2  a000				  -	      pla
      3  a000					      ENDIF
      4  a000				   .again
      5  a000		       cd 12 d0 	      cmp	53266
      6  a003		       d0 fb		      bne	.again
  16025  a003				   FPULL      SET	0
  16026  a003				   FPUSH      SET	1
      0  a005					      pbyte	#7
      1  a005		       a9 07		      lda	#7
      2  a007				  -	      IF	!FPUSH
      3  a007				  -	      pha
      4  a007					      ENDIF
  16028  a007				   FPULL      SET	1
  16029  a007				   FPUSH      SET	0
      0  a007					      pokeb_const_addr	#53282
      1  a007
      2  a007
      3  a007
      4  a007		       d0 22	   .ad	      EQU	#53282
      5  a007				  -	      IF	!FPULL
      6  a007				  -	      pla
      7  a007					      ENDIF
      8  a007		       8d 22 d0 	      sta	.ad
  16031  a007				   FPULL      SET	0
  16032  a007				   FPUSH      SET	1
      0  a00a					      pbyte	#2
      1  a00a		       a9 02		      lda	#2
      2  a00c				  -	      IF	!FPUSH
      3  a00c				  -	      pha
      4  a00c					      ENDIF
  16034  a00c				   FPULL      SET	1
  16035  a00c				   FPUSH      SET	0
      0  a00c					      pokeb_const_addr	#53283
      1  a00c
      2  a00c
      3  a00c
      4  a00c		       d0 23	   .ad	      EQU	#53283
      5  a00c				  -	      IF	!FPULL
      6  a00c				  -	      pla
      7  a00c					      ENDIF
      8  a00c		       8d 23 d0 	      sta	.ad
  16037  a00c				   FPULL      SET	0
  16038  a00c				   FPUSH      SET	1
      0  a00f					      pbyte	#2
      1  a00f		       a9 02		      lda	#2
      2  a011				  -	      IF	!FPUSH
      3  a011				  -	      pha
      4  a011					      ENDIF
  16040  a011				   FPULL      SET	1
  16041  a011				   FPUSH      SET	0
      0  a011					      plb2var	_spr_setshape.spr_no
      1  a011				  -	      IF	!FPULL
      2  a011				  -	      pla
      3  a011					      ENDIF
      4  a011		       8d 05 b5 	      sta	_spr_setshape.spr_no
  16043  a011				   FPULL      SET	0
  16044  a011				   FPUSH      SET	1
      0  a014					      opt_pbyte_pbarray_fast	_intro.helicopter_animphase, _intro.helicopter_anim
      1  a014
      2  a014
      3  a014
      4  a014		       ae 86 b6 	      ldx	_intro.helicopter_animphase
      5  a017		       bd c8 ad 	      lda	_intro.helicopter_anim,x
      6  a01a				  -	      IF	!FPUSH
      7  a01a				  -	      pha
      8  a01a					      ENDIF
  16046  a01a				   FPULL      SET	1
  16047  a01a				   FPUSH      SET	0
      0  a01a					      plb2var	_spr_setshape.shape
      1  a01a				  -	      IF	!FPULL
      2  a01a				  -	      pla
      3  a01a					      ENDIF
      4  a01a		       8d 06 b5 	      sta	_spr_setshape.shape
  16049  a01d		       20 e0 71 	      jsr	_Pspr_setshape
      0  a020					      incb	_intro.helicopter_animphase
      1  a020		       ee 86 b6 	      inc	_intro.helicopter_animphase
      0  a023					      pbyte_pbyte_cmpbeq_cond	_intro.helicopter_animphase, #6, _EI_65566, _EL_65566
      1  a023
      2  a023
      3  a023		       ad 86 b6 	      lda	_intro.helicopter_animphase
      4  a026		       c9 06		      cmp	#6
      5  a028		       f0 03		      beq	*+5
      6  a02a				  -	      IFCONST	_EL_65566
      7  a02a				  -	      jmp	_EL_65566
      8  a02a					      ELSE
      9  a02a		       4c 32 a0 	      jmp	_EI_65566
     10  a02d					      ENDIF
  16052  a02d				   FPULL      SET	0
  16053  a02d				   FPUSH      SET	1
      0  a02d					      pbyte	#0
      1  a02d		       a9 00		      lda	#0
      2  a02f				  -	      IF	!FPUSH
      3  a02f				  -	      pha
      4  a02f					      ENDIF
  16055  a02f				   FPULL      SET	1
  16056  a02f				   FPUSH      SET	0
      0  a02f					      plb2var	_intro.helicopter_animphase
      1  a02f				  -	      IF	!FPULL
      2  a02f				  -	      pla
      3  a02f					      ENDIF
      4  a02f		       8d 86 b6 	      sta	_intro.helicopter_animphase
  16058  a032				   _EI_65566
  16059  a032				   FPULL      SET	0
      0  a032					      opt_pbyte_pbyte_and	_intro.animphase, #1
      1  a032
      2  a032
      3  a032
      4  a032
      5  a032
      6  a032		       ad 84 b6 	      lda	_intro.animphase
      7  a035		       29 01		      and	#1
      8  a037					      IF	!FPUSH
      9  a037		       48		      pha
     10  a038					      ENDIF
  16061  a038				   FPUSH      SET	1
      0  a038					      pbyte	#0
      1  a038		       a9 00		      lda	#0
      2  a03a				  -	      IF	!FPUSH
      3  a03a				  -	      pha
      4  a03a					      ENDIF
  16063  a03a				   FPULL      SET	1
      0  a03a					      cmpbeq
      1  a03a				  -	      IF	!FPULL
      2  a03a				  -	      pla
      3  a03a					      ENDIF
      4  a03a		       85 fc		      sta	R1
      5  a03c		       68		      pla
      6  a03d		       c5 fc		      cmp	R1
      7  a03f		       f0 05		      beq	.pht
      0  a041					      pzero
      1  a041		       a9 00		      lda	#$00
      2  a043				  -	      IF	!FPUSH
      3  a043				  -	      pha
      4  a043					      ENDIF
      9  a043				  -	      IF	!FPUSH
     10  a043				  -	      jmp	*+6
     11  a043					      ELSE
     12  a043		       4c 48 a0 	      jmp	*+5
     13  a046					      ENDIF
      0  a046				   .pht       pone
      1  a046		       a9 01		      lda	#$01
      2  a048				  -	      IF	!FPUSH
      3  a048				  -	      pha
      4  a048					      ENDIF
  16065  a048				   FPUSH      SET	0
      0  a048					      cond_stmt	_EI_59, _EL_59
      1  a048				  -	      IF	!FPULL
      2  a048				  -	      pla
      3  a048					      ENDIF
      4  a048		       d0 03		      bne	*+5
      5  a04a				  -	      IFCONST	_EL_59
      6  a04a				  -	      jmp	_EL_59
      7  a04a					      ELSE
      8  a04a		       4c ab a0 	      jmp	_EI_59
      9  a04d					      ENDIF
      0  a04d					      decw	_intro.helicopter_posx
      1  a04d		       ce 8c b6 	      dec	_intro.helicopter_posx
      2  a050		       a9 ff		      lda	#$ff
      3  a052		       cd 8c b6 	      cmp	_intro.helicopter_posx
      4  a055		       d0 03		      bne	.skip
      5  a057		       ce 8d b6 	      dec	_intro.helicopter_posx+1
      6  a05a				   .skip
  16068  a05a				   FPULL      SET	0
      0  a05a					      pwvar	_intro.helicopter_posx
      1  a05a					      IF	!FPUSH
      2  a05a		       ad 8c b6 	      lda	_intro.helicopter_posx
      3  a05d		       48		      pha
      4  a05e		       ad 8d b6 	      lda	_intro.helicopter_posx+1
      5  a061		       48		      pha
      6  a062				  -	      ELSE
      7  a062				  -	      lda	_intro.helicopter_posx
      8  a062				  -	      ldy	_intro.helicopter_posx+1
      9  a062					      ENDIF
      0  a062					      pbyte	#30
      1  a062		       a9 1e		      lda	#30
      2  a064					      IF	!FPUSH
      3  a064		       48		      pha
      4  a065					      ENDIF
      0  a065					      btow
      1  a065		       a9 00		      lda	#$00
      2  a067		       48		      pha
  16072  a067				   FPUSH      SET	1
      0  a068					      cmpwlt
      1  a068		       ba		      tsx
      2  a069		       bd 04 01 	      lda.wx	stack+4
      3  a06c		       dd 02 01 	      cmp.wx	stack+2
      4  a06f		       bd 03 01 	      lda.wx	stack+3
      5  a072		       fd 01 01 	      sbc.wx	stack+1
      6  a075		       10 0a		      bpl	.phf
      7  a077		       e8		      inx
      8  a078		       e8		      inx
      9  a079		       e8		      inx
     10  a07a		       e8		      inx
     11  a07b		       9a		      txs
      0  a07c					      pone
      1  a07c		       a9 01		      lda	#$01
      2  a07e				  -	      IF	!FPUSH
      3  a07e				  -	      pha
      4  a07e					      ENDIF
     13  a07e				  -	      IF	!FPUSH
     14  a07e				  -	      jmp	*+11
     15  a07e					      ELSE
     16  a07e		       4c 88 a0 	      jmp	*+10
     17  a081					      ENDIF
     18  a081		       e8	   .phf       inx
     19  a082		       e8		      inx
     20  a083		       e8		      inx
     21  a084		       e8		      inx
     22  a085		       9a		      txs
      0  a086					      pzero
      1  a086		       a9 00		      lda	#$00
      2  a088				  -	      IF	!FPUSH
      3  a088				  -	      pha
      4  a088					      ENDIF
  16074  a088				   FPULL      SET	1
  16075  a088				   FPUSH      SET	0
      0  a088					      cond_stmt	_EI_65567, _EL_65567
      1  a088				  -	      IF	!FPULL
      2  a088				  -	      pla
      3  a088					      ENDIF
      4  a088		       d0 03		      bne	*+5
      5  a08a				  -	      IFCONST	_EL_65567
      6  a08a				  -	      jmp	_EL_65567
      7  a08a					      ELSE
      8  a08a		       4c 97 a0 	      jmp	_EI_65567
      9  a08d					      ENDIF
  16077  a08d				   FPULL      SET	0
  16078  a08d				   FPUSH      SET	1
      0  a08d					      pword	#380
      1  a08d				  -	      IF	!FPUSH
      2  a08d				  -	      lda	#<#380
      3  a08d				  -	      pha
      4  a08d				  -	      lda	#>#380
      5  a08d				  -	      pha
      6  a08d					      ELSE
      7  a08d		       a9 7c		      lda	#<#380
      8  a08f		       a0 01		      ldy	#>#380
      9  a091					      ENDIF
  16080  a091				   FPULL      SET	1
  16081  a091				   FPUSH      SET	0
      0  a091					      plw2var	_intro.helicopter_posx
      1  a091				  -	      IF	!FPULL
      2  a091				  -	      pla
      3  a091				  -	      sta	_intro.helicopter_posx+1
      4  a091				  -	      pla
      5  a091				  -	      sta	_intro.helicopter_posx
      6  a091					      ELSE
      7  a091		       8d 8c b6 	      sta	_intro.helicopter_posx
      8  a094		       8c 8d b6 	      sty	_intro.helicopter_posx+1
      9  a097					      ENDIF
  16083  a097				   _EI_65567
  16084  a097				   FPULL      SET	0
  16085  a097				   FPUSH      SET	1
      0  a097					      pbyte	#2
      1  a097		       a9 02		      lda	#2
      2  a099				  -	      IF	!FPUSH
      3  a099				  -	      pha
      4  a099					      ENDIF
  16087  a099				   FPULL      SET	1
  16088  a099				   FPUSH      SET	0
      0  a099					      plb2var	_spr_setposx.spr_no
      1  a099				  -	      IF	!FPULL
      2  a099				  -	      pla
      3  a099					      ENDIF
      4  a099		       8d fe b4 	      sta	_spr_setposx.spr_no
  16090  a099				   FPULL      SET	0
  16091  a099				   FPUSH      SET	1
      0  a09c					      pwvar	_intro.helicopter_posx
      1  a09c				  -	      IF	!FPUSH
      2  a09c				  -	      lda	_intro.helicopter_posx
      3  a09c				  -	      pha
      4  a09c				  -	      lda	_intro.helicopter_posx+1
      5  a09c				  -	      pha
      6  a09c					      ELSE
      7  a09c		       ad 8c b6 	      lda	_intro.helicopter_posx
      8  a09f		       ac 8d b6 	      ldy	_intro.helicopter_posx+1
      9  a0a2					      ENDIF
  16093  a0a2				   FPULL      SET	1
  16094  a0a2				   FPUSH      SET	0
      0  a0a2					      plw2var	_spr_setposx.x
      1  a0a2				  -	      IF	!FPULL
      2  a0a2				  -	      pla
      3  a0a2				  -	      sta	_spr_setposx.x+1
      4  a0a2				  -	      pla
      5  a0a2				  -	      sta	_spr_setposx.x
      6  a0a2					      ELSE
      7  a0a2		       8d ff b4 	      sta	_spr_setposx.x
      8  a0a5		       8c 00 b5 	      sty	_spr_setposx.x+1
      9  a0a8					      ENDIF
  16096  a0a8		       20 95 71 	      jsr	_Pspr_setposx
  16097  a0ab				   _EI_59
  16098  a0ab				   FPULL      SET	0
      0  a0ab					      opt_pbyte_pbyte_and	_intro.animphase, #3
      1  a0ab
      2  a0ab
      3  a0ab
      4  a0ab
      5  a0ab
      6  a0ab		       ad 84 b6 	      lda	_intro.animphase
      7  a0ae		       29 03		      and	#3
      8  a0b0					      IF	!FPUSH
      9  a0b0		       48		      pha
     10  a0b1					      ENDIF
  16100  a0b1				   FPUSH      SET	1
      0  a0b1					      pbyte	#0
      1  a0b1		       a9 00		      lda	#0
      2  a0b3				  -	      IF	!FPUSH
      3  a0b3				  -	      pha
      4  a0b3					      ENDIF
  16102  a0b3				   FPULL      SET	1
      0  a0b3					      cmpbeq
      1  a0b3				  -	      IF	!FPULL
      2  a0b3				  -	      pla
      3  a0b3					      ENDIF
      4  a0b3		       85 fc		      sta	R1
      5  a0b5		       68		      pla
      6  a0b6		       c5 fc		      cmp	R1
      7  a0b8		       f0 05		      beq	.pht
      0  a0ba					      pzero
      1  a0ba		       a9 00		      lda	#$00
      2  a0bc				  -	      IF	!FPUSH
      3  a0bc				  -	      pha
      4  a0bc					      ENDIF
      9  a0bc				  -	      IF	!FPUSH
     10  a0bc				  -	      jmp	*+6
     11  a0bc					      ELSE
     12  a0bc		       4c c1 a0 	      jmp	*+5
     13  a0bf					      ENDIF
      0  a0bf				   .pht       pone
      1  a0bf		       a9 01		      lda	#$01
      2  a0c1				  -	      IF	!FPUSH
      3  a0c1				  -	      pha
      4  a0c1					      ENDIF
  16104  a0c1				   FPUSH      SET	0
      0  a0c1					      cond_stmt	_EI_60, _EL_60
      1  a0c1				  -	      IF	!FPULL
      2  a0c1				  -	      pla
      3  a0c1					      ENDIF
      4  a0c1		       d0 03		      bne	*+5
      5  a0c3				  -	      IFCONST	_EL_60
      6  a0c3				  -	      jmp	_EL_60
      7  a0c3					      ELSE
      8  a0c3		       4c 0b a1 	      jmp	_EI_60
      9  a0c6					      ENDIF
  16106  a0c6				   FPULL      SET	0
  16107  a0c6				   FPUSH      SET	1
      0  a0c6					      pbyte	#0
      1  a0c6		       a9 00		      lda	#0
      2  a0c8				  -	      IF	!FPUSH
      3  a0c8				  -	      pha
      4  a0c8					      ENDIF
  16109  a0c8				   FPULL      SET	1
  16110  a0c8				   FPUSH      SET	0
      0  a0c8					      plb2var	_spr_setshape.spr_no
      1  a0c8				  -	      IF	!FPULL
      2  a0c8				  -	      pla
      3  a0c8					      ENDIF
      4  a0c8		       8d 05 b5 	      sta	_spr_setshape.spr_no
  16112  a0c8				   FPULL      SET	0
  16113  a0c8				   FPUSH      SET	1
      0  a0cb					      opt_pbyte_pbarray_fast	_intro.landing_bacon_animphase, _intro.radar_anim
      1  a0cb
      2  a0cb
      3  a0cb
      4  a0cb		       ae 85 b6 	      ldx	_intro.landing_bacon_animphase
      5  a0ce		       bd d6 ad 	      lda	_intro.radar_anim,x
      6  a0d1				  -	      IF	!FPUSH
      7  a0d1				  -	      pha
      8  a0d1					      ENDIF
  16115  a0d1				   FPULL      SET	1
  16116  a0d1				   FPUSH      SET	0
      0  a0d1					      plb2var	_spr_setshape.shape
      1  a0d1				  -	      IF	!FPULL
      2  a0d1				  -	      pla
      3  a0d1					      ENDIF
      4  a0d1		       8d 06 b5 	      sta	_spr_setshape.shape
  16118  a0d4		       20 e0 71 	      jsr	_Pspr_setshape
  16119  a0d4				   FPULL      SET	0
  16120  a0d4				   FPUSH      SET	1
      0  a0d7					      pbyte	#1
      1  a0d7		       a9 01		      lda	#1
      2  a0d9				  -	      IF	!FPUSH
      3  a0d9				  -	      pha
      4  a0d9					      ENDIF
  16122  a0d9				   FPULL      SET	1
  16123  a0d9				   FPUSH      SET	0
      0  a0d9					      plb2var	_spr_setshape.spr_no
      1  a0d9				  -	      IF	!FPULL
      2  a0d9				  -	      pla
      3  a0d9					      ENDIF
      4  a0d9		       8d 05 b5 	      sta	_spr_setshape.spr_no
  16125  a0d9				   FPULL      SET	0
  16126  a0d9				   FPUSH      SET	1
      0  a0dc					      opt_pbyte_pbarray_fast	_intro.landing_bacon_animphase, _intro.radar_anim
      1  a0dc
      2  a0dc
      3  a0dc
      4  a0dc		       ae 85 b6 	      ldx	_intro.landing_bacon_animphase
      5  a0df		       bd d6 ad 	      lda	_intro.radar_anim,x
      6  a0e2				  -	      IF	!FPUSH
      7  a0e2				  -	      pha
      8  a0e2					      ENDIF
  16128  a0e2				   FPULL      SET	1
  16129  a0e2				   FPUSH      SET	0
      0  a0e2					      plb2var	_spr_setshape.shape
      1  a0e2				  -	      IF	!FPULL
      2  a0e2				  -	      pla
      3  a0e2					      ENDIF
      4  a0e2		       8d 06 b5 	      sta	_spr_setshape.shape
  16131  a0e5		       20 e0 71 	      jsr	_Pspr_setshape
      0  a0e8					      incb	_intro.landing_bacon_animphase
      1  a0e8		       ee 85 b6 	      inc	_intro.landing_bacon_animphase
      0  a0eb					      pbyte_pbyte_cmpbeq_cond	_intro.landing_bacon_animphase, #8, _EI_65568, _EL_65568
      1  a0eb
      2  a0eb
      3  a0eb		       ad 85 b6 	      lda	_intro.landing_bacon_animphase
      4  a0ee		       c9 08		      cmp	#8
      5  a0f0		       f0 03		      beq	*+5
      6  a0f2				  -	      IFCONST	_EL_65568
      7  a0f2				  -	      jmp	_EL_65568
      8  a0f2					      ELSE
      9  a0f2		       4c fa a0 	      jmp	_EI_65568
     10  a0f5					      ENDIF
  16134  a0f5				   FPULL      SET	0
  16135  a0f5				   FPUSH      SET	1
      0  a0f5					      pbyte	#0
      1  a0f5		       a9 00		      lda	#0
      2  a0f7				  -	      IF	!FPUSH
      3  a0f7				  -	      pha
      4  a0f7					      ENDIF
  16137  a0f7				   FPULL      SET	1
  16138  a0f7				   FPUSH      SET	0
      0  a0f7					      plb2var	_intro.landing_bacon_animphase
      1  a0f7				  -	      IF	!FPULL
      2  a0f7				  -	      pla
      3  a0f7					      ENDIF
      4  a0f7		       8d 85 b6 	      sta	_intro.landing_bacon_animphase
  16140  a0fa				   _EI_65568
  16141  a0fa				   FPULL      SET	0
  16142  a0fa				   FPUSH      SET	1
      0  a0fa					      pbyte	#6
      1  a0fa		       a9 06		      lda	#6
      2  a0fc				  -	      IF	!FPUSH
      3  a0fc				  -	      pha
      4  a0fc					      ENDIF
  16144  a0fc				   FPULL      SET	1
  16145  a0fc				   FPUSH      SET	0
      0  a0fc					      plb2var	_spr_setshape.spr_no
      1  a0fc				  -	      IF	!FPULL
      2  a0fc				  -	      pla
      3  a0fc					      ENDIF
      4  a0fc		       8d 05 b5 	      sta	_spr_setshape.spr_no
  16147  a0fc				   FPULL      SET	0
  16148  a0fc				   FPUSH      SET	1
      0  a0ff					      opt_pbyte_pbarray_fast	_intro.landing_bacon_animphase, _intro.landing_bacon_anim
      1  a0ff
      2  a0ff
      3  a0ff
      4  a0ff		       ae 85 b6 	      ldx	_intro.landing_bacon_animphase
      5  a102		       bd ce ad 	      lda	_intro.landing_bacon_anim,x
      6  a105				  -	      IF	!FPUSH
      7  a105				  -	      pha
      8  a105					      ENDIF
  16150  a105				   FPULL      SET	1
  16151  a105				   FPUSH      SET	0
      0  a105					      plb2var	_spr_setshape.shape
      1  a105				  -	      IF	!FPULL
      2  a105				  -	      pla
      3  a105					      ENDIF
      4  a105		       8d 06 b5 	      sta	_spr_setshape.shape
  16153  a108		       20 e0 71 	      jsr	_Pspr_setshape
  16154  a10b
  16155  a10b
  16156  a10b
  16157  a10b
  16158  a10b				   _EI_60
  16159  a10b				   FPULL      SET	0
      0  a10b					      pbyte_pbyte_cmpbeq	_intro.animphase, #250
      1  a10b
      2  a10b
      3  a10b
      4  a10b
      5  a10b
      6  a10b		       ad 84 b6 	      lda	_intro.animphase
      7  a10e		       c9 fa		      cmp	#250
      8  a110		       f0 06		      beq	.true
      0  a112					      pzero
      1  a112		       a9 00		      lda	#$00
      2  a114					      IF	!FPUSH
      3  a114		       48		      pha
      4  a115					      ENDIF
     10  a115					      IF	!FPUSH
     11  a115		       4c 1b a1 	      jmp	*+6
     12  a118				  -	      ELSE
     13  a118				  -	      jmp	*+5
     14  a118					      ENDIF
     15  a118				   .true
      0  a118					      pone
      1  a118		       a9 01		      lda	#$01
      2  a11a					      IF	!FPUSH
      3  a11a		       48		      pha
      4  a11b					      ENDIF
      0  a11b					      pwvar	_intro.aircraft_dir
      1  a11b					      IF	!FPUSH
      2  a11b		       ad 8a b6 	      lda	_intro.aircraft_dir
      3  a11e		       48		      pha
      4  a11f		       ad 8b b6 	      lda	_intro.aircraft_dir+1
      5  a122		       48		      pha
      6  a123				  -	      ELSE
      7  a123				  -	      lda	_intro.aircraft_dir
      8  a123				  -	      ldy	_intro.aircraft_dir+1
      9  a123					      ENDIF
      0  a123					      pbyte	#0
      1  a123		       a9 00		      lda	#0
      2  a125					      IF	!FPUSH
      3  a125		       48		      pha
      4  a126					      ENDIF
      0  a126					      btow
      1  a126		       a9 00		      lda	#$00
      2  a128		       48		      pha
  16164  a128				   FPUSH      SET	1
      0  a129					      cmpweq
      1  a129					      IF	!FPULL
      2  a129		       68		      pla
      3  a12a		       85 fd		      sta	R2
      4  a12c		       68		      pla
      5  a12d		       85 fc		      sta	R1
      6  a12f				  -	      ELSE
      7  a12f				  -	      sta	R1
      8  a12f				  -	      sty	R2
      9  a12f					      ENDIF
     10  a12f		       68		      pla
     11  a130		       c5 fd		      cmp	R2
     12  a132		       d0 0a		      bne	.phf
     13  a134		       68		      pla
     14  a135		       c5 fc		      cmp	R1
     15  a137		       d0 06		      bne	.phf+1
      0  a139					      pone
      1  a139		       a9 01		      lda	#$01
      2  a13b				  -	      IF	!FPUSH
      3  a13b				  -	      pha
      4  a13b					      ENDIF
     17  a13b				  -	      IF	!FPUSH
     18  a13b				  -	      jmp	*+7
     19  a13b					      ELSE
     20  a13b		       4c 41 a1 	      jmp	*+6
     21  a13e					      ENDIF
     22  a13e				   .phf
     23  a13e		       68		      pla
      0  a13f					      pzero
      1  a13f		       a9 00		      lda	#$00
      2  a141				  -	      IF	!FPUSH
      3  a141				  -	      pha
      4  a141					      ENDIF
  16166  a141				   FPULL      SET	1
      0  a141					      andb
      1  a141				  -	      IF	!FPULL
      2  a141				  -	      pla
      3  a141					      ENDIF
      4  a141		       85 fc		      sta	R1
      5  a143		       68		      pla
      6  a144		       25 fc		      and	R1
      7  a146				  -	      IF	!FPUSH
      8  a146				  -	      pha
      9  a146					      ENDIF
  16168  a146				   FPUSH      SET	0
      0  a146					      cond_stmt	_EI_65569, _EL_65569
      1  a146				  -	      IF	!FPULL
      2  a146				  -	      pla
      3  a146					      ENDIF
      4  a146		       d0 03		      bne	*+5
      5  a148				  -	      IFCONST	_EL_65569
      6  a148				  -	      jmp	_EL_65569
      7  a148					      ELSE
      8  a148		       4c 59 a1 	      jmp	_EI_65569
      9  a14b					      ENDIF
  16170  a14b				   FPULL      SET	0
      0  a14b					      pbyte	#1
      1  a14b		       a9 01		      lda	#1
      2  a14d					      IF	!FPUSH
      3  a14d		       48		      pha
      4  a14e					      ENDIF
      0  a14e					      btow
      1  a14e		       a9 00		      lda	#$00
      2  a150		       48		      pha
      0  a151					      plw2var	_intro.aircraft_dir
      1  a151					      IF	!FPULL
      2  a151		       68		      pla
      3  a152		       8d 8b b6 	      sta	_intro.aircraft_dir+1
      4  a155		       68		      pla
      5  a156		       8d 8a b6 	      sta	_intro.aircraft_dir
      6  a159				  -	      ELSE
      7  a159				  -	      sta	_intro.aircraft_dir
      8  a159				  -	      sty	_intro.aircraft_dir+1
      9  a159					      ENDIF
  16174  a159				   _EI_65569
      0  a159					      opt_pbyte_pbyte_and	_intro.animphase, #7
      1  a159
      2  a159
      3  a159
      4  a159
      5  a159
      6  a159		       ad 84 b6 	      lda	_intro.animphase
      7  a15c		       29 07		      and	#7
      8  a15e					      IF	!FPUSH
      9  a15e		       48		      pha
     10  a15f					      ENDIF
  16176  a15f				   FPUSH      SET	1
      0  a15f					      pbyte	#0
      1  a15f		       a9 00		      lda	#0
      2  a161				  -	      IF	!FPUSH
      3  a161				  -	      pha
      4  a161					      ENDIF
  16178  a161				   FPULL      SET	1
  16179  a161				   FPUSH      SET	0
      0  a161					      cmpbeq
      1  a161				  -	      IF	!FPULL
      2  a161				  -	      pla
      3  a161					      ENDIF
      4  a161		       85 fc		      sta	R1
      5  a163		       68		      pla
      6  a164		       c5 fc		      cmp	R1
      7  a166		       f0 06		      beq	.pht
      0  a168					      pzero
      1  a168		       a9 00		      lda	#$00
      2  a16a					      IF	!FPUSH
      3  a16a		       48		      pha
      4  a16b					      ENDIF
      9  a16b					      IF	!FPUSH
     10  a16b		       4c 71 a1 	      jmp	*+6
     11  a16e				  -	      ELSE
     12  a16e				  -	      jmp	*+5
     13  a16e					      ENDIF
      0  a16e				   .pht       pone
      1  a16e		       a9 01		      lda	#$01
      2  a170					      IF	!FPUSH
      3  a170		       48		      pha
      4  a171					      ENDIF
  16181  a171				   FPULL      SET	0
      0  a171					      pwvar	_intro.aircraft_dir
      1  a171					      IF	!FPUSH
      2  a171		       ad 8a b6 	      lda	_intro.aircraft_dir
      3  a174		       48		      pha
      4  a175		       ad 8b b6 	      lda	_intro.aircraft_dir+1
      5  a178		       48		      pha
      6  a179				  -	      ELSE
      7  a179				  -	      lda	_intro.aircraft_dir
      8  a179				  -	      ldy	_intro.aircraft_dir+1
      9  a179					      ENDIF
      0  a179					      pbyte	#0
      1  a179		       a9 00		      lda	#0
      2  a17b					      IF	!FPUSH
      3  a17b		       48		      pha
      4  a17c					      ENDIF
      0  a17c					      btow
      1  a17c		       a9 00		      lda	#$00
      2  a17e		       48		      pha
  16185  a17e				   FPUSH      SET	1
      0  a17f					      cmpwgt
      1  a17f		       ba		      tsx
      2  a180		       bd 02 01 	      lda.wx	stack+2
      3  a183		       dd 04 01 	      cmp.wx	stack+4
      4  a186		       bd 01 01 	      lda.wx	stack+1
      5  a189		       fd 03 01 	      sbc.wx	stack+3
      6  a18c		       30 0a		      bmi	.pht
      7  a18e		       e8		      inx
      8  a18f		       e8		      inx
      9  a190		       e8		      inx
     10  a191		       e8		      inx
     11  a192		       9a		      txs
      0  a193					      pzero
      1  a193		       a9 00		      lda	#$00
      2  a195				  -	      IF	!FPUSH
      3  a195				  -	      pha
      4  a195					      ENDIF
     13  a195				  -	      IF	!FPUSH
     14  a195				  -	      jmp	*+11
     15  a195					      ELSE
     16  a195		       4c 9f a1 	      jmp	*+10
     17  a198					      ENDIF
     18  a198		       e8	   .pht       inx
     19  a199		       e8		      inx
     20  a19a		       e8		      inx
     21  a19b		       e8		      inx
     22  a19c		       9a		      txs
      0  a19d					      pone
      1  a19d		       a9 01		      lda	#$01
      2  a19f				  -	      IF	!FPUSH
      3  a19f				  -	      pha
      4  a19f					      ENDIF
  16187  a19f				   FPULL      SET	1
      0  a19f					      andb
      1  a19f				  -	      IF	!FPULL
      2  a19f				  -	      pla
      3  a19f					      ENDIF
      4  a19f		       85 fc		      sta	R1
      5  a1a1		       68		      pla
      6  a1a2		       25 fc		      and	R1
      7  a1a4				  -	      IF	!FPUSH
      8  a1a4				  -	      pha
      9  a1a4					      ENDIF
  16189  a1a4				   FPUSH      SET	0
      0  a1a4					      cond_stmt	_EI_61, _EL_61
      1  a1a4				  -	      IF	!FPULL
      2  a1a4				  -	      pla
      3  a1a4					      ENDIF
      4  a1a4		       d0 03		      bne	*+5
      5  a1a6				  -	      IFCONST	_EL_61
      6  a1a6				  -	      jmp	_EL_61
      7  a1a6					      ELSE
      8  a1a6		       4c 8e a2 	      jmp	_EI_61
      9  a1a9					      ENDIF
  16191  a1a9				   FPULL      SET	0
      0  a1a9					      pwvar	_intro.aircraft_dir
      1  a1a9					      IF	!FPUSH
      2  a1a9		       ad 8a b6 	      lda	_intro.aircraft_dir
      3  a1ac		       48		      pha
      4  a1ad		       ad 8b b6 	      lda	_intro.aircraft_dir+1
      5  a1b0		       48		      pha
      6  a1b1				  -	      ELSE
      7  a1b1				  -	      lda	_intro.aircraft_dir
      8  a1b1				  -	      ldy	_intro.aircraft_dir+1
      9  a1b1					      ENDIF
      0  a1b1					      pbyte	#1
      1  a1b1		       a9 01		      lda	#1
      2  a1b3					      IF	!FPUSH
      3  a1b3		       48		      pha
      4  a1b4					      ENDIF
      0  a1b4					      btow
      1  a1b4		       a9 00		      lda	#$00
      2  a1b6		       48		      pha
  16195  a1b6				   FPUSH      SET	1
      0  a1b7					      cmpweq
      1  a1b7					      IF	!FPULL
      2  a1b7		       68		      pla
      3  a1b8		       85 fd		      sta	R2
      4  a1ba		       68		      pla
      5  a1bb		       85 fc		      sta	R1
      6  a1bd				  -	      ELSE
      7  a1bd				  -	      sta	R1
      8  a1bd				  -	      sty	R2
      9  a1bd					      ENDIF
     10  a1bd		       68		      pla
     11  a1be		       c5 fd		      cmp	R2
     12  a1c0		       d0 0a		      bne	.phf
     13  a1c2		       68		      pla
     14  a1c3		       c5 fc		      cmp	R1
     15  a1c5		       d0 06		      bne	.phf+1
      0  a1c7					      pone
      1  a1c7		       a9 01		      lda	#$01
      2  a1c9				  -	      IF	!FPUSH
      3  a1c9				  -	      pha
      4  a1c9					      ENDIF
     17  a1c9				  -	      IF	!FPUSH
     18  a1c9				  -	      jmp	*+7
     19  a1c9					      ELSE
     20  a1c9		       4c cf a1 	      jmp	*+6
     21  a1cc					      ENDIF
     22  a1cc				   .phf
     23  a1cc		       68		      pla
      0  a1cd					      pzero
      1  a1cd		       a9 00		      lda	#$00
      2  a1cf				  -	      IF	!FPUSH
      3  a1cf				  -	      pha
      4  a1cf					      ENDIF
  16197  a1cf				   FPULL      SET	1
  16198  a1cf				   FPUSH      SET	0
      0  a1cf					      cond_stmt	_EI_62, _EL_62
      1  a1cf				  -	      IF	!FPULL
      2  a1cf				  -	      pla
      3  a1cf					      ENDIF
      4  a1cf		       d0 03		      bne	*+5
      5  a1d1					      IFCONST	_EL_62
      6  a1d1		       4c 09 a2 	      jmp	_EL_62
      7  a1d4				  -	      ELSE
      8  a1d4				  -	      jmp	_EI_62
      9  a1d4					      ENDIF
      0  a1d4					      decb	_intro.aircraft_posy
      1  a1d4		       ce 89 b6 	      dec	_intro.aircraft_posy
  16201  a1d4				   FPULL      SET	0
  16202  a1d4				   FPUSH      SET	1
      0  a1d7					      pbyte	#7
      1  a1d7		       a9 07		      lda	#7
      2  a1d9				  -	      IF	!FPUSH
      3  a1d9				  -	      pha
      4  a1d9					      ENDIF
  16204  a1d9				   FPULL      SET	1
  16205  a1d9				   FPUSH      SET	0
      0  a1d9					      plb2var	_spr_setposy.spr_no
      1  a1d9				  -	      IF	!FPULL
      2  a1d9				  -	      pla
      3  a1d9					      ENDIF
      4  a1d9		       8d fc b4 	      sta	_spr_setposy.spr_no
  16207  a1d9				   FPULL      SET	0
  16208  a1d9				   FPUSH      SET	1
      0  a1dc					      pbvar	_intro.aircraft_posy
      0  a1dc					      pbyte	_intro.aircraft_posy
      1  a1dc		       ad 89 b6 	      lda	_intro.aircraft_posy
      2  a1df				  -	      IF	!FPUSH
      3  a1df				  -	      pha
      4  a1df					      ENDIF
  16210  a1df				   FPULL      SET	1
  16211  a1df				   FPUSH      SET	0
      0  a1df					      plb2var	_spr_setposy.y
      1  a1df				  -	      IF	!FPULL
      2  a1df				  -	      pla
      3  a1df					      ENDIF
      4  a1df		       8d fd b4 	      sta	_spr_setposy.y
  16213  a1e2		       20 88 71 	      jsr	_Pspr_setposy
  16214  a1e2				   FPULL      SET	0
      0  a1e5					      pbvar	_intro.aircraft_posy
      0  a1e5					      pbyte	_intro.aircraft_posy
      1  a1e5		       ad 89 b6 	      lda	_intro.aircraft_posy
      2  a1e8					      IF	!FPUSH
      3  a1e8		       48		      pha
      4  a1e9					      ENDIF
  16216  a1e9				   FPUSH      SET	1
      0  a1e9					      pbyte	#212
      1  a1e9		       a9 d4		      lda	#212
      2  a1eb				  -	      IF	!FPUSH
      3  a1eb				  -	      pha
      4  a1eb					      ENDIF
  16218  a1eb				   FPULL      SET	1
      0  a1eb					      cmpbeq
      1  a1eb				  -	      IF	!FPULL
      2  a1eb				  -	      pla
      3  a1eb					      ENDIF
      4  a1eb		       85 fc		      sta	R1
      5  a1ed		       68		      pla
      6  a1ee		       c5 fc		      cmp	R1
      7  a1f0		       f0 05		      beq	.pht
      0  a1f2					      pzero
      1  a1f2		       a9 00		      lda	#$00
      2  a1f4				  -	      IF	!FPUSH
      3  a1f4				  -	      pha
      4  a1f4					      ENDIF
      9  a1f4				  -	      IF	!FPUSH
     10  a1f4				  -	      jmp	*+6
     11  a1f4					      ELSE
     12  a1f4		       4c f9 a1 	      jmp	*+5
     13  a1f7					      ENDIF
      0  a1f7				   .pht       pone
      1  a1f7		       a9 01		      lda	#$01
      2  a1f9				  -	      IF	!FPUSH
      3  a1f9				  -	      pha
      4  a1f9					      ENDIF
  16220  a1f9				   FPUSH      SET	0
      0  a1f9					      cond_stmt	_EI_65570, _EL_65570
      1  a1f9				  -	      IF	!FPULL
      2  a1f9				  -	      pla
      3  a1f9					      ENDIF
      4  a1f9		       d0 03		      bne	*+5
      5  a1fb				  -	      IFCONST	_EL_65570
      6  a1fb				  -	      jmp	_EL_65570
      7  a1fb					      ELSE
      8  a1fb		       4c 06 a2 	      jmp	_EI_65570
      9  a1fe					      ENDIF
      0  a1fe					      incw	_intro.aircraft_dir
      1  a1fe		       ee 8a b6 	      inc	_intro.aircraft_dir
      2  a201		       d0 03		      bne	.skip
      3  a203		       ee 8b b6 	      inc	_intro.aircraft_dir+1
      4  a206				   .skip
  16223  a206				   _EI_65570
  16224  a206		       4c 8e a2 	      jmp	_EI_62
  16225  a209
  16226  a209
  16227  a209
  16228  a209
  16229  a209
  16230  a209
  16231  a209
  16232  a209				   _EL_62
  16233  a209				   FPULL      SET	0
      0  a209					      pwvar	_intro.aircraft_dir
      1  a209					      IF	!FPUSH
      2  a209		       ad 8a b6 	      lda	_intro.aircraft_dir
      3  a20c		       48		      pha
      4  a20d		       ad 8b b6 	      lda	_intro.aircraft_dir+1
      5  a210		       48		      pha
      6  a211				  -	      ELSE
      7  a211				  -	      lda	_intro.aircraft_dir
      8  a211				  -	      ldy	_intro.aircraft_dir+1
      9  a211					      ENDIF
      0  a211					      pbyte	#2
      1  a211		       a9 02		      lda	#2
      2  a213					      IF	!FPUSH
      3  a213		       48		      pha
      4  a214					      ENDIF
      0  a214					      btow
      1  a214		       a9 00		      lda	#$00
      2  a216		       48		      pha
  16237  a216				   FPUSH      SET	1
      0  a217					      cmpweq
      1  a217					      IF	!FPULL
      2  a217		       68		      pla
      3  a218		       85 fd		      sta	R2
      4  a21a		       68		      pla
      5  a21b		       85 fc		      sta	R1
      6  a21d				  -	      ELSE
      7  a21d				  -	      sta	R1
      8  a21d				  -	      sty	R2
      9  a21d					      ENDIF
     10  a21d		       68		      pla
     11  a21e		       c5 fd		      cmp	R2
     12  a220		       d0 0a		      bne	.phf
     13  a222		       68		      pla
     14  a223		       c5 fc		      cmp	R1
     15  a225		       d0 06		      bne	.phf+1
      0  a227					      pone
      1  a227		       a9 01		      lda	#$01
      2  a229				  -	      IF	!FPUSH
      3  a229				  -	      pha
      4  a229					      ENDIF
     17  a229				  -	      IF	!FPUSH
     18  a229				  -	      jmp	*+7
     19  a229					      ELSE
     20  a229		       4c 2f a2 	      jmp	*+6
     21  a22c					      ENDIF
     22  a22c				   .phf
     23  a22c		       68		      pla
      0  a22d					      pzero
      1  a22d		       a9 00		      lda	#$00
      2  a22f				  -	      IF	!FPUSH
      3  a22f				  -	      pha
      4  a22f					      ENDIF
  16239  a22f				   FPULL      SET	1
  16240  a22f				   FPUSH      SET	0
      0  a22f					      cond_stmt	_EI_63, _EL_63
      1  a22f				  -	      IF	!FPULL
      2  a22f				  -	      pla
      3  a22f					      ENDIF
      4  a22f		       d0 03		      bne	*+5
      5  a231				  -	      IFCONST	_EL_63
      6  a231				  -	      jmp	_EL_63
      7  a231					      ELSE
      8  a231		       4c 8e a2 	      jmp	_EI_63
      9  a234					      ENDIF
  16242  a234				   FPULL      SET	0
      0  a234					      pwvar	_intro.aircraft_posx
      1  a234					      IF	!FPUSH
      2  a234		       ad 87 b6 	      lda	_intro.aircraft_posx
      3  a237		       48		      pha
      4  a238		       ad 88 b6 	      lda	_intro.aircraft_posx+1
      5  a23b		       48		      pha
      6  a23c				  -	      ELSE
      7  a23c				  -	      lda	_intro.aircraft_posx
      8  a23c				  -	      ldy	_intro.aircraft_posx+1
      9  a23c					      ENDIF
      0  a23c					      pbyte	#173
      1  a23c		       a9 ad		      lda	#173
      2  a23e					      IF	!FPUSH
      3  a23e		       48		      pha
      4  a23f					      ENDIF
      0  a23f					      btow
      1  a23f		       a9 00		      lda	#$00
      2  a241		       48		      pha
  16246  a241				   FPUSH      SET	1
      0  a242					      cmpwlt
      1  a242		       ba		      tsx
      2  a243		       bd 04 01 	      lda.wx	stack+4
      3  a246		       dd 02 01 	      cmp.wx	stack+2
      4  a249		       bd 03 01 	      lda.wx	stack+3
      5  a24c		       fd 01 01 	      sbc.wx	stack+1
      6  a24f		       10 0a		      bpl	.phf
      7  a251		       e8		      inx
      8  a252		       e8		      inx
      9  a253		       e8		      inx
     10  a254		       e8		      inx
     11  a255		       9a		      txs
      0  a256					      pone
      1  a256		       a9 01		      lda	#$01
      2  a258				  -	      IF	!FPUSH
      3  a258				  -	      pha
      4  a258					      ENDIF
     13  a258				  -	      IF	!FPUSH
     14  a258				  -	      jmp	*+11
     15  a258					      ELSE
     16  a258		       4c 62 a2 	      jmp	*+10
     17  a25b					      ENDIF
     18  a25b		       e8	   .phf       inx
     19  a25c		       e8		      inx
     20  a25d		       e8		      inx
     21  a25e		       e8		      inx
     22  a25f		       9a		      txs
      0  a260					      pzero
      1  a260		       a9 00		      lda	#$00
      2  a262				  -	      IF	!FPUSH
      3  a262				  -	      pha
      4  a262					      ENDIF
  16248  a262				   FPULL      SET	1
  16249  a262				   FPUSH      SET	0
      0  a262					      cond_stmt	_EI_65571, _EL_65571
      1  a262				  -	      IF	!FPULL
      2  a262				  -	      pla
      3  a262					      ENDIF
      4  a262		       d0 03		      bne	*+5
      5  a264					      IFCONST	_EL_65571
      6  a264		       4c 72 a2 	      jmp	_EL_65571
      7  a267				  -	      ELSE
      8  a267				  -	      jmp	_EI_65571
      9  a267					      ENDIF
      0  a267					      incw	_intro.aircraft_posx
      1  a267		       ee 87 b6 	      inc	_intro.aircraft_posx
      2  a26a		       d0 03		      bne	.skip
      3  a26c		       ee 88 b6 	      inc	_intro.aircraft_posx+1
      4  a26f				   .skip
  16252  a26f		       4c 7a a2 	      jmp	_EI_65571
  16253  a272				   _EL_65571
      0  a272					      incw	_intro.aircraft_dir
      1  a272		       ee 8a b6 	      inc	_intro.aircraft_dir
      2  a275		       d0 03		      bne	.skip
      3  a277		       ee 8b b6 	      inc	_intro.aircraft_dir+1
      4  a27a				   .skip
  16255  a27a
  16256  a27a
  16257  a27a
  16258  a27a
  16259  a27a
  16260  a27a
  16261  a27a
  16262  a27a				   _EI_65571
  16263  a27a				   FPULL      SET	0
  16264  a27a				   FPUSH      SET	1
      0  a27a					      pbyte	#7
      1  a27a		       a9 07		      lda	#7
      2  a27c				  -	      IF	!FPUSH
      3  a27c				  -	      pha
      4  a27c					      ENDIF
  16266  a27c				   FPULL      SET	1
  16267  a27c				   FPUSH      SET	0
      0  a27c					      plb2var	_spr_setposx.spr_no
      1  a27c				  -	      IF	!FPULL
      2  a27c				  -	      pla
      3  a27c					      ENDIF
      4  a27c		       8d fe b4 	      sta	_spr_setposx.spr_no
  16269  a27c				   FPULL      SET	0
  16270  a27c				   FPUSH      SET	1
      0  a27f					      pwvar	_intro.aircraft_posx
      1  a27f				  -	      IF	!FPUSH
      2  a27f				  -	      lda	_intro.aircraft_posx
      3  a27f				  -	      pha
      4  a27f				  -	      lda	_intro.aircraft_posx+1
      5  a27f				  -	      pha
      6  a27f					      ELSE
      7  a27f		       ad 87 b6 	      lda	_intro.aircraft_posx
      8  a282		       ac 88 b6 	      ldy	_intro.aircraft_posx+1
      9  a285					      ENDIF
  16272  a285				   FPULL      SET	1
  16273  a285				   FPUSH      SET	0
      0  a285					      plw2var	_spr_setposx.x
      1  a285				  -	      IF	!FPULL
      2  a285				  -	      pla
      3  a285				  -	      sta	_spr_setposx.x+1
      4  a285				  -	      pla
      5  a285				  -	      sta	_spr_setposx.x
      6  a285					      ELSE
      7  a285		       8d ff b4 	      sta	_spr_setposx.x
      8  a288		       8c 00 b5 	      sty	_spr_setposx.x+1
      9  a28b					      ENDIF
  16275  a28b		       20 95 71 	      jsr	_Pspr_setposx
  16276  a28e				   _EI_63
  16277  a28e
  16278  a28e
  16279  a28e
  16280  a28e
  16281  a28e
  16282  a28e
  16283  a28e
  16284  a28e				   _EI_62
  16285  a28e
  16286  a28e
  16287  a28e
  16288  a28e
  16289  a28e
  16290  a28e
  16291  a28e
  16292  a28e				   _EI_61
      0  a28e					      incb	_intro.animphase
      1  a28e		       ee 84 b6 	      inc	_intro.animphase
  16294  a291		       20 30 73 	      jsr	_Fbjoy_1_fire
  16295  a291				   FPULL      SET	0
  16296  a291				   FPUSH      SET	1
      0  a294					      pbyte	#0
      1  a294		       a9 00		      lda	#0
      2  a296				  -	      IF	!FPUSH
      3  a296				  -	      pha
      4  a296					      ENDIF
  16298  a296				   FPULL      SET	1
      0  a296					      cmpbeq
      1  a296				  -	      IF	!FPULL
      2  a296				  -	      pla
      3  a296					      ENDIF
      4  a296		       85 fc		      sta	R1
      5  a298		       68		      pla
      6  a299		       c5 fc		      cmp	R1
      7  a29b		       f0 05		      beq	.pht
      0  a29d					      pzero
      1  a29d		       a9 00		      lda	#$00
      2  a29f				  -	      IF	!FPUSH
      3  a29f				  -	      pha
      4  a29f					      ENDIF
      9  a29f				  -	      IF	!FPUSH
     10  a29f				  -	      jmp	*+6
     11  a29f					      ELSE
     12  a29f		       4c a4 a2 	      jmp	*+5
     13  a2a2					      ENDIF
      0  a2a2				   .pht       pone
      1  a2a2		       a9 01		      lda	#$01
      2  a2a4				  -	      IF	!FPUSH
      3  a2a4				  -	      pha
      4  a2a4					      ENDIF
  16300  a2a4				   FPUSH      SET	0
      0  a2a4					      cond_stmt	_EI_65572, _EL_65572
      1  a2a4				  -	      IF	!FPULL
      2  a2a4				  -	      pla
      3  a2a4					      ENDIF
      4  a2a4		       d0 03		      bne	*+5
      5  a2a6				  -	      IFCONST	_EL_65572
      6  a2a6				  -	      jmp	_EL_65572
      7  a2a6					      ELSE
      8  a2a6		       4c ac a2 	      jmp	_EI_65572
      9  a2a9					      ENDIF
  16302  a2a9		       4c ed 9f 	      jmp	_Lintro.wait_loop
  16303  a2ac				   _EI_65572
  16304  a2ac
  16305  a2ac
  16306  a2ac
  16307  a2ac
  16308  a2ac
  16309  a2ac
  16310  a2ac
  16311  a2ac				   _Lintro.exit_intro
  16312  a2ac		       20 68 74 	      jsr	_Pri_off
  16313  a2ac				   FPULL      SET	0
  16314  a2ac				   FPUSH      SET	1
      0  a2af					      pbyte	#1
      1  a2af		       a9 01		      lda	#1
      2  a2b1				  -	      IF	!FPUSH
      3  a2b1				  -	      pha
      4  a2b1					      ENDIF
  16316  a2b1				   FPULL      SET	1
  16317  a2b1				   FPUSH      SET	0
      0  a2b1					      plb2var	_spr_disable.spr_no
      1  a2b1				  -	      IF	!FPULL
      2  a2b1				  -	      pla
      3  a2b1					      ENDIF
      4  a2b1		       8d fb b4 	      sta	_spr_disable.spr_no
  16319  a2b4		       20 7b 71 	      jsr	_Pspr_disable
  16320  a2b4				   FPULL      SET	0
  16321  a2b4				   FPUSH      SET	1
      0  a2b7					      pbyte	#2
      1  a2b7		       a9 02		      lda	#2
      2  a2b9				  -	      IF	!FPUSH
      3  a2b9				  -	      pha
      4  a2b9					      ENDIF
  16323  a2b9				   FPULL      SET	1
  16324  a2b9				   FPUSH      SET	0
      0  a2b9					      plb2var	_spr_disable.spr_no
      1  a2b9				  -	      IF	!FPULL
      2  a2b9				  -	      pla
      3  a2b9					      ENDIF
      4  a2b9		       8d fb b4 	      sta	_spr_disable.spr_no
  16326  a2bc		       20 7b 71 	      jsr	_Pspr_disable
  16327  a2bc				   FPULL      SET	0
  16328  a2bc				   FPUSH      SET	1
      0  a2bf					      pbyte	#6
      1  a2bf		       a9 06		      lda	#6
      2  a2c1				  -	      IF	!FPUSH
      3  a2c1				  -	      pha
      4  a2c1					      ENDIF
  16330  a2c1				   FPULL      SET	1
  16331  a2c1				   FPUSH      SET	0
      0  a2c1					      plb2var	_spr_disable.spr_no
      1  a2c1				  -	      IF	!FPULL
      2  a2c1				  -	      pla
      3  a2c1					      ENDIF
      4  a2c1		       8d fb b4 	      sta	_spr_disable.spr_no
  16333  a2c4		       20 7b 71 	      jsr	_Pspr_disable
  16334  a2c7		       20 b4 76 	      jsr	_Pconfigure_sprites
  16335  a2ca		       60		      rts
  16336  a2cb		       60		      rts
  16337  a2cc				   _Pintro_end
  16338  a2cc
  16339  a2cc
  16340  a2cc
  16341  a2cc
  16342  a2cc
  16343  a2cc
  16344  a2cc
  16345  a2cc				   _Pinterrupt1 SUBROUTINE
  16346  a2cc				   FPULL      SET	0
  16347  a2cc				   FPUSH      SET	1
      0  a2cc					      pbyte	#208
      1  a2cc		       a9 d0		      lda	#208
      2  a2ce				  -	      IF	!FPUSH
      3  a2ce				  -	      pha
      4  a2ce					      ENDIF
  16349  a2ce				   FPULL      SET	1
  16350  a2ce				   FPUSH      SET	0
      0  a2ce					      pokeb_const_addr	#53270
      1  a2ce
      2  a2ce
      3  a2ce
      4  a2ce		       d0 16	   .ad	      EQU	#53270
      5  a2ce				  -	      IF	!FPULL
      6  a2ce				  -	      pla
      7  a2ce					      ENDIF
      8  a2ce		       8d 16 d0 	      sta	.ad
  16352  a2d1		       60		      rts
  16353  a2d2
  16354  a2d2
  16355  a2d2
  16356  a2d2
  16357  a2d2				   _Pinterrupt1_end
  16358  a2d2
  16359  a2d2
  16360  a2d2
  16361  a2d2
  16362  a2d2
  16363  a2d2
  16364  a2d2
  16365  a2d2				   _Pinterrupt2 SUBROUTINE
  16366  a2d2				   FPULL      SET	0
  16367  a2d2				   FPUSH      SET	1
      0  a2d2					      pbyte	#15
      1  a2d2		       a9 0f		      lda	#15
      2  a2d4				  -	      IF	!FPUSH
      3  a2d4				  -	      pha
      4  a2d4					      ENDIF
  16369  a2d4				   FPULL      SET	1
  16370  a2d4				   FPUSH      SET	0
      0  a2d4					      pokeb_const_addr	#53282
      1  a2d4
      2  a2d4
      3  a2d4
      4  a2d4		       d0 22	   .ad	      EQU	#53282
      5  a2d4				  -	      IF	!FPULL
      6  a2d4				  -	      pla
      7  a2d4					      ENDIF
      8  a2d4		       8d 22 d0 	      sta	.ad
  16372  a2d4				   FPULL      SET	0
  16373  a2d4				   FPUSH      SET	1
      0  a2d7					      pbyte	#12
      1  a2d7		       a9 0c		      lda	#12
      2  a2d9				  -	      IF	!FPUSH
      3  a2d9				  -	      pha
      4  a2d9					      ENDIF
  16375  a2d9				   FPULL      SET	1
  16376  a2d9				   FPUSH      SET	0
      0  a2d9					      pokeb_const_addr	#53283
      1  a2d9
      2  a2d9
      3  a2d9
      4  a2d9		       d0 23	   .ad	      EQU	#53283
      5  a2d9				  -	      IF	!FPULL
      6  a2d9				  -	      pla
      7  a2d9					      ENDIF
      8  a2d9		       8d 23 d0 	      sta	.ad
  16378  a2dc		       60		      rts
  16379  a2dd
  16380  a2dd
  16381  a2dd
  16382  a2dd
  16383  a2dd				   _Pinterrupt2_end
  16384  a2dd
  16385  a2dd
  16386  a2dd
  16387  a2dd
  16388  a2dd
  16389  a2dd
  16390  a2dd
  16391  a2dd				   _Pinterrupt3 SUBROUTINE
  16392  a2dd				   FPULL      SET	0
  16393  a2dd				   FPUSH      SET	1
      0  a2dd					      opt_pbyte_pbyte_or	#208, _scroll
      1  a2dd
      2  a2dd
      3  a2dd
      4  a2dd
      5  a2dd
      6  a2dd		       a9 d0		      lda	#208
      7  a2df		       0d 26 b5 	      ora	_scroll
      8  a2e2				  -	      IF	!FPUSH
      9  a2e2				  -	      pha
     10  a2e2					      ENDIF
  16395  a2e2				   FPULL      SET	1
  16396  a2e2				   FPUSH      SET	0
      0  a2e2					      pokeb_const_addr	#53270
      1  a2e2
      2  a2e2
      3  a2e2
      4  a2e2		       d0 16	   .ad	      EQU	#53270
      5  a2e2				  -	      IF	!FPULL
      6  a2e2				  -	      pla
      7  a2e2					      ENDIF
      8  a2e2		       8d 16 d0 	      sta	.ad
  16398  a2e2				   FPULL      SET	0
  16399  a2e2				   FPUSH      SET	1
      0  a2e5					      pbyte	#7
      1  a2e5		       a9 07		      lda	#7
      2  a2e7				  -	      IF	!FPUSH
      3  a2e7				  -	      pha
      4  a2e7					      ENDIF
  16401  a2e7				   FPULL      SET	1
  16402  a2e7				   FPUSH      SET	0
      0  a2e7					      pokeb_const_addr	#53282
      1  a2e7
      2  a2e7
      3  a2e7
      4  a2e7		       d0 22	   .ad	      EQU	#53282
      5  a2e7				  -	      IF	!FPULL
      6  a2e7				  -	      pla
      7  a2e7					      ENDIF
      8  a2e7		       8d 22 d0 	      sta	.ad
  16404  a2e7				   FPULL      SET	0
  16405  a2e7				   FPUSH      SET	1
      0  a2ea					      pbyte	#2
      1  a2ea		       a9 02		      lda	#2
      2  a2ec				  -	      IF	!FPUSH
      3  a2ec				  -	      pha
      4  a2ec					      ENDIF
  16407  a2ec				   FPULL      SET	1
  16408  a2ec				   FPUSH      SET	0
      0  a2ec					      pokeb_const_addr	#53283
      1  a2ec
      2  a2ec
      3  a2ec
      4  a2ec		       d0 23	   .ad	      EQU	#53283
      5  a2ec				  -	      IF	!FPULL
      6  a2ec				  -	      pla
      7  a2ec					      ENDIF
      8  a2ec		       8d 23 d0 	      sta	.ad
  16410  a2ef		       60		      rts
  16411  a2f0
  16412  a2f0
  16413  a2f0
  16414  a2f0
  16415  a2f0				   _Pinterrupt3_end
  16416  a2f0
  16417  a2f0
  16418  a2f0
  16419  a2f0
  16420  a2f0
  16421  a2f0
  16422  a2f0
  16423  a2f0
  16424  a2f0
  16425  a2f0
  16426  a2f0
  16427  a2f0				   FPUSH      SET	0
  16428  a2f0				   FPULL      SET	0
 Code        : $b44 - $a2ef
  16429  a2f0					      ECHO	"Code	      :",prg_start,"-", *-1
  16430  a2f0				   data_start
  16431  a2f0		       01 02 04 08*_spr_enable_bits DC.B	#1, #2, #4, #8, #16, #32, #64, #128
  16432  a2f8		       fe fd fb f7*_spr_disable_bits DC.B	#254, #253, #251, #247, #239, #223, #191, #127
  16433  a300		       00 00 00 00*_ri_isr_addr_lo DC.B	#0, #0, #0, #0, #0, #0, #0, #0
  16434  a308		       00 00 00 00*_ri_isr_addr_hi DC.B	#0, #0, #0, #0, #0, #0, #0, #0
  16435  a310		       00 00 00 00*_ri_ras_lo DC.B	#0, #0, #0, #0, #0, #0, #0, #0
  16436  a318		       00 00 00 00*_ri_ras_hi DC.B	#0, #0, #0, #0, #0, #0, #0, #0
  16437  a320		       a0 00 e0 01*_initial_ufo_posx DC.W	#160, #480, #800, #1120, #1440, #1760, #2080, #2400, #2720, #3040, #3360, #3680, #4000, #4320, #4640, #4960
  16438  a340		       80 00 80 00*_ufo_radar_posx DC.W	#128, #128, #124, #124, #127, #128, #125, #124, #136, #136, #132, #132, #135, #136, #133, #132
  16439  a360		       4c 48 47 43*_ufo_radar_posy DC.B	#76, #72, #71, #67, #67, #62, #62, #58, #76, #72, #71, #67, #67, #62, #62, #58
  16440  a370		       03 03 ff ff*_levels    DC.B	#3, #3, #255, #255, #255, #2, #255, #255, #255, #3, #255, #255, #255, #5, #3, #3
  16441  a380		       ff ff ff 0e*	      DC.B	#255, #255, #255, #14, #255, #255, #255, #13, #255, #255, #255, #12, #4, #4, #255, #255
  16442  a390		       ff 02 ff ff*	      DC.B	#255, #2, #255, #255, #255, #14, #255, #255, #255, #3, #255, #255, #255, #13, #3, #6
  16443  a3a0		       ff ff 02 03*	      DC.B	#255, #255, #2, #3, #255, #255, #3, #4, #255, #255, #4, #5, #3, #6, #255, #255
  16444  a3b0		       0d 0e ff ff*	      DC.B	#13, #14, #255, #255, #12, #13, #255, #255, #11, #12, #4, #8, #255, #255, #10, #11
  16445  a3c0		       ff ff 0b 0c*	      DC.B	#255, #255, #11, #12, #255, #255, #12, #13, #255, #255, #13, #14, #4, #8, #255, #255
  16446  a3d0		       05 06 ff ff*	      DC.B	#5, #6, #255, #255, #4, #5, #255, #255, #3, #4, #255, #255, #2, #3, #1, #3
  16447  a3e0		       ff 04 05 06*	      DC.B	#255, #4, #5, #6, #2, #6, #255, #14, #13, #12, #255, #4, #5, #6, #4, #12
  16448  a3f0		       ff 0e 0d 0c*	      DC.B	#255, #14, #13, #12, #255, #4, #5, #6, #255, #2, #3, #4, #255, #13, #12, #11
  16449  a400		       00 1b	   _update_sprites.spr_loc_offsets DC.B	#0, #27
  16450  a402		       30 2e 2c 2a*_update_sprites.turn_speed DC.B	#48, #46, #44, #42, #40, #38, #36, #34, #32, #32, #32, #32, #34, #36, #38, #40
  16451  a412		       2a 2c 2e 30*	      DC.B	#42, #44, #46, #48, #48
  16452  a417		       01 00	   _update_sprites.switchdir DC.B	#1, #0
  16453  a419		       a0 a1 a2 a1 _update_sprites.ufo_anim DC.B	#160, #161, #162, #161
  16454  a41d		       0c 00 0c 00*_update_sprites.bullet_dx DC.W	#12, #12, #0, #0
  16455  a425		       00 ff 01    _query_joystick.lifting_to_bullet_dy DC.B	#0, #255, #1
  16456  a428		       01 02 04 08*_poll_collisions.bits DC.B	#1, #2, #4, #8, #16, #32, #64, #128
  16457  a430		       20 c7 06 15*_setup_screen.dashboard DC.B	#32, #199, #6, #21, #5, #12, #32, #32, #32, #32, #32, #32, #18, #1, #4, #1
  16458  a440		       12 20 20 20*	      DC.B	#18, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #6, #12
  16459  a450		       05 05 14 20*	      DC.B	#5, #5, #20, #32, #32, #32, #206, #32, #32, #199, #32, #32, #32, #32, #32, #32
  16460  a460		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #184, #190, #190, #190, #190, #190, #190, #190, #190, #190, #190, #190
  16461  a470		       be be be b9*	      DC.B	#190, #190, #190, #185, #32, #32, #182, #176, #32, #32, #32, #32, #32, #32, #206, #32
  16462  a480		       20 c7 13 03*	      DC.B	#32, #199, #19, #3, #15, #32, #32, #8, #9, #32, #32, #32, #188, #32, #32, #32
  16463  a490		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #189, #32, #32, #183, #177
  16464  a4a0		       a3 a4 96 97*	      DC.B	#163, #164, #150, #151, #166, #167, #206, #32, #32, #199, #32, #32, #32, #32, #32, #32
  16465  a4b0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #187, #191, #191, #191, #191, #191, #191, #192, #193, #191, #191, #191
  16466  a4c0		       bf bf bf ba*	      DC.B	#191, #191, #191, #186, #32, #32, #32, #48, #48, #32, #32, #48, #48, #32, #206, #32
  16467  a4d0		       20 cd cc cc*	      DC.B	#32, #205, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204
  16468  a4e0		       cc cc cc cc*	      DC.B	#204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204, #204
  16469  a4f0		       cc cc cc cc*	      DC.B	#204, #204, #204, #204, #204, #204, #207, #32
  16470  a4f8		       20 20 20 20*_setup_screen.background_graphics DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #211
  16471  a508		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16472  a518		       20 20 20 d2*	      DC.B	#32, #32, #32, #210, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16473  a528		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16474  a538		       20 20 20 d3*	      DC.B	#32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16475  a548		       20 d3 20 20*	      DC.B	#32, #211, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16476  a558		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16477  a568		       20 20 20 e3*	      DC.B	#32, #32, #32, #227, #228, #229, #231, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16478  a578		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #210, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16479  a588		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #243, #244, #245, #246, #32
  16480  a598		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16481  a5a8		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16482  a5b8		       20 20 20 98*	      DC.B	#32, #32, #32, #152, #153, #154, #158, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16483  a5c8		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16484  a5d8		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #238, #239, #254, #255, #32
  16485  a5e8		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16486  a5f8		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16487  a608		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #211
  16488  a618		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16489  a628		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #210, #32, #32, #32, #32, #32, #32, #32, #32
  16490  a638		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #210, #32, #32, #32
  16491  a648		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16492  a658		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16493  a668		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32
  16494  a678		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16495  a688		       20 20 20 d2*	      DC.B	#32, #32, #32, #210, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16496  a698		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16497  a6a8		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32
  16498  a6b0		       20 20 20 20*_setup_screen.background_title DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #211
  16499  a6c0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16500  a6d0		       20 20 20 d2*	      DC.B	#32, #32, #32, #210, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16501  a6e0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #27, #29, #31, #34, #35, #37, #32, #39, #41, #43, #45
  16502  a6f0		       1b 3a 27 20*	      DC.B	#27, #58, #39, #32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32
  16503  a700		       20 d3 20 20*	      DC.B	#32, #211, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #28, #30, #33
  16504  a710		       22 24 26 20*	      DC.B	#34, #36, #38, #32, #40, #42, #44, #46, #47, #59, #40, #32, #32, #32, #32, #32
  16505  a720		       20 20 20 e3*	      DC.B	#32, #32, #32, #227, #228, #229, #231, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16506  a730		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16507  a740		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #243, #244, #245, #246, #32
  16508  a750		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #3, #15, #4, #5, #60, #19, #6, #24, #32
  16509  a760		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #3, #19, #1, #2, #1, #32, #6, #5, #11, #5, #20
  16510  a770		       05 20 20 98*	      DC.B	#5, #32, #32, #152, #153, #154, #158, #32, #32, #32, #32, #32, #32, #32, #32, #7
  16511  a780		       12 01 10 08*	      DC.B	#18, #1, #16, #8, #9, #3, #19, #32, #32, #32, #32, #32, #4, #1, #14, #9
  16512  a790		       05 0c 20 06*	      DC.B	#5, #12, #32, #6, #5, #11, #5, #20, #5, #32, #32, #238, #239, #254, #255, #32
  16513  a7a0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #13, #21, #19, #9, #3, #32, #32, #32, #32
  16514  a7b0		       20 20 03 12*	      DC.B	#32, #32, #3, #18, #5, #1, #20, #9, #22, #5, #32, #19, #16, #1, #18, #11
  16515  a7c0		       13 20 20 20*	      DC.B	#19, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16516  a7d0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32
  16517  a7e0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16518  a7f0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16519  a800		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16520  a810		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32, #32, #16
  16521  a820		       12 05 13 13*	      DC.B	#18, #5, #19, #19, #32, #6, #9, #18, #5, #32, #2, #21, #20, #20, #15, #14
  16522  a830		       20 14 0f 20*	      DC.B	#32, #20, #15, #32, #19, #20, #1, #18, #20, #32, #32, #32, #32, #32, #32, #32
  16523  a840		       20 20 d2 20*	      DC.B	#32, #32, #210, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16524  a850		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16525  a860		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32
  16526  a868		       0e 0e 0e 0e*_setup_screen.background_title_color DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #5, #5, #13, #13, #14, #14, #14, #9
  16527  a878		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #13, #13, #13, #14
  16528  a888		       0e 0e 09 09*	      DC.B	#14, #14, #9, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16529  a898		       05 05 05 05*	      DC.B	#5, #5, #5, #5, #14, #2, #2, #2, #2, #2, #2, #14, #2, #2, #2, #2
  16530  a8a8		       02 02 02 0e*	      DC.B	#2, #2, #2, #14, #5, #5, #5, #9, #9, #14, #14, #14, #14, #14, #14, #14
  16531  a8b8		       0e 09 0e 0e*	      DC.B	#14, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #2, #2, #2
  16532  a8c8		       02 02 02 05*	      DC.B	#2, #2, #2, #5, #2, #2, #2, #2, #2, #2, #2, #14, #14, #14, #14, #14
  16533  a8d8		       0e 0e 0e 09*	      DC.B	#14, #14, #14, #9, #9, #9, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16534  a8e8		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16535  a8f8		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #9, #9, #9, #9, #14
  16536  a908		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #2, #2, #2, #2, #2, #2, #2, #2, #14
  16537  a918		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #2, #2, #2, #2, #2, #14, #2, #2, #2, #2, #2
  16538  a928		       02 0e 0e 09*	      DC.B	#2, #14, #14, #9, #9, #9, #9, #14, #14, #14, #14, #14, #14, #14, #14, #2
  16539  a938		       02 02 02 02*	      DC.B	#2, #2, #2, #2, #2, #2, #2, #14, #14, #14, #14, #14, #2, #2, #2, #2
  16540  a948		       02 02 0e 02*	      DC.B	#2, #2, #14, #2, #2, #2, #2, #2, #2, #14, #14, #9, #9, #9, #14, #14
  16541  a958		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #2, #2, #2, #2, #2, #5, #9, #9, #9
  16542  a968		       09 09 02 02*	      DC.B	#9, #9, #2, #2, #2, #2, #2, #2, #2, #2, #2, #2, #2, #2, #2, #2
  16543  a978		       02 0e 0e 0e*	      DC.B	#2, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16544  a988		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #5, #9, #5, #5, #5, #5, #5, #5, #5, #5
  16545  a998		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #5, #14, #14, #5, #5, #14, #14, #2, #10, #2, #2, #10
  16546  a9a8		       02 0e 0e 0e*	      DC.B	#2, #14, #14, #14, #14, #14, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16547  a9b8		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16548  a9c8		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14, #2
  16549  a9d8		       02 02 02 02*	      DC.B	#2, #2, #2, #2, #14, #2, #2, #2, #2, #14, #2, #2, #2, #2, #2, #2
  16550  a9e8		       0e 02 02 0e*	      DC.B	#14, #2, #2, #14, #2, #2, #2, #2, #2, #14, #14, #14, #14, #14, #14, #14
  16551  a9f8		       0e 0e 09 0e*	      DC.B	#14, #14, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16552  aa08		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16553  aa18		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14
  16554  aa20		       20 20 20 20*_setup_screen.background_end DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #211
  16555  aa30		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16556  aa40		       20 20 20 d2*	      DC.B	#32, #32, #32, #210, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16557  aa50		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #3, #15, #14, #7, #18, #1, #20, #21, #12, #1, #20
  16558  aa60		       09 0f 0e 13*	      DC.B	#9, #15, #14, #19, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32
  16559  aa70		       20 d3 20 20*	      DC.B	#32, #211, #32, #32, #32, #32, #32, #222, #0, #226, #221, #176, #32, #25, #15, #21
  16560  aa80		       20 08 01 16*	      DC.B	#32, #8, #1, #22, #5, #32, #18, #5, #16, #21, #12, #19, #5, #4, #32, #32
  16561  aa90		       20 20 20 e3*	      DC.B	#32, #32, #32, #227, #228, #229, #231, #32, #32, #32, #32, #32, #32, #32, #32, #218
  16562  aaa0		       86 9f b4 20*	      DC.B	#134, #159, #180, #32, #32, #1, #12, #12, #32, #23, #1, #22, #5, #19, #32, #15
  16563  aab0		       06 20 14 08*	      DC.B	#6, #32, #20, #8, #5, #32, #32, #32, #32, #32, #32, #243, #244, #245, #246, #32
  16564  aac0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #215, #32, #217, #32, #219, #32, #32, #32, #32
  16565  aad0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16566  aae0		       20 20 20 98*	      DC.B	#32, #32, #32, #152, #153, #154, #158, #32, #32, #32, #32, #32, #32, #32, #32, #216
  16567  aaf0		       e8 e9 ea eb*	      DC.B	#232, #233, #234, #235, #32, #27, #29, #31, #34, #35, #37, #32, #39, #41, #43, #45
  16568  ab00		       1b 3a 27 20*	      DC.B	#27, #58, #39, #32, #32, #32, #32, #32, #32, #32, #32, #238, #239, #254, #255, #32
  16569  ab10		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #247, #248, #249, #250, #251, #32, #28, #30, #33
  16570  ab20		       22 24 26 20*	      DC.B	#34, #36, #38, #32, #40, #42, #44, #46, #47, #59, #40, #32, #32, #32, #32, #32
  16571  ab30		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16572  ab40		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16573  ab50		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16574  ab60		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16575  ab70		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16576  ab80		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16577  ab90		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #211, #32, #32, #32, #32, #32, #32
  16578  aba0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16579  abb0		       20 20 20 d2*	      DC.B	#32, #32, #32, #210, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16580  abc0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32
  16581  abd0		       20 20 20 20*	      DC.B	#32, #32, #32, #32, #32, #32, #32, #32
  16582  abd8		       0e 0e 0e 0e*_setup_screen.background_end_color DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #5, #5, #9, #13, #14, #14, #14, #9
  16583  abe8		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #13, #13, #13, #14
  16584  abf8		       0e 0e 09 09*	      DC.B	#14, #14, #9, #9, #14, #14, #14, #14, #14, #14, #14, #9, #14, #14, #14, #9
  16585  ac08		       09 09 09 09*	      DC.B	#9, #9, #9, #9, #14, #2, #2, #2, #2, #2, #2, #2, #2, #2, #2, #2
  16586  ac18		       02 02 02 02*	      DC.B	#2, #2, #2, #2, #5, #5, #5, #9, #9, #5, #5, #14, #14, #14, #14, #14
  16587  ac28		       0e 09 0e 0e*	      DC.B	#14, #9, #14, #14, #9, #14, #14, #9, #9, #9, #9, #9, #14, #2, #2, #2
  16588  ac38		       05 02 02 02*	      DC.B	#5, #2, #2, #2, #2, #5, #2, #2, #2, #2, #2, #2, #2, #2, #5, #14
  16589  ac48		       05 0e 0e 09*	      DC.B	#5, #14, #14, #9, #9, #9, #9, #14, #14, #14, #14, #14, #14, #14, #14, #9
  16590  ac58		       09 09 09 09*	      DC.B	#9, #9, #9, #9, #14, #2, #2, #2, #5, #2, #2, #2, #2, #2, #5, #2
  16591  ac68		       02 05 02 02*	      DC.B	#2, #5, #2, #2, #2, #5, #5, #5, #14, #14, #14, #9, #9, #9, #9, #14
  16592  ac78		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #9, #9, #9, #9, #9, #5, #5, #5, #5
  16593  ac88		       05 05 05 05*	      DC.B	#5, #5, #5, #5, #5, #5, #5, #5, #5, #5, #5, #5, #5, #5, #5, #5
  16594  ac98		       05 0e 0e 09*	      DC.B	#5, #14, #14, #9, #9, #9, #9, #14, #14, #14, #14, #14, #14, #14, #14, #9
  16595  aca8		       09 09 09 09*	      DC.B	#9, #9, #9, #9, #5, #2, #2, #2, #2, #2, #2, #14, #2, #2, #2, #2
  16596  acb8		       02 02 02 05*	      DC.B	#2, #2, #2, #5, #5, #5, #5, #5, #5, #14, #14, #9, #9, #9, #14, #14
  16597  acc8		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #9, #9, #9, #9, #9, #9, #2, #2, #2
  16598  acd8		       02 02 02 05*	      DC.B	#2, #2, #2, #5, #2, #2, #2, #2, #2, #2, #2, #5, #5, #5, #9, #5
  16599  ace8		       05 05 0e 0e*	      DC.B	#5, #5, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16600  acf8		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #9, #9, #9, #9, #9, #9, #9, #9, #9, #9
  16601  ad08		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #9, #9, #14, #9, #9, #14, #14, #2, #10, #2, #2, #10
  16602  ad18		       02 0e 0e 0e*	      DC.B	#2, #14, #14, #14, #14, #14, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16603  ad28		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16604  ad38		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #9, #14, #14, #14, #14, #14, #14, #14, #14, #2, #2
  16605  ad48		       02 02 02 0e*	      DC.B	#2, #2, #2, #14, #2, #2, #2, #2, #14, #2, #2, #2, #2, #2, #2, #14
  16606  ad58		       02 02 0e 02*	      DC.B	#2, #2, #14, #2, #2, #2, #2, #2, #2, #2, #2, #5, #14, #14, #14, #14
  16607  ad68		       0e 0e 09 0e*	      DC.B	#14, #14, #9, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #9
  16608  ad78		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14, #14
  16609  ad88		       0e 0e 0e 0e*	      DC.B	#14, #14, #14, #14, #14, #14, #14, #14
  16610  ad90		       bc 20 20 20*_update_radar.radar_2nd_row DC.B	#188, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #32, #189
  16611  ada0		       bb bf bf bf*_update_radar.radar_3rd_row DC.B	#187, #191, #191, #191, #191, #191, #191, #192, #193, #191, #191, #191, #191, #191, #191, #186
  16612  adb0		       00 00 00 00*_move_ufos.xspeed_table DC.W	#0, #0, #4, #4, #4, #0, #-4, #0
  16613  adc0		       01 01 00 00*_move_ufos.yspeed_table DC.B	#1, #1, #0, #0, #0, #1, #0, #1
  16614  adc8		       ec ed ee ef*_intro.helicopter_anim DC.B	#236, #237, #238, #239, #240, #241
  16615  adce		       e5 e6 e7 e8*_intro.landing_bacon_anim DC.B	#229, #230, #231, #232, #233, #232, #231, #230
  16616  add6		       ea eb ea eb*_intro.radar_anim DC.B	#234, #235, #234, #235, #234, #235, #234, #235, #234
  16617  addf		       12 05 14 15*_S1	      HEX	12 05 14 15 12 0E 20 32 20 03 01 12 12 09 05 12 00
  16618  adf0		       d3 6b ec    _On_LB1    DC.B	<_Lsetup_screen.draw_bg, <_Lsetup_screen.draw_title, <_Lsetup_screen.draw_end_title
  16619  adf3		       88 89 89    _On_HB1    DC.B	>_Lsetup_screen.draw_bg, >_Lsetup_screen.draw_title, >_Lsetup_screen.draw_end_title
  16620  adf6		       4d 68 4f 4b*_On_LB2    DC.B	<_Lactions.taxi, <_Lactions.refuel, <_Lactions.take_off, <_Lactions.landing, <_Lactions.nosediving, <_Lactions.scrolling_to_ufo
  16621  adfc		       8c 8e 8f 90*_On_HB2    DC.B	>_Lactions.taxi, >_Lactions.refuel, >_Lactions.take_off, >_Lactions.landing, >_Lactions.nosediving, >_Lactions.scrolling_to_ufo
  16622  ae02		       20 0f 0e 20*_S2	      HEX	20 0F 0E 20 01 15 14 0F 10 09 0C 0F 14 20 00
  16623  ae11		       20 0f 0e 20*_S3	      HEX	20 0F 0E 20 01 15 14 0F 10 09 0C 0F 14 20 00
  16624  ae20		       20 20 17 05*_S4	      HEX	20 20 17 05 0C 0C 20 04 0F 0E 05 20 20 20 00
  16625  ae2f		       20 20 12 05*_S5	      HEX	20 20 12 05 06 15 05 0C 09 0E 07 20 20 20 00
  16626  ae3e		       20 20 20 20*_S6	      HEX	20 20 20 20 03 12 01 13 08 05 04 20 20 20 20 00
  16627  ae4e		       20 20 15 06*_S7	      HEX	20 20 15 06 0F 20 0C 01 0E 04 05 04 20 20 20 00
  16628  ae5e		       10 12 05 13*_S8	      HEX	10 12 05 13 05 0E 14 00
  16629  ae66		       20 20 20 20*_S9	      HEX	20 20 20 20 20 20 20 00
  16630  ae6e		       14 08 05 09*_S10       HEX	14 08 05 09 12 20 06 09 12 13 14 00
  16631  ae7a		       12 05 0c 05*_S11       HEX	12 05 0C 05 01 13 05 00
  16632  ae82		       01 14 14 01*_S12       HEX	01 14 14 01 03 0B 20 17 01 16 05 00
  16633  ae8e		       5d 14 72 85 _On_LB3    DC.B	<_Lmain_loop, <_Llevel_done, <_Llife_lost, <_Lgame_over
  16634  ae92		       10 12 12 13 _On_HB3    DC.B	>_Lmain_loop, >_Llevel_done, >_Llife_lost, >_Lgame_over
  16635  ae96		       20 20 20 07*_S13       HEX	20 20 20 07 01 0D 05 20 0F 16 05 12 20 20 20 00
  16636  aea6		       0e 05 17 20*_S14       HEX	0E 05 17 20 08 09 13 03 0F 12 05 00
  16637  aeb2		       93 0e 08 00 _S15       HEX	93 0E 08 00
  16638  aeb6		       20 77 45 4c*_S16       HEX	20 77 45 4C 43 4F 4D 45 20 54 4F 20 66 6C 79 69
  16639  aec6		       6e 67 20 73*	      HEX	6E 67 20 73 61 75 63 65 72 73 21 00
  16640  aed2		       20 3d 3d 3d*_S17       HEX	20 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D
  16641  aee2		       3d 3d 3d 3d*	      HEX	3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 0D 00
  16642  aeef		       20 69 4e 20*_S18       HEX	20 69 4E 20 54 48 49 53 20 47 41 4D 45 20 59 4F
  16643  aeff		       55 27 4c 4c*	      HEX	55 27 4C 4C 20 43 4F 4E 54 52 4F 4C 20 41 20 46
  16644  af0f		       49 47 48 54*	      HEX	49 47 48 54 45 52 00
  16645  af16		       20 41 49 52*_S19       HEX	20 41 49 52 43 52 41 46 54 20 41 4E 44 20 59 4F
  16646  af26		       55 52 20 4d*	      HEX	55 52 20 4D 49 53 53 49 4F 4E 20 49 53 20 54 4F
  16647  af36		       20 53 41 56*	      HEX	20 53 41 56 45 00
  16648  af3c		       20 54 48 45*_S20       HEX	20 54 48 45 20 43 49 54 59 20 46 52 4F 4D 20 41
  16649  af4c		       4e 20 41 4c*	      HEX	4E 20 41 4C 49 45 4E 20 49 4E 56 41 53 49 4F 4E
  16650  af5c		       2e 20 74 48*	      HEX	2E 20 74 48 45 00
  16651  af62		       20 43 4f 4d*_S21       HEX	20 43 4F 4D 4D 41 4E 44 20 49 53 20 53 49 4D 50
  16652  af72		       4c 45 3a 0d*	      HEX	4C 45 3A 0D 00
  16653  af77		       20 2a 2a 20*_S22       HEX	20 2A 2A 20 70 52 45 56 45 4E 54 20 54 48 45 20
  16654  af87		       45 4e 45 4d*	      HEX	45 4E 45 4D 59 20 46 52 4F 4D 20 4C 41 4E 44 49
  16655  af97		       4e 47 21 20*	      HEX	4E 47 21 20 2A 2A 0D 00
  16656  af9f		       20 67 41 4d*_S23       HEX	20 67 41 4D 45 50 4C 41 59 00
  16657  afa9		       20 2d 2d 2d*_S24       HEX	20 2D 2D 2D 2D 2D 2D 2D 2D 0D 00
  16658  afb4		       20 74 48 45*_S25       HEX	20 74 48 45 20 47 41 4D 45 20 49 4E 56 4F 4C 56
  16659  afc4		       45 53 20 53*	      HEX	45 53 20 53 45 56 45 52 41 4C 20 41 54 54 41 43
  16660  afd4		       4b 20 57 41*	      HEX	4B 20 57 41 56 45 53 00
  16661  afdc		       20 54 48 41*_S26       HEX	20 54 48 41 54 20 53 4C 4F 57 4C 59 20 47 45 54
  16662  afec		       20 4d 4f 52*	      HEX	20 4D 4F 52 45 20 41 4E 44 20 4D 4F 52 45 20 44
  16663  affc		       49 46 46 49*	      HEX	49 46 46 49 2D 00
  16664  b002		       20 43 55 4c*_S27       HEX	20 43 55 4C 54 2E 20 77 48 45 4E 20 59 4F 55 20
  16665  b012		       44 45 53 54*	      HEX	44 45 53 54 52 4F 59 45 44 20 41 4C 4C 20 75 66
  16666  b022		       6f 53 20 49*	      HEX	6F 53 20 49 4E 00
  16667  b028		       20 41 4e 20*_S28       HEX	20 41 4E 20 41 54 54 41 43 4B 20 57 41 56 45 2C
  16668  b038		       20 59 4f 55*	      HEX	20 59 4F 55 20 48 41 56 45 20 54 4F 20 52 45 54
  16669  b048		       55 52 4e 20*	      HEX	55 52 4E 20 54 4F 00
  16670  b04f		       20 54 48 45*_S29       HEX	20 54 48 45 20 43 41 52 52 49 45 52 20 41 4E 44
  16671  b05f		       20 50 52 45*	      HEX	20 50 52 45 50 41 52 45 20 46 4F 52 20 54 48 45
  16672  b06f		       20 4e 45 58*	      HEX	20 4E 45 58 54 00
  16673  b075		       20 57 41 56*_S30       HEX	20 57 41 56 45 2E 20 79 4F 55 27 4C 4C 20 47 45
  16674  b085		       54 20 4f 4e*	      HEX	54 20 4F 4E 45 20 45 58 54 52 41 20 41 49 52 43
  16675  b095		       52 41 46 54*	      HEX	52 41 46 54 20 49 4E 00
  16676  b09d		       20 54 48 45*_S31       HEX	20 54 48 45 20 42 45 47 49 4E 4E 49 4E 47 20 4F
  16677  b0ad		       46 20 45 41*	      HEX	46 20 45 41 43 48 20 41 54 54 41 43 4B 20 57 41
  16678  b0bd		       56 45 2e 0d*	      HEX	56 45 2E 0D 00
  16679  b0c2		       20 50 52 45*_S32       HEX	20 50 52 45 53 53 20 41 20 4B 45 59 20 54 4F 20
  16680  b0d2		       43 4f 4e 54*	      HEX	43 4F 4E 54 49 4E 55 45 2E 2E 2E 00
  16681  b0de		       93 0d 20 63*_S33       HEX	93 0D 20 63 4F 4E 54 52 4F 4C 53 00
  16682  b0ea		       20 2d 2d 2d*_S34       HEX	20 2D 2D 2D 2D 2D 2D 2D 2D 0D 00
  16683  b0f5		       20 75 53 45*_S35       HEX	20 75 53 45 20 4A 4F 59 53 54 49 43 4B 20 49 4E
  16684  b105		       20 50 4f 52*	      HEX	20 50 4F 52 54 20 31 2E 20 74 48 45 20 54 41 4B
  16685  b115		       45 2d 4f 46*	      HEX	45 2D 4F 46 46 00
  16686  b11b		       20 41 4e 44*_S36       HEX	20 41 4E 44 20 4C 41 4E 44 49 4E 47 20 50 52 4F
  16687  b12b		       43 45 44 55*	      HEX	43 45 44 55 52 45 53 20 41 52 45 20 44 4F 4E 45
  16688  b13b		       20 42 59 20*	      HEX	20 42 59 20 54 48 45 00
  16689  b143		       20 41 55 54*_S37       HEX	20 41 55 54 4F 2D 50 49 4C 4F 54 2E 20 61 46 54
  16690  b153		       45 52 20 54*	      HEX	45 52 20 54 41 4B 49 4E 47 20 4F 46 46 2C 20 50
  16691  b163		       55 4c 4c 20*	      HEX	55 4C 4C 20 55 50 00
  16692  b16a		       20 54 4f 20*_S38       HEX	20 54 4F 20 4C 49 46 54 20 4F 52 20 44 4F 57 4E
  16693  b17a		       20 54 4f 20*	      HEX	20 54 4F 20 44 45 53 43 45 4E 44 2E 20 70 55 4C
  16694  b18a		       4c 20 4c 45*	      HEX	4C 20 4C 45 46 54 00
  16695  b191		       20 4f 52 20*_S39       HEX	20 4F 52 20 52 49 47 48 54 20 54 4F 20 49 4E 43
  16696  b1a1		       52 45 41 53*	      HEX	52 45 41 53 45 20 4F 52 20 44 45 43 52 45 41 53
  16697  b1b1		       45 20 53 50*	      HEX	45 20 53 50 45 45 44 00
  16698  b1b9		       20 4f 52 20*_S40       HEX	20 4F 52 20 4D 41 4B 45 20 41 20 55 2D 54 55 52
  16699  b1c9		       4e 2e 20 70*	      HEX	4E 2E 20 70 52 45 53 53 20 46 49 52 45 20 54 4F
  16700  b1d9		       20 4c 41 55*	      HEX	20 4C 41 55 4E 43 48 00
  16701  b1e1		       20 50 52 4f*_S41       HEX	20 50 52 4F 4A 45 43 54 49 4C 45 20 4F 52 20 44
  16702  b1f1		       4f 57 4e 20*	      HEX	4F 57 4E 20 2B 20 46 49 52 45 20 54 4F 20 42 4F
  16703  b201		       4d 42 2e 0d*	      HEX	4D 42 2E 0D 00
  16704  b206		       20 74 4f 20*_S42       HEX	20 74 4F 20 41 56 4F 49 44 20 4C 4F 53 49 4E 47
  16705  b216		       20 54 48 45*	      HEX	20 54 48 45 20 41 49 52 43 52 41 46 54 0D 00
  16706  b225		       20 2a 20 64*_S43       HEX	20 2A 20 64 4F 20 4E 4F 54 20 43 52 41 53 48 20
  16707  b235		       49 4e 54 4f*	      HEX	49 4E 54 4F 20 41 4E 59 20 4F 42 4A 45 43 54 53
  16708  b245		       2e 00		      HEX	2E 00
  16709  b247		       20 2a 20 72*_S44       HEX	20 2A 20 72 45 54 55 52 4E 20 54 4F 20 54 48 45
  16710  b257		       20 43 41 52*	      HEX	20 43 41 52 52 49 45 52 20 57 48 45 4E 20 59 4F
  16711  b267		       55 27 52 45*	      HEX	55 27 52 45 00
  16712  b26c		       20 20 20 4c*_S45       HEX	20 20 20 4C 4F 57 20 4F 4E 20 46 55 45 4C 2E 0D 00
  16713  b27d		       20 74 48 45*_S46       HEX	20 74 48 45 20 47 41 4D 45 20 49 53 20 4F 56 45
  16714  b28d		       52 20 57 48*	      HEX	52 20 57 48 45 4E 0D 00
  16715  b295		       20 2a 20 33*_S47       HEX	20 2A 20 33 20 4F 52 20 4D 4F 52 45 20 75 66 6F
  16716  b2a5		       53 20 52 45*	      HEX	53 20 52 45 41 43 48 20 54 48 45 20 47 52 4F 55
  16717  b2b5		       4e 44 2c 20*	      HEX	4E 44 2C 20 4F 52 00
  16718  b2bc		       20 2a 20 79*_S48       HEX	20 2A 20 79 4F 55 20 4C 4F 53 45 20 41 4C 4C 20
  16719  b2cc		       59 4f 55 52*	      HEX	59 4F 55 52 20 46 4C 45 45 54 0D 00
  16720  b2d8		       20 50 52 45*_S49       HEX	20 50 52 45 53 53 20 41 20 4B 45 59 20 54 4F 20
  16721  b2e8		       43 4f 4e 54*	      HEX	43 4F 4E 54 49 4E 55 45 2E 2E 2E 00
  16722  b2f4		       93 0d 20 6c*_S50       HEX	93 0D 20 6C 41 4E 44 49 4E 47 00
  16723  b2ff		       20 2d 2d 2d*_S51       HEX	20 2D 2D 2D 2D 2D 2D 2D 0D 00
  16724  b309		       20 61 50 50*_S52       HEX	20 61 50 50 52 4F 41 43 48 20 54 48 45 20 41 49
  16725  b319		       52 43 52 41*	      HEX	52 43 52 41 46 54 20 43 41 52 52 49 45 52 20 57
  16726  b329		       49 54 48 20*	      HEX	49 54 48 20 4C 4F 57 00
  16727  b331		       20 53 50 45*_S53       HEX	20 53 50 45 45 44 20 41 4E 44 20 4F 4E 20 4C 4F
  16728  b341		       57 20 41 4c*	      HEX	57 20 41 4C 54 49 54 55 44 45 20 54 4F 20 49 4E
  16729  b351		       49 54 49 41*	      HEX	49 54 49 41 54 45 00
  16730  b358		       20 54 48 45*_S54       HEX	20 54 48 45 20 4C 41 4E 44 49 4E 47 20 50 52 4F
  16731  b368		       43 45 44 55*	      HEX	43 45 44 55 52 45 2E 20 69 46 20 59 4F 55 52 20
  16732  b378		       53 50 45 45*	      HEX	53 50 45 45 44 00
  16733  b37e		       20 41 4e 44*_S55       HEX	20 41 4E 44 20 41 4C 54 49 54 55 44 45 20 41 52
  16734  b38e		       45 20 4c 4f*	      HEX	45 20 4C 4F 57 20 45 4E 4F 55 47 48 2C 20 54 48
  16735  b39e		       45 20 41 55*	      HEX	45 20 41 55 54 4F 2D 00
  16736  b3a6		       20 50 49 4c*_S56       HEX	20 50 49 4C 4F 54 20 57 49 4C 4C 20 44 4F 20 54
  16737  b3b6		       48 45 20 4c*	      HEX	48 45 20 4C 41 4E 44 49 4E 47 20 46 4F 52 20 59
  16738  b3c6		       4f 55 2e 0d*	      HEX	4F 55 2E 0D 00
  16739  b3cb		       20 73 43 4f*_S57       HEX	20 73 43 4F 52 49 4E 47 00
  16740  b3d4		       20 2d 2d 2d*_S58       HEX	20 2D 2D 2D 2D 2D 2D 2D 0D 00
  16741  b3de		       20 20 31 20*_S59       HEX	20 20 31 20 50 54 20 20 46 4F 52 20 45 41 43 48
  16742  b3ee		       20 45 4e 45*	      HEX	20 45 4E 45 4D 59 20 41 49 52 43 52 41 46 54 20
  16743  b3fe		       44 4f 57 4e*	      HEX	44 4F 57 4E 00
  16744  b403		       20 20 32 20*_S60       HEX	20 20 32 20 50 54 53 20 46 4F 52 20 45 41 43 48
  16745  b413		       20 53 55 43*	      HEX	20 53 55 43 43 45 53 53 46 55 4C 20 4C 41 4E 44
  16746  b423		       49 4e 47 00	      HEX	49 4E 47 00
  16747  b427		       20 20 35 20*_S61       HEX	20 20 35 20 50 54 53 20 46 4F 52 20 45 41 43 48
  16748  b437		       20 43 4f 4d*	      HEX	20 43 4F 4D 50 4C 45 54 45 44 20 4C 45 56 45 4C 00
  16749  b448		       20 2b 35 20*_S62       HEX	20 2B 35 20 50 54 53 20 49 46 20 4C 45 56 45 4C
  16750  b458		       20 43 4f 4d*	      HEX	20 43 4F 4D 50 4C 45 54 45 44 20 57 49 54 48 4F
  16751  b468		       55 54 20 4c*	      HEX	55 54 20 4C 4F 53 53 0D 00
  16752  b471		       20 67 6f 6f*_S63       HEX	20 67 6F 6F 64 20 6C 75 63 6B 21 0D 00
  16753  b47e		       20 2d 2d 2d*_S64       HEX	20 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 00
  16754  b48a		       20 73 69 64*_S65       HEX	20 73 69 64 27 53 20 55 53 45 44 20 49 4E 20 54
  16755  b49a		       48 49 53 20*	      HEX	48 49 53 20 54 49 54 4C 45 20 41 52 45 20 62 4C
  16756  b4aa		       41 43 4b 00	      HEX	41 43 4B 00
  16757  b4ae		       20 68 41 57*_S66       HEX	20 68 41 57 4B 20 42 59 20 63 52 45 41 54 49 56
  16758  b4be		       45 20 73 50*	      HEX	45 20 73 50 41 52 4B 53 20 41 4E 44 20 6E 4F 49
  16759  b4ce		       43 45 00 	      HEX	43 45 00
  16760  b4d1		       20 61 4e 54*_S67       HEX	20 61 4E 54 48 45 4D 20 42 59 20 6A 45 53 50 45
  16761  b4e1		       52 20 76 41*	      HEX	52 20 76 41 52 4E 20 28 64 65 63 6F 64 65 72 29 00
  16762  b4f2				   data_end
 Data        : $a2f0 - $b4f1
  16763  b4f2					      ECHO	"Data	      :",data_start,"-", *-1
  16764  b4f2							;--------------
  16765 Ub69d ????				      SEG.U	variables
  16766 Ub4f3					      ORG	data_end+1
  16767 Ub4f3		       00	   _debug     DS.B	1
  16768 Ub4f4		       00	   _ntsc_pal  DS.B	1
  16769 Ub4f5		       00 00	   _frameskip1 DS.B	2
  16770 Ub4f7		       00 00	   _frameskip2 DS.B	2
  16771 Ub4f9		       00	   _ntsc_frames DS.B	1
  16772 Ub4f9		       d0 25	   _spr_multicolor1 EQU	$D025
  16773 Ub4f9		       d0 26	   _spr_multicolor2 EQU	$D026
  16774 Ub4fa		       00	   _spr_enable.spr_no DS.B	1
  16775 Ub4fb		       00	   _spr_disable.spr_no DS.B	1
  16776 Ub4fc		       00	   _spr_setposy.spr_no DS.B	1
  16777 Ub4fd		       00	   _spr_setposy.y DS.B	1
  16778 Ub4fe		       00	   _spr_setposx.spr_no DS.B	1
  16779 Ub4ff		       00 00	   _spr_setposx.x DS.B	2
  16780 Ub501		       00	   _spr_setpos.spr_no DS.B	1
  16781 Ub502		       00 00	   _spr_setpos.x DS.B	2
  16782 Ub504		       00	   _spr_setpos.y DS.B	1
  16783 Ub505		       00	   _spr_setshape.spr_no DS.B	1
  16784 Ub506		       00	   _spr_setshape.shape DS.B	1
  16785 Ub507		       00	   _spr_setmulti.spr_no DS.B	1
  16786 Ub508		       00	   _spr_sethires.spr_no DS.B	1
  16787 Ub509		       00	   _spr_setcolor.spr_no DS.B	1
  16788 Ub50a		       00	   _spr_setcolor.color DS.B	1
  16789 Ub50b		       00	   _spr_setdblwidth.spr_no DS.B	1
  16790 Ub50c		       00	   _spr_cleardblwidth.spr_no DS.B	1
  16791 Ub50d		       00	   _spr_setdblheight.spr_no DS.B	1
  16792 Ub50e		       00	   _spr_cleardblheight.spr_no DS.B	1
  16793 Ub50f		       00	   _spr_behindbg.spr_no DS.B	1
  16794 Ub510		       00	   _spr_overbg.spr_no DS.B	1
  16795 Ub511		       00	   _spr_spr_collision.spr_no DS.B	1
  16796 Ub512		       00	   _spr_spr_collision.result DS.B	1
  16797 Ub513		       00	   _spr_data_collision.spr_no DS.B	1
  16798 Ub514		       00	   _spr_data_collision.result DS.B	1
  16799 Ub515		       00	   _ri_isr_count DS.B	1
  16800 Ub516		       00	   _ri_current_isr DS.B	1
  16801 Ub517		       00 00	   _ri_syshandler DS.B	2
  16802 Ub519		       00	   _ri_set_isr.isr_no DS.B	1
  16803 Ub51a		       00 00	   _ri_set_isr.isr_addr DS.B	2
  16804 Ub51c		       00 00	   _ri_set_isr.raster_line DS.B	2
  16805 Ub51e		       00 00	   _sfx_init.addr DS.B	2
  16806 Ub520		       00	   _sfx_init.reserve_voice3 DS.B	1
  16807 Ub521		       00	   _sfx_start.effect_no DS.B	1
  16808 Ub522		       00	   _first_run DS.B	1
  16809 Ub522		       00 02	   _city_map_ptr_left EQU	$2
  16810 Ub522		       00 04	   _city_map_ptr_right EQU	$4
  16811 Ub523		       00	   _speed     DS.B	1
  16812 Ub524		       00	   _dir       DS.B	1
  16813 Ub525		       00	   _frame_count DS.B	1
  16814 Ub526		       00	   _scroll    DS.B	1
  16815 Ub527		       00 00	   _score     DS.B	2
  16816 Ub529		       00 00	   _hiscore   DS.B	2
  16817 Ub52b		       00	   _turning   DS.B	1
  16818 Ub52c		       00	   _lifting   DS.B	1
  16819 Ub52d		       00	   _turn_phase DS.B	1
  16820 Ub52e		       00	   _turn_phase_count DS.B	1
  16821 Ub52f		       00 00	   _aircraft_altitude DS.B	2
  16822 Ub531		       00 00	   _aircraft_xpos DS.B	2
  16823 Ub533		       00	   _aircraft_zone DS.B	1
  16824 Ub534		       00 00 00 00 _ufo_altitude DS.B	4
  16825 Ub538		       00 00 00 00*_ufo_xpos  DS.B	8
  16826 Ub540		       00 00 00 00*_ufo_initial_xpos DS.B	8
  16827 Ub548		       00 00 00 00 _ufo_on    DS.B	4
  16828 Ub54c		       00 00 00 00 _ufo_hit   DS.B	4
  16829 Ub550		       00 00 00 00 _ufo_animphase DS.B	4
  16830 Ub554		       00 00 00 00*_ufo_attack_wave_xspeed DS.B	128
  16831 Ub5d4		       00 00 00 00*_ufo_attack_wave_yspeed DS.B	64
  16832 Ub614		       00	   _wave_countdown DS.B	1
  16833 Ub615		       00 00 00 00 _ufo_wave_select DS.B	4
  16834 Ub619		       00 00 00 00*_ufo_current_xspeed DS.B	8
  16835 Ub621		       00 00 00 00 _ufo_current_yspeed DS.B	4
  16836 Ub625		       00 00	   _attack_wave_index DS.B	2
  16837 Ub627		       00	   _no_of_waves DS.B	1
  16838 Ub628		       00	   _no_of_ufos_in_this_wave DS.B	1
  16839 Ub629		       00	   _bullet_on DS.B	1
  16840 Ub62a		       00 00	   _bullet_xpos DS.B	2
  16841 Ub62c		       00	   _bullet_ypos DS.B	1
  16842 Ub62d		       00	   _bullet_dy DS.B	1
  16843 Ub62e		       00	   _bullet_speed DS.B	1
  16844 Ub62f		       00 00	   _bullet_sound_freq DS.B	2
  16845 Ub631		       00 00	   _bullet_sound_step DS.B	2
  16846 Ub633		       00	   _sound_counter DS.B	1
  16847 Ub634		       00	   _bullet_dir DS.B	1
  16848 Ub635		       00	   _aircraft_mode DS.B	1
  16849 Ub636		       00	   _fuel      DS.B	1
  16850 Ub637		       00	   _fleet     DS.B	1
  16851 Ub638		       00	   _fleet_at_start DS.B	1
  16852 Ub639		       00	   _ufo_count DS.B	1
  16853 Ub63a		       00 00	   _ufos_killed DS.B	2
  16854 Ub63c		       00	   _level_done DS.B	1
  16855 Ub63d		       00	   _wave      DS.B	1
  16856 Ub63e		       00	   _microspeed DS.B	1
  16857 Ub63f		       00 00	   _sav_ufo_xpos DS.B	2
  16858 Ub641		       00	   _configure_sprites.i DS.B	1
  16859 Ub642		       00	   XFOR_max_1 DS.B	1
  16860 Ub643		       00 00	   _update_sprites.freq DS.B	2
  16861 Ub645		       00	   _update_sprites.spr_loc_offset DS.B	1
  16862 Ub646		       00	   _update_sprites.turn_count DS.B	1
  16863 Ub647		       00 00	   _update_sprites.curr_bullet_dx DS.B	2
  16864 Ub649		       00	   _update_sprites.i DS.B	1
  16865 Ub64a		       00	   XFOR_max_2 DS.B	1
  16866 Ub64b		       00 00	   _update_sprites.x DS.B	2
  16867 Ub64d		       00 00	   _shift_left.loc DS.B	2
  16868 Ub64f		       00	   _shift_left.i DS.B	1
  16869 Ub650		       00	   XFOR_max_3 DS.B	1
  16870 Ub651		       00 00	   _shift_right.loc DS.B	2
  16871 Ub653		       00	   _shift_right.i DS.B	1
  16872 Ub654		       00	   XFOR_max_4 DS.B	1
  16873 Ub655		       00	   _query_joystick.joy_dir DS.B	1
  16874 Ub656		       00	   _poll_collisions.aircraft_coll_state DS.B	1
  16875 Ub657		       00	   _poll_collisions.spr_hit DS.B	1
  16876 Ub658		       00	   _poll_collisions.i DS.B	1
  16877 Ub659		       00	   XFOR_max_5 DS.B	1
  16878 Ub65a		       00	   _setup_screen.draw_title DS.B	1
  16879 Ub65b		       00 00	   _setup_screen.n DS.B	2
  16880 Ub65d		       00 00	   XFOR_max_6 DS.B	2
  16881 Ub65f		       00 00	   _setup_screen.loc DS.B	2
  16882 Ub661		       00	   _setup_screen.col DS.B	1
  16883 Ub662		       00	   XFOR_max_7 DS.B	1
  16884 Ub663		       00	   _setup_screen.i DS.B	1
  16885 Ub664		       00	   XFOR_max_8 DS.B	1
  16886 Ub665		       00	   _update_radar.i DS.B	1
  16887 Ub666		       00	   XFOR_max_9 DS.B	1
  16888 Ub667		       00	   _update_radar.wave DS.B	1
  16889 Ub668		       00	   _update_radar.char DS.B	1
  16890 Ub669		       00 00	   _update_radar.charpos DS.B	2
  16891 Ub66b		       00	   _actions.anim_counter DS.B	1
  16892 Ub66c		       00 00	   _actions.altitude_delta DS.B	2
  16893 Ub66e		       00	   _actions.x DS.B	1
  16894 Ub66f		       00	   _actions.offset DS.B	1
  16895 Ub670		       00 00	   _move_ufos.xspeed DS.B	2
  16896 Ub672		       00	   _move_ufos.yspeed DS.B	1
  16897 Ub673		       00	   _move_ufos.j DS.B	1
  16898 Ub674		       00	   XFOR_max_10 DS.B	1
  16899 Ub675		       00	   _move_ufos.wave_no DS.B	1
  16900 Ub676		       00	   _move_ufos.ufo_on DS.B	1
  16901 Ub677		       00	   _move_ufos.ufo_hit DS.B	1
  16902 Ub678		       00	   XFOR_max_11 DS.B	1
  16903 Ub679		       00	   _move_ufos.i DS.B	1
  16904 Ub67a		       00	   XFOR_max_12 DS.B	1
  16905 Ub67b		       00	   _logo.j    DS.B	1
  16906 Ub67c		       00	   XFOR_max_13 DS.B	1
  16907 Ub67d		       00 00	   _logo.i    DS.B	2
  16908 Ub67f		       00 00	   XFOR_max_14 DS.B	2
  16909 Ub681		       00	   XFOR_max_15 DS.B	1
  16910 Ub682		       00 00	   XFOR_max_16 DS.B	2
  16911 Ub684		       00	   _intro.animphase DS.B	1
  16912 Ub685		       00	   _intro.landing_bacon_animphase DS.B	1
  16913 Ub686		       00	   _intro.helicopter_animphase DS.B	1
  16914 Ub687		       00 00	   _intro.aircraft_posx DS.B	2
  16915 Ub689		       00	   _intro.aircraft_posy DS.B	1
  16916 Ub68a		       00 00	   _intro.aircraft_dir DS.B	2
  16917 Ub68c		       00 00	   _intro.helicopter_posx DS.B	2
  16918 Ub68e		       00 00	   _addr      DS.B	2
  16919 Ub690		       00 00	   XFOR_max_17 DS.B	2
  16920 Ub692		       00	   _j	      DS.B	1
  16921 Ub693		       00	   XFOR_max_18 DS.B	1
  16922 Ub694		       00 00	   _ii	      DS.B	2
  16923 Ub696		       00 00	   XFOR_max_19 DS.B	2
  16924 Ub698		       00	   XFOR_max_20 DS.B	1
  16925 Ub699		       00 00	   XFOR_max_21 DS.B	2
  16926 Ub69b		       00 00	   XFOR_max_22 DS.B	2
 Variables*  : $b4f2 - $b69d
  16927 Ub69b					      ECHO	"Variables*  :",data_end,"-", *
 ===================
  16928 Ub69b					      ECHO	"==================="
 *: uninitialized segment
  16929 Ub69b					      ECHO	"*: uninitialized segment"
